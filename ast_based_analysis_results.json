{
  "functions": [
    {
      "name": "add_io_functions",
      "file_path": "src/semantic_builtins.ml",
      "start_line": 7,
      "end_line": 11,
      "length": 5,
      "cyclomatic_complexity": 3,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "add_list_functions",
      "file_path": "src/semantic_builtins.ml",
      "start_line": 13,
      "end_line": 38,
      "length": 26,
      "cyclomatic_complexity": 6,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "add_array_functions",
      "file_path": "src/semantic_builtins.ml",
      "start_line": 40,
      "end_line": 50,
      "length": 11,
      "cyclomatic_complexity": 4,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "add_math_functions",
      "file_path": "src/semantic_builtins.ml",
      "start_line": 52,
      "end_line": 58,
      "length": 7,
      "cyclomatic_complexity": 4,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "add_string_functions",
      "file_path": "src/semantic_builtins.ml",
      "start_line": 60,
      "end_line": 66,
      "length": 7,
      "cyclomatic_complexity": 3,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "add_file_functions",
      "file_path": "src/semantic_builtins.ml",
      "start_line": 68,
      "end_line": 74,
      "length": 7,
      "cyclomatic_complexity": 4,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "add_builtin_functions",
      "file_path": "src/semantic_builtins.ml",
      "start_line": 76,
      "end_line": 82,
      "length": 7,
      "cyclomatic_complexity": 8,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 1
    },
    {
      "name": "data_structures_specific_analysis",
      "file_path": "src/performance_analyzer_data_structures.ml",
      "start_line": 10,
      "end_line": 30,
      "length": 21,
      "cyclomatic_complexity": 6,
      "cognitive_complexity": 5,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 1,
      "nesting_depth": 1
    },
    {
      "name": "analyze_data_structure_efficiency",
      "file_path": "src/performance_analyzer_data_structures.ml",
      "start_line": 32,
      "end_line": 33,
      "length": 2,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "range_function",
      "file_path": "src/builtin_math.ml",
      "start_line": 7,
      "end_line": 15,
      "length": 9,
      "cyclomatic_complexity": 2,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 4
    },
    {
      "name": "sum_function",
      "file_path": "src/builtin_math.ml",
      "start_line": 17,
      "end_line": 21,
      "length": 5,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 2
    },
    {
      "name": "max_function",
      "file_path": "src/builtin_math.ml",
      "start_line": 23,
      "end_line": 27,
      "length": 5,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 2
    },
    {
      "name": "min_function",
      "file_path": "src/builtin_math.ml",
      "start_line": 29,
      "end_line": 33,
      "length": 5,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 2
    },
    {
      "name": "math_functions",
      "file_path": "src/builtin_math.ml",
      "start_line": 35,
      "end_line": 41,
      "length": 7,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "global_stats",
      "file_path": "src/error_handler_statistics.ml",
      "start_line": 11,
      "end_line": 20,
      "length": 10,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "update_statistics",
      "file_path": "src/error_handler_statistics.ml",
      "start_line": 27,
      "end_line": 33,
      "length": 7,
      "cyclomatic_complexity": 5,
      "cognitive_complexity": 4,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 1,
      "nesting_depth": 1
    },
    {
      "name": "record_error",
      "file_path": "src/error_handler_statistics.ml",
      "start_line": 35,
      "end_line": 42,
      "length": 8,
      "cyclomatic_complexity": 5,
      "cognitive_complexity": 4,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 1,
      "nesting_depth": 1
    },
    {
      "name": "get_error_report",
      "file_path": "src/error_handler_statistics.ml",
      "start_line": 44,
      "end_line": 62,
      "length": 19,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 1
    },
    {
      "name": "reset_statistics",
      "file_path": "src/error_handler_statistics.ml",
      "start_line": 64,
      "end_line": 72,
      "length": 9,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "init_statistics",
      "file_path": "src/error_handler_statistics.ml",
      "start_line": 74,
      "end_line": 76,
      "length": 3,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "analyze_data_structure_efficiency",
      "file_path": "src/refactoring_analyzer_performance.ml",
      "start_line": 29,
      "end_line": 30,
      "length": 2,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "analyze_computational_complexity",
      "file_path": "src/refactoring_analyzer_performance.ml",
      "start_line": 32,
      "end_line": 34,
      "length": 3,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "analyze_performance_hints",
      "file_path": "src/refactoring_analyzer_performance.ml",
      "start_line": 36,
      "end_line": 55,
      "length": 20,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 0,
      "nesting_depth": 3
    },
    {
      "name": "generate_performance_report",
      "file_path": "src/refactoring_analyzer_performance.ml",
      "start_line": 57,
      "end_line": 92,
      "length": 36,
      "cyclomatic_complexity": 8,
      "cognitive_complexity": 9,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 2,
      "nesting_depth": 3
    },
    {
      "name": "count_chinese_chars",
      "file_path": "src/parser_poetry.ml",
      "start_line": 16,
      "end_line": 19,
      "length": 4,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "validate_char_count",
      "file_path": "src/parser_poetry.ml",
      "start_line": 21,
      "end_line": 25,
      "length": 5,
      "cyclomatic_complexity": 2,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 0,
      "nesting_depth": 2
    },
    {
      "name": "parse_poetry_content",
      "file_path": "src/parser_poetry.ml",
      "start_line": 27,
      "end_line": 30,
      "length": 4,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "parse_poetry_with_format",
      "file_path": "src/parser_poetry.ml",
      "start_line": 32,
      "end_line": 64,
      "length": 33,
      "cyclomatic_complexity": 4,
      "cognitive_complexity": 3,
      "is_recursive": false,
      "parameters_count": 6,
      "match_expressions_count": 1,
      "nesting_depth": 7
    },
    {
      "name": "parse_four_char_parallel",
      "file_path": "src/parser_poetry.ml",
      "start_line": 66,
      "end_line": 83,
      "length": 18,
      "cyclomatic_complexity": 3,
      "cognitive_complexity": 4,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 3
    },
    {
      "name": "parse_five_char_verse",
      "file_path": "src/parser_poetry.ml",
      "start_line": 85,
      "end_line": 94,
      "length": 10,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "parse_seven_char_quatrain",
      "file_path": "src/parser_poetry.ml",
      "start_line": 96,
      "end_line": 105,
      "length": 10,
      "cyclomatic_complexity": 2,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 2
    },
    {
      "name": "parse_parallel_structure",
      "file_path": "src/parser_poetry.ml",
      "start_line": 107,
      "end_line": 139,
      "length": 33,
      "cyclomatic_complexity": 2,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 18
    },
    {
      "name": "parse_poetry_expression",
      "file_path": "src/parser_poetry.ml",
      "start_line": 141,
      "end_line": 153,
      "length": 13,
      "cyclomatic_complexity": 10,
      "cognitive_complexity": 16,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 2,
      "nesting_depth": 4
    },
    {
      "name": "parse_pattern",
      "file_path": "src/parser_patterns.ml",
      "start_line": 8,
      "end_line": 100,
      "length": 93,
      "cyclomatic_complexity": 38,
      "cognitive_complexity": 198,
      "is_recursive": true,
      "parameters_count": 1,
      "match_expressions_count": 3,
      "nesting_depth": 34
    },
    {
      "name": "parse_match_expression",
      "file_path": "src/parser_patterns.ml",
      "start_line": 102,
      "end_line": 130,
      "length": 29,
      "cyclomatic_complexity": 9,
      "cognitive_complexity": 9,
      "is_recursive": true,
      "parameters_count": 2,
      "match_expressions_count": 0,
      "nesting_depth": 12
    },
    {
      "name": "parse_ancient_match_expression",
      "file_path": "src/parser_patterns.ml",
      "start_line": 132,
      "end_line": 166,
      "length": 35,
      "cyclomatic_complexity": 8,
      "cognitive_complexity": 7,
      "is_recursive": true,
      "parameters_count": 2,
      "match_expressions_count": 2,
      "nesting_depth": 17
    },
    {
      "name": "interactive_mode",
      "file_path": "src/main.ml",
      "start_line": 10,
      "end_line": 42,
      "length": 33,
      "cyclomatic_complexity": 10,
      "cognitive_complexity": 8,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 1,
      "nesting_depth": 5
    },
    {
      "name": "show_help",
      "file_path": "src/main.ml",
      "start_line": 44,
      "end_line": 65,
      "length": 22,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "parse_args",
      "file_path": "src/main.ml",
      "start_line": 67,
      "end_line": 84,
      "length": 18,
      "cyclomatic_complexity": 24,
      "cognitive_complexity": 13,
      "is_recursive": true,
      "parameters_count": 2,
      "match_expressions_count": 1,
      "nesting_depth": 1
    },
    {
      "name": "eval_control_flow_expr",
      "file_path": "src/expression_evaluator_control.ml",
      "start_line": 12,
      "end_line": 35,
      "length": 24,
      "cyclomatic_complexity": 10,
      "cognitive_complexity": 15,
      "is_recursive": false,
      "parameters_count": 3,
      "match_expressions_count": 1,
      "nesting_depth": 10
    },
    {
      "name": "convert_exception_keywords",
      "file_path": "src/keyword_converter_system.ml",
      "start_line": 7,
      "end_line": 15,
      "length": 9,
      "cyclomatic_complexity": 8,
      "cognitive_complexity": 7,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 1,
      "nesting_depth": 1
    },
    {
      "name": "convert_module_keywords",
      "file_path": "src/keyword_converter_system.ml",
      "start_line": 17,
      "end_line": 27,
      "length": 11,
      "cyclomatic_complexity": 10,
      "cognitive_complexity": 9,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 1,
      "nesting_depth": 1
    },
    {
      "name": "convert_macro_keywords",
      "file_path": "src/keyword_converter_system.ml",
      "start_line": 29,
      "end_line": 33,
      "length": 5,
      "cyclomatic_complexity": 5,
      "cognitive_complexity": 4,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 1,
      "nesting_depth": 1
    },
    {
      "name": "skip_newlines",
      "file_path": "src/parser_statements.ml",
      "start_line": 10,
      "end_line": 13,
      "length": 4,
      "cyclomatic_complexity": 2,
      "cognitive_complexity": 1,
      "is_recursive": true,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 2
    },
    {
      "name": "parse_macro_params",
      "file_path": "src/parser_statements.ml",
      "start_line": 15,
      "end_line": 50,
      "length": 36,
      "cyclomatic_complexity": 13,
      "cognitive_complexity": 36,
      "is_recursive": true,
      "parameters_count": 2,
      "match_expressions_count": 2,
      "nesting_depth": 21
    },
    {
      "name": "parse_semantic_annotation",
      "file_path": "src/parser_statements.ml",
      "start_line": 52,
      "end_line": 59,
      "length": 8,
      "cyclomatic_complexity": 2,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 4
    },
    {
      "name": "parse_type_annotation",
      "file_path": "src/parser_statements.ml",
      "start_line": 61,
      "end_line": 68,
      "length": 8,
      "cyclomatic_complexity": 2,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 4
    },
    {
      "name": "build_let_statement",
      "file_path": "src/parser_statements.ml",
      "start_line": 70,
      "end_line": 76,
      "length": 7,
      "cyclomatic_complexity": 6,
      "cognitive_complexity": 5,
      "is_recursive": false,
      "parameters_count": 5,
      "match_expressions_count": 1,
      "nesting_depth": 1
    },
    {
      "name": "parse_regular_let_statement",
      "file_path": "src/parser_statements.ml",
      "start_line": 78,
      "end_line": 86,
      "length": 9,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 6
    },
    {
      "name": "parse_recursive_let_statement",
      "file_path": "src/parser_statements.ml",
      "start_line": 88,
      "end_line": 98,
      "length": 11,
      "cyclomatic_complexity": 4,
      "cognitive_complexity": 3,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 1,
      "nesting_depth": 7
    },
    {
      "name": "parse_let_statement",
      "file_path": "src/parser_statements.ml",
      "start_line": 100,
      "end_line": 106,
      "length": 7,
      "cyclomatic_complexity": 5,
      "cognitive_complexity": 4,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 1,
      "nesting_depth": 2
    },
    {
      "name": "parse_definition_statement",
      "file_path": "src/parser_statements.ml",
      "start_line": 108,
      "end_line": 123,
      "length": 16,
      "cyclomatic_complexity": 8,
      "cognitive_complexity": 12,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 2,
      "nesting_depth": 8
    },
    {
      "name": "parse_type_statement",
      "file_path": "src/parser_statements.ml",
      "start_line": 125,
      "end_line": 151,
      "length": 27,
      "cyclomatic_complexity": 9,
      "cognitive_complexity": 14,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 2,
      "nesting_depth": 16
    },
    {
      "name": "parse_macro_statement",
      "file_path": "src/parser_statements.ml",
      "start_line": 153,
      "end_line": 167,
      "length": 15,
      "cyclomatic_complexity": 4,
      "cognitive_complexity": 3,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 1,
      "nesting_depth": 10
    },
    {
      "name": "parse_expression_statement",
      "file_path": "src/parser_statements.ml",
      "start_line": 169,
      "end_line": 172,
      "length": 4,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 1
    },
    {
      "name": "parse_statement",
      "file_path": "src/parser_statements.ml",
      "start_line": 174,
      "end_line": 182,
      "length": 9,
      "cyclomatic_complexity": 11,
      "cognitive_complexity": 6,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 1,
      "nesting_depth": 2
    },
    {
      "name": "skip_optional_statement_terminator",
      "file_path": "src/parser_statements.ml",
      "start_line": 184,
      "end_line": 187,
      "length": 4,
      "cyclomatic_complexity": 4,
      "cognitive_complexity": 3,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 2
    },
    {
      "name": "parse_program",
      "file_path": "src/parser_statements.ml",
      "start_line": 189,
      "end_line": 201,
      "length": 13,
      "cyclomatic_complexity": 2,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 6
    },
    {
      "name": "string_to_int_function",
      "file_path": "src/builtin_types.ml",
      "start_line": 14,
      "end_line": 16,
      "length": 3,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "string_to_float_function",
      "file_path": "src/builtin_types.ml",
      "start_line": 18,
      "end_line": 20,
      "length": 3,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "int_to_float_function",
      "file_path": "src/builtin_types.ml",
      "start_line": 22,
      "end_line": 24,
      "length": 3,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "float_to_int_function",
      "file_path": "src/builtin_types.ml",
      "start_line": 26,
      "end_line": 28,
      "length": 3,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "bool_to_string_function",
      "file_path": "src/builtin_types.ml",
      "start_line": 30,
      "end_line": 32,
      "length": 3,
      "cyclomatic_complexity": 2,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 1
    },
    {
      "name": "type_conversion_functions",
      "file_path": "src/builtin_types.ml",
      "start_line": 34,
      "end_line": 43,
      "length": 10,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "find_closest_var",
      "file_path": "src/interpreter_utils.ml",
      "start_line": 10,
      "end_line": 22,
      "length": 13,
      "cyclomatic_complexity": 8,
      "cognitive_complexity": 10,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 2,
      "nesting_depth": 3
    },
    {
      "name": "lookup_var",
      "file_path": "src/interpreter_utils.ml",
      "start_line": 24,
      "end_line": 53,
      "length": 30,
      "cyclomatic_complexity": 19,
      "cognitive_complexity": 56,
      "is_recursive": true,
      "parameters_count": 2,
      "match_expressions_count": 4,
      "nesting_depth": 9
    },
    {
      "name": "eval_literal",
      "file_path": "src/interpreter_utils.ml",
      "start_line": 58,
      "end_line": 65,
      "length": 8,
      "cyclomatic_complexity": 7,
      "cognitive_complexity": 6,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 1,
      "nesting_depth": 1
    },
    {
      "name": "bind_single_macro_param",
      "file_path": "src/interpreter_utils.ml",
      "start_line": 67,
      "end_line": 69,
      "length": 3,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 3,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "bind_macro_params",
      "file_path": "src/interpreter_utils.ml",
      "start_line": 71,
      "end_line": 88,
      "length": 18,
      "cyclomatic_complexity": 7,
      "cognitive_complexity": 6,
      "is_recursive": true,
      "parameters_count": 3,
      "match_expressions_count": 1,
      "nesting_depth": 1
    },
    {
      "name": "create_macro_param_map",
      "file_path": "src/interpreter_utils.ml",
      "start_line": 90,
      "end_line": 94,
      "length": 5,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 0,
      "nesting_depth": 1
    },
    {
      "name": "substitute_var_expr",
      "file_path": "src/interpreter_utils.ml",
      "start_line": 96,
      "end_line": 100,
      "length": 5,
      "cyclomatic_complexity": 4,
      "cognitive_complexity": 3,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 1,
      "nesting_depth": 1
    },
    {
      "name": "substitute_collection_expr",
      "file_path": "src/interpreter_utils.ml",
      "start_line": 102,
      "end_line": 104,
      "length": 3,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 3,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "substitute_record_fields",
      "file_path": "src/interpreter_utils.ml",
      "start_line": 106,
      "end_line": 108,
      "length": 3,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "substitute_macro_expr",
      "file_path": "src/interpreter_utils.ml",
      "start_line": 110,
      "end_line": 140,
      "length": 31,
      "cyclomatic_complexity": 13,
      "cognitive_complexity": 12,
      "is_recursive": true,
      "parameters_count": 2,
      "match_expressions_count": 1,
      "nesting_depth": 1
    },
    {
      "name": "expand_macro",
      "file_path": "src/interpreter_utils.ml",
      "start_line": 142,
      "end_line": 144,
      "length": 3,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 4,
      "match_expressions_count": 0,
      "nesting_depth": 1
    },
    {
      "name": "convert_identifier_token",
      "file_path": "src/token_conversion_identifiers.ml",
      "start_line": 15,
      "end_line": 20,
      "length": 6,
      "cyclomatic_complexity": 5,
      "cognitive_complexity": 4,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 1,
      "nesting_depth": 1
    },
    {
      "name": "is_identifier_token",
      "file_path": "src/token_conversion_identifiers.ml",
      "start_line": 22,
      "end_line": 28,
      "length": 7,
      "cyclomatic_complexity": 5,
      "cognitive_complexity": 4,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 1,
      "nesting_depth": 1
    },
    {
      "name": "convert_identifier_token_safe",
      "file_path": "src/token_conversion_identifiers.ml",
      "start_line": 30,
      "end_line": 31,
      "length": 2,
      "cyclomatic_complexity": 2,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 1
    },
    {
      "name": "with_error_handling",
      "file_path": "src/c_codegen_control.ml",
      "start_line": 12,
      "end_line": 16,
      "length": 5,
      "cyclomatic_complexity": 4,
      "cognitive_complexity": 2,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 0,
      "nesting_depth": 1
    },
    {
      "name": "safe_format_string",
      "file_path": "src/c_codegen_control.ml",
      "start_line": 18,
      "end_line": 20,
      "length": 3,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "gen_func_call_expr",
      "file_path": "src/c_codegen_control.ml",
      "start_line": 22,
      "end_line": 30,
      "length": 9,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 4,
      "match_expressions_count": 0,
      "nesting_depth": 4
    },
    {
      "name": "gen_func_def_expr",
      "file_path": "src/c_codegen_control.ml",
      "start_line": 32,
      "end_line": 51,
      "length": 20,
      "cyclomatic_complexity": 5,
      "cognitive_complexity": 5,
      "is_recursive": false,
      "parameters_count": 4,
      "match_expressions_count": 1,
      "nesting_depth": 4
    },
    {
      "name": "gen_if_expr",
      "file_path": "src/c_codegen_control.ml",
      "start_line": 53,
      "end_line": 75,
      "length": 23,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 5,
      "match_expressions_count": 0,
      "nesting_depth": 4
    },
    {
      "name": "gen_let_expr",
      "file_path": "src/c_codegen_control.ml",
      "start_line": 77,
      "end_line": 85,
      "length": 9,
      "cyclomatic_complexity": 2,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 5,
      "match_expressions_count": 0,
      "nesting_depth": 4
    },
    {
      "name": "gen_control_flow",
      "file_path": "src/c_codegen_control.ml",
      "start_line": 87,
      "end_line": 118,
      "length": 32,
      "cyclomatic_complexity": 9,
      "cognitive_complexity": 9,
      "is_recursive": false,
      "parameters_count": 4,
      "match_expressions_count": 1,
      "nesting_depth": 7
    },
    {
      "name": "builtin_functions",
      "file_path": "src/builtin_functions.ml",
      "start_line": 9,
      "end_line": 21,
      "length": 13,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "builtin_functions_hash",
      "file_path": "src/builtin_functions.ml",
      "start_line": 23,
      "end_line": 28,
      "length": 6,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 1
    },
    {
      "name": "call_builtin_function",
      "file_path": "src/builtin_functions.ml",
      "start_line": 30,
      "end_line": 35,
      "length": 6,
      "cyclomatic_complexity": 5,
      "cognitive_complexity": 4,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 1,
      "nesting_depth": 3
    },
    {
      "name": "filter_ly_files_function",
      "file_path": "src/builtin_utils.ml",
      "start_line": 10,
      "end_line": 23,
      "length": 14,
      "cyclomatic_complexity": 4,
      "cognitive_complexity": 4,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 1,
      "nesting_depth": 2
    },
    {
      "name": "remove_double_slash_comment_function",
      "file_path": "src/builtin_utils.ml",
      "start_line": 28,
      "end_line": 30,
      "length": 3,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "utility_functions",
      "file_path": "src/builtin_utils.ml",
      "start_line": 41,
      "end_line": 49,
      "length": 9,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "call_function",
      "file_path": "src/function_caller.ml",
      "start_line": 10,
      "end_line": 62,
      "length": 53,
      "cyclomatic_complexity": 11,
      "cognitive_complexity": 21,
      "is_recursive": false,
      "parameters_count": 3,
      "match_expressions_count": 2,
      "nesting_depth": 10
    },
    {
      "name": "call_labeled_function",
      "file_path": "src/function_caller.ml",
      "start_line": 64,
      "end_line": 109,
      "length": 46,
      "cyclomatic_complexity": 12,
      "cognitive_complexity": 33,
      "is_recursive": false,
      "parameters_count": 4,
      "match_expressions_count": 3,
      "nesting_depth": 9
    },
    {
      "name": "handle_recursive_let",
      "file_path": "src/function_caller.ml",
      "start_line": 111,
      "end_line": 134,
      "length": 24,
      "cyclomatic_complexity": 8,
      "cognitive_complexity": 8,
      "is_recursive": false,
      "parameters_count": 3,
      "match_expressions_count": 1,
      "nesting_depth": 6
    },
    {
      "name": "resolve_type_expr",
      "file_path": "src/semantic_types.ml",
      "start_line": 8,
      "end_line": 42,
      "length": 35,
      "cyclomatic_complexity": 17,
      "cognitive_complexity": 19,
      "is_recursive": true,
      "parameters_count": 2,
      "match_expressions_count": 2,
      "nesting_depth": 8
    },
    {
      "name": "add_algebraic_type",
      "file_path": "src/semantic_types.ml",
      "start_line": 44,
      "end_line": 57,
      "length": 14,
      "cyclomatic_complexity": 4,
      "cognitive_complexity": 3,
      "is_recursive": false,
      "parameters_count": 3,
      "match_expressions_count": 1,
      "nesting_depth": 2
    },
    {
      "name": "symbol_table_to_env",
      "file_path": "src/semantic_types.ml",
      "start_line": 59,
      "end_line": 64,
      "length": 6,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "build_type_env",
      "file_path": "src/semantic_types.ml",
      "start_line": 66,
      "end_line": 74,
      "length": 9,
      "cyclomatic_complexity": 4,
      "cognitive_complexity": 3,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 1,
      "nesting_depth": 2
    },
    {
      "name": "is_keyword",
      "file_path": "src/keyword_matcher_modular.ml",
      "start_line": 25,
      "end_line": 27,
      "length": 3,
      "cyclomatic_complexity": 3,
      "cognitive_complexity": 2,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 1,
      "nesting_depth": 1
    },
    {
      "name": "print_keyword_analytics",
      "file_path": "src/keyword_matcher_modular.ml",
      "start_line": 32,
      "end_line": 34,
      "length": 3,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 1
    },
    {
      "name": "format_type_signature",
      "file_path": "src/formatter_core.ml",
      "start_line": 18,
      "end_line": 19,
      "length": 2,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "format_context_info",
      "file_path": "src/formatter_core.ml",
      "start_line": 30,
      "end_line": 32,
      "length": 3,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "format_range",
      "file_path": "src/formatter_core.ml",
      "start_line": 34,
      "end_line": 35,
      "length": 2,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "array_access_error",
      "file_path": "src/formatter_core.ml",
      "start_line": 47,
      "end_line": 48,
      "length": 2,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "array_bounds_error",
      "file_path": "src/formatter_core.ml",
      "start_line": 50,
      "end_line": 51,
      "length": 2,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "empty_collection_error",
      "file_path": "src/formatter_core.ml",
      "start_line": 56,
      "end_line": 57,
      "length": 2,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "collection_size_mismatch",
      "file_path": "src/formatter_core.ml",
      "start_line": 59,
      "end_line": 60,
      "length": 2,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "format_collection_info",
      "file_path": "src/formatter_core.ml",
      "start_line": 62,
      "end_line": 65,
      "length": 4,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 3,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "format_conversion_attempt",
      "file_path": "src/formatter_core.ml",
      "start_line": 73,
      "end_line": 74,
      "length": 2,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "format_conversion_success",
      "file_path": "src/formatter_core.ml",
      "start_line": 76,
      "end_line": 77,
      "length": 2,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 3,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "format_conversion_failure",
      "file_path": "src/formatter_core.ml",
      "start_line": 79,
      "end_line": 82,
      "length": 4,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 3,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "format_function_type",
      "file_path": "src/formatter_core.ml",
      "start_line": 86,
      "end_line": 88,
      "length": 3,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "format_construct_type",
      "file_path": "src/formatter_core.ml",
      "start_line": 93,
      "end_line": 95,
      "length": 3,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "format_result_type",
      "file_path": "src/formatter_core.ml",
      "start_line": 120,
      "end_line": 121,
      "length": 2,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "format_generic_type",
      "file_path": "src/formatter_core.ml",
      "start_line": 123,
      "end_line": 128,
      "length": 6,
      "cyclomatic_complexity": 4,
      "cognitive_complexity": 3,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 1,
      "nesting_depth": 1
    },
    {
      "name": "token_registry_stats",
      "file_path": "src/formatter_core.ml",
      "start_line": 132,
      "end_line": 146,
      "length": 15,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 3,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "category_count_item",
      "file_path": "src/formatter_core.ml",
      "start_line": 148,
      "end_line": 150,
      "length": 3,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "token_compatibility_report",
      "file_path": "src/formatter_core.ml",
      "start_line": 152,
      "end_line": 163,
      "length": 12,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "detailed_token_compatibility_report",
      "file_path": "src/formatter_core.ml",
      "start_line": 165,
      "end_line": 183,
      "length": 19,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "format_summary_section",
      "file_path": "src/formatter_core.ml",
      "start_line": 185,
      "end_line": 188,
      "length": 4,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 0,
      "nesting_depth": 2
    },
    {
      "name": "format_metrics_table",
      "file_path": "src/formatter_core.ml",
      "start_line": 190,
      "end_line": 196,
      "length": 7,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 2
    },
    {
      "name": "format_comparison_report",
      "file_path": "src/formatter_core.ml",
      "start_line": 198,
      "end_line": 204,
      "length": 7,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 3,
      "match_expressions_count": 0,
      "nesting_depth": 3
    },
    {
      "name": "format_error_template",
      "file_path": "src/formatter_core.ml",
      "start_line": 208,
      "end_line": 210,
      "length": 3,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "format_position_info",
      "file_path": "src/formatter_core.ml",
      "start_line": 212,
      "end_line": 214,
      "length": 3,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "format_token_info",
      "file_path": "src/formatter_core.ml",
      "start_line": 216,
      "end_line": 218,
      "length": 3,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "format_report_section",
      "file_path": "src/formatter_core.ml",
      "start_line": 220,
      "end_line": 222,
      "length": 3,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "format_message_template",
      "file_path": "src/formatter_core.ml",
      "start_line": 224,
      "end_line": 236,
      "length": 13,
      "cyclomatic_complexity": 3,
      "cognitive_complexity": 4,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 0,
      "nesting_depth": 2
    },
    {
      "name": "format_string_operation",
      "file_path": "src/formatter_core.ml",
      "start_line": 238,
      "end_line": 239,
      "length": 2,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 3,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "format_pattern_match",
      "file_path": "src/formatter_core.ml",
      "start_line": 241,
      "end_line": 243,
      "length": 3,
      "cyclomatic_complexity": 2,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 3,
      "match_expressions_count": 0,
      "nesting_depth": 1
    },
    {
      "name": "format_encoding_info",
      "file_path": "src/formatter_core.ml",
      "start_line": 245,
      "end_line": 248,
      "length": 4,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "format_version_info",
      "file_path": "src/formatter_core.ml",
      "start_line": 252,
      "end_line": 253,
      "length": 2,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 3,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "format_build_info",
      "file_path": "src/formatter_core.ml",
      "start_line": 255,
      "end_line": 257,
      "length": 3,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 3,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "format_config_entry",
      "file_path": "src/formatter_core.ml",
      "start_line": 259,
      "end_line": 260,
      "length": 2,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 3,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "format_config_section",
      "file_path": "src/formatter_core.ml",
      "start_line": 262,
      "end_line": 265,
      "length": 4,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 0,
      "nesting_depth": 1
    },
    {
      "name": "format_dependency",
      "file_path": "src/formatter_core.ml",
      "start_line": 267,
      "end_line": 269,
      "length": 3,
      "cyclomatic_complexity": 2,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 3,
      "match_expressions_count": 0,
      "nesting_depth": 1
    },
    {
      "name": "format_dependency_tree",
      "file_path": "src/formatter_core.ml",
      "start_line": 271,
      "end_line": 276,
      "length": 6,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 3,
      "match_expressions_count": 0,
      "nesting_depth": 3
    },
    {
      "name": "format_environment_var",
      "file_path": "src/formatter_core.ml",
      "start_line": 278,
      "end_line": 280,
      "length": 3,
      "cyclomatic_complexity": 2,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 3,
      "match_expressions_count": 0,
      "nesting_depth": 1
    },
    {
      "name": "format_system_info",
      "file_path": "src/formatter_core.ml",
      "start_line": 282,
      "end_line": 284,
      "length": 3,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 3,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "parse_single_argument",
      "file_path": "src/parser_expressions_calls.ml",
      "start_line": 25,
      "end_line": 63,
      "length": 39,
      "cyclomatic_complexity": 13,
      "cognitive_complexity": 11,
      "is_recursive": false,
      "parameters_count": 3,
      "match_expressions_count": 1,
      "nesting_depth": 13
    },
    {
      "name": "collect_function_arguments",
      "file_path": "src/parser_expressions_calls.ml",
      "start_line": 65,
      "end_line": 71,
      "length": 7,
      "cyclomatic_complexity": 2,
      "cognitive_complexity": 1,
      "is_recursive": true,
      "parameters_count": 3,
      "match_expressions_count": 0,
      "nesting_depth": 3
    },
    {
      "name": "parse_function_call_or_variable",
      "file_path": "src/parser_expressions_calls.ml",
      "start_line": 78,
      "end_line": 89,
      "length": 12,
      "cyclomatic_complexity": 2,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 3,
      "match_expressions_count": 0,
      "nesting_depth": 3
    },
    {
      "name": "parse_function_call_context",
      "file_path": "src/parser_expressions_calls.ml",
      "start_line": 99,
      "end_line": 101,
      "length": 3,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 3,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "parse_function_call_safe",
      "file_path": "src/parser_expressions_calls.ml",
      "start_line": 103,
      "end_line": 112,
      "length": 10,
      "cyclomatic_complexity": 4,
      "cognitive_complexity": 2,
      "is_recursive": false,
      "parameters_count": 3,
      "match_expressions_count": 0,
      "nesting_depth": 2
    },
    {
      "name": "parse_postfix_expr_safe",
      "file_path": "src/parser_expressions_calls.ml",
      "start_line": 114,
      "end_line": 120,
      "length": 7,
      "cyclomatic_complexity": 4,
      "cognitive_complexity": 2,
      "is_recursive": false,
      "parameters_count": 3,
      "match_expressions_count": 0,
      "nesting_depth": 3
    },
    {
      "name": "create_state",
      "file_path": "src/interpreter_state.ml",
      "start_line": 15,
      "end_line": 22,
      "length": 8,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "add_recursive_function",
      "file_path": "src/interpreter_state.ml",
      "start_line": 51,
      "end_line": 53,
      "length": 3,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "add_functor",
      "file_path": "src/interpreter_state.ml",
      "start_line": 58,
      "end_line": 60,
      "length": 3,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 4,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "reset_state",
      "file_path": "src/interpreter_state.ml",
      "start_line": 65,
      "end_line": 70,
      "length": 6,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "get_available_vars",
      "file_path": "src/interpreter_state.ml",
      "start_line": 72,
      "end_line": 75,
      "length": 4,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 2
    },
    {
      "name": "interpret",
      "file_path": "src/interpreter.ml",
      "start_line": 28,
      "end_line": 41,
      "length": 14,
      "cyclomatic_complexity": 7,
      "cognitive_complexity": 12,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 2,
      "nesting_depth": 4
    },
    {
      "name": "interpret_test",
      "file_path": "src/interpreter.ml",
      "start_line": 43,
      "end_line": 54,
      "length": 12,
      "cyclomatic_complexity": 6,
      "cognitive_complexity": 10,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 1,
      "nesting_depth": 4
    },
    {
      "name": "interactive_eval",
      "file_path": "src/interpreter.ml",
      "start_line": 56,
      "end_line": 58,
      "length": 3,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 0,
      "nesting_depth": 1
    },
    {
      "name": "eval_expr",
      "file_path": "src/expression_evaluator.ml",
      "start_line": 13,
      "end_line": 199,
      "length": 187,
      "cyclomatic_complexity": 125,
      "cognitive_complexity": 905,
      "is_recursive": true,
      "parameters_count": 2,
      "match_expressions_count": 19,
      "nesting_depth": 38
    },
    {
      "name": "create_token_type_error",
      "file_path": "src/token_string_converter.ml",
      "start_line": 13,
      "end_line": 15,
      "length": 3,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "literal_table",
      "file_path": "src/token_string_converter.ml",
      "start_line": 17,
      "end_line": 26,
      "length": 10,
      "cyclomatic_complexity": 9,
      "cognitive_complexity": 8,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 1,
      "nesting_depth": 1
    },
    {
      "name": "identifier_table",
      "file_path": "src/token_string_converter.ml",
      "start_line": 28,
      "end_line": 38,
      "length": 11,
      "cyclomatic_complexity": 9,
      "cognitive_complexity": 8,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 1,
      "nesting_depth": 1
    },
    {
      "name": "control_flow_mappings",
      "file_path": "src/token_string_converter.ml",
      "start_line": 40,
      "end_line": 61,
      "length": 22,
      "cyclomatic_complexity": 6,
      "cognitive_complexity": 3,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 5
    },
    {
      "name": "definition_mappings",
      "file_path": "src/token_string_converter.ml",
      "start_line": 63,
      "end_line": 76,
      "length": 14,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "module_type_mappings",
      "file_path": "src/token_string_converter.ml",
      "start_line": 78,
      "end_line": 93,
      "length": 16,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "object_oriented_mappings",
      "file_path": "src/token_string_converter.ml",
      "start_line": 95,
      "end_line": 104,
      "length": 10,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "basic_value_mappings",
      "file_path": "src/token_string_converter.ml",
      "start_line": 106,
      "end_line": 116,
      "length": 11,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "keyword_mappings",
      "file_path": "src/token_string_converter.ml",
      "start_line": 118,
      "end_line": 121,
      "length": 4,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "number_mappings",
      "file_path": "src/token_string_converter.ml",
      "start_line": 123,
      "end_line": 140,
      "length": 18,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "type_mappings",
      "file_path": "src/token_string_converter.ml",
      "start_line": 142,
      "end_line": 159,
      "length": 18,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "wenyan_mappings",
      "file_path": "src/token_string_converter.ml",
      "start_line": 161,
      "end_line": 174,
      "length": 14,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "classical_mappings",
      "file_path": "src/token_string_converter.ml",
      "start_line": 176,
      "end_line": 189,
      "length": 14,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "operator_mappings",
      "file_path": "src/token_string_converter.ml",
      "start_line": 191,
      "end_line": 227,
      "length": 37,
      "cyclomatic_complexity": 5,
      "cognitive_complexity": 2,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "delimiter_mappings",
      "file_path": "src/token_string_converter.ml",
      "start_line": 229,
      "end_line": 329,
      "length": 101,
      "cyclomatic_complexity": 146,
      "cognitive_complexity": 112,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 3,
      "nesting_depth": 4
    },
    {
      "name": "lookup_var",
      "file_path": "src/value_basic_ops.ml",
      "start_line": 8,
      "end_line": 51,
      "length": 44,
      "cyclomatic_complexity": 24,
      "cognitive_complexity": 105,
      "is_recursive": true,
      "parameters_count": 2,
      "match_expressions_count": 5,
      "nesting_depth": 7
    },
    {
      "name": "basic_value_to_string",
      "file_path": "src/value_basic_ops.ml",
      "start_line": 53,
      "end_line": 61,
      "length": 9,
      "cyclomatic_complexity": 9,
      "cognitive_complexity": 12,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 1,
      "nesting_depth": 2
    },
    {
      "name": "value_to_bool",
      "file_path": "src/value_basic_ops.ml",
      "start_line": 63,
      "end_line": 72,
      "length": 10,
      "cyclomatic_complexity": 9,
      "cognitive_complexity": 8,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 1,
      "nesting_depth": 1
    },
    {
      "name": "try_to_int",
      "file_path": "src/value_basic_ops.ml",
      "start_line": 74,
      "end_line": 92,
      "length": 19,
      "cyclomatic_complexity": 10,
      "cognitive_complexity": 12,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 1,
      "nesting_depth": 4
    },
    {
      "name": "try_to_float",
      "file_path": "src/value_basic_ops.ml",
      "start_line": 94,
      "end_line": 108,
      "length": 15,
      "cyclomatic_complexity": 8,
      "cognitive_complexity": 6,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 1,
      "nesting_depth": 4
    },
    {
      "name": "try_to_string",
      "file_path": "src/value_basic_ops.ml",
      "start_line": 110,
      "end_line": 124,
      "length": 15,
      "cyclomatic_complexity": 9,
      "cognitive_complexity": 13,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 2,
      "nesting_depth": 3
    },
    {
      "name": "get_suggestion_statistics",
      "file_path": "src/analysis_statistics.ml",
      "start_line": 7,
      "end_line": 39,
      "length": 33,
      "cyclomatic_complexity": 8,
      "cognitive_complexity": 8,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 1,
      "nesting_depth": 8
    },
    {
      "name": "quick_quality_check",
      "file_path": "src/analysis_statistics.ml",
      "start_line": 41,
      "end_line": 82,
      "length": 42,
      "cyclomatic_complexity": 7,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 3
    },
    {
      "name": "match_specific_analysis",
      "file_path": "src/performance_analyzer_matching.ml",
      "start_line": 9,
      "end_line": 16,
      "length": 8,
      "cyclomatic_complexity": 5,
      "cognitive_complexity": 4,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 1,
      "nesting_depth": 1
    },
    {
      "name": "_safe_check_args_count",
      "file_path": "src/builtin_error.ml",
      "start_line": 13,
      "end_line": 18,
      "length": 6,
      "cyclomatic_complexity": 4,
      "cognitive_complexity": 3,
      "is_recursive": false,
      "parameters_count": 3,
      "match_expressions_count": 1,
      "nesting_depth": 2
    },
    {
      "name": "_safe_check_positive_number",
      "file_path": "src/builtin_error.ml",
      "start_line": 20,
      "end_line": 23,
      "length": 4,
      "cyclomatic_complexity": 2,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 0,
      "nesting_depth": 1
    },
    {
      "name": "_safe_numeric_divide",
      "file_path": "src/builtin_error.ml",
      "start_line": 25,
      "end_line": 28,
      "length": 4,
      "cyclomatic_complexity": 2,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 3,
      "match_expressions_count": 0,
      "nesting_depth": 1
    },
    {
      "name": "check_args_count",
      "file_path": "src/builtin_error.ml",
      "start_line": 30,
      "end_line": 33,
      "length": 4,
      "cyclomatic_complexity": 2,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 3,
      "match_expressions_count": 0,
      "nesting_depth": 1
    },
    {
      "name": "check_single_arg",
      "file_path": "src/builtin_error.ml",
      "start_line": 35,
      "end_line": 37,
      "length": 3,
      "cyclomatic_complexity": 3,
      "cognitive_complexity": 2,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 1,
      "nesting_depth": 1
    },
    {
      "name": "check_double_args",
      "file_path": "src/builtin_error.ml",
      "start_line": 39,
      "end_line": 43,
      "length": 5,
      "cyclomatic_complexity": 4,
      "cognitive_complexity": 3,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 1,
      "nesting_depth": 1
    },
    {
      "name": "check_no_args",
      "file_path": "src/builtin_error.ml",
      "start_line": 45,
      "end_line": 49,
      "length": 5,
      "cyclomatic_complexity": 3,
      "cognitive_complexity": 2,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 1,
      "nesting_depth": 1
    },
    {
      "name": "expect_builtin_function",
      "file_path": "src/builtin_error.ml",
      "start_line": 59,
      "end_line": 60,
      "length": 2,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "expect_string_or_list",
      "file_path": "src/builtin_error.ml",
      "start_line": 64,
      "end_line": 65,
      "length": 2,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "expect_nonempty_list",
      "file_path": "src/builtin_error.ml",
      "start_line": 67,
      "end_line": 70,
      "length": 4,
      "cyclomatic_complexity": 3,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 0,
      "nesting_depth": 1
    },
    {
      "name": "handle_file_error",
      "file_path": "src/builtin_error.ml",
      "start_line": 72,
      "end_line": 74,
      "length": 3,
      "cyclomatic_complexity": 2,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 3,
      "match_expressions_count": 0,
      "nesting_depth": 1
    },
    {
      "name": "handle_higher_order_error",
      "file_path": "src/builtin_error.ml",
      "start_line": 76,
      "end_line": 78,
      "length": 3,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "check_array_bounds",
      "file_path": "src/builtin_error.ml",
      "start_line": 80,
      "end_line": 84,
      "length": 5,
      "cyclomatic_complexity": 4,
      "cognitive_complexity": 3,
      "is_recursive": false,
      "parameters_count": 3,
      "match_expressions_count": 0,
      "nesting_depth": 1
    },
    {
      "name": "expect_non_negative",
      "file_path": "src/builtin_error.ml",
      "start_line": 86,
      "end_line": 88,
      "length": 3,
      "cyclomatic_complexity": 3,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 0,
      "nesting_depth": 1
    },
    {
      "name": "analyze_let_statement",
      "file_path": "src/semantic_statements.ml",
      "start_line": 17,
      "end_line": 22,
      "length": 6,
      "cyclomatic_complexity": 4,
      "cognitive_complexity": 3,
      "is_recursive": false,
      "parameters_count": 3,
      "match_expressions_count": 1,
      "nesting_depth": 2
    },
    {
      "name": "analyze_semantic_let_statement",
      "file_path": "src/semantic_statements.ml",
      "start_line": 24,
      "end_line": 34,
      "length": 11,
      "cyclomatic_complexity": 4,
      "cognitive_complexity": 3,
      "is_recursive": false,
      "parameters_count": 4,
      "match_expressions_count": 1,
      "nesting_depth": 3
    },
    {
      "name": "analyze_rec_let_statement",
      "file_path": "src/semantic_statements.ml",
      "start_line": 36,
      "end_line": 58,
      "length": 23,
      "cyclomatic_complexity": 8,
      "cognitive_complexity": 8,
      "is_recursive": false,
      "parameters_count": 3,
      "match_expressions_count": 1,
      "nesting_depth": 7
    },
    {
      "name": "analyze_alias_type_def",
      "file_path": "src/semantic_statements.ml",
      "start_line": 60,
      "end_line": 64,
      "length": 5,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 3,
      "match_expressions_count": 0,
      "nesting_depth": 2
    },
    {
      "name": "analyze_private_type_def",
      "file_path": "src/semantic_statements.ml",
      "start_line": 66,
      "end_line": 71,
      "length": 6,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 3,
      "match_expressions_count": 0,
      "nesting_depth": 3
    },
    {
      "name": "analyze_algebraic_type_def",
      "file_path": "src/semantic_statements.ml",
      "start_line": 73,
      "end_line": 76,
      "length": 4,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 3,
      "match_expressions_count": 0,
      "nesting_depth": 1
    },
    {
      "name": "analyze_record_type_def",
      "file_path": "src/semantic_statements.ml",
      "start_line": 78,
      "end_line": 85,
      "length": 8,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 3,
      "match_expressions_count": 0,
      "nesting_depth": 2
    },
    {
      "name": "analyze_polymorphic_variant_type_def",
      "file_path": "src/semantic_statements.ml",
      "start_line": 87,
      "end_line": 99,
      "length": 13,
      "cyclomatic_complexity": 4,
      "cognitive_complexity": 3,
      "is_recursive": false,
      "parameters_count": 3,
      "match_expressions_count": 1,
      "nesting_depth": 2
    },
    {
      "name": "analyze_type_def_statement",
      "file_path": "src/semantic_statements.ml",
      "start_line": 101,
      "end_line": 109,
      "length": 9,
      "cyclomatic_complexity": 7,
      "cognitive_complexity": 6,
      "is_recursive": false,
      "parameters_count": 3,
      "match_expressions_count": 1,
      "nesting_depth": 1
    },
    {
      "name": "analyze_statement",
      "file_path": "src/semantic_statements.ml",
      "start_line": 111,
      "end_line": 120,
      "length": 10,
      "cyclomatic_complexity": 8,
      "cognitive_complexity": 7,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 1,
      "nesting_depth": 1
    },
    {
      "name": "analyze_statements",
      "file_path": "src/semantic_statements.ml",
      "start_line": 122,
      "end_line": 128,
      "length": 7,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 0,
      "nesting_depth": 1
    },
    {
      "name": "analyze_program",
      "file_path": "src/semantic_statements.ml",
      "start_line": 130,
      "end_line": 132,
      "length": 3,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 0,
      "nesting_depth": 1
    },
    {
      "name": "check_utf8_char",
      "file_path": "src/lexer_chars.ml",
      "start_line": 9,
      "end_line": 13,
      "length": 5,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 2,
      "is_recursive": false,
      "parameters_count": 4,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "is_valid_keyword_boundary",
      "file_path": "src/lexer_chars.ml",
      "start_line": 15,
      "end_line": 28,
      "length": 14,
      "cyclomatic_complexity": 15,
      "cognitive_complexity": 17,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 0,
      "nesting_depth": 4
    },
    {
      "name": "check_keyword_match",
      "file_path": "src/lexer_chars.ml",
      "start_line": 30,
      "end_line": 43,
      "length": 14,
      "cyclomatic_complexity": 8,
      "cognitive_complexity": 22,
      "is_recursive": false,
      "parameters_count": 5,
      "match_expressions_count": 1,
      "nesting_depth": 6
    },
    {
      "name": "try_match_keyword",
      "file_path": "src/lexer_chars.ml",
      "start_line": 45,
      "end_line": 62,
      "length": 18,
      "cyclomatic_complexity": 7,
      "cognitive_complexity": 6,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 2,
      "nesting_depth": 3
    },
    {
      "name": "count_utf8_chars",
      "file_path": "src/lexer_chars.ml",
      "start_line": 64,
      "end_line": 74,
      "length": 11,
      "cyclomatic_complexity": 2,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 5
    },
    {
      "name": "create_keyword_state",
      "file_path": "src/lexer_chars.ml",
      "start_line": 76,
      "end_line": 82,
      "length": 7,
      "cyclomatic_complexity": 2,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "handle_non_keyword_char",
      "file_path": "src/lexer_chars.ml",
      "start_line": 84,
      "end_line": 92,
      "length": 9,
      "cyclomatic_complexity": 5,
      "cognitive_complexity": 8,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 0,
      "nesting_depth": 4
    },
    {
      "name": "try_keyword_or_error",
      "file_path": "src/lexer_chars.ml",
      "start_line": 94,
      "end_line": 100,
      "length": 7,
      "cyclomatic_complexity": 4,
      "cognitive_complexity": 3,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 1,
      "nesting_depth": 2
    },
    {
      "name": "handle_chinese_number_sequence",
      "file_path": "src/lexer_chars.ml",
      "start_line": 102,
      "end_line": 118,
      "length": 17,
      "cyclomatic_complexity": 5,
      "cognitive_complexity": 7,
      "is_recursive": false,
      "parameters_count": 4,
      "match_expressions_count": 1,
      "nesting_depth": 6
    },
    {
      "name": "handle_letter_or_chinese_char",
      "file_path": "src/lexer_chars.ml",
      "start_line": 120,
      "end_line": 126,
      "length": 7,
      "cyclomatic_complexity": 3,
      "cognitive_complexity": 3,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 0,
      "nesting_depth": 4
    },
    {
      "name": "variant_to_token",
      "file_path": "src/lexer_keywords.ml",
      "start_line": 7,
      "end_line": 37,
      "length": 31,
      "cyclomatic_complexity": 20,
      "cognitive_complexity": 26,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 2
    },
    {
      "name": "find_keyword",
      "file_path": "src/lexer_keywords.ml",
      "start_line": 39,
      "end_line": 42,
      "length": 4,
      "cyclomatic_complexity": 4,
      "cognitive_complexity": 3,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 1,
      "nesting_depth": 1
    },
    {
      "name": "safe_from_legacy_string",
      "file_path": "src/token_compatibility_bridge_simple.ml",
      "start_line": 18,
      "end_line": 22,
      "length": 5,
      "cyclomatic_complexity": 4,
      "cognitive_complexity": 3,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 1,
      "nesting_depth": 1
    },
    {
      "name": "get_compatibility_info",
      "file_path": "src/token_compatibility_bridge_simple.ml",
      "start_line": 27,
      "end_line": 32,
      "length": 6,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 3
    },
    {
      "name": "load_count",
      "file_path": "src/data_loader_stats.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "cache_hits",
      "file_path": "src/data_loader_stats.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "cache_misses",
      "file_path": "src/data_loader_stats.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "error_count",
      "file_path": "src/data_loader_stats.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "increment_load",
      "file_path": "src/data_loader_stats.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "increment_cache_hit",
      "file_path": "src/data_loader_stats.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "increment_cache_miss",
      "file_path": "src/data_loader_stats.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "increment_error",
      "file_path": "src/data_loader_stats.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "reset_stats",
      "file_path": "src/data_loader_stats.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "get_stats",
      "file_path": "src/data_loader_stats.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "cache_hit_rate",
      "file_path": "src/data_loader_stats.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "print_stats",
      "file_path": "src/data_loader_stats.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "generate_report",
      "file_path": "src/data_loader_stats.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "gen_list_expr",
      "file_path": "src/c_codegen_collections.ml",
      "start_line": 10,
      "end_line": 19,
      "length": 10,
      "cyclomatic_complexity": 3,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 3,
      "match_expressions_count": 0,
      "nesting_depth": 2
    },
    {
      "name": "gen_array_expr",
      "file_path": "src/c_codegen_collections.ml",
      "start_line": 21,
      "end_line": 26,
      "length": 6,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 3,
      "match_expressions_count": 0,
      "nesting_depth": 2
    },
    {
      "name": "gen_array_access_expr",
      "file_path": "src/c_codegen_collections.ml",
      "start_line": 28,
      "end_line": 32,
      "length": 5,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 4,
      "match_expressions_count": 0,
      "nesting_depth": 2
    },
    {
      "name": "gen_collections",
      "file_path": "src/c_codegen_collections.ml",
      "start_line": 34,
      "end_line": 40,
      "length": 7,
      "cyclomatic_complexity": 6,
      "cognitive_complexity": 5,
      "is_recursive": false,
      "parameters_count": 3,
      "match_expressions_count": 1,
      "nesting_depth": 1
    },
    {
      "name": "parse_tag_expr",
      "file_path": "src/parser_expressions_constructs.ml",
      "start_line": 31,
      "end_line": 43,
      "length": 13,
      "cyclomatic_complexity": 2,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 0,
      "nesting_depth": 5
    },
    {
      "name": "type_keyword_mapping",
      "file_path": "src/parser_expressions_constructs.ml",
      "start_line": 45,
      "end_line": 54,
      "length": 10,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "parse_type_keyword_to_var",
      "file_path": "src/parser_expressions_constructs.ml",
      "start_line": 56,
      "end_line": 61,
      "length": 6,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 0,
      "nesting_depth": 2
    },
    {
      "name": "parse_type_keyword_expr",
      "file_path": "src/parser_expressions_constructs.ml",
      "start_line": 63,
      "end_line": 72,
      "length": 10,
      "cyclomatic_complexity": 4,
      "cognitive_complexity": 3,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 1,
      "nesting_depth": 2
    },
    {
      "name": "parse_parenthesized_expr",
      "file_path": "src/parser_expressions_constructs.ml",
      "start_line": 74,
      "end_line": 86,
      "length": 13,
      "cyclomatic_complexity": 2,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 3,
      "match_expressions_count": 0,
      "nesting_depth": 6
    },
    {
      "name": "parse_container_expressions",
      "file_path": "src/parser_expressions_constructs.ml",
      "start_line": 88,
      "end_line": 109,
      "length": 22,
      "cyclomatic_complexity": 8,
      "cognitive_complexity": 5,
      "is_recursive": false,
      "parameters_count": 3,
      "match_expressions_count": 1,
      "nesting_depth": 6
    },
    {
      "name": "add_suggestions_to_ref",
      "file_path": "src/analysis_helpers.ml",
      "start_line": 7,
      "end_line": 9,
      "length": 3,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "analyze_variable_expression",
      "file_path": "src/analysis_helpers.ml",
      "start_line": 14,
      "end_line": 16,
      "length": 3,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "analyze_let_expression",
      "file_path": "src/analysis_helpers.ml",
      "start_line": 18,
      "end_line": 23,
      "length": 6,
      "cyclomatic_complexity": 2,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 6,
      "match_expressions_count": 0,
      "nesting_depth": 1
    },
    {
      "name": "analyze_function_expression",
      "file_path": "src/analysis_helpers.ml",
      "start_line": 25,
      "end_line": 41,
      "length": 17,
      "cyclomatic_complexity": 2,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 5,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "analyze_conditional_expression",
      "file_path": "src/analysis_helpers.ml",
      "start_line": 43,
      "end_line": 49,
      "length": 7,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 6,
      "match_expressions_count": 0,
      "nesting_depth": 1
    },
    {
      "name": "analyze_function_call_expression",
      "file_path": "src/analysis_helpers.ml",
      "start_line": 51,
      "end_line": 54,
      "length": 4,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 4,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "analyze_match_expression",
      "file_path": "src/analysis_helpers.ml",
      "start_line": 56,
      "end_line": 60,
      "length": 5,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 4,
      "match_expressions_count": 0,
      "nesting_depth": 1
    },
    {
      "name": "analyze_binary_operation_expression",
      "file_path": "src/analysis_helpers.ml",
      "start_line": 62,
      "end_line": 65,
      "length": 4,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 4,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "parse_tag_expr",
      "file_path": "src/parser_expressions_operators.ml",
      "start_line": 27,
      "end_line": 41,
      "length": 15,
      "cyclomatic_complexity": 2,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 0,
      "nesting_depth": 5
    },
    {
      "name": "parse_parenthesized_expr",
      "file_path": "src/parser_expressions_operators.ml",
      "start_line": 43,
      "end_line": 57,
      "length": 15,
      "cyclomatic_complexity": 2,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 0,
      "nesting_depth": 6
    },
    {
      "name": "parse_module_expr",
      "file_path": "src/parser_expressions_operators.ml",
      "start_line": 59,
      "end_line": 65,
      "length": 7,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 1
    },
    {
      "name": "parse_poetry_expr",
      "file_path": "src/parser_expressions_operators.ml",
      "start_line": 67,
      "end_line": 79,
      "length": 13,
      "cyclomatic_complexity": 6,
      "cognitive_complexity": 3,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 1,
      "nesting_depth": 2
    },
    {
      "name": "parse_ancient_expr",
      "file_path": "src/parser_expressions_operators.ml",
      "start_line": 81,
      "end_line": 95,
      "length": 15,
      "cyclomatic_complexity": 6,
      "cognitive_complexity": 5,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 1,
      "nesting_depth": 2
    },
    {
      "name": "parse_container_exprs",
      "file_path": "src/parser_expressions_operators.ml",
      "start_line": 97,
      "end_line": 117,
      "length": 21,
      "cyclomatic_complexity": 8,
      "cognitive_complexity": 5,
      "is_recursive": false,
      "parameters_count": 4,
      "match_expressions_count": 1,
      "nesting_depth": 4
    },
    {
      "name": "parse_special_keyword_exprs",
      "file_path": "src/parser_expressions_operators.ml",
      "start_line": 119,
      "end_line": 143,
      "length": 25,
      "cyclomatic_complexity": 12,
      "cognitive_complexity": 7,
      "is_recursive": false,
      "parameters_count": 4,
      "match_expressions_count": 1,
      "nesting_depth": 2
    },
    {
      "name": "perform_lexical_analysis",
      "file_path": "src/compiler_phases.ml",
      "start_line": 15,
      "end_line": 25,
      "length": 11,
      "cyclomatic_complexity": 3,
      "cognitive_complexity": 4,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 0,
      "nesting_depth": 3
    },
    {
      "name": "perform_syntax_analysis",
      "file_path": "src/compiler_phases.ml",
      "start_line": 27,
      "end_line": 39,
      "length": 13,
      "cyclomatic_complexity": 4,
      "cognitive_complexity": 7,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 0,
      "nesting_depth": 4
    },
    {
      "name": "perform_semantic_analysis",
      "file_path": "src/compiler_phases.ml",
      "start_line": 41,
      "end_line": 44,
      "length": 4,
      "cyclomatic_complexity": 3,
      "cognitive_complexity": 4,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 0,
      "nesting_depth": 2
    },
    {
      "name": "generate_c_output_filename",
      "file_path": "src/compiler_phases.ml",
      "start_line": 46,
      "end_line": 53,
      "length": 8,
      "cyclomatic_complexity": 7,
      "cognitive_complexity": 9,
      "is_recursive": false,
      "parameters_count": 3,
      "match_expressions_count": 2,
      "nesting_depth": 2
    },
    {
      "name": "perform_c_code_generation",
      "file_path": "src/compiler_phases.ml",
      "start_line": 55,
      "end_line": 72,
      "length": 18,
      "cyclomatic_complexity": 5,
      "cognitive_complexity": 5,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 1,
      "nesting_depth": 2
    },
    {
      "name": "perform_interpretation",
      "file_path": "src/compiler_phases.ml",
      "start_line": 74,
      "end_line": 83,
      "length": 10,
      "cyclomatic_complexity": 5,
      "cognitive_complexity": 7,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 0,
      "nesting_depth": 4
    },
    {
      "name": "perform_recovery_interpretation",
      "file_path": "src/compiler_phases.ml",
      "start_line": 85,
      "end_line": 88,
      "length": 4,
      "cyclomatic_complexity": 2,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 0,
      "nesting_depth": 1
    },
    {
      "name": "determine_execution_mode",
      "file_path": "src/compiler_phases.ml",
      "start_line": 90,
      "end_line": 100,
      "length": 11,
      "cyclomatic_complexity": 6,
      "cognitive_complexity": 19,
      "is_recursive": false,
      "parameters_count": 3,
      "match_expressions_count": 0,
      "nesting_depth": 5
    },
    {
      "name": "parse_literal_expr",
      "file_path": "src/parser_literals.ml",
      "start_line": 15,
      "end_line": 51,
      "length": 37,
      "cyclomatic_complexity": 14,
      "cognitive_complexity": 17,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 2,
      "nesting_depth": 10
    },
    {
      "name": "list_value_to_string",
      "file_path": "src/value_advanced_ops.ml",
      "start_line": 9,
      "end_line": 11,
      "length": 3,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "array_value_to_string",
      "file_path": "src/value_advanced_ops.ml",
      "start_line": 13,
      "end_line": 16,
      "length": 4,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 0,
      "nesting_depth": 1
    },
    {
      "name": "tuple_value_to_string",
      "file_path": "src/value_advanced_ops.ml",
      "start_line": 18,
      "end_line": 20,
      "length": 3,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "record_value_to_string",
      "file_path": "src/value_advanced_ops.ml",
      "start_line": 22,
      "end_line": 24,
      "length": 3,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "container_value_to_string",
      "file_path": "src/value_advanced_ops.ml",
      "start_line": 29,
      "end_line": 37,
      "length": 9,
      "cyclomatic_complexity": 8,
      "cognitive_complexity": 7,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 1,
      "nesting_depth": 1
    },
    {
      "name": "function_value_to_string",
      "file_path": "src/value_advanced_ops.ml",
      "start_line": 39,
      "end_line": 45,
      "length": 7,
      "cyclomatic_complexity": 6,
      "cognitive_complexity": 5,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 1,
      "nesting_depth": 1
    },
    {
      "name": "constructor_value_to_string",
      "file_path": "src/value_advanced_ops.ml",
      "start_line": 47,
      "end_line": 59,
      "length": 13,
      "cyclomatic_complexity": 8,
      "cognitive_complexity": 7,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 1,
      "nesting_depth": 2
    },
    {
      "name": "module_value_to_string",
      "file_path": "src/value_advanced_ops.ml",
      "start_line": 61,
      "end_line": 68,
      "length": 8,
      "cyclomatic_complexity": 4,
      "cognitive_complexity": 3,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 1,
      "nesting_depth": 3
    },
    {
      "name": "value_to_string",
      "file_path": "src/value_advanced_ops.ml",
      "start_line": 70,
      "end_line": 86,
      "length": 17,
      "cyclomatic_complexity": 19,
      "cognitive_complexity": 6,
      "is_recursive": true,
      "parameters_count": 1,
      "match_expressions_count": 1,
      "nesting_depth": 1
    },
    {
      "name": "register_constructors",
      "file_path": "src/value_advanced_ops.ml",
      "start_line": 88,
      "end_line": 103,
      "length": 16,
      "cyclomatic_complexity": 4,
      "cognitive_complexity": 2,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 1,
      "nesting_depth": 1
    },
    {
      "name": "add_position_to_error_msg",
      "file_path": "src/error_conversion.ml",
      "start_line": 7,
      "end_line": 12,
      "length": 6,
      "cyclomatic_complexity": 4,
      "cognitive_complexity": 3,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 1,
      "nesting_depth": 1
    },
    {
      "name": "create_compiler_error",
      "file_path": "src/error_conversion.ml",
      "start_line": 88,
      "end_line": 90,
      "length": 3,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "convert_lexical_error",
      "file_path": "src/error_conversion.ml",
      "start_line": 98,
      "end_line": 102,
      "length": 5,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 0,
      "nesting_depth": 2
    },
    {
      "name": "convert_parse_error",
      "file_path": "src/error_conversion.ml",
      "start_line": 104,
      "end_line": 108,
      "length": 5,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 0,
      "nesting_depth": 2
    },
    {
      "name": "convert_runtime_error",
      "file_path": "src/error_conversion.ml",
      "start_line": 110,
      "end_line": 113,
      "length": 4,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 0,
      "nesting_depth": 1
    },
    {
      "name": "convert_poetry_error",
      "file_path": "src/error_conversion.ml",
      "start_line": 115,
      "end_line": 118,
      "length": 4,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 0,
      "nesting_depth": 1
    },
    {
      "name": "convert_system_error",
      "file_path": "src/error_conversion.ml",
      "start_line": 120,
      "end_line": 124,
      "length": 5,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 0,
      "nesting_depth": 1
    },
    {
      "name": "parse_advance_name_pattern",
      "file_path": "src/parser_types.ml",
      "start_line": 10,
      "end_line": 14,
      "length": 5,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 2
    },
    {
      "name": "parse_advance_name_colon_pattern",
      "file_path": "src/parser_types.ml",
      "start_line": 16,
      "end_line": 23,
      "length": 8,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 3
    },
    {
      "name": "parse_variant_labels",
      "file_path": "src/parser_types.ml",
      "start_line": 25,
      "end_line": 104,
      "length": 80,
      "cyclomatic_complexity": 26,
      "cognitive_complexity": 105,
      "is_recursive": true,
      "parameters_count": 2,
      "match_expressions_count": 4,
      "nesting_depth": 29
    },
    {
      "name": "parse_type_definition",
      "file_path": "src/parser_types.ml",
      "start_line": 106,
      "end_line": 212,
      "length": 107,
      "cyclomatic_complexity": 38,
      "cognitive_complexity": 105,
      "is_recursive": true,
      "parameters_count": 1,
      "match_expressions_count": 5,
      "nesting_depth": 46
    },
    {
      "name": "create_initial_context",
      "file_path": "src/semantic_context.ml",
      "start_line": 40,
      "end_line": 48,
      "length": 9,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "create_symbol_entry",
      "file_path": "src/semantic_context.ml",
      "start_line": 50,
      "end_line": 52,
      "length": 3,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "exit_scope",
      "file_path": "src/semantic_context.ml",
      "start_line": 57,
      "end_line": 65,
      "length": 9,
      "cyclomatic_complexity": 8,
      "cognitive_complexity": 10,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 2,
      "nesting_depth": 3
    },
    {
      "name": "add_symbol",
      "file_path": "src/semantic_context.ml",
      "start_line": 67,
      "end_line": 81,
      "length": 15,
      "cyclomatic_complexity": 10,
      "cognitive_complexity": 13,
      "is_recursive": false,
      "parameters_count": 4,
      "match_expressions_count": 2,
      "nesting_depth": 6
    },
    {
      "name": "add_type_definition",
      "file_path": "src/semantic_context.ml",
      "start_line": 83,
      "end_line": 86,
      "length": 4,
      "cyclomatic_complexity": 2,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 3,
      "match_expressions_count": 0,
      "nesting_depth": 1
    },
    {
      "name": "lookup_type_definition",
      "file_path": "src/semantic_context.ml",
      "start_line": 88,
      "end_line": 90,
      "length": 3,
      "cyclomatic_complexity": 2,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 0,
      "nesting_depth": 1
    },
    {
      "name": "lookup_symbol",
      "file_path": "src/semantic_context.ml",
      "start_line": 92,
      "end_line": 99,
      "length": 8,
      "cyclomatic_complexity": 5,
      "cognitive_complexity": 5,
      "is_recursive": true,
      "parameters_count": 2,
      "match_expressions_count": 1,
      "nesting_depth": 2
    },
    {
      "name": "symbol_table_to_env",
      "file_path": "src/semantic_context.ml",
      "start_line": 101,
      "end_line": 102,
      "length": 2,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "analyze_expression",
      "file_path": "src/analysis_engine.ml",
      "start_line": 8,
      "end_line": 38,
      "length": 31,
      "cyclomatic_complexity": 12,
      "cognitive_complexity": 10,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 1,
      "nesting_depth": 3
    },
    {
      "name": "analyze_statement",
      "file_path": "src/analysis_engine.ml",
      "start_line": 40,
      "end_line": 58,
      "length": 19,
      "cyclomatic_complexity": 10,
      "cognitive_complexity": 11,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 2,
      "nesting_depth": 6
    },
    {
      "name": "analyze_program",
      "file_path": "src/analysis_engine.ml",
      "start_line": 60,
      "end_line": 89,
      "length": 30,
      "cyclomatic_complexity": 5,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 3
    },
    {
      "name": "parse_literal_expr",
      "file_path": "src/parser_expressions_literals.ml",
      "start_line": 27,
      "end_line": 63,
      "length": 37,
      "cyclomatic_complexity": 14,
      "cognitive_complexity": 17,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 2,
      "nesting_depth": 10
    },
    {
      "name": "parse_literal_argument",
      "file_path": "src/parser_expressions_literals.ml",
      "start_line": 65,
      "end_line": 96,
      "length": 32,
      "cyclomatic_complexity": 10,
      "cognitive_complexity": 9,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 1,
      "nesting_depth": 9
    },
    {
      "name": "parse_literal_expr_safe",
      "file_path": "src/parser_expressions_literals.ml",
      "start_line": 101,
      "end_line": 109,
      "length": 9,
      "cyclomatic_complexity": 3,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 0,
      "nesting_depth": 2
    },
    {
      "name": "parse_basic_argument_expr",
      "file_path": "src/parser_expressions_literals.ml",
      "start_line": 111,
      "end_line": 131,
      "length": 21,
      "cyclomatic_complexity": 11,
      "cognitive_complexity": 10,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 1,
      "nesting_depth": 4
    },
    {
      "name": "parse_basic_literal_argument",
      "file_path": "src/parser_expressions_literals.ml",
      "start_line": 133,
      "end_line": 154,
      "length": 22,
      "cyclomatic_complexity": 10,
      "cognitive_complexity": 9,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 1,
      "nesting_depth": 4
    },
    {
      "name": "can_parse_as_literal",
      "file_path": "src/parser_expressions_literals.ml",
      "start_line": 156,
      "end_line": 162,
      "length": 7,
      "cyclomatic_complexity": 11,
      "cognitive_complexity": 4,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 1,
      "nesting_depth": 1
    },
    {
      "name": "extract_literal_from_token",
      "file_path": "src/parser_expressions_literals.ml",
      "start_line": 164,
      "end_line": 177,
      "length": 14,
      "cyclomatic_complexity": 11,
      "cognitive_complexity": 10,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 1,
      "nesting_depth": 2
    },
    {
      "name": "extract_literal_from_token_unsafe",
      "file_path": "src/parser_expressions_literals.ml",
      "start_line": 179,
      "end_line": 182,
      "length": 4,
      "cyclomatic_complexity": 4,
      "cognitive_complexity": 3,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 1,
      "nesting_depth": 1
    },
    {
      "name": "format_position",
      "file_path": "src/compiler_errors_formatter.ml",
      "start_line": 8,
      "end_line": 9,
      "length": 2,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "format_error_message",
      "file_path": "src/compiler_errors_formatter.ml",
      "start_line": 11,
      "end_line": 66,
      "length": 56,
      "cyclomatic_complexity": 14,
      "cognitive_complexity": 5,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 1,
      "nesting_depth": 1
    },
    {
      "name": "format_error_info",
      "file_path": "src/compiler_errors_formatter.ml",
      "start_line": 68,
      "end_line": 88,
      "length": 21,
      "cyclomatic_complexity": 7,
      "cognitive_complexity": 9,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 2,
      "nesting_depth": 6
    },
    {
      "name": "print_error_info",
      "file_path": "src/compiler_errors_formatter.ml",
      "start_line": 90,
      "end_line": 103,
      "length": 14,
      "cyclomatic_complexity": 6,
      "cognitive_complexity": 9,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 1,
      "nesting_depth": 3
    },
    {
      "name": "register_mapping",
      "file_path": "src/unified_token_registry.ml",
      "start_line": 23,
      "end_line": 34,
      "length": 12,
      "cyclomatic_complexity": 3,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 5
    },
    {
      "name": "find_mapping",
      "file_path": "src/unified_token_registry.ml",
      "start_line": 39,
      "end_line": 48,
      "length": 10,
      "cyclomatic_complexity": 5,
      "cognitive_complexity": 2,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 1,
      "nesting_depth": 3
    },
    {
      "name": "check_conflicts",
      "file_path": "src/unified_token_registry.ml",
      "start_line": 56,
      "end_line": 63,
      "length": 8,
      "cyclomatic_complexity": 2,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 3
    },
    {
      "name": "get_stats",
      "file_path": "src/unified_token_registry.ml",
      "start_line": 65,
      "end_line": 77,
      "length": 13,
      "cyclomatic_complexity": 2,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 3
    },
    {
      "name": "clear",
      "file_path": "src/unified_token_registry.ml",
      "start_line": 79,
      "end_line": 83,
      "length": 5,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "make_mapping",
      "file_path": "src/unified_token_registry.ml",
      "start_line": 87,
      "end_line": 89,
      "length": 3,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 3,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "batch_mappings",
      "file_path": "src/unified_token_registry.ml",
      "start_line": 106,
      "end_line": 109,
      "length": 4,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "register_core_mappings",
      "file_path": "src/unified_token_registry.ml",
      "start_line": 115,
      "end_line": 164,
      "length": 50,
      "cyclomatic_complexity": 3,
      "cognitive_complexity": 3,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 2
    },
    {
      "name": "register_runtime_extensions",
      "file_path": "src/unified_token_registry.ml",
      "start_line": 166,
      "end_line": 169,
      "length": 4,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 1
    },
    {
      "name": "validate_mappings",
      "file_path": "src/unified_token_registry.ml",
      "start_line": 171,
      "end_line": 191,
      "length": 21,
      "cyclomatic_complexity": 4,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 3
    },
    {
      "name": "initialize_all",
      "file_path": "src/unified_token_registry.ml",
      "start_line": 193,
      "end_line": 200,
      "length": 8,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "initialize",
      "file_path": "src/unified_token_registry.ml",
      "start_line": 202,
      "end_line": 204,
      "length": 3,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "get_current_char",
      "file_path": "src/lexer_char_processing.ml",
      "start_line": 25,
      "end_line": 27,
      "length": 3,
      "cyclomatic_complexity": 2,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 1
    },
    {
      "name": "check_utf8_char",
      "file_path": "src/lexer_char_processing.ml",
      "start_line": 29,
      "end_line": 33,
      "length": 5,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 2,
      "is_recursive": false,
      "parameters_count": 4,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "make_new_state",
      "file_path": "src/lexer_char_processing.ml",
      "start_line": 35,
      "end_line": 37,
      "length": 3,
      "cyclomatic_complexity": 2,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "create_unsupported_char_error",
      "file_path": "src/lexer_char_processing.ml",
      "start_line": 39,
      "end_line": 43,
      "length": 5,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "load_string_list",
      "file_path": "src/data_loader_core.ml",
      "start_line": 37,
      "end_line": 39,
      "length": 3,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "load_word_class_pairs",
      "file_path": "src/data_loader_core.ml",
      "start_line": 41,
      "end_line": 43,
      "length": 3,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "load_simple_object",
      "file_path": "src/data_loader_core.ml",
      "start_line": 45,
      "end_line": 47,
      "length": 3,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "load_with_fallback",
      "file_path": "src/data_loader_core.ml",
      "start_line": 49,
      "end_line": 59,
      "length": 11,
      "cyclomatic_complexity": 6,
      "cognitive_complexity": 5,
      "is_recursive": false,
      "parameters_count": 3,
      "match_expressions_count": 1,
      "nesting_depth": 1
    },
    {
      "name": "should_log",
      "file_path": "src/unified_logger.ml",
      "start_line": 27,
      "end_line": 30,
      "length": 4,
      "cyclomatic_complexity": 4,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 1
    },
    {
      "name": "format_timestamp",
      "file_path": "src/unified_logger.ml",
      "start_line": 32,
      "end_line": 35,
      "length": 4,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 1
    },
    {
      "name": "log_with_level",
      "file_path": "src/unified_logger.ml",
      "start_line": 37,
      "end_line": 48,
      "length": 12,
      "cyclomatic_complexity": 6,
      "cognitive_complexity": 9,
      "is_recursive": false,
      "parameters_count": 3,
      "match_expressions_count": 1,
      "nesting_depth": 7
    },
    {
      "name": "function_arity_mismatch",
      "file_path": "src/unified_logger.ml",
      "start_line": 69,
      "end_line": 70,
      "length": 2,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 3,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "type_mismatch",
      "file_path": "src/unified_logger.ml",
      "start_line": 72,
      "end_line": 73,
      "length": 2,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "module_member_not_found",
      "file_path": "src/unified_logger.ml",
      "start_line": 77,
      "end_line": 80,
      "length": 4,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "compilation_complete",
      "file_path": "src/unified_logger.ml",
      "start_line": 85,
      "end_line": 86,
      "length": 2,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "analysis_stats",
      "file_path": "src/unified_logger.ml",
      "start_line": 88,
      "end_line": 93,
      "length": 6,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "luoyan_call",
      "file_path": "src/unified_logger.ml",
      "start_line": 99,
      "end_line": 100,
      "length": 2,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 3,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "function_call",
      "file_path": "src/unified_logger.ml",
      "start_line": 110,
      "end_line": 111,
      "length": 2,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "type_inference",
      "file_path": "src/unified_logger.ml",
      "start_line": 113,
      "end_line": 114,
      "length": 2,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "format_position",
      "file_path": "src/unified_logger.ml",
      "start_line": 121,
      "end_line": 122,
      "length": 2,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 3,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "format_error_with_position",
      "file_path": "src/unified_logger.ml",
      "start_line": 124,
      "end_line": 128,
      "length": 5,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 3,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "log_with_context",
      "file_path": "src/unified_logger.ml",
      "start_line": 131,
      "end_line": 139,
      "length": 9,
      "cyclomatic_complexity": 2,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 4,
      "match_expressions_count": 0,
      "nesting_depth": 2
    },
    {
      "name": "debugf_ctx",
      "file_path": "src/unified_logger.ml",
      "start_line": 141,
      "end_line": 142,
      "length": 2,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 3,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "infof_ctx",
      "file_path": "src/unified_logger.ml",
      "start_line": 144,
      "end_line": 145,
      "length": 2,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 3,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "warningf_ctx",
      "file_path": "src/unified_logger.ml",
      "start_line": 147,
      "end_line": 148,
      "length": 2,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 3,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "errorf_ctx",
      "file_path": "src/unified_logger.ml",
      "start_line": 150,
      "end_line": 153,
      "length": 4,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 3,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "compilation_stats",
      "file_path": "src/unified_logger.ml",
      "start_line": 156,
      "end_line": 157,
      "length": 2,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 3,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "cache_stats",
      "file_path": "src/unified_logger.ml",
      "start_line": 159,
      "end_line": 160,
      "length": 2,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 3,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "unify",
      "file_path": "src/types_unify.ml",
      "start_line": 10,
      "end_line": 124,
      "length": 115,
      "cyclomatic_complexity": 51,
      "cognitive_complexity": 120,
      "is_recursive": true,
      "parameters_count": 2,
      "match_expressions_count": 6,
      "nesting_depth": 15
    },
    {
      "name": "lexer_pos_to_compiler_pos",
      "file_path": "src/parser_natural_functions.ml",
      "start_line": 12,
      "end_line": 14,
      "length": 3,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 5,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "parse_natural_function_header",
      "file_path": "src/parser_natural_functions.ml",
      "start_line": 16,
      "end_line": 60,
      "length": 45,
      "cyclomatic_complexity": 19,
      "cognitive_complexity": 19,
      "is_recursive": false,
      "parameters_count": 4,
      "match_expressions_count": 3,
      "nesting_depth": 8
    },
    {
      "name": "parse_conditional_relation_word",
      "file_path": "src/parser_natural_functions.ml",
      "start_line": 62,
      "end_line": 112,
      "length": 51,
      "cyclomatic_complexity": 19,
      "cognitive_complexity": 21,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 2,
      "nesting_depth": 17
    },
    {
      "name": "parse_natural_conditional",
      "file_path": "src/parser_natural_functions.ml",
      "start_line": 114,
      "end_line": 217,
      "length": 104,
      "cyclomatic_complexity": 34,
      "cognitive_complexity": 67,
      "is_recursive": true,
      "parameters_count": 4,
      "match_expressions_count": 6,
      "nesting_depth": 45
    },
    {
      "name": "parse_natural_function_body",
      "file_path": "src/parser_natural_functions.ml",
      "start_line": 219,
      "end_line": 242,
      "length": 24,
      "cyclomatic_complexity": 7,
      "cognitive_complexity": 6,
      "is_recursive": false,
      "parameters_count": 4,
      "match_expressions_count": 1,
      "nesting_depth": 8
    },
    {
      "name": "perform_semantic_analysis",
      "file_path": "src/parser_natural_functions.ml",
      "start_line": 244,
      "end_line": 255,
      "length": 12,
      "cyclomatic_complexity": 4,
      "cognitive_complexity": 2,
      "is_recursive": false,
      "parameters_count": 3,
      "match_expressions_count": 0,
      "nesting_depth": 2
    },
    {
      "name": "parse_natural_function_definition",
      "file_path": "src/parser_natural_functions.ml",
      "start_line": 257,
      "end_line": 268,
      "length": 12,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 4,
      "match_expressions_count": 0,
      "nesting_depth": 1
    },
    {
      "name": "convert_classical_token",
      "file_path": "src/classical_converter.ml",
      "start_line": 16,
      "end_line": 22,
      "length": 7,
      "cyclomatic_complexity": 4,
      "cognitive_complexity": 2,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 1
    },
    {
      "name": "create_binary_operator_parser",
      "file_path": "src/parser_expressions_operators_consolidated.ml",
      "start_line": 24,
      "end_line": 39,
      "length": 16,
      "cyclomatic_complexity": 4,
      "cognitive_complexity": 3,
      "is_recursive": false,
      "parameters_count": 3,
      "match_expressions_count": 1,
      "nesting_depth": 5
    },
    {
      "name": "parse_assignment_expr",
      "file_path": "src/parser_expressions_operators_consolidated.ml",
      "start_line": 41,
      "end_line": 49,
      "length": 9,
      "cyclomatic_complexity": 2,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 0,
      "nesting_depth": 5
    },
    {
      "name": "parse_or_else_expr",
      "file_path": "src/parser_expressions_operators_consolidated.ml",
      "start_line": 51,
      "end_line": 63,
      "length": 13,
      "cyclomatic_complexity": 2,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 0,
      "nesting_depth": 5
    },
    {
      "name": "parse_and_expr",
      "file_path": "src/parser_expressions_operators_consolidated.ml",
      "start_line": 68,
      "end_line": 70,
      "length": 3,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "parse_comparison_expr",
      "file_path": "src/parser_expressions_operators_consolidated.ml",
      "start_line": 72,
      "end_line": 76,
      "length": 5,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "parse_arithmetic_expr",
      "file_path": "src/parser_expressions_operators_consolidated.ml",
      "start_line": 78,
      "end_line": 80,
      "length": 3,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "parse_multiplicative_expr",
      "file_path": "src/parser_expressions_operators_consolidated.ml",
      "start_line": 82,
      "end_line": 86,
      "length": 5,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "parse_unary_expr",
      "file_path": "src/parser_expressions_operators_consolidated.ml",
      "start_line": 88,
      "end_line": 108,
      "length": 21,
      "cyclomatic_complexity": 6,
      "cognitive_complexity": 5,
      "is_recursive": false,
      "parameters_count": 3,
      "match_expressions_count": 1,
      "nesting_depth": 8
    },
    {
      "name": "create_operator_precedence_chain",
      "file_path": "src/parser_expressions_operators_consolidated.ml",
      "start_line": 110,
      "end_line": 198,
      "length": 89,
      "cyclomatic_complexity": 22,
      "cognitive_complexity": 56,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 3,
      "nesting_depth": 31
    },
    {
      "name": "create_standard_operator_parsers",
      "file_path": "src/parser_expressions_operators_consolidated.ml",
      "start_line": 200,
      "end_line": 202,
      "length": 3,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "parse_arithmetic_only",
      "file_path": "src/parser_expressions_operators_consolidated.ml",
      "start_line": 204,
      "end_line": 208,
      "length": 5,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 0,
      "nesting_depth": 2
    },
    {
      "name": "parse_logical_only",
      "file_path": "src/parser_expressions_operators_consolidated.ml",
      "start_line": 210,
      "end_line": 216,
      "length": 7,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 0,
      "nesting_depth": 2
    },
    {
      "name": "parse_assignment_expression",
      "file_path": "src/parser_expressions_operators_consolidated.ml",
      "start_line": 218,
      "end_line": 220,
      "length": 3,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "parse_comparison_expression",
      "file_path": "src/parser_expressions_operators_consolidated.ml",
      "start_line": 231,
      "end_line": 233,
      "length": 3,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "parse_arithmetic_expression",
      "file_path": "src/parser_expressions_operators_consolidated.ml",
      "start_line": 235,
      "end_line": 237,
      "length": 3,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "parse_multiplicative_expression",
      "file_path": "src/parser_expressions_operators_consolidated.ml",
      "start_line": 239,
      "end_line": 241,
      "length": 3,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "parse_unary_expression",
      "file_path": "src/parser_expressions_operators_consolidated.ml",
      "start_line": 243,
      "end_line": 245,
      "length": 3,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 3,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "default_recovery_config",
      "file_path": "src/error_recovery.ml",
      "start_line": 25,
      "end_line": 34,
      "length": 10,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "recovery_stats",
      "file_path": "src/error_recovery.ml",
      "start_line": 36,
      "end_line": 45,
      "length": 10,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "format_debug_summary",
      "file_path": "src/error_recovery.ml",
      "start_line": 57,
      "end_line": 68,
      "length": 12,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "levenshtein_distance",
      "file_path": "src/error_recovery.ml",
      "start_line": 84,
      "end_line": 109,
      "length": 26,
      "cyclomatic_complexity": 6,
      "cognitive_complexity": 5,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 0,
      "nesting_depth": 8
    },
    {
      "name": "find_closest_var",
      "file_path": "src/error_recovery.ml",
      "start_line": 114,
      "end_line": 122,
      "length": 9,
      "cyclomatic_complexity": 5,
      "cognitive_complexity": 6,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 1,
      "nesting_depth": 4
    },
    {
      "name": "log_recovery",
      "file_path": "src/error_recovery.ml",
      "start_line": 124,
      "end_line": 133,
      "length": 10,
      "cyclomatic_complexity": 8,
      "cognitive_complexity": 13,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 1,
      "nesting_depth": 2
    },
    {
      "name": "log_recovery_type",
      "file_path": "src/error_recovery.ml",
      "start_line": 135,
      "end_line": 148,
      "length": 14,
      "cyclomatic_complexity": 9,
      "cognitive_complexity": 15,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 1,
      "nesting_depth": 2
    },
    {
      "name": "show_recovery_statistics",
      "file_path": "src/error_recovery.ml",
      "start_line": 150,
      "end_line": 165,
      "length": 16,
      "cyclomatic_complexity": 2,
      "cognitive_complexity": 2,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 1
    },
    {
      "name": "reset_recovery_statistics",
      "file_path": "src/error_recovery.ml",
      "start_line": 167,
      "end_line": 174,
      "length": 8,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "raise_parse_error",
      "file_path": "src/parser_expressions_special.ml",
      "start_line": 25,
      "end_line": 32,
      "length": 8,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 4,
      "match_expressions_count": 0,
      "nesting_depth": 1
    },
    {
      "name": "parse_poetry_expr",
      "file_path": "src/parser_expressions_special.ml",
      "start_line": 37,
      "end_line": 47,
      "length": 11,
      "cyclomatic_complexity": 6,
      "cognitive_complexity": 3,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 1,
      "nesting_depth": 2
    },
    {
      "name": "parse_ancient_expr",
      "file_path": "src/parser_expressions_special.ml",
      "start_line": 49,
      "end_line": 61,
      "length": 13,
      "cyclomatic_complexity": 6,
      "cognitive_complexity": 5,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 1,
      "nesting_depth": 2
    },
    {
      "name": "parse_special_keyword_expressions",
      "file_path": "src/parser_expressions_special.ml",
      "start_line": 63,
      "end_line": 85,
      "length": 23,
      "cyclomatic_complexity": 12,
      "cognitive_complexity": 7,
      "is_recursive": false,
      "parameters_count": 4,
      "match_expressions_count": 1,
      "nesting_depth": 2
    },
    {
      "name": "handle_unsupported_syntax",
      "file_path": "src/parser_expressions_special.ml",
      "start_line": 87,
      "end_line": 105,
      "length": 19,
      "cyclomatic_complexity": 6,
      "cognitive_complexity": 2,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 1,
      "nesting_depth": 1
    },
    {
      "name": "create_eval_position",
      "file_path": "src/unified_error_utils.ml",
      "start_line": 11,
      "end_line": 13,
      "length": 3,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 3,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "safe_execute",
      "file_path": "src/unified_error_utils.ml",
      "start_line": 15,
      "end_line": 27,
      "length": 13,
      "cyclomatic_complexity": 12,
      "cognitive_complexity": 19,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 1,
      "nesting_depth": 2
    },
    {
      "name": "log_error",
      "file_path": "src/unified_error_utils.ml",
      "start_line": 43,
      "end_line": 49,
      "length": 7,
      "cyclomatic_complexity": 2,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 2
    },
    {
      "name": "unterminated_quoted_identifier_error",
      "file_path": "src/unified_error_utils.ml",
      "start_line": 69,
      "end_line": 71,
      "length": 3,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "create_semantic_context",
      "file_path": "src/semantic.ml",
      "start_line": 32,
      "end_line": 35,
      "length": 4,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 1
    },
    {
      "name": "analyze_program",
      "file_path": "src/semantic.ml",
      "start_line": 37,
      "end_line": 53,
      "length": 17,
      "cyclomatic_complexity": 8,
      "cognitive_complexity": 12,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 1,
      "nesting_depth": 5
    },
    {
      "name": "get_expression_type",
      "file_path": "src/semantic.ml",
      "start_line": 58,
      "end_line": 60,
      "length": 3,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 0,
      "nesting_depth": 1
    },
    {
      "name": "print_function",
      "file_path": "src/builtin_io.ml",
      "start_line": 7,
      "end_line": 16,
      "length": 10,
      "cyclomatic_complexity": 5,
      "cognitive_complexity": 4,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 1,
      "nesting_depth": 1
    },
    {
      "name": "read_function",
      "file_path": "src/builtin_io.ml",
      "start_line": 18,
      "end_line": 22,
      "length": 5,
      "cyclomatic_complexity": 5,
      "cognitive_complexity": 3,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 1,
      "nesting_depth": 1
    },
    {
      "name": "read_file_function",
      "file_path": "src/builtin_io.ml",
      "start_line": 24,
      "end_line": 30,
      "length": 7,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 2
    },
    {
      "name": "write_file_function",
      "file_path": "src/builtin_io.ml",
      "start_line": 32,
      "end_line": 42,
      "length": 11,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 3
    },
    {
      "name": "file_exists_function",
      "file_path": "src/builtin_io.ml",
      "start_line": 44,
      "end_line": 47,
      "length": 4,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 1
    },
    {
      "name": "list_directory_function",
      "file_path": "src/builtin_io.ml",
      "start_line": 49,
      "end_line": 54,
      "length": 6,
      "cyclomatic_complexity": 2,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 2
    },
    {
      "name": "io_functions",
      "file_path": "src/builtin_io.ml",
      "start_line": 56,
      "end_line": 64,
      "length": 9,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "variant_to_token",
      "file_path": "src/keyword_converter_main.ml",
      "start_line": 87,
      "end_line": 100,
      "length": 14,
      "cyclomatic_complexity": 12,
      "cognitive_complexity": 3,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 1,
      "nesting_depth": 2
    },
    {
      "name": "read_file_content",
      "file_path": "src/data_loader_file.ml",
      "start_line": 9,
      "end_line": 18,
      "length": 10,
      "cyclomatic_complexity": 5,
      "cognitive_complexity": 2,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 3
    },
    {
      "name": "get_data_path",
      "file_path": "src/data_loader_file.ml",
      "start_line": 20,
      "end_line": 24,
      "length": 5,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 1
    },
    {
      "name": "file_exists",
      "file_path": "src/data_loader_file.ml",
      "start_line": 26,
      "end_line": 31,
      "length": 6,
      "cyclomatic_complexity": 3,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 1
    },
    {
      "name": "get_file_mtime",
      "file_path": "src/data_loader_file.ml",
      "start_line": 33,
      "end_line": 37,
      "length": 5,
      "cyclomatic_complexity": 3,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 2
    },
    {
      "name": "set_compiler_config",
      "file_path": "src/config.ml",
      "start_line": 23,
      "end_line": 25,
      "length": 3,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "set_runtime_config",
      "file_path": "src/config.ml",
      "start_line": 27,
      "end_line": 30,
      "length": 4,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "parse_positive_int_env_var",
      "file_path": "src/config.ml",
      "start_line": 34,
      "end_line": 38,
      "length": 5,
      "cyclomatic_complexity": 4,
      "cognitive_complexity": 2,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 3
    },
    {
      "name": "parse_positive_float_env_var",
      "file_path": "src/config.ml",
      "start_line": 40,
      "end_line": 44,
      "length": 5,
      "cyclomatic_complexity": 4,
      "cognitive_complexity": 2,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 3
    },
    {
      "name": "parse_int_range_env_var",
      "file_path": "src/config.ml",
      "start_line": 48,
      "end_line": 52,
      "length": 5,
      "cyclomatic_complexity": 4,
      "cognitive_complexity": 3,
      "is_recursive": false,
      "parameters_count": 3,
      "match_expressions_count": 0,
      "nesting_depth": 3
    },
    {
      "name": "parse_enum_env_var",
      "file_path": "src/config.ml",
      "start_line": 54,
      "end_line": 63,
      "length": 10,
      "cyclomatic_complexity": 2,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 0,
      "nesting_depth": 2
    },
    {
      "name": "env_var_mappings",
      "file_path": "src/config.ml",
      "start_line": 65,
      "end_line": 68,
      "length": 4,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "load_from_env",
      "file_path": "src/config.ml",
      "start_line": 70,
      "end_line": 76,
      "length": 7,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "print_config",
      "file_path": "src/config.ml",
      "start_line": 84,
      "end_line": 99,
      "length": 16,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 2
    },
    {
      "name": "generate_intelligent_error_report",
      "file_path": "src/error_messages_reporting.ml",
      "start_line": 7,
      "end_line": 30,
      "length": 24,
      "cyclomatic_complexity": 5,
      "cognitive_complexity": 5,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 1,
      "nesting_depth": 3
    },
    {
      "name": "generate_error_suggestions",
      "file_path": "src/error_messages_reporting.ml",
      "start_line": 32,
      "end_line": 38,
      "length": 7,
      "cyclomatic_complexity": 7,
      "cognitive_complexity": 6,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 1,
      "nesting_depth": 1
    },
    {
      "name": "show_token",
      "file_path": "src/lexer.ml",
      "start_line": 15,
      "end_line": 18,
      "length": 4,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 1
    },
    {
      "name": "check_ascii_forbidden",
      "file_path": "src/lexer.ml",
      "start_line": 34,
      "end_line": 43,
      "length": 10,
      "cyclomatic_complexity": 35,
      "cognitive_complexity": 5,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 1,
      "nesting_depth": 1
    },
    {
      "name": "tokenize_single_byte_char",
      "file_path": "src/lexer.ml",
      "start_line": 45,
      "end_line": 50,
      "length": 6,
      "cyclomatic_complexity": 2,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 3,
      "match_expressions_count": 0,
      "nesting_depth": 2
    },
    {
      "name": "tokenize_string_literal",
      "file_path": "src/lexer.ml",
      "start_line": 52,
      "end_line": 58,
      "length": 7,
      "cyclomatic_complexity": 2,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 0,
      "nesting_depth": 1
    },
    {
      "name": "tokenize_quoted_identifier",
      "file_path": "src/lexer.ml",
      "start_line": 60,
      "end_line": 66,
      "length": 7,
      "cyclomatic_complexity": 2,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 0,
      "nesting_depth": 1
    },
    {
      "name": "tokenize_fullwidth_number",
      "file_path": "src/lexer.ml",
      "start_line": 68,
      "end_line": 72,
      "length": 5,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 0,
      "nesting_depth": 2
    },
    {
      "name": "tokenize_multibyte_char",
      "file_path": "src/lexer.ml",
      "start_line": 74,
      "end_line": 81,
      "length": 8,
      "cyclomatic_complexity": 5,
      "cognitive_complexity": 6,
      "is_recursive": false,
      "parameters_count": 3,
      "match_expressions_count": 0,
      "nesting_depth": 2
    },
    {
      "name": "tokenize_utf8_char",
      "file_path": "src/lexer.ml",
      "start_line": 87,
      "end_line": 138,
      "length": 52,
      "cyclomatic_complexity": 25,
      "cognitive_complexity": 169,
      "is_recursive": false,
      "parameters_count": 3,
      "match_expressions_count": 4,
      "nesting_depth": 14
    },
    {
      "name": "format_binary_op",
      "file_path": "src/string_formatter.ml",
      "start_line": 18,
      "end_line": 20,
      "length": 3,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 3,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "format_string_literal",
      "file_path": "src/string_formatter.ml",
      "start_line": 28,
      "end_line": 31,
      "length": 4,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "format_int_literal",
      "file_path": "src/string_formatter.ml",
      "start_line": 33,
      "end_line": 35,
      "length": 3,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "format_float_literal",
      "file_path": "src/string_formatter.ml",
      "start_line": 37,
      "end_line": 39,
      "length": 3,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "format_bool_literal",
      "file_path": "src/string_formatter.ml",
      "start_line": 41,
      "end_line": 44,
      "length": 4,
      "cyclomatic_complexity": 2,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 1
    },
    {
      "name": "format_equality_check",
      "file_path": "src/string_formatter.ml",
      "start_line": 49,
      "end_line": 51,
      "length": 3,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "format_let_expr",
      "file_path": "src/string_formatter.ml",
      "start_line": 53,
      "end_line": 56,
      "length": 4,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 3,
      "match_expressions_count": 0,
      "nesting_depth": 1
    },
    {
      "name": "format_function_def",
      "file_path": "src/string_formatter.ml",
      "start_line": 58,
      "end_line": 62,
      "length": 5,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 0,
      "nesting_depth": 2
    },
    {
      "name": "format_pattern_match",
      "file_path": "src/string_formatter.ml",
      "start_line": 64,
      "end_line": 66,
      "length": 3,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "format_var_expr",
      "file_path": "src/string_formatter.ml",
      "start_line": 68,
      "end_line": 72,
      "length": 5,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "format_param_count_mismatch",
      "file_path": "src/string_formatter.ml",
      "start_line": 76,
      "end_line": 85,
      "length": 10,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "format_missing_params_filled",
      "file_path": "src/string_formatter.ml",
      "start_line": 87,
      "end_line": 98,
      "length": 12,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 3,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "format_extra_params_ignored",
      "file_path": "src/string_formatter.ml",
      "start_line": 100,
      "end_line": 111,
      "length": 12,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 3,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "format_syntax_error",
      "file_path": "src/string_formatter.ml",
      "start_line": 116,
      "end_line": 118,
      "length": 3,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "format_type_error",
      "file_path": "src/string_formatter.ml",
      "start_line": 120,
      "end_line": 123,
      "length": 4,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "format_debug_message",
      "file_path": "src/string_formatter.ml",
      "start_line": 127,
      "end_line": 129,
      "length": 3,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "format_info_message",
      "file_path": "src/string_formatter.ml",
      "start_line": 131,
      "end_line": 133,
      "length": 3,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "format_warning_message",
      "file_path": "src/string_formatter.ml",
      "start_line": 135,
      "end_line": 137,
      "length": 3,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "format_error_message",
      "file_path": "src/string_formatter.ml",
      "start_line": 139,
      "end_line": 142,
      "length": 4,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "format_type_signature",
      "file_path": "src/string_formatter.ml",
      "start_line": 152,
      "end_line": 155,
      "length": 4,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 0,
      "nesting_depth": 1
    },
    {
      "name": "handle_error_recovery",
      "file_path": "src/semantic_errors.ml",
      "start_line": 39,
      "end_line": 51,
      "length": 13,
      "cyclomatic_complexity": 6,
      "cognitive_complexity": 5,
      "is_recursive": false,
      "parameters_count": 3,
      "match_expressions_count": 1,
      "nesting_depth": 1
    },
    {
      "name": "evaluation_report",
      "file_path": "src/formatter_poetry.ml",
      "start_line": 16,
      "end_line": 18,
      "length": 3,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 3,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "tone_error",
      "file_path": "src/formatter_poetry.ml",
      "start_line": 23,
      "end_line": 25,
      "length": 3,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 3,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "verse_analysis",
      "file_path": "src/formatter_poetry.ml",
      "start_line": 27,
      "end_line": 30,
      "length": 4,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 4,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "poetry_structure_analysis",
      "file_path": "src/formatter_poetry.ml",
      "start_line": 32,
      "end_line": 39,
      "length": 8,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 3,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "format_category_count",
      "file_path": "src/formatter_poetry.ml",
      "start_line": 44,
      "end_line": 46,
      "length": 3,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "format_rhyme_group_count",
      "file_path": "src/formatter_poetry.ml",
      "start_line": 48,
      "end_line": 50,
      "length": 3,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "format_character_lookup_error",
      "file_path": "src/formatter_poetry.ml",
      "start_line": 52,
      "end_line": 54,
      "length": 3,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "format_rhyme_data_stats",
      "file_path": "src/formatter_poetry.ml",
      "start_line": 56,
      "end_line": 59,
      "length": 4,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "format_evaluation_detailed_report",
      "file_path": "src/formatter_poetry.ml",
      "start_line": 61,
      "end_line": 66,
      "length": 6,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 4,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "format_dimension_score",
      "file_path": "src/formatter_poetry.ml",
      "start_line": 68,
      "end_line": 70,
      "length": 3,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "format_rhyme_validation_error",
      "file_path": "src/formatter_poetry.ml",
      "start_line": 72,
      "end_line": 74,
      "length": 3,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "format_cache_duplicate_error",
      "file_path": "src/formatter_poetry.ml",
      "start_line": 76,
      "end_line": 78,
      "length": 3,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "format_hui_rhyme_stats",
      "file_path": "src/formatter_poetry.ml",
      "start_line": 89,
      "end_line": 101,
      "length": 13,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 4,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "format_data_integrity_success",
      "file_path": "src/formatter_poetry.ml",
      "start_line": 103,
      "end_line": 104,
      "length": 2,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "format_data_integrity_failure",
      "file_path": "src/formatter_poetry.ml",
      "start_line": 106,
      "end_line": 108,
      "length": 3,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "format_regulated_verse",
      "file_path": "src/formatter_poetry.ml",
      "start_line": 116,
      "end_line": 122,
      "length": 7,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 3,
      "match_expressions_count": 0,
      "nesting_depth": 1
    },
    {
      "name": "format_quatrain",
      "file_path": "src/formatter_poetry.ml",
      "start_line": 124,
      "end_line": 130,
      "length": 7,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 3,
      "match_expressions_count": 0,
      "nesting_depth": 2
    },
    {
      "name": "format_ci_poem",
      "file_path": "src/formatter_poetry.ml",
      "start_line": 132,
      "end_line": 143,
      "length": 12,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 4,
      "match_expressions_count": 0,
      "nesting_depth": 3
    },
    {
      "name": "format_prosody_analysis",
      "file_path": "src/formatter_poetry.ml",
      "start_line": 145,
      "end_line": 152,
      "length": 8,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 3,
      "match_expressions_count": 0,
      "nesting_depth": 2
    },
    {
      "name": "format_parallelism_analysis",
      "file_path": "src/formatter_poetry.ml",
      "start_line": 154,
      "end_line": 165,
      "length": 12,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 1
    },
    {
      "name": "format_classical_chinese",
      "file_path": "src/formatter_poetry.ml",
      "start_line": 169,
      "end_line": 179,
      "length": 11,
      "cyclomatic_complexity": 2,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 3,
      "match_expressions_count": 0,
      "nesting_depth": 4
    },
    {
      "name": "format_ancient_verse",
      "file_path": "src/formatter_poetry.ml",
      "start_line": 181,
      "end_line": 192,
      "length": 12,
      "cyclomatic_complexity": 2,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 3,
      "match_expressions_count": 0,
      "nesting_depth": 1
    },
    {
      "name": "format_parallel_prose",
      "file_path": "src/formatter_poetry.ml",
      "start_line": 194,
      "end_line": 202,
      "length": 9,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 0,
      "nesting_depth": 1
    },
    {
      "name": "format_fu_poem",
      "file_path": "src/formatter_poetry.ml",
      "start_line": 204,
      "end_line": 213,
      "length": 10,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 3,
      "match_expressions_count": 0,
      "nesting_depth": 1
    },
    {
      "name": "format_character_frequency",
      "file_path": "src/formatter_poetry.ml",
      "start_line": 217,
      "end_line": 226,
      "length": 10,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 2
    },
    {
      "name": "format_rhyme_pattern_analysis",
      "file_path": "src/formatter_poetry.ml",
      "start_line": 228,
      "end_line": 234,
      "length": 7,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 1
    },
    {
      "name": "format_prosody_check_report",
      "file_path": "src/formatter_poetry.ml",
      "start_line": 236,
      "end_line": 258,
      "length": 23,
      "cyclomatic_complexity": 3,
      "cognitive_complexity": 2,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 0,
      "nesting_depth": 2
    },
    {
      "name": "format_style_analysis_report",
      "file_path": "src/formatter_poetry.ml",
      "start_line": 260,
      "end_line": 278,
      "length": 19,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 3,
      "match_expressions_count": 0,
      "nesting_depth": 2
    },
    {
      "name": "format_thematic_vocabulary_analysis",
      "file_path": "src/formatter_poetry.ml",
      "start_line": 280,
      "end_line": 290,
      "length": 11,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 2
    },
    {
      "name": "gen_tuple_expr",
      "file_path": "src/c_codegen_structured.ml",
      "start_line": 12,
      "end_line": 17,
      "length": 6,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 3,
      "match_expressions_count": 0,
      "nesting_depth": 2
    },
    {
      "name": "gen_record_expr",
      "file_path": "src/c_codegen_structured.ml",
      "start_line": 19,
      "end_line": 26,
      "length": 8,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 3,
      "match_expressions_count": 0,
      "nesting_depth": 1
    },
    {
      "name": "gen_record_access_expr",
      "file_path": "src/c_codegen_structured.ml",
      "start_line": 28,
      "end_line": 32,
      "length": 5,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 4,
      "match_expressions_count": 0,
      "nesting_depth": 2
    },
    {
      "name": "gen_structured_data",
      "file_path": "src/c_codegen_structured.ml",
      "start_line": 34,
      "end_line": 56,
      "length": 23,
      "cyclomatic_complexity": 11,
      "cognitive_complexity": 8,
      "is_recursive": false,
      "parameters_count": 3,
      "match_expressions_count": 2,
      "nesting_depth": 5
    },
    {
      "name": "lexer_pos_to_compiler_pos",
      "file_path": "src/parser.ml",
      "start_line": 10,
      "end_line": 11,
      "length": 2,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 5,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "skip_newlines",
      "file_path": "src/parser.ml",
      "start_line": 38,
      "end_line": 41,
      "length": 4,
      "cyclomatic_complexity": 2,
      "cognitive_complexity": 1,
      "is_recursive": true,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 2
    },
    {
      "name": "_skip_optional_statement_terminator",
      "file_path": "src/parser.ml",
      "start_line": 43,
      "end_line": 46,
      "length": 4,
      "cyclomatic_complexity": 4,
      "cognitive_complexity": 3,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 2
    },
    {
      "name": "_parse_macro_params",
      "file_path": "src/parser.ml",
      "start_line": 48,
      "end_line": 97,
      "length": 50,
      "cyclomatic_complexity": 19,
      "cognitive_complexity": 76,
      "is_recursive": true,
      "parameters_count": 2,
      "match_expressions_count": 4,
      "nesting_depth": 25
    },
    {
      "name": "_parse_natural_function_definition",
      "file_path": "src/parser.ml",
      "start_line": 99,
      "end_line": 102,
      "length": 4,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "analyze_expression",
      "file_path": "src/semantic_expressions.ml",
      "start_line": 13,
      "end_line": 182,
      "length": 170,
      "cyclomatic_complexity": 89,
      "cognitive_complexity": 333,
      "is_recursive": true,
      "parameters_count": 2,
      "match_expressions_count": 13,
      "nesting_depth": 30
    },
    {
      "name": "luoyan_call",
      "file_path": "src/formatter_codegen.ml",
      "start_line": 22,
      "end_line": 23,
      "length": 2,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 3,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "luoyan_bind_var",
      "file_path": "src/formatter_codegen.ml",
      "start_line": 25,
      "end_line": 26,
      "length": 2,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "luoyan_let",
      "file_path": "src/formatter_codegen.ml",
      "start_line": 35,
      "end_line": 36,
      "length": 2,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 3,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "luoyan_function_create",
      "file_path": "src/formatter_codegen.ml",
      "start_line": 38,
      "end_line": 40,
      "length": 3,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "luoyan_var_expr",
      "file_path": "src/formatter_codegen.ml",
      "start_line": 44,
      "end_line": 47,
      "length": 4,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "luoyan_function_create_with_args",
      "file_path": "src/formatter_codegen.ml",
      "start_line": 51,
      "end_line": 54,
      "length": 4,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "luoyan_string_equality_check",
      "file_path": "src/formatter_codegen.ml",
      "start_line": 56,
      "end_line": 58,
      "length": 3,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "luoyan_try_catch",
      "file_path": "src/formatter_codegen.ml",
      "start_line": 67,
      "end_line": 68,
      "length": 2,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 3,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "luoyan_combine",
      "file_path": "src/formatter_codegen.ml",
      "start_line": 73,
      "end_line": 75,
      "length": 3,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "luoyan_match_constructor",
      "file_path": "src/formatter_codegen.ml",
      "start_line": 77,
      "end_line": 79,
      "length": 3,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "luoyan_include_module",
      "file_path": "src/formatter_codegen.ml",
      "start_line": 81,
      "end_line": 83,
      "length": 3,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "c_template_with_includes",
      "file_path": "src/formatter_codegen.ml",
      "start_line": 91,
      "end_line": 93,
      "length": 3,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 3,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "c_variable_declaration",
      "file_path": "src/formatter_codegen.ml",
      "start_line": 95,
      "end_line": 96,
      "length": 2,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 3,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "c_const_declaration",
      "file_path": "src/formatter_codegen.ml",
      "start_line": 98,
      "end_line": 100,
      "length": 3,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 3,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "c_if_statement",
      "file_path": "src/formatter_codegen.ml",
      "start_line": 102,
      "end_line": 103,
      "length": 2,
      "cyclomatic_complexity": 2,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 0,
      "nesting_depth": 1
    },
    {
      "name": "c_if_else_statement",
      "file_path": "src/formatter_codegen.ml",
      "start_line": 105,
      "end_line": 106,
      "length": 2,
      "cyclomatic_complexity": 2,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 3,
      "match_expressions_count": 0,
      "nesting_depth": 1
    },
    {
      "name": "c_for_loop",
      "file_path": "src/formatter_codegen.ml",
      "start_line": 110,
      "end_line": 112,
      "length": 3,
      "cyclomatic_complexity": 2,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 4,
      "match_expressions_count": 0,
      "nesting_depth": 1
    },
    {
      "name": "c_function_declaration",
      "file_path": "src/formatter_codegen.ml",
      "start_line": 114,
      "end_line": 115,
      "length": 2,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 3,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "c_function_definition",
      "file_path": "src/formatter_codegen.ml",
      "start_line": 117,
      "end_line": 120,
      "length": 4,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 4,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "c_struct_definition",
      "file_path": "src/formatter_codegen.ml",
      "start_line": 122,
      "end_line": 130,
      "length": 9,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "c_enum_definition",
      "file_path": "src/formatter_codegen.ml",
      "start_line": 132,
      "end_line": 136,
      "length": 5,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "constructor_match",
      "file_path": "src/formatter_codegen.ml",
      "start_line": 143,
      "end_line": 146,
      "length": 4,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "string_equality_escaped",
      "file_path": "src/formatter_codegen.ml",
      "start_line": 148,
      "end_line": 150,
      "length": 3,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "luoyan_call_with_cast",
      "file_path": "src/formatter_codegen.ml",
      "start_line": 152,
      "end_line": 154,
      "length": 3,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 3,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "luoyan_conditional_binding",
      "file_path": "src/formatter_codegen.ml",
      "start_line": 156,
      "end_line": 159,
      "length": 4,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 4,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "luoyan_dynamic_call",
      "file_path": "src/formatter_codegen.ml",
      "start_line": 161,
      "end_line": 162,
      "length": 2,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "luoyan_partial_application",
      "file_path": "src/formatter_codegen.ml",
      "start_line": 164,
      "end_line": 166,
      "length": 3,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "luoyan_array_get",
      "file_path": "src/formatter_codegen.ml",
      "start_line": 176,
      "end_line": 177,
      "length": 2,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "luoyan_array_set",
      "file_path": "src/formatter_codegen.ml",
      "start_line": 179,
      "end_line": 180,
      "length": 2,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 3,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "luoyan_record_create",
      "file_path": "src/formatter_codegen.ml",
      "start_line": 182,
      "end_line": 183,
      "length": 2,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "luoyan_record_get",
      "file_path": "src/formatter_codegen.ml",
      "start_line": 185,
      "end_line": 186,
      "length": 2,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "luoyan_record_set",
      "file_path": "src/formatter_codegen.ml",
      "start_line": 188,
      "end_line": 190,
      "length": 3,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 3,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "luoyan_type_check",
      "file_path": "src/formatter_codegen.ml",
      "start_line": 192,
      "end_line": 193,
      "length": 2,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "luoyan_is_type",
      "file_path": "src/formatter_codegen.ml",
      "start_line": 195,
      "end_line": 197,
      "length": 3,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "luoyan_error_throw",
      "file_path": "src/formatter_codegen.ml",
      "start_line": 199,
      "end_line": 200,
      "length": 2,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "luoyan_debug_trace",
      "file_path": "src/formatter_codegen.ml",
      "start_line": 206,
      "end_line": 207,
      "length": 2,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "luoyan_profile_start",
      "file_path": "src/formatter_codegen.ml",
      "start_line": 209,
      "end_line": 210,
      "length": 2,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "c_indent_block",
      "file_path": "src/formatter_codegen.ml",
      "start_line": 224,
      "end_line": 232,
      "length": 9,
      "cyclomatic_complexity": 2,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 0,
      "nesting_depth": 3
    },
    {
      "name": "c_format_parameter_list",
      "file_path": "src/formatter_codegen.ml",
      "start_line": 234,
      "end_line": 236,
      "length": 3,
      "cyclomatic_complexity": 3,
      "cognitive_complexity": 2,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 1,
      "nesting_depth": 1
    },
    {
      "name": "c_scope_block",
      "file_path": "src/formatter_codegen.ml",
      "start_line": 247,
      "end_line": 248,
      "length": 2,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "c_namespace_block",
      "file_path": "src/formatter_codegen.ml",
      "start_line": 250,
      "end_line": 252,
      "length": 3,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "type_mismatch_error",
      "file_path": "src/error_messages_generation.ml",
      "start_line": 9,
      "end_line": 13,
      "length": 5,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "undefined_variable_error",
      "file_path": "src/error_messages_generation.ml",
      "start_line": 15,
      "end_line": 27,
      "length": 13,
      "cyclomatic_complexity": 8,
      "cognitive_complexity": 10,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 2,
      "nesting_depth": 3
    },
    {
      "name": "function_arity_error",
      "file_path": "src/error_messages_generation.ml",
      "start_line": 29,
      "end_line": 31,
      "length": 3,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "pattern_match_error",
      "file_path": "src/error_messages_generation.ml",
      "start_line": 33,
      "end_line": 34,
      "length": 2,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "convert_modern_token",
      "file_path": "src/conversion_modern.ml",
      "start_line": 214,
      "end_line": 270,
      "length": 57,
      "cyclomatic_complexity": 30,
      "cognitive_complexity": 55,
      "is_recursive": true,
      "parameters_count": 1,
      "match_expressions_count": 5,
      "nesting_depth": 3
    },
    {
      "name": "get_modern_token_category",
      "file_path": "src/conversion_modern.ml",
      "start_line": 272,
      "end_line": 281,
      "length": 10,
      "cyclomatic_complexity": 8,
      "cognitive_complexity": 28,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 7
    },
    {
      "name": "convert_identifier_token",
      "file_path": "src/conversion_modern.ml",
      "start_line": 285,
      "end_line": 304,
      "length": 20,
      "cyclomatic_complexity": 13,
      "cognitive_complexity": 30,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 4,
      "nesting_depth": 4
    },
    {
      "name": "convert_modern_token_exn",
      "file_path": "src/conversion_modern.ml",
      "start_line": 306,
      "end_line": 311,
      "length": 6,
      "cyclomatic_complexity": 4,
      "cognitive_complexity": 3,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 1,
      "nesting_depth": 1
    },
    {
      "name": "get_modern_stats",
      "file_path": "src/conversion_modern.ml",
      "start_line": 314,
      "end_line": 341,
      "length": 28,
      "cyclomatic_complexity": 3,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 1
    },
    {
      "name": "gen_literal_and_vars",
      "file_path": "src/c_codegen_literals.ml",
      "start_line": 9,
      "end_line": 35,
      "length": 27,
      "cyclomatic_complexity": 16,
      "cognitive_complexity": 15,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 1,
      "nesting_depth": 3
    },
    {
      "name": "string_contains_function",
      "file_path": "src/builtin_string.ml",
      "start_line": 10,
      "end_line": 13,
      "length": 4,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "string_split_function",
      "file_path": "src/builtin_string.ml",
      "start_line": 15,
      "end_line": 18,
      "length": 4,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "string_match_function",
      "file_path": "src/builtin_string.ml",
      "start_line": 20,
      "end_line": 24,
      "length": 5,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 1
    },
    {
      "name": "string_length_function",
      "file_path": "src/builtin_string.ml",
      "start_line": 26,
      "end_line": 29,
      "length": 4,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 1
    },
    {
      "name": "string_reverse_function",
      "file_path": "src/builtin_string.ml",
      "start_line": 31,
      "end_line": 34,
      "length": 4,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 1
    },
    {
      "name": "string_functions",
      "file_path": "src/builtin_string.ml",
      "start_line": 36,
      "end_line": 44,
      "length": 9,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "empty_context",
      "file_path": "src/refactoring_analyzer_types.ml",
      "start_line": 37,
      "end_line": 45,
      "length": 9,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "format_suggestion",
      "file_path": "src/refactoring_analyzer_types.ml",
      "start_line": 54,
      "end_line": 75,
      "length": 22,
      "cyclomatic_complexity": 10,
      "cognitive_complexity": 9,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 3,
      "nesting_depth": 1
    },
    {
      "name": "generate_refactoring_report",
      "file_path": "src/refactoring_analyzer_types.ml",
      "start_line": 77,
      "end_line": 118,
      "length": 42,
      "cyclomatic_complexity": 6,
      "cognitive_complexity": 11,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 7
    },
    {
      "name": "convert_classical_token",
      "file_path": "src/lexer_token_conversion_classical.ml",
      "start_line": 103,
      "end_line": 111,
      "length": 9,
      "cyclomatic_complexity": 7,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 1
    },
    {
      "name": "debug",
      "file_path": "src/formatter_logging.ml",
      "start_line": 15,
      "end_line": 16,
      "length": 2,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "info",
      "file_path": "src/formatter_logging.ml",
      "start_line": 18,
      "end_line": 19,
      "length": 2,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "warning",
      "file_path": "src/formatter_logging.ml",
      "start_line": 21,
      "end_line": 22,
      "length": 2,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "error",
      "file_path": "src/formatter_logging.ml",
      "start_line": 24,
      "end_line": 25,
      "length": 2,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "trace",
      "file_path": "src/formatter_logging.ml",
      "start_line": 27,
      "end_line": 29,
      "length": 3,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "verbose",
      "file_path": "src/formatter_logging.ml",
      "start_line": 31,
      "end_line": 32,
      "length": 2,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "fatal",
      "file_path": "src/formatter_logging.ml",
      "start_line": 34,
      "end_line": 35,
      "length": 2,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "perf",
      "file_path": "src/formatter_logging.ml",
      "start_line": 37,
      "end_line": 40,
      "length": 4,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 3,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "structured_log",
      "file_path": "src/formatter_logging.ml",
      "start_line": 42,
      "end_line": 54,
      "length": 13,
      "cyclomatic_complexity": 2,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 4,
      "match_expressions_count": 0,
      "nesting_depth": 1
    },
    {
      "name": "unsupported_chinese_symbol",
      "file_path": "src/formatter_logging.ml",
      "start_line": 62,
      "end_line": 64,
      "length": 3,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "compilation_phase",
      "file_path": "src/formatter_logging.ml",
      "start_line": 74,
      "end_line": 75,
      "length": 2,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "compilation_progress",
      "file_path": "src/formatter_logging.ml",
      "start_line": 77,
      "end_line": 80,
      "length": 4,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 3,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "compilation_complete_stats",
      "file_path": "src/formatter_logging.ml",
      "start_line": 86,
      "end_line": 89,
      "length": 4,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "operation_complete",
      "file_path": "src/formatter_logging.ml",
      "start_line": 93,
      "end_line": 94,
      "length": 2,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "operation_failed",
      "file_path": "src/formatter_logging.ml",
      "start_line": 96,
      "end_line": 98,
      "length": 3,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 3,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "format_timestamp",
      "file_path": "src/formatter_logging.ml",
      "start_line": 100,
      "end_line": 120,
      "length": 21,
      "cyclomatic_complexity": 2,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 6,
      "match_expressions_count": 0,
      "nesting_depth": 4
    },
    {
      "name": "format_unix_time",
      "file_path": "src/formatter_logging.ml",
      "start_line": 122,
      "end_line": 125,
      "length": 4,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "format_log_entry",
      "file_path": "src/formatter_logging.ml",
      "start_line": 127,
      "end_line": 130,
      "length": 4,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 6,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "format_simple_log_entry",
      "file_path": "src/formatter_logging.ml",
      "start_line": 132,
      "end_line": 135,
      "length": 4,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 5,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "debug_enhanced",
      "file_path": "src/formatter_logging.ml",
      "start_line": 137,
      "end_line": 138,
      "length": 2,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 3,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "info_enhanced",
      "file_path": "src/formatter_logging.ml",
      "start_line": 140,
      "end_line": 141,
      "length": 2,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 3,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "warning_enhanced",
      "file_path": "src/formatter_logging.ml",
      "start_line": 143,
      "end_line": 144,
      "length": 2,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 3,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "error_enhanced",
      "file_path": "src/formatter_logging.ml",
      "start_line": 146,
      "end_line": 148,
      "length": 3,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 3,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "performance_end",
      "file_path": "src/formatter_logging.ml",
      "start_line": 152,
      "end_line": 153,
      "length": 2,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "memory_usage",
      "file_path": "src/formatter_logging.ml",
      "start_line": 155,
      "end_line": 166,
      "length": 12,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 3,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "dev_checkpoint",
      "file_path": "src/formatter_logging.ml",
      "start_line": 168,
      "end_line": 169,
      "length": 2,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "dev_assertion",
      "file_path": "src/formatter_logging.ml",
      "start_line": 171,
      "end_line": 173,
      "length": 3,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "system_resource",
      "file_path": "src/formatter_logging.ml",
      "start_line": 175,
      "end_line": 176,
      "length": 2,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 3,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "system_event",
      "file_path": "src/formatter_logging.ml",
      "start_line": 178,
      "end_line": 180,
      "length": 3,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "test_suite_summary",
      "file_path": "src/formatter_logging.ml",
      "start_line": 187,
      "end_line": 198,
      "length": 12,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 3,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "format_timestamp",
      "file_path": "src/formatter_logging.ml",
      "start_line": 202,
      "end_line": 222,
      "length": 21,
      "cyclomatic_complexity": 6,
      "cognitive_complexity": 15,
      "is_recursive": false,
      "parameters_count": 6,
      "match_expressions_count": 0,
      "nesting_depth": 5
    },
    {
      "name": "format_legacy_log",
      "file_path": "src/formatter_logging.ml",
      "start_line": 235,
      "end_line": 237,
      "length": 3,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "format_core_log_message",
      "file_path": "src/formatter_logging.ml",
      "start_line": 239,
      "end_line": 241,
      "length": 3,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "format_context_group",
      "file_path": "src/formatter_logging.ml",
      "start_line": 246,
      "end_line": 248,
      "length": 3,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "format_migration_progress",
      "file_path": "src/formatter_logging.ml",
      "start_line": 250,
      "end_line": 263,
      "length": 14,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 3,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "format_migration_suggestions",
      "file_path": "src/formatter_logging.ml",
      "start_line": 265,
      "end_line": 275,
      "length": 11,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 3,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "format_multiline_log",
      "file_path": "src/formatter_logging.ml",
      "start_line": 277,
      "end_line": 281,
      "length": 5,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 3,
      "match_expressions_count": 0,
      "nesting_depth": 2
    },
    {
      "name": "log_section_header",
      "file_path": "src/formatter_logging.ml",
      "start_line": 285,
      "end_line": 288,
      "length": 4,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 1
    },
    {
      "name": "format_json_log_entry",
      "file_path": "src/formatter_logging.ml",
      "start_line": 290,
      "end_line": 303,
      "length": 14,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 4,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "format_debug_context",
      "file_path": "src/formatter_logging.ml",
      "start_line": 305,
      "end_line": 309,
      "length": 5,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 0,
      "nesting_depth": 1
    },
    {
      "name": "format_error_stack",
      "file_path": "src/formatter_logging.ml",
      "start_line": 311,
      "end_line": 316,
      "length": 6,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 0,
      "nesting_depth": 2
    },
    {
      "name": "format_variable_state",
      "file_path": "src/formatter_logging.ml",
      "start_line": 320,
      "end_line": 321,
      "length": 2,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 3,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "format_variable_list",
      "file_path": "src/formatter_logging.ml",
      "start_line": 323,
      "end_line": 328,
      "length": 6,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "format_function_call",
      "file_path": "src/formatter_logging.ml",
      "start_line": 330,
      "end_line": 331,
      "length": 2,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 3,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "format_call_stack",
      "file_path": "src/formatter_logging.ml",
      "start_line": 333,
      "end_line": 338,
      "length": 6,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "format_step_by_step_eval",
      "file_path": "src/formatter_logging.ml",
      "start_line": 342,
      "end_line": 347,
      "length": 6,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "format_ast_tree",
      "file_path": "src/formatter_logging.ml",
      "start_line": 351,
      "end_line": 355,
      "length": 5,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 0,
      "nesting_depth": 2
    },
    {
      "name": "global_config",
      "file_path": "src/logger.ml",
      "start_line": 20,
      "end_line": 27,
      "length": 8,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "get_timestamp",
      "file_path": "src/logger.ml",
      "start_line": 66,
      "end_line": 70,
      "length": 5,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 2
    },
    {
      "name": "format_message",
      "file_path": "src/logger.ml",
      "start_line": 72,
      "end_line": 79,
      "length": 8,
      "cyclomatic_complexity": 3,
      "cognitive_complexity": 3,
      "is_recursive": false,
      "parameters_count": 3,
      "match_expressions_count": 0,
      "nesting_depth": 4
    },
    {
      "name": "log_internal",
      "file_path": "src/logger.ml",
      "start_line": 81,
      "end_line": 86,
      "length": 6,
      "cyclomatic_complexity": 2,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 3,
      "match_expressions_count": 0,
      "nesting_depth": 2
    },
    {
      "name": "create_module_logger",
      "file_path": "src/logger.ml",
      "start_line": 88,
      "end_line": 94,
      "length": 7,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 4
    },
    {
      "name": "time_operation",
      "file_path": "src/logger.ml",
      "start_line": 117,
      "end_line": 134,
      "length": 18,
      "cyclomatic_complexity": 3,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 3,
      "match_expressions_count": 0,
      "nesting_depth": 6
    },
    {
      "name": "init_from_env",
      "file_path": "src/logger.ml",
      "start_line": 139,
      "end_line": 165,
      "length": 27,
      "cyclomatic_complexity": 14,
      "cognitive_complexity": 14,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 1,
      "nesting_depth": 4
    },
    {
      "name": "print_user_output",
      "file_path": "src/logger.ml",
      "start_line": 172,
      "end_line": 175,
      "length": 4,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "print_compiler_message",
      "file_path": "src/logger.ml",
      "start_line": 177,
      "end_line": 181,
      "length": 5,
      "cyclomatic_complexity": 2,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 1
    },
    {
      "name": "print_debug_info",
      "file_path": "src/logger.ml",
      "start_line": 183,
      "end_line": 187,
      "length": 5,
      "cyclomatic_complexity": 2,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 1
    },
    {
      "name": "print_user_prompt",
      "file_path": "src/logger.ml",
      "start_line": 189,
      "end_line": 191,
      "length": 3,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "get_memory_info",
      "file_path": "src/performance_benchmark.ml",
      "start_line": 53,
      "end_line": 57,
      "length": 5,
      "cyclomatic_complexity": 3,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 2
    },
    {
      "name": "measure_memory_usage",
      "file_path": "src/performance_benchmark.ml",
      "start_line": 59,
      "end_line": 67,
      "length": 9,
      "cyclomatic_complexity": 4,
      "cognitive_complexity": 3,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 1,
      "nesting_depth": 4
    },
    {
      "name": "create_benchmark_result",
      "file_path": "src/performance_benchmark.ml",
      "start_line": 82,
      "end_line": 84,
      "length": 3,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "run_full_benchmark_suite",
      "file_path": "src/performance_benchmark.ml",
      "start_line": 86,
      "end_line": 96,
      "length": 11,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "run_and_report",
      "file_path": "src/performance_benchmark.ml",
      "start_line": 117,
      "end_line": 121,
      "length": 5,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 2
    },
    {
      "name": "string_of_basic_value_unsafe",
      "file_path": "src/value_operations_basic.ml",
      "start_line": 25,
      "end_line": 27,
      "length": 3,
      "cyclomatic_complexity": 3,
      "cognitive_complexity": 2,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 1,
      "nesting_depth": 1
    },
    {
      "name": "compare_basic_values",
      "file_path": "src/value_operations_basic.ml",
      "start_line": 29,
      "end_line": 37,
      "length": 9,
      "cyclomatic_complexity": 8,
      "cognitive_complexity": 7,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 1,
      "nesting_depth": 1
    },
    {
      "name": "compare_basic_values_unsafe",
      "file_path": "src/value_operations_basic.ml",
      "start_line": 39,
      "end_line": 43,
      "length": 5,
      "cyclomatic_complexity": 4,
      "cognitive_complexity": 3,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 1,
      "nesting_depth": 1
    },
    {
      "name": "equals_basic_values",
      "file_path": "src/value_operations_basic.ml",
      "start_line": 45,
      "end_line": 47,
      "length": 3,
      "cyclomatic_complexity": 4,
      "cognitive_complexity": 2,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 1,
      "nesting_depth": 1
    },
    {
      "name": "add_numeric_values",
      "file_path": "src/value_operations_basic.ml",
      "start_line": 49,
      "end_line": 56,
      "length": 8,
      "cyclomatic_complexity": 7,
      "cognitive_complexity": 6,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 1,
      "nesting_depth": 1
    },
    {
      "name": "subtract_numeric_values",
      "file_path": "src/value_operations_basic.ml",
      "start_line": 58,
      "end_line": 65,
      "length": 8,
      "cyclomatic_complexity": 7,
      "cognitive_complexity": 6,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 1,
      "nesting_depth": 1
    },
    {
      "name": "multiply_numeric_values",
      "file_path": "src/value_operations_basic.ml",
      "start_line": 67,
      "end_line": 74,
      "length": 8,
      "cyclomatic_complexity": 7,
      "cognitive_complexity": 6,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 1,
      "nesting_depth": 1
    },
    {
      "name": "divide_numeric_values",
      "file_path": "src/value_operations_basic.ml",
      "start_line": 76,
      "end_line": 86,
      "length": 11,
      "cyclomatic_complexity": 11,
      "cognitive_complexity": 31,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 1,
      "nesting_depth": 5
    },
    {
      "name": "modulo_numeric_values",
      "file_path": "src/value_operations_basic.ml",
      "start_line": 88,
      "end_line": 93,
      "length": 6,
      "cyclomatic_complexity": 5,
      "cognitive_complexity": 6,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 1,
      "nesting_depth": 2
    },
    {
      "name": "less_than_numeric",
      "file_path": "src/value_operations_basic.ml",
      "start_line": 95,
      "end_line": 102,
      "length": 8,
      "cyclomatic_complexity": 7,
      "cognitive_complexity": 6,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 1,
      "nesting_depth": 1
    },
    {
      "name": "less_equal_numeric",
      "file_path": "src/value_operations_basic.ml",
      "start_line": 104,
      "end_line": 111,
      "length": 8,
      "cyclomatic_complexity": 7,
      "cognitive_complexity": 6,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 1,
      "nesting_depth": 1
    },
    {
      "name": "greater_than_numeric",
      "file_path": "src/value_operations_basic.ml",
      "start_line": 113,
      "end_line": 120,
      "length": 8,
      "cyclomatic_complexity": 7,
      "cognitive_complexity": 6,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 1,
      "nesting_depth": 1
    },
    {
      "name": "greater_equal_numeric",
      "file_path": "src/value_operations_basic.ml",
      "start_line": 122,
      "end_line": 129,
      "length": 8,
      "cyclomatic_complexity": 7,
      "cognitive_complexity": 6,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 1,
      "nesting_depth": 1
    },
    {
      "name": "concat_string_values",
      "file_path": "src/value_operations_basic.ml",
      "start_line": 131,
      "end_line": 135,
      "length": 5,
      "cyclomatic_complexity": 4,
      "cognitive_complexity": 3,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 1,
      "nesting_depth": 1
    },
    {
      "name": "logical_and",
      "file_path": "src/value_operations_basic.ml",
      "start_line": 137,
      "end_line": 141,
      "length": 5,
      "cyclomatic_complexity": 4,
      "cognitive_complexity": 4,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 1,
      "nesting_depth": 1
    },
    {
      "name": "logical_or",
      "file_path": "src/value_operations_basic.ml",
      "start_line": 143,
      "end_line": 147,
      "length": 5,
      "cyclomatic_complexity": 6,
      "cognitive_complexity": 4,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 1,
      "nesting_depth": 1
    },
    {
      "name": "logical_not",
      "file_path": "src/value_operations_basic.ml",
      "start_line": 149,
      "end_line": 151,
      "length": 3,
      "cyclomatic_complexity": 3,
      "cognitive_complexity": 2,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 1,
      "nesting_depth": 1
    },
    {
      "name": "compare_container_values",
      "file_path": "src/value_operations_basic.ml",
      "start_line": 195,
      "end_line": 257,
      "length": 63,
      "cyclomatic_complexity": 41,
      "cognitive_complexity": 169,
      "is_recursive": true,
      "parameters_count": 2,
      "match_expressions_count": 8,
      "nesting_depth": 8
    },
    {
      "name": "create_array_function",
      "file_path": "src/builtin_array.ml",
      "start_line": 6,
      "end_line": 11,
      "length": 6,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 3
    },
    {
      "name": "array_length_function",
      "file_path": "src/builtin_array.ml",
      "start_line": 13,
      "end_line": 16,
      "length": 4,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 1
    },
    {
      "name": "copy_array_function",
      "file_path": "src/builtin_array.ml",
      "start_line": 18,
      "end_line": 21,
      "length": 4,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 1
    },
    {
      "name": "array_get_function",
      "file_path": "src/builtin_array.ml",
      "start_line": 23,
      "end_line": 29,
      "length": 7,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 3
    },
    {
      "name": "array_set_function",
      "file_path": "src/builtin_array.ml",
      "start_line": 31,
      "end_line": 40,
      "length": 10,
      "cyclomatic_complexity": 4,
      "cognitive_complexity": 3,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 1,
      "nesting_depth": 3
    },
    {
      "name": "array_to_list_function",
      "file_path": "src/builtin_array.ml",
      "start_line": 42,
      "end_line": 45,
      "length": 4,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 1
    },
    {
      "name": "list_to_array_function",
      "file_path": "src/builtin_array.ml",
      "start_line": 47,
      "end_line": 50,
      "length": 4,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 1
    },
    {
      "name": "array_functions",
      "file_path": "src/builtin_array.ml",
      "start_line": 52,
      "end_line": 61,
      "length": 10,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "default_converters",
      "file_path": "src/token_conversion_unified.ml",
      "start_line": 32,
      "end_line": 117,
      "length": 86,
      "cyclomatic_complexity": 50,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "register_converter",
      "file_path": "src/token_conversion_unified.ml",
      "start_line": 125,
      "end_line": 128,
      "length": 4,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "try_convert_with_type",
      "file_path": "src/token_conversion_unified.ml",
      "start_line": 133,
      "end_line": 141,
      "length": 9,
      "cyclomatic_complexity": 5,
      "cognitive_complexity": 2,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 0,
      "nesting_depth": 2
    },
    {
      "name": "convert_token",
      "file_path": "src/token_conversion_unified.ml",
      "start_line": 143,
      "end_line": 152,
      "length": 10,
      "cyclomatic_complexity": 6,
      "cognitive_complexity": 3,
      "is_recursive": false,
      "parameters_count": 4,
      "match_expressions_count": 1,
      "nesting_depth": 1
    },
    {
      "name": "convert_token_exn",
      "file_path": "src/token_conversion_unified.ml",
      "start_line": 154,
      "end_line": 161,
      "length": 8,
      "cyclomatic_complexity": 6,
      "cognitive_complexity": 4,
      "is_recursive": false,
      "parameters_count": 4,
      "match_expressions_count": 1,
      "nesting_depth": 3
    },
    {
      "name": "convert_token_list",
      "file_path": "src/token_conversion_unified.ml",
      "start_line": 163,
      "end_line": 165,
      "length": 3,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 5,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "convert_token_list_safe",
      "file_path": "src/token_conversion_unified.ml",
      "start_line": 167,
      "end_line": 169,
      "length": 3,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 5,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "get_conversion_stats",
      "file_path": "src/token_conversion_unified.ml",
      "start_line": 171,
      "end_line": 185,
      "length": 15,
      "cyclomatic_complexity": 7,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 1
    },
    {
      "name": "get_converter_details",
      "file_path": "src/token_conversion_unified.ml",
      "start_line": 187,
      "end_line": 200,
      "length": 14,
      "cyclomatic_complexity": 7,
      "cognitive_complexity": 6,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 1,
      "nesting_depth": 1
    },
    {
      "name": "convert_identifier_token",
      "file_path": "src/token_conversion_unified.ml",
      "start_line": 207,
      "end_line": 211,
      "length": 5,
      "cyclomatic_complexity": 4,
      "cognitive_complexity": 3,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 1,
      "nesting_depth": 1
    },
    {
      "name": "convert_literal_token",
      "file_path": "src/token_conversion_unified.ml",
      "start_line": 213,
      "end_line": 217,
      "length": 5,
      "cyclomatic_complexity": 4,
      "cognitive_complexity": 3,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 1,
      "nesting_depth": 1
    },
    {
      "name": "convert_basic_keyword_token",
      "file_path": "src/token_conversion_unified.ml",
      "start_line": 219,
      "end_line": 224,
      "length": 6,
      "cyclomatic_complexity": 4,
      "cognitive_complexity": 3,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 1,
      "nesting_depth": 1
    },
    {
      "name": "convert_type_keyword_token",
      "file_path": "src/token_conversion_unified.ml",
      "start_line": 226,
      "end_line": 231,
      "length": 6,
      "cyclomatic_complexity": 4,
      "cognitive_complexity": 3,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 1,
      "nesting_depth": 1
    },
    {
      "name": "convert_classical_token",
      "file_path": "src/token_conversion_unified.ml",
      "start_line": 233,
      "end_line": 237,
      "length": 5,
      "cyclomatic_complexity": 4,
      "cognitive_complexity": 3,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 1,
      "nesting_depth": 1
    },
    {
      "name": "format_error_with_position",
      "file_path": "src/formatter_tokens.ml",
      "start_line": 17,
      "end_line": 18,
      "length": 2,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 3,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "format_range_position",
      "file_path": "src/formatter_tokens.ml",
      "start_line": 26,
      "end_line": 50,
      "length": 25,
      "cyclomatic_complexity": 2,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 5,
      "match_expressions_count": 0,
      "nesting_depth": 1
    },
    {
      "name": "format_source_context",
      "file_path": "src/formatter_tokens.ml",
      "start_line": 52,
      "end_line": 58,
      "length": 7,
      "cyclomatic_complexity": 2,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 4,
      "match_expressions_count": 0,
      "nesting_depth": 4
    },
    {
      "name": "format_error_indicator",
      "file_path": "src/formatter_tokens.ml",
      "start_line": 60,
      "end_line": 64,
      "length": 5,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 1
    },
    {
      "name": "format_quoted_identifier_token",
      "file_path": "src/formatter_tokens.ml",
      "start_line": 74,
      "end_line": 76,
      "length": 3,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "format_token_sequence",
      "file_path": "src/formatter_tokens.ml",
      "start_line": 106,
      "end_line": 108,
      "length": 3,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 1
    },
    {
      "name": "format_token_stream",
      "file_path": "src/formatter_tokens.ml",
      "start_line": 110,
      "end_line": 119,
      "length": 10,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "simple_line_col",
      "file_path": "src/formatter_tokens.ml",
      "start_line": 123,
      "end_line": 124,
      "length": 2,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "parenthesized_line_col",
      "file_path": "src/formatter_tokens.ml",
      "start_line": 126,
      "end_line": 128,
      "length": 3,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "range_position",
      "file_path": "src/formatter_tokens.ml",
      "start_line": 130,
      "end_line": 144,
      "length": 15,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 4,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "error_position_marker",
      "file_path": "src/formatter_tokens.ml",
      "start_line": 146,
      "end_line": 148,
      "length": 3,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "format_error_with_enhanced_position",
      "file_path": "src/formatter_tokens.ml",
      "start_line": 152,
      "end_line": 154,
      "length": 3,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 3,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "format_detailed_position",
      "file_path": "src/formatter_tokens.ml",
      "start_line": 156,
      "end_line": 168,
      "length": 13,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 4,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "format_relative_position",
      "file_path": "src/formatter_tokens.ml",
      "start_line": 170,
      "end_line": 178,
      "length": 9,
      "cyclomatic_complexity": 3,
      "cognitive_complexity": 3,
      "is_recursive": false,
      "parameters_count": 4,
      "match_expressions_count": 0,
      "nesting_depth": 4
    },
    {
      "name": "format_span_info",
      "file_path": "src/formatter_tokens.ml",
      "start_line": 180,
      "end_line": 223,
      "length": 44,
      "cyclomatic_complexity": 5,
      "cognitive_complexity": 7,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 1,
      "nesting_depth": 3
    },
    {
      "name": "format_source_excerpt",
      "file_path": "src/formatter_tokens.ml",
      "start_line": 225,
      "end_line": 230,
      "length": 6,
      "cyclomatic_complexity": 2,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 4,
      "match_expressions_count": 0,
      "nesting_depth": 2
    },
    {
      "name": "format_multiline_error",
      "file_path": "src/formatter_tokens.ml",
      "start_line": 232,
      "end_line": 246,
      "length": 15,
      "cyclomatic_complexity": 2,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 5,
      "match_expressions_count": 0,
      "nesting_depth": 1
    },
    {
      "name": "is_literal_token",
      "file_path": "src/formatter_tokens.ml",
      "start_line": 250,
      "end_line": 252,
      "length": 3,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "is_identifier_token",
      "file_path": "src/formatter_tokens.ml",
      "start_line": 254,
      "end_line": 255,
      "length": 2,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "validate_token_type",
      "file_path": "src/formatter_tokens.ml",
      "start_line": 262,
      "end_line": 264,
      "length": 3,
      "cyclomatic_complexity": 2,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 0,
      "nesting_depth": 1
    },
    {
      "name": "validate_token_value",
      "file_path": "src/formatter_tokens.ml",
      "start_line": 266,
      "end_line": 269,
      "length": 4,
      "cyclomatic_complexity": 2,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 0,
      "nesting_depth": 1
    },
    {
      "name": "format_token_statistics",
      "file_path": "src/formatter_tokens.ml",
      "start_line": 271,
      "end_line": 284,
      "length": 14,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 4,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "token_list_to_string",
      "file_path": "src/formatter_tokens.ml",
      "start_line": 288,
      "end_line": 291,
      "length": 4,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 1
    },
    {
      "name": "format_lexer_state",
      "file_path": "src/formatter_tokens.ml",
      "start_line": 293,
      "end_line": 303,
      "length": 11,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 3,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "format_tokenization_progress",
      "file_path": "src/formatter_tokens.ml",
      "start_line": 305,
      "end_line": 317,
      "length": 13,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 3,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "convert_identifier_token",
      "file_path": "src/identifier_converter.ml",
      "start_line": 16,
      "end_line": 22,
      "length": 7,
      "cyclomatic_complexity": 4,
      "cognitive_complexity": 2,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 1
    },
    {
      "name": "looks_like_string_literal",
      "file_path": "src/parser_expressions_utils.ml",
      "start_line": 10,
      "end_line": 17,
      "length": 8,
      "cyclomatic_complexity": 11,
      "cognitive_complexity": 7,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "skip_newlines",
      "file_path": "src/parser_expressions_utils.ml",
      "start_line": 19,
      "end_line": 22,
      "length": 4,
      "cyclomatic_complexity": 2,
      "cognitive_complexity": 1,
      "is_recursive": true,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 2
    },
    {
      "name": "create_binary_parser",
      "file_path": "src/parser_expressions_utils.ml",
      "start_line": 24,
      "end_line": 38,
      "length": 15,
      "cyclomatic_complexity": 4,
      "cognitive_complexity": 3,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 1,
      "nesting_depth": 5
    },
    {
      "name": "is_type_keyword",
      "file_path": "src/parser_expressions_utils.ml",
      "start_line": 40,
      "end_line": 46,
      "length": 7,
      "cyclomatic_complexity": 9,
      "cognitive_complexity": 4,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 1,
      "nesting_depth": 1
    },
    {
      "name": "type_keyword_to_string",
      "file_path": "src/parser_expressions_utils.ml",
      "start_line": 48,
      "end_line": 57,
      "length": 10,
      "cyclomatic_complexity": 9,
      "cognitive_complexity": 8,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 1,
      "nesting_depth": 1
    },
    {
      "name": "parse_module_expr",
      "file_path": "src/parser_expressions_utils.ml",
      "start_line": 59,
      "end_line": 63,
      "length": 5,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 1
    },
    {
      "name": "create_unary_parser",
      "file_path": "src/parser_expressions_utils.ml",
      "start_line": 68,
      "end_line": 87,
      "length": 20,
      "cyclomatic_complexity": 6,
      "cognitive_complexity": 5,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 1,
      "nesting_depth": 8
    },
    {
      "name": "parse_natural_arithmetic_continuation",
      "file_path": "src/parser_expressions_utils.ml",
      "start_line": 89,
      "end_line": 98,
      "length": 10,
      "cyclomatic_complexity": 4,
      "cognitive_complexity": 3,
      "is_recursive": false,
      "parameters_count": 3,
      "match_expressions_count": 1,
      "nesting_depth": 4
    },
    {
      "name": "is_argument_token",
      "file_path": "src/parser_expressions_utils.ml",
      "start_line": 100,
      "end_line": 107,
      "length": 8,
      "cyclomatic_complexity": 20,
      "cognitive_complexity": 5,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 1,
      "nesting_depth": 1
    },
    {
      "name": "parse_argument_list",
      "file_path": "src/parser_expressions_utils.ml",
      "start_line": 109,
      "end_line": 124,
      "length": 16,
      "cyclomatic_complexity": 8,
      "cognitive_complexity": 11,
      "is_recursive": true,
      "parameters_count": 3,
      "match_expressions_count": 0,
      "nesting_depth": 8
    },
    {
      "name": "parse_postfix_expr",
      "file_path": "src/parser_expressions_utils.ml",
      "start_line": 126,
      "end_line": 164,
      "length": 39,
      "cyclomatic_complexity": 14,
      "cognitive_complexity": 23,
      "is_recursive": true,
      "parameters_count": 3,
      "match_expressions_count": 3,
      "nesting_depth": 14
    },
    {
      "name": "handle_error",
      "file_path": "src/conversion_engine.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "error_to_string",
      "file_path": "src/conversion_engine.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "classical_converters",
      "file_path": "src/conversion_engine.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "modern_converters",
      "file_path": "src/conversion_engine.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "lexer_converters",
      "file_path": "src/conversion_engine.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "register_classical_converter",
      "file_path": "src/conversion_engine.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "register_modern_converter",
      "file_path": "src/conversion_engine.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "register_lexer_converter",
      "file_path": "src/conversion_engine.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "initialize_converters",
      "file_path": "src/conversion_engine.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "convert_with_fallback",
      "file_path": "src/conversion_engine.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "convert_token",
      "file_path": "src/conversion_engine.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "convert_token_exn",
      "file_path": "src/conversion_engine.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "convert_token_list",
      "file_path": "src/conversion_engine.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "string_of_collection_value",
      "file_path": "src/value_operations_collections.ml",
      "start_line": 15,
      "end_line": 35,
      "length": 21,
      "cyclomatic_complexity": 19,
      "cognitive_complexity": 13,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 1,
      "nesting_depth": 4
    },
    {
      "name": "list_append",
      "file_path": "src/value_operations_collections.ml",
      "start_line": 59,
      "end_line": 63,
      "length": 5,
      "cyclomatic_complexity": 4,
      "cognitive_complexity": 3,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 1,
      "nesting_depth": 1
    },
    {
      "name": "filtered",
      "file_path": "src/value_operations_collections.ml",
      "start_line": 77,
      "end_line": 88,
      "length": 12,
      "cyclomatic_complexity": 6,
      "cognitive_complexity": 4,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 1,
      "nesting_depth": 1
    },
    {
      "name": "list_nth",
      "file_path": "src/value_operations_collections.ml",
      "start_line": 90,
      "end_line": 95,
      "length": 6,
      "cyclomatic_complexity": 7,
      "cognitive_complexity": 9,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 1,
      "nesting_depth": 2
    },
    {
      "name": "array_get",
      "file_path": "src/value_operations_collections.ml",
      "start_line": 102,
      "end_line": 107,
      "length": 6,
      "cyclomatic_complexity": 7,
      "cognitive_complexity": 9,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 1,
      "nesting_depth": 2
    },
    {
      "name": "array_set",
      "file_path": "src/value_operations_collections.ml",
      "start_line": 109,
      "end_line": 117,
      "length": 9,
      "cyclomatic_complexity": 7,
      "cognitive_complexity": 9,
      "is_recursive": false,
      "parameters_count": 3,
      "match_expressions_count": 1,
      "nesting_depth": 2
    },
    {
      "name": "array_make",
      "file_path": "src/value_operations_collections.ml",
      "start_line": 119,
      "end_line": 124,
      "length": 6,
      "cyclomatic_complexity": 5,
      "cognitive_complexity": 6,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 1,
      "nesting_depth": 2
    },
    {
      "name": "tuple_nth",
      "file_path": "src/value_operations_collections.ml",
      "start_line": 141,
      "end_line": 146,
      "length": 6,
      "cyclomatic_complexity": 7,
      "cognitive_complexity": 9,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 1,
      "nesting_depth": 2
    },
    {
      "name": "compare_collections",
      "file_path": "src/value_operations_collections.ml",
      "start_line": 164,
      "end_line": 189,
      "length": 26,
      "cyclomatic_complexity": 20,
      "cognitive_complexity": 51,
      "is_recursive": true,
      "parameters_count": 2,
      "match_expressions_count": 3,
      "nesting_depth": 5
    },
    {
      "name": "lex_error",
      "file_path": "src/compiler_errors_creation.ml",
      "start_line": 14,
      "end_line": 16,
      "length": 3,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 1
    },
    {
      "name": "parse_error",
      "file_path": "src/compiler_errors_creation.ml",
      "start_line": 18,
      "end_line": 20,
      "length": 3,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 1
    },
    {
      "name": "syntax_error",
      "file_path": "src/compiler_errors_creation.ml",
      "start_line": 22,
      "end_line": 24,
      "length": 3,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 1
    },
    {
      "name": "poetry_parse_error",
      "file_path": "src/compiler_errors_creation.ml",
      "start_line": 26,
      "end_line": 28,
      "length": 3,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 1
    },
    {
      "name": "type_error",
      "file_path": "src/compiler_errors_creation.ml",
      "start_line": 30,
      "end_line": 32,
      "length": 3,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 1
    },
    {
      "name": "semantic_error",
      "file_path": "src/compiler_errors_creation.ml",
      "start_line": 34,
      "end_line": 36,
      "length": 3,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 1
    },
    {
      "name": "codegen_error",
      "file_path": "src/compiler_errors_creation.ml",
      "start_line": 38,
      "end_line": 40,
      "length": 3,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 1
    },
    {
      "name": "unimplemented_feature",
      "file_path": "src/compiler_errors_creation.ml",
      "start_line": 42,
      "end_line": 48,
      "length": 7,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 2
    },
    {
      "name": "internal_error",
      "file_path": "src/compiler_errors_creation.ml",
      "start_line": 50,
      "end_line": 56,
      "length": 7,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 2
    },
    {
      "name": "runtime_error",
      "file_path": "src/compiler_errors_creation.ml",
      "start_line": 58,
      "end_line": 60,
      "length": 3,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 1
    },
    {
      "name": "exception_raised",
      "file_path": "src/compiler_errors_creation.ml",
      "start_line": 62,
      "end_line": 64,
      "length": 3,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 1
    },
    {
      "name": "io_error",
      "file_path": "src/compiler_errors_creation.ml",
      "start_line": 66,
      "end_line": 69,
      "length": 4,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 1
    },
    {
      "name": "unsupported_keyword_error",
      "file_path": "src/compiler_errors_creation.ml",
      "start_line": 71,
      "end_line": 76,
      "length": 6,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 4
    },
    {
      "name": "unsupported_feature_error",
      "file_path": "src/compiler_errors_creation.ml",
      "start_line": 78,
      "end_line": 85,
      "length": 8,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 3
    },
    {
      "name": "invalid_character_error",
      "file_path": "src/compiler_errors_creation.ml",
      "start_line": 87,
      "end_line": 92,
      "length": 6,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 4
    },
    {
      "name": "unexpected_state_error",
      "file_path": "src/compiler_errors_creation.ml",
      "start_line": 94,
      "end_line": 102,
      "length": 9,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 3
    },
    {
      "name": "failwith_to_error",
      "file_path": "src/compiler_errors_creation.ml",
      "start_line": 104,
      "end_line": 107,
      "length": 4,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 1
    },
    {
      "name": "match_error",
      "file_path": "src/compiler_errors_creation.ml",
      "start_line": 109,
      "end_line": 114,
      "length": 6,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 4
    },
    {
      "name": "check_utf8_char",
      "file_path": "src/lexer_parsers.ml",
      "start_line": 8,
      "end_line": 12,
      "length": 5,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 2,
      "is_recursive": false,
      "parameters_count": 4,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "read_string_literal",
      "file_path": "src/lexer_parsers.ml",
      "start_line": 14,
      "end_line": 70,
      "length": 57,
      "cyclomatic_complexity": 19,
      "cognitive_complexity": 19,
      "is_recursive": false,
      "parameters_count": 3,
      "match_expressions_count": 2,
      "nesting_depth": 6
    },
    {
      "name": "make_int",
      "file_path": "src/ast.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "make_string",
      "file_path": "src/ast.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "make_bool",
      "file_path": "src/ast.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "make_var",
      "file_path": "src/ast.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "make_binary_op",
      "file_path": "src/ast.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "make_call",
      "file_path": "src/ast.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "make_simple_token",
      "file_path": "src/token_utils_core.ml",
      "start_line": 8,
      "end_line": 10,
      "length": 3,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 4,
      "match_expressions_count": 0,
      "nesting_depth": 1
    },
    {
      "name": "get_token_priority",
      "file_path": "src/token_utils_core.ml",
      "start_line": 12,
      "end_line": 19,
      "length": 8,
      "cyclomatic_complexity": 8,
      "cognitive_complexity": 4,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 1,
      "nesting_depth": 1
    },
    {
      "name": "equal_token",
      "file_path": "src/token_utils_core.ml",
      "start_line": 21,
      "end_line": 42,
      "length": 22,
      "cyclomatic_complexity": 24,
      "cognitive_complexity": 21,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 1,
      "nesting_depth": 1
    },
    {
      "name": "ancient_keywords",
      "file_path": "src/keyword_matcher_tables_ancient.ml",
      "start_line": 7,
      "end_line": 53,
      "length": 47,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "default_context",
      "file_path": "src/token_converter_unified.ml",
      "start_line": 27,
      "end_line": 29,
      "length": 3,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "convert_chinese_number",
      "file_path": "src/token_converter_unified.ml",
      "start_line": 33,
      "end_line": 50,
      "length": 18,
      "cyclomatic_complexity": 16,
      "cognitive_complexity": 15,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 1,
      "nesting_depth": 2
    },
    {
      "name": "convert",
      "file_path": "src/token_converter_unified.ml",
      "start_line": 52,
      "end_line": 68,
      "length": 17,
      "cyclomatic_complexity": 13,
      "cognitive_complexity": 20,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 1,
      "nesting_depth": 1
    },
    {
      "name": "is_quoted_identifier",
      "file_path": "src/token_converter_unified.ml",
      "start_line": 72,
      "end_line": 76,
      "length": 5,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 2,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "is_constructor",
      "file_path": "src/token_converter_unified.ml",
      "start_line": 78,
      "end_line": 83,
      "length": 6,
      "cyclomatic_complexity": 3,
      "cognitive_complexity": 3,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 1
    },
    {
      "name": "convert",
      "file_path": "src/token_converter_unified.ml",
      "start_line": 85,
      "end_line": 93,
      "length": 9,
      "cyclomatic_complexity": 4,
      "cognitive_complexity": 6,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 4
    },
    {
      "name": "convert_basic",
      "file_path": "src/token_converter_unified.ml",
      "start_line": 97,
      "end_line": 108,
      "length": 12,
      "cyclomatic_complexity": 19,
      "cognitive_complexity": 10,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 1,
      "nesting_depth": 1
    },
    {
      "name": "convert_type",
      "file_path": "src/token_converter_unified.ml",
      "start_line": 110,
      "end_line": 122,
      "length": 13,
      "cyclomatic_complexity": 21,
      "cognitive_complexity": 11,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 1,
      "nesting_depth": 1
    },
    {
      "name": "convert_control",
      "file_path": "src/token_converter_unified.ml",
      "start_line": 124,
      "end_line": 137,
      "length": 14,
      "cyclomatic_complexity": 26,
      "cognitive_complexity": 41,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 1,
      "nesting_depth": 4
    },
    {
      "name": "convert_classical",
      "file_path": "src/token_converter_unified.ml",
      "start_line": 139,
      "end_line": 150,
      "length": 12,
      "cyclomatic_complexity": 19,
      "cognitive_complexity": 10,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 1,
      "nesting_depth": 1
    },
    {
      "name": "convert",
      "file_path": "src/token_converter_unified.ml",
      "start_line": 152,
      "end_line": 166,
      "length": 15,
      "cyclomatic_complexity": 13,
      "cognitive_complexity": 30,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 4,
      "nesting_depth": 4
    },
    {
      "name": "convert",
      "file_path": "src/token_converter_unified.ml",
      "start_line": 170,
      "end_line": 201,
      "length": 32,
      "cyclomatic_complexity": 32,
      "cognitive_complexity": 26,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 1,
      "nesting_depth": 1
    },
    {
      "name": "convert",
      "file_path": "src/token_converter_unified.ml",
      "start_line": 205,
      "end_line": 220,
      "length": 16,
      "cyclomatic_complexity": 14,
      "cognitive_complexity": 13,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 1,
      "nesting_depth": 1
    },
    {
      "name": "convert_token",
      "file_path": "src/token_converter_unified.ml",
      "start_line": 222,
      "end_line": 252,
      "length": 31,
      "cyclomatic_complexity": 26,
      "cognitive_complexity": 95,
      "is_recursive": true,
      "parameters_count": 2,
      "match_expressions_count": 7,
      "nesting_depth": 8
    },
    {
      "name": "convert_strict",
      "file_path": "src/token_converter_unified.ml",
      "start_line": 257,
      "end_line": 260,
      "length": 4,
      "cyclomatic_complexity": 4,
      "cognitive_complexity": 2,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 1,
      "nesting_depth": 2
    },
    {
      "name": "convert_tokens",
      "file_path": "src/token_converter_unified.ml",
      "start_line": 262,
      "end_line": 268,
      "length": 7,
      "cyclomatic_complexity": 4,
      "cognitive_complexity": 3,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 1,
      "nesting_depth": 1
    },
    {
      "name": "determine_recovery_strategy",
      "file_path": "src/error_handler_recovery.ml",
      "start_line": 12,
      "end_line": 29,
      "length": 18,
      "cyclomatic_complexity": 15,
      "cognitive_complexity": 27,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 1,
      "nesting_depth": 3
    },
    {
      "name": "attempt_recovery",
      "file_path": "src/error_handler_recovery.ml",
      "start_line": 31,
      "end_line": 51,
      "length": 21,
      "cyclomatic_complexity": 8,
      "cognitive_complexity": 13,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 1,
      "nesting_depth": 3
    },
    {
      "name": "should_continue_processing",
      "file_path": "src/error_handler_recovery.ml",
      "start_line": 53,
      "end_line": 57,
      "length": 5,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 2,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 1
    },
    {
      "name": "single_string_builtin",
      "file_path": "src/builtin_function_helpers.ml",
      "start_line": 12,
      "end_line": 15,
      "length": 4,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 3,
      "match_expressions_count": 0,
      "nesting_depth": 2
    },
    {
      "name": "single_int_builtin",
      "file_path": "src/builtin_function_helpers.ml",
      "start_line": 17,
      "end_line": 20,
      "length": 4,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 3,
      "match_expressions_count": 0,
      "nesting_depth": 2
    },
    {
      "name": "single_float_builtin",
      "file_path": "src/builtin_function_helpers.ml",
      "start_line": 22,
      "end_line": 25,
      "length": 4,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 3,
      "match_expressions_count": 0,
      "nesting_depth": 2
    },
    {
      "name": "single_bool_builtin",
      "file_path": "src/builtin_function_helpers.ml",
      "start_line": 27,
      "end_line": 30,
      "length": 4,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 3,
      "match_expressions_count": 0,
      "nesting_depth": 2
    },
    {
      "name": "single_to_string_builtin",
      "file_path": "src/builtin_function_helpers.ml",
      "start_line": 32,
      "end_line": 35,
      "length": 4,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 4,
      "match_expressions_count": 0,
      "nesting_depth": 2
    },
    {
      "name": "single_conversion_builtin",
      "file_path": "src/builtin_function_helpers.ml",
      "start_line": 37,
      "end_line": 41,
      "length": 5,
      "cyclomatic_complexity": 3,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 5,
      "match_expressions_count": 0,
      "nesting_depth": 3
    },
    {
      "name": "double_string_builtin",
      "file_path": "src/builtin_function_helpers.ml",
      "start_line": 43,
      "end_line": 48,
      "length": 6,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 3,
      "match_expressions_count": 0,
      "nesting_depth": 4
    },
    {
      "name": "double_string_to_bool_builtin",
      "file_path": "src/builtin_function_helpers.ml",
      "start_line": 50,
      "end_line": 55,
      "length": 6,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 3,
      "match_expressions_count": 0,
      "nesting_depth": 4
    },
    {
      "name": "single_list_builtin",
      "file_path": "src/builtin_function_helpers.ml",
      "start_line": 57,
      "end_line": 60,
      "length": 4,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 3,
      "match_expressions_count": 0,
      "nesting_depth": 2
    },
    {
      "name": "single_file_builtin",
      "file_path": "src/builtin_function_helpers.ml",
      "start_line": 62,
      "end_line": 65,
      "length": 4,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 3,
      "match_expressions_count": 0,
      "nesting_depth": 2
    },
    {
      "name": "curried_double_string_builtin",
      "file_path": "src/builtin_function_helpers.ml",
      "start_line": 67,
      "end_line": 73,
      "length": 7,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 3,
      "match_expressions_count": 0,
      "nesting_depth": 3
    },
    {
      "name": "curried_double_string_to_bool_builtin",
      "file_path": "src/builtin_function_helpers.ml",
      "start_line": 75,
      "end_line": 81,
      "length": 7,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 3,
      "match_expressions_count": 0,
      "nesting_depth": 3
    },
    {
      "name": "curried_string_to_list_builtin",
      "file_path": "src/builtin_function_helpers.ml",
      "start_line": 83,
      "end_line": 89,
      "length": 7,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 3,
      "match_expressions_count": 0,
      "nesting_depth": 3
    },
    {
      "name": "triple_args_builtin",
      "file_path": "src/builtin_function_helpers.ml",
      "start_line": 91,
      "end_line": 99,
      "length": 9,
      "cyclomatic_complexity": 4,
      "cognitive_complexity": 3,
      "is_recursive": false,
      "parameters_count": 6,
      "match_expressions_count": 1,
      "nesting_depth": 5
    },
    {
      "name": "single_array_builtin",
      "file_path": "src/builtin_function_helpers.ml",
      "start_line": 101,
      "end_line": 104,
      "length": 4,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 4,
      "match_expressions_count": 0,
      "nesting_depth": 2
    },
    {
      "name": "double_array_builtin",
      "file_path": "src/builtin_function_helpers.ml",
      "start_line": 106,
      "end_line": 111,
      "length": 6,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 4,
      "match_expressions_count": 0,
      "nesting_depth": 4
    },
    {
      "name": "higher_order_builtin",
      "file_path": "src/builtin_function_helpers.ml",
      "start_line": 113,
      "end_line": 119,
      "length": 7,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 4,
      "match_expressions_count": 0,
      "nesting_depth": 3
    },
    {
      "name": "collection_operation_builtin",
      "file_path": "src/builtin_function_helpers.ml",
      "start_line": 121,
      "end_line": 128,
      "length": 8,
      "cyclomatic_complexity": 6,
      "cognitive_complexity": 5,
      "is_recursive": false,
      "parameters_count": 3,
      "match_expressions_count": 1,
      "nesting_depth": 3
    },
    {
      "name": "with_error_handling",
      "file_path": "src/builtin_function_helpers.ml",
      "start_line": 130,
      "end_line": 135,
      "length": 6,
      "cyclomatic_complexity": 5,
      "cognitive_complexity": 3,
      "is_recursive": false,
      "parameters_count": 3,
      "match_expressions_count": 0,
      "nesting_depth": 1
    },
    {
      "name": "with_file_error_handling",
      "file_path": "src/builtin_function_helpers.ml",
      "start_line": 137,
      "end_line": 141,
      "length": 5,
      "cyclomatic_complexity": 4,
      "cognitive_complexity": 2,
      "is_recursive": false,
      "parameters_count": 3,
      "match_expressions_count": 0,
      "nesting_depth": 1
    },
    {
      "name": "higher_order_list_builtin",
      "file_path": "src/builtin_function_helpers.ml",
      "start_line": 143,
      "end_line": 149,
      "length": 7,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 3,
      "match_expressions_count": 0,
      "nesting_depth": 3
    },
    {
      "name": "curried_list_builtin",
      "file_path": "src/builtin_function_helpers.ml",
      "start_line": 151,
      "end_line": 157,
      "length": 7,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 3,
      "match_expressions_count": 0,
      "nesting_depth": 3
    },
    {
      "name": "validate_and_extract",
      "file_path": "src/builtin_function_helpers.ml",
      "start_line": 159,
      "end_line": 161,
      "length": 3,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 3,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "format_builtin_error",
      "file_path": "src/builtin_function_helpers.ml",
      "start_line": 163,
      "end_line": 165,
      "length": 3,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 3,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "wrong_arg_count_error",
      "file_path": "src/builtin_function_helpers.ml",
      "start_line": 167,
      "end_line": 169,
      "length": 3,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 3,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "type_mismatch_error",
      "file_path": "src/builtin_function_helpers.ml",
      "start_line": 171,
      "end_line": 192,
      "length": 22,
      "cyclomatic_complexity": 19,
      "cognitive_complexity": 18,
      "is_recursive": false,
      "parameters_count": 3,
      "match_expressions_count": 1,
      "nesting_depth": 1
    },
    {
      "name": "from_base_type",
      "file_path": "src/types_convert.ml",
      "start_line": 11,
      "end_line": 18,
      "length": 8,
      "cyclomatic_complexity": 7,
      "cognitive_complexity": 6,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 1,
      "nesting_depth": 1
    },
    {
      "name": "type_expr_to_typ",
      "file_path": "src/types_convert.ml",
      "start_line": 20,
      "end_line": 38,
      "length": 19,
      "cyclomatic_complexity": 13,
      "cognitive_complexity": 15,
      "is_recursive": true,
      "parameters_count": 1,
      "match_expressions_count": 2,
      "nesting_depth": 2
    },
    {
      "name": "literal_type",
      "file_path": "src/types_convert.ml",
      "start_line": 40,
      "end_line": 47,
      "length": 8,
      "cyclomatic_complexity": 7,
      "cognitive_complexity": 6,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 1,
      "nesting_depth": 1
    },
    {
      "name": "binary_op_type",
      "file_path": "src/types_convert.ml",
      "start_line": 49,
      "end_line": 58,
      "length": 10,
      "cyclomatic_complexity": 16,
      "cognitive_complexity": 6,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 1,
      "nesting_depth": 2
    },
    {
      "name": "unary_op_type",
      "file_path": "src/types_convert.ml",
      "start_line": 60,
      "end_line": 62,
      "length": 3,
      "cyclomatic_complexity": 3,
      "cognitive_complexity": 2,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 1,
      "nesting_depth": 1
    },
    {
      "name": "collect_simple_pattern_bindings",
      "file_path": "src/types_convert.ml",
      "start_line": 64,
      "end_line": 71,
      "length": 8,
      "cyclomatic_complexity": 7,
      "cognitive_complexity": 6,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 1,
      "nesting_depth": 1
    },
    {
      "name": "collect_container_pattern_bindings",
      "file_path": "src/types_convert.ml",
      "start_line": 73,
      "end_line": 80,
      "length": 8,
      "cyclomatic_complexity": 6,
      "cognitive_complexity": 5,
      "is_recursive": false,
      "parameters_count": 3,
      "match_expressions_count": 1,
      "nesting_depth": 1
    },
    {
      "name": "collect_special_pattern_bindings",
      "file_path": "src/types_convert.ml",
      "start_line": 82,
      "end_line": 95,
      "length": 14,
      "cyclomatic_complexity": 11,
      "cognitive_complexity": 19,
      "is_recursive": false,
      "parameters_count": 3,
      "match_expressions_count": 3,
      "nesting_depth": 5
    },
    {
      "name": "extract_pattern_bindings",
      "file_path": "src/types_convert.ml",
      "start_line": 97,
      "end_line": 111,
      "length": 15,
      "cyclomatic_complexity": 13,
      "cognitive_complexity": 4,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 1,
      "nesting_depth": 1
    },
    {
      "name": "convert_sig_items",
      "file_path": "src/types_convert.ml",
      "start_line": 116,
      "end_line": 143,
      "length": 28,
      "cyclomatic_complexity": 12,
      "cognitive_complexity": 12,
      "is_recursive": true,
      "parameters_count": 2,
      "match_expressions_count": 2,
      "nesting_depth": 5
    },
    {
      "name": "converted_variants",
      "file_path": "src/types_convert.ml",
      "start_line": 176,
      "end_line": 183,
      "length": 8,
      "cyclomatic_complexity": 3,
      "cognitive_complexity": 2,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 1,
      "nesting_depth": 1
    },
    {
      "name": "format_methods",
      "file_path": "src/types_convert.ml",
      "start_line": 260,
      "end_line": 276,
      "length": 17,
      "cyclomatic_complexity": 4,
      "cognitive_complexity": 3,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 1,
      "nesting_depth": 2
    },
    {
      "name": "type_to_chinese_string",
      "file_path": "src/types_convert.ml",
      "start_line": 334,
      "end_line": 346,
      "length": 13,
      "cyclomatic_complexity": 21,
      "cognitive_complexity": 18,
      "is_recursive": true,
      "parameters_count": 1,
      "match_expressions_count": 1,
      "nesting_depth": 2
    },
    {
      "name": "is_recoverable",
      "file_path": "src/error_handler_types.ml",
      "start_line": 57,
      "end_line": 60,
      "length": 4,
      "cyclomatic_complexity": 3,
      "cognitive_complexity": 2,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 1,
      "nesting_depth": 1
    },
    {
      "name": "analyze_recursive_pattern",
      "file_path": "src/nlf_semantic.ml",
      "start_line": 27,
      "end_line": 54,
      "length": 28,
      "cyclomatic_complexity": 15,
      "cognitive_complexity": 14,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 2,
      "nesting_depth": 2
    },
    {
      "name": "analyze_parameter_binding",
      "file_path": "src/nlf_semantic.ml",
      "start_line": 56,
      "end_line": 83,
      "length": 28,
      "cyclomatic_complexity": 16,
      "cognitive_complexity": 21,
      "is_recursive": false,
      "parameters_count": 3,
      "match_expressions_count": 2,
      "nesting_depth": 3
    },
    {
      "name": "infer_return_type",
      "file_path": "src/nlf_semantic.ml",
      "start_line": 85,
      "end_line": 103,
      "length": 19,
      "cyclomatic_complexity": 26,
      "cognitive_complexity": 23,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 2,
      "nesting_depth": 2
    },
    {
      "name": "calculate_complexity_level",
      "file_path": "src/nlf_semantic.ml",
      "start_line": 105,
      "end_line": 119,
      "length": 15,
      "cyclomatic_complexity": 8,
      "cognitive_complexity": 7,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 1,
      "nesting_depth": 2
    },
    {
      "name": "analyze_natural_function_semantics",
      "file_path": "src/nlf_semantic.ml",
      "start_line": 121,
      "end_line": 137,
      "length": 17,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 3,
      "match_expressions_count": 0,
      "nesting_depth": 3
    },
    {
      "name": "generate_semantic_report",
      "file_path": "src/nlf_semantic.ml",
      "start_line": 139,
      "end_line": 157,
      "length": 19,
      "cyclomatic_complexity": 4,
      "cognitive_complexity": 3,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 1,
      "nesting_depth": 2
    },
    {
      "name": "validate_semantic_consistency",
      "file_path": "src/nlf_semantic.ml",
      "start_line": 159,
      "end_line": 178,
      "length": 20,
      "cyclomatic_complexity": 4,
      "cognitive_complexity": 5,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 3
    },
    {
      "name": "compile_string",
      "file_path": "src/compiler.ml",
      "start_line": 25,
      "end_line": 62,
      "length": 38,
      "cyclomatic_complexity": 13,
      "cognitive_complexity": 20,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 0,
      "nesting_depth": 7
    },
    {
      "name": "compile_file",
      "file_path": "src/compiler.ml",
      "start_line": 64,
      "end_line": 84,
      "length": 21,
      "cyclomatic_complexity": 6,
      "cognitive_complexity": 3,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 0,
      "nesting_depth": 3
    },
    {
      "name": "lookup_var",
      "file_path": "src/value_operations_env.ml",
      "start_line": 22,
      "end_line": 62,
      "length": 41,
      "cyclomatic_complexity": 24,
      "cognitive_complexity": 105,
      "is_recursive": true,
      "parameters_count": 2,
      "match_expressions_count": 5,
      "nesting_depth": 7
    },
    {
      "name": "merge_env",
      "file_path": "src/value_operations_env.ml",
      "start_line": 73,
      "end_line": 83,
      "length": 11,
      "cyclomatic_complexity": 4,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 0,
      "nesting_depth": 2
    },
    {
      "name": "bind_vars",
      "file_path": "src/value_operations_env.ml",
      "start_line": 94,
      "end_line": 96,
      "length": 3,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "print_env",
      "file_path": "src/value_operations_env.ml",
      "start_line": 104,
      "end_line": 108,
      "length": 5,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "string_of_env",
      "file_path": "src/value_operations_env.ml",
      "start_line": 110,
      "end_line": 118,
      "length": 9,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 1
    },
    {
      "name": "add_unique_to_ref",
      "file_path": "src/parser_expressions_token_reducer.ml",
      "start_line": 7,
      "end_line": 9,
      "length": 3,
      "cyclomatic_complexity": 2,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 0,
      "nesting_depth": 1
    },
    {
      "name": "default_processor",
      "file_path": "src/parser_expressions_token_reducer.ml",
      "start_line": 121,
      "end_line": 152,
      "length": 32,
      "cyclomatic_complexity": 21,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "try_process_token_classification",
      "file_path": "src/parser_expressions_token_reducer.ml",
      "start_line": 154,
      "end_line": 184,
      "length": 31,
      "cyclomatic_complexity": 19,
      "cognitive_complexity": 15,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 4,
      "nesting_depth": 1
    },
    {
      "name": "process_token",
      "file_path": "src/parser_expressions_token_reducer.ml",
      "start_line": 186,
      "end_line": 188,
      "length": 3,
      "cyclomatic_complexity": 2,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 0,
      "nesting_depth": 1
    },
    {
      "name": "create_group_collections",
      "file_path": "src/parser_expressions_token_reducer.ml",
      "start_line": 212,
      "end_line": 219,
      "length": 8,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "classify_and_add_token",
      "file_path": "src/parser_expressions_token_reducer.ml",
      "start_line": 221,
      "end_line": 246,
      "length": 26,
      "cyclomatic_complexity": 13,
      "cognitive_complexity": 12,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 4,
      "nesting_depth": 1
    },
    {
      "name": "calculate_dedup_stats",
      "file_path": "src/parser_expressions_token_reducer.ml",
      "start_line": 248,
      "end_line": 266,
      "length": 19,
      "cyclomatic_complexity": 2,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 0,
      "nesting_depth": 1
    },
    {
      "name": "analyze_token_duplication",
      "file_path": "src/parser_expressions_token_reducer.ml",
      "start_line": 268,
      "end_line": 273,
      "length": 6,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 2
    },
    {
      "name": "generate_dedup_report",
      "file_path": "src/parser_expressions_token_reducer.ml",
      "start_line": 275,
      "end_line": 294,
      "length": 20,
      "cyclomatic_complexity": 2,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 1
    },
    {
      "name": "create_expression_processor",
      "file_path": "src/parser_expressions_token_reducer.ml",
      "start_line": 298,
      "end_line": 332,
      "length": 35,
      "cyclomatic_complexity": 6,
      "cognitive_complexity": 5,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 1,
      "nesting_depth": 5
    },
    {
      "name": "get_processing_stats",
      "file_path": "src/parser_expressions_token_reducer.ml",
      "start_line": 334,
      "end_line": 352,
      "length": 19,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 4,
      "match_expressions_count": 0,
      "nesting_depth": 1
    },
    {
      "name": "check_fullwidth_symbol",
      "file_path": "src/lexer_punctuation_recognition.ml",
      "start_line": 6,
      "end_line": 9,
      "length": 4,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "is_fullwidth_digit",
      "file_path": "src/lexer_punctuation_recognition.ml",
      "start_line": 11,
      "end_line": 20,
      "length": 10,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 4,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 1
    },
    {
      "name": "handle_colon_sequence",
      "file_path": "src/lexer_punctuation_recognition.ml",
      "start_line": 22,
      "end_line": 31,
      "length": 10,
      "cyclomatic_complexity": 2,
      "cognitive_complexity": 2,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 0,
      "nesting_depth": 3
    },
    {
      "name": "handle_fullwidth_symbols",
      "file_path": "src/lexer_punctuation_recognition.ml",
      "start_line": 33,
      "end_line": 52,
      "length": 20,
      "cyclomatic_complexity": 9,
      "cognitive_complexity": 36,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 0,
      "nesting_depth": 8
    },
    {
      "name": "check_chinese_punctuation",
      "file_path": "src/lexer_punctuation_recognition.ml",
      "start_line": 54,
      "end_line": 56,
      "length": 3,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 4,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "handle_chinese_punctuation",
      "file_path": "src/lexer_punctuation_recognition.ml",
      "start_line": 58,
      "end_line": 84,
      "length": 27,
      "cyclomatic_complexity": 11,
      "cognitive_complexity": 16,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 0,
      "nesting_depth": 4
    },
    {
      "name": "handle_chinese_operators",
      "file_path": "src/lexer_punctuation_recognition.ml",
      "start_line": 86,
      "end_line": 94,
      "length": 9,
      "cyclomatic_complexity": 2,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 0,
      "nesting_depth": 1
    },
    {
      "name": "handle_arrow_symbols",
      "file_path": "src/lexer_punctuation_recognition.ml",
      "start_line": 96,
      "end_line": 113,
      "length": 18,
      "cyclomatic_complexity": 4,
      "cognitive_complexity": 6,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 0,
      "nesting_depth": 3
    },
    {
      "name": "recognize_chinese_punctuation",
      "file_path": "src/lexer_punctuation_recognition.ml",
      "start_line": 115,
      "end_line": 130,
      "length": 16,
      "cyclomatic_complexity": 7,
      "cognitive_complexity": 6,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 1,
      "nesting_depth": 1
    },
    {
      "name": "recognize_pipe_right_bracket",
      "file_path": "src/lexer_punctuation_recognition.ml",
      "start_line": 132,
      "end_line": 134,
      "length": 3,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "match_pattern",
      "file_path": "src/pattern_matcher.ml",
      "start_line": 8,
      "end_line": 54,
      "length": 47,
      "cyclomatic_complexity": 35,
      "cognitive_complexity": 122,
      "is_recursive": true,
      "parameters_count": 3,
      "match_expressions_count": 6,
      "nesting_depth": 7
    },
    {
      "name": "evaluate_guard",
      "file_path": "src/pattern_matcher.ml",
      "start_line": 56,
      "end_line": 59,
      "length": 4,
      "cyclomatic_complexity": 3,
      "cognitive_complexity": 2,
      "is_recursive": false,
      "parameters_count": 3,
      "match_expressions_count": 1,
      "nesting_depth": 2
    },
    {
      "name": "execute_single_branch",
      "file_path": "src/pattern_matcher.ml",
      "start_line": 61,
      "end_line": 71,
      "length": 11,
      "cyclomatic_complexity": 8,
      "cognitive_complexity": 14,
      "is_recursive": false,
      "parameters_count": 4,
      "match_expressions_count": 2,
      "nesting_depth": 3
    },
    {
      "name": "execute_match",
      "file_path": "src/pattern_matcher.ml",
      "start_line": 73,
      "end_line": 80,
      "length": 8,
      "cyclomatic_complexity": 7,
      "cognitive_complexity": 9,
      "is_recursive": true,
      "parameters_count": 4,
      "match_expressions_count": 2,
      "nesting_depth": 2
    },
    {
      "name": "execute_single_exception_branch",
      "file_path": "src/pattern_matcher.ml",
      "start_line": 82,
      "end_line": 92,
      "length": 11,
      "cyclomatic_complexity": 8,
      "cognitive_complexity": 14,
      "is_recursive": false,
      "parameters_count": 4,
      "match_expressions_count": 2,
      "nesting_depth": 3
    },
    {
      "name": "execute_exception_match",
      "file_path": "src/pattern_matcher.ml",
      "start_line": 94,
      "end_line": 101,
      "length": 8,
      "cyclomatic_complexity": 7,
      "cognitive_complexity": 9,
      "is_recursive": true,
      "parameters_count": 4,
      "match_expressions_count": 2,
      "nesting_depth": 2
    },
    {
      "name": "register_constructors",
      "file_path": "src/pattern_matcher.ml",
      "start_line": 103,
      "end_line": 128,
      "length": 26,
      "cyclomatic_complexity": 9,
      "cognitive_complexity": 6,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 2,
      "nesting_depth": 1
    },
    {
      "name": "try_match_keyword",
      "file_path": "src/keyword_matcher.ml",
      "start_line": 23,
      "end_line": 46,
      "length": 24,
      "cyclomatic_complexity": 11,
      "cognitive_complexity": 32,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 2,
      "nesting_depth": 8
    },
    {
      "name": "match_by_prefix",
      "file_path": "src/keyword_matcher.ml",
      "start_line": 48,
      "end_line": 80,
      "length": 33,
      "cyclomatic_complexity": 11,
      "cognitive_complexity": 26,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 2,
      "nesting_depth": 7
    },
    {
      "name": "analyze_keywords",
      "file_path": "src/keyword_matcher.ml",
      "start_line": 94,
      "end_line": 118,
      "length": 25,
      "cyclomatic_complexity": 5,
      "cognitive_complexity": 9,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 1,
      "nesting_depth": 10
    },
    {
      "name": "print_keyword_stats",
      "file_path": "src/keyword_matcher.ml",
      "start_line": 120,
      "end_line": 131,
      "length": 12,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "is_keyword",
      "file_path": "src/keyword_matcher.ml",
      "start_line": 139,
      "end_line": 140,
      "length": 2,
      "cyclomatic_complexity": 3,
      "cognitive_complexity": 2,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 1,
      "nesting_depth": 1
    },
    {
      "name": "handle_error",
      "file_path": "src/error_handler_core.ml",
      "start_line": 14,
      "end_line": 45,
      "length": 32,
      "cyclomatic_complexity": 6,
      "cognitive_complexity": 6,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 1,
      "nesting_depth": 7
    },
    {
      "name": "parse_error",
      "file_path": "src/error_handler_core.ml",
      "start_line": 50,
      "end_line": 53,
      "length": 4,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 4,
      "match_expressions_count": 0,
      "nesting_depth": 2
    },
    {
      "name": "type_error",
      "file_path": "src/error_handler_core.ml",
      "start_line": 55,
      "end_line": 58,
      "length": 4,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 4,
      "match_expressions_count": 0,
      "nesting_depth": 2
    },
    {
      "name": "runtime_error",
      "file_path": "src/error_handler_core.ml",
      "start_line": 60,
      "end_line": 63,
      "length": 4,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 3,
      "match_expressions_count": 0,
      "nesting_depth": 2
    },
    {
      "name": "internal_error",
      "file_path": "src/error_handler_core.ml",
      "start_line": 65,
      "end_line": 70,
      "length": 6,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 3,
      "match_expressions_count": 0,
      "nesting_depth": 2
    },
    {
      "name": "handle_multiple_errors",
      "file_path": "src/error_handler_core.ml",
      "start_line": 72,
      "end_line": 76,
      "length": 5,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 0,
      "nesting_depth": 2
    },
    {
      "name": "token_to_string",
      "file_path": "src/token_unified.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "is_deprecated",
      "file_path": "src/token_unified.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "get_chinese_name",
      "file_path": "src/token_unified.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "reverse_string",
      "file_path": "src/builtin_shared_utils.ml",
      "start_line": 15,
      "end_line": 21,
      "length": 7,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 3,
      "match_expressions_count": 0,
      "nesting_depth": 2
    },
    {
      "name": "validate_single_param",
      "file_path": "src/builtin_shared_utils.ml",
      "start_line": 23,
      "end_line": 25,
      "length": 3,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 6,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "validate_double_params",
      "file_path": "src/builtin_shared_utils.ml",
      "start_line": 27,
      "end_line": 30,
      "length": 4,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 4,
      "match_expressions_count": 0,
      "nesting_depth": 1
    },
    {
      "name": "create_binary_function",
      "file_path": "src/builtin_shared_utils.ml",
      "start_line": 39,
      "end_line": 45,
      "length": 7,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 4,
      "match_expressions_count": 0,
      "nesting_depth": 2
    },
    {
      "name": "create_aggregator",
      "file_path": "src/builtin_shared_utils.ml",
      "start_line": 58,
      "end_line": 59,
      "length": 2,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 3,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "convert_with_strategy",
      "file_path": "src/token_conversion_keywords_refactored.ml",
      "start_line": 155,
      "end_line": 291,
      "length": 137,
      "cyclomatic_complexity": 125,
      "cognitive_complexity": 973,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 2,
      "nesting_depth": 2
    },
    {
      "name": "infer_module_category",
      "file_path": "src/logger_init_helpers.ml",
      "start_line": 25,
      "end_line": 35,
      "length": 11,
      "cyclomatic_complexity": 11,
      "cognitive_complexity": 15,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 1,
      "nesting_depth": 1
    },
    {
      "name": "init_module_logger",
      "file_path": "src/logger_init_helpers.ml",
      "start_line": 37,
      "end_line": 49,
      "length": 13,
      "cyclomatic_complexity": 9,
      "cognitive_complexity": 4,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 1,
      "nesting_depth": 2
    },
    {
      "name": "init_value_modules",
      "file_path": "src/logger_init_helpers.ml",
      "start_line": 54,
      "end_line": 69,
      "length": 16,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "init_type_modules",
      "file_path": "src/logger_init_helpers.ml",
      "start_line": 71,
      "end_line": 74,
      "length": 4,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 1
    },
    {
      "name": "smart_init_related_modules",
      "file_path": "src/logger_init_helpers.ml",
      "start_line": 76,
      "end_line": 81,
      "length": 6,
      "cyclomatic_complexity": 5,
      "cognitive_complexity": 4,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 1,
      "nesting_depth": 1
    },
    {
      "name": "verify_conversion",
      "file_path": "src/token_compatibility_bridge.ml",
      "start_line": 213,
      "end_line": 219,
      "length": 7,
      "cyclomatic_complexity": 3,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 3
    },
    {
      "name": "safe_to_lexer_token",
      "file_path": "src/token_compatibility_bridge.ml",
      "start_line": 227,
      "end_line": 229,
      "length": 3,
      "cyclomatic_complexity": 2,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 1
    },
    {
      "name": "safe_from_lexer_token",
      "file_path": "src/token_compatibility_bridge.ml",
      "start_line": 231,
      "end_line": 232,
      "length": 2,
      "cyclomatic_complexity": 2,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 1
    },
    {
      "name": "is_lexer_classical_token",
      "file_path": "src/conversion_lexer.ml",
      "start_line": 221,
      "end_line": 224,
      "length": 4,
      "cyclomatic_complexity": 3,
      "cognitive_complexity": 2,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 1,
      "nesting_depth": 1
    },
    {
      "name": "convert_lexer_token",
      "file_path": "src/conversion_lexer.ml",
      "start_line": 232,
      "end_line": 265,
      "length": 34,
      "cyclomatic_complexity": 17,
      "cognitive_complexity": 27,
      "is_recursive": true,
      "parameters_count": 1,
      "match_expressions_count": 3,
      "nesting_depth": 2
    },
    {
      "name": "is_lexer_supported_token",
      "file_path": "src/conversion_lexer.ml",
      "start_line": 267,
      "end_line": 269,
      "length": 3,
      "cyclomatic_complexity": 3,
      "cognitive_complexity": 2,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 1,
      "nesting_depth": 1
    },
    {
      "name": "get_lexer_conversion_type",
      "file_path": "src/conversion_lexer.ml",
      "start_line": 271,
      "end_line": 278,
      "length": 8,
      "cyclomatic_complexity": 6,
      "cognitive_complexity": 15,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 5
    },
    {
      "name": "convert_lexer_token_list",
      "file_path": "src/conversion_lexer.ml",
      "start_line": 280,
      "end_line": 282,
      "length": 3,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "get_lexer_conversion_stats",
      "file_path": "src/conversion_lexer.ml",
      "start_line": 284,
      "end_line": 291,
      "length": 8,
      "cyclomatic_complexity": 2,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 3
    },
    {
      "name": "convert_identifier_token",
      "file_path": "src/conversion_lexer.ml",
      "start_line": 295,
      "end_line": 319,
      "length": 25,
      "cyclomatic_complexity": 16,
      "cognitive_complexity": 45,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 5,
      "nesting_depth": 5
    },
    {
      "name": "convert_lexer_token_exn",
      "file_path": "src/conversion_lexer.ml",
      "start_line": 321,
      "end_line": 326,
      "length": 6,
      "cyclomatic_complexity": 4,
      "cognitive_complexity": 3,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 1,
      "nesting_depth": 1
    },
    {
      "name": "get_lexer_performance_stats",
      "file_path": "src/conversion_lexer.ml",
      "start_line": 329,
      "end_line": 354,
      "length": 26,
      "cyclomatic_complexity": 3,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 1
    },
    {
      "name": "analyze_expr_recursively",
      "file_path": "src/performance_analyzer_base.ml",
      "start_line": 13,
      "end_line": 44,
      "length": 32,
      "cyclomatic_complexity": 8,
      "cognitive_complexity": 5,
      "is_recursive": true,
      "parameters_count": 3,
      "match_expressions_count": 1,
      "nesting_depth": 5
    },
    {
      "name": "make_performance_suggestion",
      "file_path": "src/performance_analyzer_base.ml",
      "start_line": 46,
      "end_line": 54,
      "length": 9,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 5,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "list_optimization_suggestion",
      "file_path": "src/performance_analyzer_base.ml",
      "start_line": 58,
      "end_line": 61,
      "length": 4,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "pattern_matching_suggestion",
      "file_path": "src/performance_analyzer_base.ml",
      "start_line": 63,
      "end_line": 77,
      "length": 15,
      "cyclomatic_complexity": 2,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 0,
      "nesting_depth": 1
    },
    {
      "name": "complexity_suggestion",
      "file_path": "src/performance_analyzer_base.ml",
      "start_line": 79,
      "end_line": 92,
      "length": 14,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "create_performance_analyzer",
      "file_path": "src/performance_analyzer_base.ml",
      "start_line": 94,
      "end_line": 95,
      "length": 2,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 5,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "nth",
      "file_path": "src/list_utils.ml",
      "start_line": 17,
      "end_line": 20,
      "length": 4,
      "cyclomatic_complexity": 5,
      "cognitive_complexity": 7,
      "is_recursive": true,
      "parameters_count": 2,
      "match_expressions_count": 1,
      "nesting_depth": 2
    },
    {
      "name": "mapi_safe",
      "file_path": "src/list_utils.ml",
      "start_line": 34,
      "end_line": 41,
      "length": 8,
      "cyclomatic_complexity": 5,
      "cognitive_complexity": 2,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 1,
      "nesting_depth": 1
    },
    {
      "name": "filter_map",
      "file_path": "src/list_utils.ml",
      "start_line": 43,
      "end_line": 49,
      "length": 7,
      "cyclomatic_complexity": 5,
      "cognitive_complexity": 2,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 1,
      "nesting_depth": 1
    },
    {
      "name": "partition_map",
      "file_path": "src/list_utils.ml",
      "start_line": 51,
      "end_line": 60,
      "length": 10,
      "cyclomatic_complexity": 6,
      "cognitive_complexity": 3,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 1,
      "nesting_depth": 1
    },
    {
      "name": "scan_left",
      "file_path": "src/list_utils.ml",
      "start_line": 65,
      "end_line": 74,
      "length": 10,
      "cyclomatic_complexity": 3,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 3,
      "match_expressions_count": 0,
      "nesting_depth": 1
    },
    {
      "name": "count_if",
      "file_path": "src/list_utils.ml",
      "start_line": 101,
      "end_line": 104,
      "length": 4,
      "cyclomatic_complexity": 2,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 0,
      "nesting_depth": 1
    },
    {
      "name": "group_by",
      "file_path": "src/list_utils.ml",
      "start_line": 108,
      "end_line": 122,
      "length": 15,
      "cyclomatic_complexity": 7,
      "cognitive_complexity": 6,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 1,
      "nesting_depth": 3
    },
    {
      "name": "unique",
      "file_path": "src/list_utils.ml",
      "start_line": 124,
      "end_line": 130,
      "length": 7,
      "cyclomatic_complexity": 4,
      "cognitive_complexity": 2,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 1
    },
    {
      "name": "unique_by",
      "file_path": "src/list_utils.ml",
      "start_line": 132,
      "end_line": 140,
      "length": 9,
      "cyclomatic_complexity": 4,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 0,
      "nesting_depth": 2
    },
    {
      "name": "chunk",
      "file_path": "src/list_utils.ml",
      "start_line": 142,
      "end_line": 154,
      "length": 13,
      "cyclomatic_complexity": 6,
      "cognitive_complexity": 10,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 0,
      "nesting_depth": 4
    },
    {
      "name": "interleave",
      "file_path": "src/list_utils.ml",
      "start_line": 156,
      "end_line": 162,
      "length": 7,
      "cyclomatic_complexity": 5,
      "cognitive_complexity": 4,
      "is_recursive": true,
      "parameters_count": 2,
      "match_expressions_count": 1,
      "nesting_depth": 1
    },
    {
      "name": "has_duplicates",
      "file_path": "src/list_utils.ml",
      "start_line": 175,
      "end_line": 178,
      "length": 4,
      "cyclomatic_complexity": 4,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 1
    },
    {
      "name": "cartesian_product",
      "file_path": "src/list_utils.ml",
      "start_line": 186,
      "end_line": 188,
      "length": 3,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "combinations",
      "file_path": "src/list_utils.ml",
      "start_line": 190,
      "end_line": 200,
      "length": 11,
      "cyclomatic_complexity": 5,
      "cognitive_complexity": 7,
      "is_recursive": true,
      "parameters_count": 2,
      "match_expressions_count": 1,
      "nesting_depth": 4
    },
    {
      "name": "sliding_window",
      "file_path": "src/list_utils.ml",
      "start_line": 212,
      "end_line": 225,
      "length": 14,
      "cyclomatic_complexity": 8,
      "cognitive_complexity": 8,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 1,
      "nesting_depth": 4
    },
    {
      "name": "convert_basic_keyword_token",
      "file_path": "src/keyword_converter.ml",
      "start_line": 180,
      "end_line": 188,
      "length": 9,
      "cyclomatic_complexity": 4,
      "cognitive_complexity": 2,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 1
    },
    {
      "name": "convert_type_keyword_token",
      "file_path": "src/keyword_converter.ml",
      "start_line": 190,
      "end_line": 197,
      "length": 8,
      "cyclomatic_complexity": 4,
      "cognitive_complexity": 2,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 1
    },
    {
      "name": "convert_literal_token",
      "file_path": "src/literal_converter.ml",
      "start_line": 16,
      "end_line": 21,
      "length": 6,
      "cyclomatic_complexity": 4,
      "cognitive_complexity": 2,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 1
    },
    {
      "name": "generate_let_binding_code",
      "file_path": "src/c_codegen_statements.ml",
      "start_line": 13,
      "end_line": 17,
      "length": 5,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 3,
      "match_expressions_count": 0,
      "nesting_depth": 2
    },
    {
      "name": "gen_program",
      "file_path": "src/c_codegen_statements.ml",
      "start_line": 55,
      "end_line": 64,
      "length": 10,
      "cyclomatic_complexity": 4,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 0,
      "nesting_depth": 3
    },
    {
      "name": "generate_builtin_bindings",
      "file_path": "src/c_codegen_statements.ml",
      "start_line": 66,
      "end_line": 84,
      "length": 19,
      "cyclomatic_complexity": 2,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 1
    },
    {
      "name": "generate_main_function",
      "file_path": "src/c_codegen_statements.ml",
      "start_line": 86,
      "end_line": 93,
      "length": 8,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "generate_c_code",
      "file_path": "src/c_codegen_statements.ml",
      "start_line": 95,
      "end_line": 104,
      "length": 10,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 0,
      "nesting_depth": 6
    },
    {
      "name": "compile_to_c",
      "file_path": "src/c_codegen_statements.ml",
      "start_line": 106,
      "end_line": 123,
      "length": 18,
      "cyclomatic_complexity": 5,
      "cognitive_complexity": 2,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 0,
      "nesting_depth": 4
    },
    {
      "name": "create_basic_io_env",
      "file_path": "src/types_builtin.ml",
      "start_line": 6,
      "end_line": 12,
      "length": 7,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 2
    },
    {
      "name": "add_basic_list_functions",
      "file_path": "src/types_builtin.ml",
      "start_line": 14,
      "end_line": 28,
      "length": 15,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "add_higher_order_list_functions",
      "file_path": "src/types_builtin.ml",
      "start_line": 30,
      "end_line": 60,
      "length": 31,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "add_special_list_functions",
      "file_path": "src/types_builtin.ml",
      "start_line": 62,
      "end_line": 82,
      "length": 21,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "create_list_functions_env",
      "file_path": "src/types_builtin.ml",
      "start_line": 84,
      "end_line": 86,
      "length": 3,
      "cyclomatic_complexity": 4,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "create_math_functions_env",
      "file_path": "src/types_builtin.ml",
      "start_line": 88,
      "end_line": 109,
      "length": 22,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 9
    },
    {
      "name": "create_extended_math_functions_env",
      "file_path": "src/types_builtin.ml",
      "start_line": 111,
      "end_line": 134,
      "length": 24,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 11
    },
    {
      "name": "create_array_functions_env",
      "file_path": "src/types_builtin.ml",
      "start_line": 136,
      "end_line": 154,
      "length": 19,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "create_reference_functions_env",
      "file_path": "src/types_builtin.ml",
      "start_line": 156,
      "end_line": 163,
      "length": 8,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "create_string_functions_env",
      "file_path": "src/types_builtin.ml",
      "start_line": 165,
      "end_line": 178,
      "length": 14,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 1
    },
    {
      "name": "create_file_functions_env",
      "file_path": "src/types_builtin.ml",
      "start_line": 180,
      "end_line": 211,
      "length": 32,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 4
    },
    {
      "name": "create_type_conversion_functions_env",
      "file_path": "src/types_builtin.ml",
      "start_line": 213,
      "end_line": 219,
      "length": 7,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 4
    },
    {
      "name": "builtin_env",
      "file_path": "src/types_builtin.ml",
      "start_line": 221,
      "end_line": 226,
      "length": 6,
      "cyclomatic_complexity": 10,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "get_math_functions",
      "file_path": "src/types_builtin.ml",
      "start_line": 243,
      "end_line": 271,
      "length": 29,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "get_string_functions",
      "file_path": "src/types_builtin.ml",
      "start_line": 275,
      "end_line": 276,
      "length": 2,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "bind_and_evaluate",
      "file_path": "src/statement_executor.ml",
      "start_line": 12,
      "end_line": 16,
      "length": 5,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 3,
      "match_expressions_count": 0,
      "nesting_depth": 2
    },
    {
      "name": "execute_stmt",
      "file_path": "src/statement_executor.ml",
      "start_line": 18,
      "end_line": 79,
      "length": 62,
      "cyclomatic_complexity": 25,
      "cognitive_complexity": 33,
      "is_recursive": true,
      "parameters_count": 2,
      "match_expressions_count": 3,
      "nesting_depth": 7
    },
    {
      "name": "execute_program",
      "file_path": "src/statement_executor.ml",
      "start_line": 81,
      "end_line": 99,
      "length": 19,
      "cyclomatic_complexity": 8,
      "cognitive_complexity": 5,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 1,
      "nesting_depth": 4
    },
    {
      "name": "skip_newlines",
      "file_path": "src/parser_ancient.ml",
      "start_line": 20,
      "end_line": 23,
      "length": 4,
      "cyclomatic_complexity": 2,
      "cognitive_complexity": 1,
      "is_recursive": true,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 2
    },
    {
      "name": "parse_natural_arithmetic_continuation",
      "file_path": "src/parser_ancient.ml",
      "start_line": 25,
      "end_line": 36,
      "length": 12,
      "cyclomatic_complexity": 4,
      "cognitive_complexity": 3,
      "is_recursive": false,
      "parameters_count": 3,
      "match_expressions_count": 1,
      "nesting_depth": 4
    },
    {
      "name": "parse_ancient_function_definition",
      "file_path": "src/parser_ancient.ml",
      "start_line": 38,
      "end_line": 62,
      "length": 25,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 0,
      "nesting_depth": 12
    },
    {
      "name": "parse_ancient_match_expression",
      "file_path": "src/parser_ancient.ml",
      "start_line": 64,
      "end_line": 111,
      "length": 48,
      "cyclomatic_complexity": 7,
      "cognitive_complexity": 8,
      "is_recursive": false,
      "parameters_count": 3,
      "match_expressions_count": 1,
      "nesting_depth": 24
    },
    {
      "name": "parse_ancient_list_expression",
      "file_path": "src/parser_ancient.ml",
      "start_line": 113,
      "end_line": 143,
      "length": 31,
      "cyclomatic_complexity": 10,
      "cognitive_complexity": 20,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 2,
      "nesting_depth": 8
    },
    {
      "name": "parse_ancient_conditional_expression",
      "file_path": "src/parser_ancient.ml",
      "start_line": 145,
      "end_line": 166,
      "length": 22,
      "cyclomatic_complexity": 2,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 0,
      "nesting_depth": 7
    },
    {
      "name": "parse_wenyan_let_expression",
      "file_path": "src/parser_ancient.ml",
      "start_line": 168,
      "end_line": 211,
      "length": 44,
      "cyclomatic_complexity": 10,
      "cognitive_complexity": 9,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 1,
      "nesting_depth": 17
    },
    {
      "name": "parse_wenyan_simple_let_expression",
      "file_path": "src/parser_ancient.ml",
      "start_line": 213,
      "end_line": 232,
      "length": 20,
      "cyclomatic_complexity": 2,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 0,
      "nesting_depth": 7
    },
    {
      "name": "create_context",
      "file_path": "src/c_codegen_context.ml",
      "start_line": 25,
      "end_line": 34,
      "length": 10,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "gen_var_name",
      "file_path": "src/c_codegen_context.ml",
      "start_line": 36,
      "end_line": 40,
      "length": 5,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 0,
      "nesting_depth": 1
    },
    {
      "name": "gen_label_name",
      "file_path": "src/c_codegen_context.ml",
      "start_line": 42,
      "end_line": 46,
      "length": 5,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 0,
      "nesting_depth": 1
    },
    {
      "name": "has_chinese_chars",
      "file_path": "src/c_codegen_context.ml",
      "start_line": 48,
      "end_line": 59,
      "length": 12,
      "cyclomatic_complexity": 3,
      "cognitive_complexity": 4,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 6
    },
    {
      "name": "char_escape_table",
      "file_path": "src/c_codegen_context.ml",
      "start_line": 61,
      "end_line": 151,
      "length": 91,
      "cyclomatic_complexity": 71,
      "cognitive_complexity": 202,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 2,
      "nesting_depth": 8
    },
    {
      "name": "execute_program",
      "file_path": "src/codegen.ml",
      "start_line": 32,
      "end_line": 51,
      "length": 20,
      "cyclomatic_complexity": 6,
      "cognitive_complexity": 3,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 2
    },
    {
      "name": "eval_expr",
      "file_path": "src/codegen.ml",
      "start_line": 62,
      "end_line": 65,
      "length": 4,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 0,
      "nesting_depth": 1
    },
    {
      "name": "eval_literal",
      "file_path": "src/codegen.ml",
      "start_line": 77,
      "end_line": 86,
      "length": 10,
      "cyclomatic_complexity": 7,
      "cognitive_complexity": 6,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 1,
      "nesting_depth": 1
    },
    {
      "name": "execute_int_arithmetic",
      "file_path": "src/codegen.ml",
      "start_line": 90,
      "end_line": 98,
      "length": 9,
      "cyclomatic_complexity": 8,
      "cognitive_complexity": 7,
      "is_recursive": false,
      "parameters_count": 3,
      "match_expressions_count": 1,
      "nesting_depth": 1
    },
    {
      "name": "execute_mixed_arithmetic",
      "file_path": "src/codegen.ml",
      "start_line": 100,
      "end_line": 119,
      "length": 20,
      "cyclomatic_complexity": 11,
      "cognitive_complexity": 10,
      "is_recursive": false,
      "parameters_count": 3,
      "match_expressions_count": 1,
      "nesting_depth": 1
    },
    {
      "name": "execute_comparison",
      "file_path": "src/codegen.ml",
      "start_line": 121,
      "end_line": 136,
      "length": 16,
      "cyclomatic_complexity": 9,
      "cognitive_complexity": 8,
      "is_recursive": false,
      "parameters_count": 3,
      "match_expressions_count": 1,
      "nesting_depth": 1
    },
    {
      "name": "execute_logical",
      "file_path": "src/codegen.ml",
      "start_line": 138,
      "end_line": 143,
      "length": 6,
      "cyclomatic_complexity": 7,
      "cognitive_complexity": 6,
      "is_recursive": false,
      "parameters_count": 3,
      "match_expressions_count": 1,
      "nesting_depth": 1
    },
    {
      "name": "execute_string_concat",
      "file_path": "src/codegen.ml",
      "start_line": 145,
      "end_line": 151,
      "length": 7,
      "cyclomatic_complexity": 4,
      "cognitive_complexity": 3,
      "is_recursive": false,
      "parameters_count": 3,
      "match_expressions_count": 1,
      "nesting_depth": 1
    },
    {
      "name": "execute_binary_op",
      "file_path": "src/codegen.ml",
      "start_line": 153,
      "end_line": 186,
      "length": 34,
      "cyclomatic_complexity": 15,
      "cognitive_complexity": 14,
      "is_recursive": false,
      "parameters_count": 3,
      "match_expressions_count": 4,
      "nesting_depth": 2
    },
    {
      "name": "match_pattern",
      "file_path": "src/codegen.ml",
      "start_line": 188,
      "end_line": 210,
      "length": 23,
      "cyclomatic_complexity": 17,
      "cognitive_complexity": 26,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 3,
      "nesting_depth": 3
    },
    {
      "name": "unsupported_expression_error",
      "file_path": "src/error_utils.ml",
      "start_line": 41,
      "end_line": 44,
      "length": 4,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 1
    },
    {
      "name": "unsupported_expression_error_with_function",
      "file_path": "src/error_utils.ml",
      "start_line": 46,
      "end_line": 49,
      "length": 4,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 0,
      "nesting_depth": 1
    },
    {
      "name": "unsupported_expression_error_detailed",
      "file_path": "src/error_utils.ml",
      "start_line": 51,
      "end_line": 54,
      "length": 4,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 3,
      "match_expressions_count": 0,
      "nesting_depth": 1
    },
    {
      "name": "fail_unsupported_expression",
      "file_path": "src/error_utils.ml",
      "start_line": 56,
      "end_line": 59,
      "length": 4,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 1
    },
    {
      "name": "fail_unsupported_expression_with_function",
      "file_path": "src/error_utils.ml",
      "start_line": 61,
      "end_line": 64,
      "length": 4,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 0,
      "nesting_depth": 1
    },
    {
      "name": "fail_unsupported_expression_detailed",
      "file_path": "src/error_utils.ml",
      "start_line": 66,
      "end_line": 69,
      "length": 4,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 3,
      "match_expressions_count": 0,
      "nesting_depth": 1
    },
    {
      "name": "unsupported_statement_error",
      "file_path": "src/error_utils.ml",
      "start_line": 71,
      "end_line": 74,
      "length": 4,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 1
    },
    {
      "name": "fail_unsupported_statement",
      "file_path": "src/error_utils.ml",
      "start_line": 76,
      "end_line": 78,
      "length": 3,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 1
    },
    {
      "name": "get_analyzer_info",
      "file_path": "src/refactoring_analyzer.ml",
      "start_line": 63,
      "end_line": 86,
      "length": 24,
      "cyclomatic_complexity": 4,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "run_comprehensive_analysis",
      "file_path": "src/refactoring_analyzer.ml",
      "start_line": 88,
      "end_line": 108,
      "length": 21,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 2
    },
    {
      "name": "read_string_until",
      "file_path": "src/lexer_utils.ml",
      "start_line": 19,
      "end_line": 27,
      "length": 9,
      "cyclomatic_complexity": 3,
      "cognitive_complexity": 3,
      "is_recursive": false,
      "parameters_count": 3,
      "match_expressions_count": 0,
      "nesting_depth": 3
    },
    {
      "name": "process_escape_sequences",
      "file_path": "src/lexer_utils.ml",
      "start_line": 44,
      "end_line": 80,
      "length": 37,
      "cyclomatic_complexity": 11,
      "cognitive_complexity": 28,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 1,
      "nesting_depth": 5
    },
    {
      "name": "read_fullwidth_number_sequence",
      "file_path": "src/lexer_utils.ml",
      "start_line": 86,
      "end_line": 100,
      "length": 15,
      "cyclomatic_complexity": 4,
      "cognitive_complexity": 3,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 6
    },
    {
      "name": "convert_fullwidth_number_sequence",
      "file_path": "src/lexer_utils.ml",
      "start_line": 102,
      "end_line": 114,
      "length": 13,
      "cyclomatic_complexity": 6,
      "cognitive_complexity": 12,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 1,
      "nesting_depth": 4
    },
    {
      "name": "ascii_keywords",
      "file_path": "src/keyword_matcher_tables_ascii.ml",
      "start_line": 7,
      "end_line": 47,
      "length": 41,
      "cyclomatic_complexity": 4,
      "cognitive_complexity": 3,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 3
    },
    {
      "name": "apply_subst",
      "file_path": "src/types_subst.ml",
      "start_line": 9,
      "end_line": 40,
      "length": 32,
      "cyclomatic_complexity": 20,
      "cognitive_complexity": 26,
      "is_recursive": true,
      "parameters_count": 2,
      "match_expressions_count": 1,
      "nesting_depth": 2
    },
    {
      "name": "apply_subst_to_scheme",
      "file_path": "src/types_subst.ml",
      "start_line": 42,
      "end_line": 45,
      "length": 4,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 4,
      "match_expressions_count": 0,
      "nesting_depth": 1
    },
    {
      "name": "compose_subst",
      "file_path": "src/types_subst.ml",
      "start_line": 50,
      "end_line": 55,
      "length": 6,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 0,
      "nesting_depth": 1
    },
    {
      "name": "scheme_free_vars",
      "file_path": "src/types_subst.ml",
      "start_line": 57,
      "end_line": 59,
      "length": 3,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 3,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "env_free_vars",
      "file_path": "src/types_subst.ml",
      "start_line": 61,
      "end_line": 63,
      "length": 3,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "generalize",
      "file_path": "src/types_subst.ml",
      "start_line": 65,
      "end_line": 70,
      "length": 6,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 0,
      "nesting_depth": 3
    },
    {
      "name": "instantiate",
      "file_path": "src/types_subst.ml",
      "start_line": 72,
      "end_line": 79,
      "length": 8,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 3,
      "match_expressions_count": 0,
      "nesting_depth": 1
    },
    {
      "name": "wrap_legacy_exception",
      "file_path": "src/compiler_errors.ml",
      "start_line": 23,
      "end_line": 41,
      "length": 19,
      "cyclomatic_complexity": 13,
      "cognitive_complexity": 12,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 1,
      "nesting_depth": 4
    },
    {
      "name": "safe_execute",
      "file_path": "src/compiler_errors.ml",
      "start_line": 43,
      "end_line": 65,
      "length": 23,
      "cyclomatic_complexity": 14,
      "cognitive_complexity": 11,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 4
    },
    {
      "name": "add_error",
      "file_path": "src/compiler_errors.ml",
      "start_line": 76,
      "end_line": 78,
      "length": 3,
      "cyclomatic_complexity": 2,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 0,
      "nesting_depth": 1
    },
    {
      "name": "get_error_config",
      "file_path": "src/compiler_errors.ml",
      "start_line": 85,
      "end_line": 93,
      "length": 9,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 1
    },
    {
      "name": "set_error_config",
      "file_path": "src/compiler_errors.ml",
      "start_line": 95,
      "end_line": 107,
      "length": 13,
      "cyclomatic_complexity": 2,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 1
    },
    {
      "name": "should_continue",
      "file_path": "src/compiler_errors.ml",
      "start_line": 109,
      "end_line": 113,
      "length": 5,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 2,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 1
    },
    {
      "name": "chain_errors",
      "file_path": "src/compiler_errors.ml",
      "start_line": 120,
      "end_line": 127,
      "length": 8,
      "cyclomatic_complexity": 5,
      "cognitive_complexity": 2,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 1,
      "nesting_depth": 1
    },
    {
      "name": "collect_error_results",
      "file_path": "src/compiler_errors.ml",
      "start_line": 129,
      "end_line": 142,
      "length": 14,
      "cyclomatic_complexity": 7,
      "cognitive_complexity": 7,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 1,
      "nesting_depth": 4
    },
    {
      "name": "safe_list_nth",
      "file_path": "src/compiler_errors.ml",
      "start_line": 153,
      "end_line": 155,
      "length": 3,
      "cyclomatic_complexity": 2,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 1
    },
    {
      "name": "safe_int_of_string",
      "file_path": "src/compiler_errors.ml",
      "start_line": 157,
      "end_line": 159,
      "length": 3,
      "cyclomatic_complexity": 2,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 1
    },
    {
      "name": "safe_float_of_string",
      "file_path": "src/compiler_errors.ml",
      "start_line": 161,
      "end_line": 163,
      "length": 3,
      "cyclomatic_complexity": 2,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 1
    },
    {
      "name": "validate_non_empty_string",
      "file_path": "src/compiler_errors.ml",
      "start_line": 165,
      "end_line": 166,
      "length": 2,
      "cyclomatic_complexity": 2,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 1
    },
    {
      "name": "validate_positive_int",
      "file_path": "src/compiler_errors.ml",
      "start_line": 168,
      "end_line": 170,
      "length": 3,
      "cyclomatic_complexity": 2,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 1
    },
    {
      "name": "length_function",
      "file_path": "src/builtin_collections.ml",
      "start_line": 6,
      "end_line": 9,
      "length": 4,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 1
    },
    {
      "name": "concat_function",
      "file_path": "src/builtin_collections.ml",
      "start_line": 11,
      "end_line": 17,
      "length": 7,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 2
    },
    {
      "name": "filter_function",
      "file_path": "src/builtin_collections.ml",
      "start_line": 19,
      "end_line": 31,
      "length": 13,
      "cyclomatic_complexity": 3,
      "cognitive_complexity": 2,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 1,
      "nesting_depth": 3
    },
    {
      "name": "map_function",
      "file_path": "src/builtin_collections.ml",
      "start_line": 33,
      "end_line": 40,
      "length": 8,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 3
    },
    {
      "name": "fold_function",
      "file_path": "src/builtin_collections.ml",
      "start_line": 42,
      "end_line": 51,
      "length": 10,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 3
    },
    {
      "name": "sort_function",
      "file_path": "src/builtin_collections.ml",
      "start_line": 53,
      "end_line": 66,
      "length": 14,
      "cyclomatic_complexity": 6,
      "cognitive_complexity": 5,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 1,
      "nesting_depth": 2
    },
    {
      "name": "reverse_function",
      "file_path": "src/builtin_collections.ml",
      "start_line": 68,
      "end_line": 74,
      "length": 7,
      "cyclomatic_complexity": 5,
      "cognitive_complexity": 4,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 1,
      "nesting_depth": 2
    },
    {
      "name": "contains_function",
      "file_path": "src/builtin_collections.ml",
      "start_line": 76,
      "end_line": 88,
      "length": 13,
      "cyclomatic_complexity": 8,
      "cognitive_complexity": 11,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 2,
      "nesting_depth": 4
    },
    {
      "name": "collection_functions",
      "file_path": "src/builtin_collections.ml",
      "start_line": 90,
      "end_line": 100,
      "length": 11,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "create_type_validator",
      "file_path": "src/param_validator.ml",
      "start_line": 14,
      "end_line": 20,
      "length": 7,
      "cyclomatic_complexity": 4,
      "cognitive_complexity": 3,
      "is_recursive": false,
      "parameters_count": 6,
      "match_expressions_count": 1,
      "nesting_depth": 1
    },
    {
      "name": "validate_nonempty_list",
      "file_path": "src/param_validator.ml",
      "start_line": 50,
      "end_line": 57,
      "length": 8,
      "cyclomatic_complexity": 7,
      "cognitive_complexity": 9,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 2,
      "nesting_depth": 2
    },
    {
      "name": "with_function_name",
      "file_path": "src/param_validator.ml",
      "start_line": 59,
      "end_line": 65,
      "length": 7,
      "cyclomatic_complexity": 3,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 7,
      "match_expressions_count": 0,
      "nesting_depth": 1
    },
    {
      "name": "validate_single",
      "file_path": "src/param_validator.ml",
      "start_line": 67,
      "end_line": 97,
      "length": 31,
      "cyclomatic_complexity": 11,
      "cognitive_complexity": 10,
      "is_recursive": false,
      "parameters_count": 5,
      "match_expressions_count": 4,
      "nesting_depth": 7
    },
    {
      "name": "validate_non_negative",
      "file_path": "src/param_validator.ml",
      "start_line": 112,
      "end_line": 118,
      "length": 7,
      "cyclomatic_complexity": 5,
      "cognitive_complexity": 4,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 1,
      "nesting_depth": 1
    },
    {
      "name": "is_chinese_char",
      "file_path": "src/utf8_utils.ml",
      "start_line": 8,
      "end_line": 14,
      "length": 7,
      "cyclomatic_complexity": 4,
      "cognitive_complexity": 3,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 2
    },
    {
      "name": "is_separator_char",
      "file_path": "src/utf8_utils.ml",
      "start_line": 25,
      "end_line": 29,
      "length": 5,
      "cyclomatic_complexity": 54,
      "cognitive_complexity": 26,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "check_utf8_char",
      "file_path": "src/utf8_utils.ml",
      "start_line": 31,
      "end_line": 36,
      "length": 6,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 3,
      "is_recursive": false,
      "parameters_count": 5,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "is_chinese_utf8",
      "file_path": "src/utf8_utils.ml",
      "start_line": 38,
      "end_line": 45,
      "length": 8,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 6,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 3
    },
    {
      "name": "next_utf8_char",
      "file_path": "src/utf8_utils.ml",
      "start_line": 47,
      "end_line": 69,
      "length": 23,
      "cyclomatic_complexity": 9,
      "cognitive_complexity": 36,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 0,
      "nesting_depth": 10
    },
    {
      "name": "next_utf8_char_uutf",
      "file_path": "src/utf8_utils.ml",
      "start_line": 71,
      "end_line": 85,
      "length": 15,
      "cyclomatic_complexity": 7,
      "cognitive_complexity": 10,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 1,
      "nesting_depth": 7
    },
    {
      "name": "is_chinese_digit_char",
      "file_path": "src/utf8_utils.ml",
      "start_line": 87,
      "end_line": 93,
      "length": 7,
      "cyclomatic_complexity": 20,
      "cognitive_complexity": 4,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 1,
      "nesting_depth": 1
    },
    {
      "name": "is_left_quote",
      "file_path": "src/utf8_utils.ml",
      "start_line": 97,
      "end_line": 99,
      "length": 3,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "is_right_quote",
      "file_path": "src/utf8_utils.ml",
      "start_line": 101,
      "end_line": 103,
      "length": 3,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "is_string_start",
      "file_path": "src/utf8_utils.ml",
      "start_line": 105,
      "end_line": 108,
      "length": 4,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "is_string_end",
      "file_path": "src/utf8_utils.ml",
      "start_line": 110,
      "end_line": 112,
      "length": 3,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "is_chinese_period",
      "file_path": "src/utf8_utils.ml",
      "start_line": 114,
      "end_line": 117,
      "length": 4,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "is_fullwidth_digit",
      "file_path": "src/utf8_utils.ml",
      "start_line": 140,
      "end_line": 143,
      "length": 4,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 1
    },
    {
      "name": "is_fullwidth_letter",
      "file_path": "src/utf8_utils.ml",
      "start_line": 145,
      "end_line": 148,
      "length": 4,
      "cyclomatic_complexity": 3,
      "cognitive_complexity": 3,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 1
    },
    {
      "name": "is_fullwidth_symbol",
      "file_path": "src/utf8_utils.ml",
      "start_line": 150,
      "end_line": 154,
      "length": 5,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 2,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "is_fullwidth_digit_string",
      "file_path": "src/utf8_utils.ml",
      "start_line": 156,
      "end_line": 165,
      "length": 10,
      "cyclomatic_complexity": 2,
      "cognitive_complexity": 4,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 2
    },
    {
      "name": "fullwidth_digit_to_int",
      "file_path": "src/utf8_utils.ml",
      "start_line": 167,
      "end_line": 171,
      "length": 5,
      "cyclomatic_complexity": 2,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 1
    },
    {
      "name": "is_all_digits",
      "file_path": "src/utf8_utils.ml",
      "start_line": 173,
      "end_line": 177,
      "length": 5,
      "cyclomatic_complexity": 2,
      "cognitive_complexity": 2,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 2
    },
    {
      "name": "is_valid_identifier",
      "file_path": "src/utf8_utils.ml",
      "start_line": 179,
      "end_line": 212,
      "length": 34,
      "cyclomatic_complexity": 25,
      "cognitive_complexity": 85,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 2,
      "nesting_depth": 11
    },
    {
      "name": "string_to_char_list",
      "file_path": "src/utf8_utils.ml",
      "start_line": 214,
      "end_line": 216,
      "length": 3,
      "cyclomatic_complexity": 2,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 1
    },
    {
      "name": "char_list_to_string",
      "file_path": "src/utf8_utils.ml",
      "start_line": 218,
      "end_line": 222,
      "length": 5,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 1
    },
    {
      "name": "filter_chinese_chars",
      "file_path": "src/utf8_utils.ml",
      "start_line": 224,
      "end_line": 228,
      "length": 5,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 2
    },
    {
      "name": "chinese_length",
      "file_path": "src/utf8_utils.ml",
      "start_line": 230,
      "end_line": 233,
      "length": 4,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 1
    },
    {
      "name": "utf8_length",
      "file_path": "src/utf8_utils.ml",
      "start_line": 237,
      "end_line": 246,
      "length": 10,
      "cyclomatic_complexity": 5,
      "cognitive_complexity": 7,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 1,
      "nesting_depth": 2
    },
    {
      "name": "is_all_chinese",
      "file_path": "src/utf8_utils.ml",
      "start_line": 248,
      "end_line": 258,
      "length": 11,
      "cyclomatic_complexity": 6,
      "cognitive_complexity": 11,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 1,
      "nesting_depth": 3
    },
    {
      "name": "utf8_to_char_list",
      "file_path": "src/utf8_utils.ml",
      "start_line": 260,
      "end_line": 270,
      "length": 11,
      "cyclomatic_complexity": 5,
      "cognitive_complexity": 7,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 1,
      "nesting_depth": 2
    },
    {
      "name": "is_chinese_keyword_boundary",
      "file_path": "src/utf8_utils.ml",
      "start_line": 274,
      "end_line": 297,
      "length": 24,
      "cyclomatic_complexity": 16,
      "cognitive_complexity": 27,
      "is_recursive": false,
      "parameters_count": 3,
      "match_expressions_count": 0,
      "nesting_depth": 7
    },
    {
      "name": "is_identifier_boundary",
      "file_path": "src/utf8_utils.ml",
      "start_line": 299,
      "end_line": 304,
      "length": 6,
      "cyclomatic_complexity": 6,
      "cognitive_complexity": 4,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 0,
      "nesting_depth": 2
    },
    {
      "name": "new_type_var",
      "file_path": "src/core_types.ml",
      "start_line": 61,
      "end_line": 64,
      "length": 4,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "format_field_list",
      "file_path": "src/core_types.ml",
      "start_line": 88,
      "end_line": 108,
      "length": 21,
      "cyclomatic_complexity": 4,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 0,
      "nesting_depth": 1
    },
    {
      "name": "format_polymorphic_variants",
      "file_path": "src/core_types.ml",
      "start_line": 110,
      "end_line": 124,
      "length": 15,
      "cyclomatic_complexity": 5,
      "cognitive_complexity": 3,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 1,
      "nesting_depth": 1
    },
    {
      "name": "format_constructor_type",
      "file_path": "src/core_types.ml",
      "start_line": 126,
      "end_line": 135,
      "length": 10,
      "cyclomatic_complexity": 3,
      "cognitive_complexity": 2,
      "is_recursive": false,
      "parameters_count": 3,
      "match_expressions_count": 1,
      "nesting_depth": 1
    },
    {
      "name": "register_constructors",
      "file_path": "src/value_operations_advanced.ml",
      "start_line": 19,
      "end_line": 34,
      "length": 16,
      "cyclomatic_complexity": 4,
      "cognitive_complexity": 2,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 1,
      "nesting_depth": 1
    },
    {
      "name": "is_comparable_value",
      "file_path": "src/value_operations_advanced.ml",
      "start_line": 36,
      "end_line": 40,
      "length": 5,
      "cyclomatic_complexity": 6,
      "cognitive_complexity": 3,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 1,
      "nesting_depth": 1
    },
    {
      "name": "deep_equal",
      "file_path": "src/value_operations_advanced.ml",
      "start_line": 42,
      "end_line": 45,
      "length": 4,
      "cyclomatic_complexity": 2,
      "cognitive_complexity": 2,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 0,
      "nesting_depth": 1
    },
    {
      "name": "same_type",
      "file_path": "src/value_operations_advanced.ml",
      "start_line": 47,
      "end_line": 67,
      "length": 21,
      "cyclomatic_complexity": 20,
      "cognitive_complexity": 19,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 1,
      "nesting_depth": 1
    },
    {
      "name": "deref_value",
      "file_path": "src/value_operations_advanced.ml",
      "start_line": 72,
      "end_line": 74,
      "length": 3,
      "cyclomatic_complexity": 3,
      "cognitive_complexity": 2,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 1,
      "nesting_depth": 1
    },
    {
      "name": "set_ref_value",
      "file_path": "src/value_operations_advanced.ml",
      "start_line": 76,
      "end_line": 82,
      "length": 7,
      "cyclomatic_complexity": 4,
      "cognitive_complexity": 3,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 1,
      "nesting_depth": 1
    },
    {
      "name": "get_constructor_name",
      "file_path": "src/value_operations_advanced.ml",
      "start_line": 87,
      "end_line": 89,
      "length": 3,
      "cyclomatic_complexity": 3,
      "cognitive_complexity": 2,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 1,
      "nesting_depth": 1
    },
    {
      "name": "get_constructor_args",
      "file_path": "src/value_operations_advanced.ml",
      "start_line": 91,
      "end_line": 93,
      "length": 3,
      "cyclomatic_complexity": 3,
      "cognitive_complexity": 2,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 1,
      "nesting_depth": 1
    },
    {
      "name": "get_exception_name",
      "file_path": "src/value_operations_advanced.ml",
      "start_line": 98,
      "end_line": 100,
      "length": 3,
      "cyclomatic_complexity": 3,
      "cognitive_complexity": 2,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 1,
      "nesting_depth": 1
    },
    {
      "name": "get_exception_payload",
      "file_path": "src/value_operations_advanced.ml",
      "start_line": 102,
      "end_line": 106,
      "length": 5,
      "cyclomatic_complexity": 4,
      "cognitive_complexity": 3,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 1,
      "nesting_depth": 1
    },
    {
      "name": "get_variant_tag",
      "file_path": "src/value_operations_advanced.ml",
      "start_line": 111,
      "end_line": 115,
      "length": 5,
      "cyclomatic_complexity": 4,
      "cognitive_complexity": 3,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 1,
      "nesting_depth": 1
    },
    {
      "name": "get_variant_value",
      "file_path": "src/value_operations_advanced.ml",
      "start_line": 117,
      "end_line": 121,
      "length": 5,
      "cyclomatic_complexity": 4,
      "cognitive_complexity": 3,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 1,
      "nesting_depth": 1
    },
    {
      "name": "get_module_bindings",
      "file_path": "src/value_operations_advanced.ml",
      "start_line": 126,
      "end_line": 128,
      "length": 3,
      "cyclomatic_complexity": 3,
      "cognitive_complexity": 2,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 1,
      "nesting_depth": 1
    },
    {
      "name": "lookup_module_member",
      "file_path": "src/value_operations_advanced.ml",
      "start_line": 130,
      "end_line": 137,
      "length": 8,
      "cyclomatic_complexity": 7,
      "cognitive_complexity": 10,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 2,
      "nesting_depth": 2
    },
    {
      "name": "module_has_member",
      "file_path": "src/value_operations_advanced.ml",
      "start_line": 139,
      "end_line": 141,
      "length": 3,
      "cyclomatic_complexity": 3,
      "cognitive_complexity": 2,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 1,
      "nesting_depth": 1
    },
    {
      "name": "get_module_member_names",
      "file_path": "src/value_operations_advanced.ml",
      "start_line": 143,
      "end_line": 145,
      "length": 3,
      "cyclomatic_complexity": 3,
      "cognitive_complexity": 2,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 1,
      "nesting_depth": 1
    },
    {
      "name": "merge_modules",
      "file_path": "src/value_operations_advanced.ml",
      "start_line": 147,
      "end_line": 161,
      "length": 15,
      "cyclomatic_complexity": 7,
      "cognitive_complexity": 7,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 1,
      "nesting_depth": 3
    },
    {
      "name": "gen_try_expr",
      "file_path": "src/c_codegen_exceptions.ml",
      "start_line": 8,
      "end_line": 22,
      "length": 15,
      "cyclomatic_complexity": 6,
      "cognitive_complexity": 5,
      "is_recursive": false,
      "parameters_count": 5,
      "match_expressions_count": 2,
      "nesting_depth": 3
    },
    {
      "name": "gen_raise_expr",
      "file_path": "src/c_codegen_exceptions.ml",
      "start_line": 24,
      "end_line": 27,
      "length": 4,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 3,
      "match_expressions_count": 0,
      "nesting_depth": 1
    },
    {
      "name": "gen_exception_handling",
      "file_path": "src/c_codegen_exceptions.ml",
      "start_line": 29,
      "end_line": 35,
      "length": 7,
      "cyclomatic_complexity": 5,
      "cognitive_complexity": 4,
      "is_recursive": false,
      "parameters_count": 3,
      "match_expressions_count": 1,
      "nesting_depth": 1
    },
    {
      "name": "gen_advanced_control_flow",
      "file_path": "src/c_codegen_exceptions.ml",
      "start_line": 37,
      "end_line": 42,
      "length": 6,
      "cyclomatic_complexity": 4,
      "cognitive_complexity": 3,
      "is_recursive": false,
      "parameters_count": 3,
      "match_expressions_count": 1,
      "nesting_depth": 2
    },
    {
      "name": "basic_keywords",
      "file_path": "src/keyword_matcher_tables_basic.ml",
      "start_line": 7,
      "end_line": 27,
      "length": 21,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "semantic_keywords",
      "file_path": "src/keyword_matcher_tables_basic.ml",
      "start_line": 29,
      "end_line": 31,
      "length": 3,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "exception_keywords",
      "file_path": "src/keyword_matcher_tables_basic.ml",
      "start_line": 36,
      "end_line": 44,
      "length": 9,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "module_keywords",
      "file_path": "src/keyword_matcher_tables_basic.ml",
      "start_line": 46,
      "end_line": 59,
      "length": 14,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "get_all_basic_keywords",
      "file_path": "src/keyword_matcher_tables_basic.ml",
      "start_line": 61,
      "end_line": 69,
      "length": 9,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "basic_value_to_string",
      "file_path": "src/value_operations_conversion.ml",
      "start_line": 22,
      "end_line": 30,
      "length": 9,
      "cyclomatic_complexity": 9,
      "cognitive_complexity": 12,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 1,
      "nesting_depth": 2
    },
    {
      "name": "list_value_to_string",
      "file_path": "src/value_operations_conversion.ml",
      "start_line": 32,
      "end_line": 34,
      "length": 3,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "array_value_to_string",
      "file_path": "src/value_operations_conversion.ml",
      "start_line": 36,
      "end_line": 39,
      "length": 4,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 0,
      "nesting_depth": 1
    },
    {
      "name": "tuple_value_to_string",
      "file_path": "src/value_operations_conversion.ml",
      "start_line": 41,
      "end_line": 43,
      "length": 3,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "record_value_to_string",
      "file_path": "src/value_operations_conversion.ml",
      "start_line": 45,
      "end_line": 47,
      "length": 3,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "container_value_to_string",
      "file_path": "src/value_operations_conversion.ml",
      "start_line": 52,
      "end_line": 60,
      "length": 9,
      "cyclomatic_complexity": 8,
      "cognitive_complexity": 7,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 1,
      "nesting_depth": 1
    },
    {
      "name": "function_value_to_string",
      "file_path": "src/value_operations_conversion.ml",
      "start_line": 62,
      "end_line": 68,
      "length": 7,
      "cyclomatic_complexity": 6,
      "cognitive_complexity": 5,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 1,
      "nesting_depth": 1
    },
    {
      "name": "constructor_value_to_string",
      "file_path": "src/value_operations_conversion.ml",
      "start_line": 70,
      "end_line": 82,
      "length": 13,
      "cyclomatic_complexity": 8,
      "cognitive_complexity": 7,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 1,
      "nesting_depth": 2
    },
    {
      "name": "module_value_to_string",
      "file_path": "src/value_operations_conversion.ml",
      "start_line": 84,
      "end_line": 91,
      "length": 8,
      "cyclomatic_complexity": 4,
      "cognitive_complexity": 3,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 1,
      "nesting_depth": 3
    },
    {
      "name": "value_to_string",
      "file_path": "src/value_operations_conversion.ml",
      "start_line": 93,
      "end_line": 109,
      "length": 17,
      "cyclomatic_complexity": 19,
      "cognitive_complexity": 6,
      "is_recursive": true,
      "parameters_count": 1,
      "match_expressions_count": 1,
      "nesting_depth": 1
    },
    {
      "name": "value_to_bool",
      "file_path": "src/value_operations_conversion.ml",
      "start_line": 111,
      "end_line": 120,
      "length": 10,
      "cyclomatic_complexity": 9,
      "cognitive_complexity": 8,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 1,
      "nesting_depth": 1
    },
    {
      "name": "try_to_int",
      "file_path": "src/value_operations_conversion.ml",
      "start_line": 122,
      "end_line": 140,
      "length": 19,
      "cyclomatic_complexity": 10,
      "cognitive_complexity": 12,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 1,
      "nesting_depth": 4
    },
    {
      "name": "try_to_float",
      "file_path": "src/value_operations_conversion.ml",
      "start_line": 142,
      "end_line": 156,
      "length": 15,
      "cyclomatic_complexity": 8,
      "cognitive_complexity": 6,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 1,
      "nesting_depth": 4
    },
    {
      "name": "try_to_string",
      "file_path": "src/value_operations_conversion.ml",
      "start_line": 158,
      "end_line": 172,
      "length": 15,
      "cyclomatic_complexity": 9,
      "cognitive_complexity": 13,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 2,
      "nesting_depth": 3
    },
    {
      "name": "force_to_int",
      "file_path": "src/value_operations_conversion.ml",
      "start_line": 174,
      "end_line": 178,
      "length": 5,
      "cyclomatic_complexity": 4,
      "cognitive_complexity": 3,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 1,
      "nesting_depth": 1
    },
    {
      "name": "force_to_float",
      "file_path": "src/value_operations_conversion.ml",
      "start_line": 180,
      "end_line": 184,
      "length": 5,
      "cyclomatic_complexity": 4,
      "cognitive_complexity": 3,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 1,
      "nesting_depth": 1
    },
    {
      "name": "force_to_string",
      "file_path": "src/value_operations_conversion.ml",
      "start_line": 186,
      "end_line": 194,
      "length": 9,
      "cyclomatic_complexity": 7,
      "cognitive_complexity": 12,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 3,
      "nesting_depth": 3
    },
    {
      "name": "type_mismatch_error",
      "file_path": "src/types_errors.ml",
      "start_line": 39,
      "end_line": 42,
      "length": 4,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 0,
      "nesting_depth": 1
    },
    {
      "name": "undefined_var_error",
      "file_path": "src/types_errors.ml",
      "start_line": 44,
      "end_line": 47,
      "length": 4,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 1
    },
    {
      "name": "duplicate_definition_error",
      "file_path": "src/types_errors.ml",
      "start_line": 49,
      "end_line": 52,
      "length": 4,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 1
    },
    {
      "name": "type_inference_error",
      "file_path": "src/types_errors.ml",
      "start_line": 54,
      "end_line": 57,
      "length": 4,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 1
    },
    {
      "name": "unification_error",
      "file_path": "src/types_errors.ml",
      "start_line": 59,
      "end_line": 64,
      "length": 6,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "occurs_check_error",
      "file_path": "src/types_errors.ml",
      "start_line": 66,
      "end_line": 71,
      "length": 6,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "arity_mismatch_error",
      "file_path": "src/types_errors.ml",
      "start_line": 73,
      "end_line": 84,
      "length": 12,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "unsupported_operation_error",
      "file_path": "src/types_errors.ml",
      "start_line": 86,
      "end_line": 89,
      "length": 4,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 0,
      "nesting_depth": 1
    },
    {
      "name": "field_not_found_error",
      "file_path": "src/types_errors.ml",
      "start_line": 91,
      "end_line": 94,
      "length": 4,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 0,
      "nesting_depth": 1
    },
    {
      "name": "overload_resolution_error",
      "file_path": "src/types_errors.ml",
      "start_line": 96,
      "end_line": 103,
      "length": 8,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 0,
      "nesting_depth": 2
    },
    {
      "name": "handle_error",
      "file_path": "src/types_errors.ml",
      "start_line": 122,
      "end_line": 127,
      "length": 6,
      "cyclomatic_complexity": 7,
      "cognitive_complexity": 2,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 0,
      "nesting_depth": 1
    },
    {
      "name": "handle_error_map",
      "file_path": "src/types_errors.ml",
      "start_line": 129,
      "end_line": 135,
      "length": 7,
      "cyclomatic_complexity": 4,
      "cognitive_complexity": 3,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 1,
      "nesting_depth": 1
    },
    {
      "name": "safe_execute",
      "file_path": "src/types_errors.ml",
      "start_line": 137,
      "end_line": 143,
      "length": 7,
      "cyclomatic_complexity": 7,
      "cognitive_complexity": 2,
      "is_recursive": false,
      "parameters_count": 3,
      "match_expressions_count": 0,
      "nesting_depth": 1
    },
    {
      "name": "convert_with_classical_strategy",
      "file_path": "src/token_conversion_classical.ml",
      "start_line": 156,
      "end_line": 187,
      "length": 32,
      "cyclomatic_complexity": 12,
      "cognitive_complexity": 8,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 2,
      "nesting_depth": 2
    },
    {
      "name": "convert_classical_token",
      "file_path": "src/token_conversion_classical.ml",
      "start_line": 189,
      "end_line": 199,
      "length": 11,
      "cyclomatic_complexity": 5,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 2
    },
    {
      "name": "is_classical_token",
      "file_path": "src/token_conversion_classical.ml",
      "start_line": 201,
      "end_line": 206,
      "length": 6,
      "cyclomatic_complexity": 3,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 2
    },
    {
      "name": "convert_classical_token_safe",
      "file_path": "src/token_conversion_classical.ml",
      "start_line": 208,
      "end_line": 210,
      "length": 3,
      "cyclomatic_complexity": 2,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 1
    },
    {
      "name": "comprehensive_analysis",
      "file_path": "src/analysis_reporting.ml",
      "start_line": 9,
      "end_line": 29,
      "length": 21,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 3
    },
    {
      "name": "generate_quality_assessment",
      "file_path": "src/analysis_reporting.ml",
      "start_line": 31,
      "end_line": 89,
      "length": 59,
      "cyclomatic_complexity": 7,
      "cognitive_complexity": 10,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 5
    },
    {
      "name": "digit_table",
      "file_path": "src/lexer_chinese_numbers.ml",
      "start_line": 8,
      "end_line": 25,
      "length": 18,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 1
    },
    {
      "name": "unit_table",
      "file_path": "src/lexer_chinese_numbers.ml",
      "start_line": 27,
      "end_line": 34,
      "length": 8,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 1
    },
    {
      "name": "utf8_to_char_list",
      "file_path": "src/lexer_chinese_numbers.ml",
      "start_line": 42,
      "end_line": 47,
      "length": 6,
      "cyclomatic_complexity": 3,
      "cognitive_complexity": 3,
      "is_recursive": true,
      "parameters_count": 3,
      "match_expressions_count": 0,
      "nesting_depth": 3
    },
    {
      "name": "parse_with_units",
      "file_path": "src/lexer_chinese_numbers.ml",
      "start_line": 49,
      "end_line": 73,
      "length": 25,
      "cyclomatic_complexity": 10,
      "cognitive_complexity": 30,
      "is_recursive": true,
      "parameters_count": 3,
      "match_expressions_count": 1,
      "nesting_depth": 8
    },
    {
      "name": "parse_simple_digits",
      "file_path": "src/lexer_chinese_numbers.ml",
      "start_line": 75,
      "end_line": 81,
      "length": 7,
      "cyclomatic_complexity": 4,
      "cognitive_complexity": 3,
      "is_recursive": true,
      "parameters_count": 2,
      "match_expressions_count": 1,
      "nesting_depth": 2
    },
    {
      "name": "parse_chinese_number",
      "file_path": "src/lexer_chinese_numbers.ml",
      "start_line": 83,
      "end_line": 87,
      "length": 5,
      "cyclomatic_complexity": 2,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 2
    },
    {
      "name": "construct_float_value",
      "file_path": "src/lexer_chinese_numbers.ml",
      "start_line": 89,
      "end_line": 92,
      "length": 4,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 3,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "read_chinese_number_sequence",
      "file_path": "src/lexer_chinese_numbers.ml",
      "start_line": 94,
      "end_line": 106,
      "length": 13,
      "cyclomatic_complexity": 4,
      "cognitive_complexity": 3,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 6
    },
    {
      "name": "convert_chinese_number_sequence",
      "file_path": "src/lexer_chinese_numbers.ml",
      "start_line": 108,
      "end_line": 134,
      "length": 27,
      "cyclomatic_complexity": 9,
      "cognitive_complexity": 26,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 1,
      "nesting_depth": 16
    },
    {
      "name": "is_cache_valid",
      "file_path": "src/data_loader_cache.ml",
      "start_line": 15,
      "end_line": 18,
      "length": 4,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 1
    },
    {
      "name": "get_cached",
      "file_path": "src/data_loader_cache.ml",
      "start_line": 20,
      "end_line": 28,
      "length": 9,
      "cyclomatic_complexity": 4,
      "cognitive_complexity": 2,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 3
    },
    {
      "name": "set_cache",
      "file_path": "src/data_loader_cache.ml",
      "start_line": 30,
      "end_line": 33,
      "length": 4,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 0,
      "nesting_depth": 1
    },
    {
      "name": "make_chinese_number_constant",
      "file_path": "src/builtin_constants.ml",
      "start_line": 8,
      "end_line": 30,
      "length": 23,
      "cyclomatic_complexity": 15,
      "cognitive_complexity": 12,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 1,
      "nesting_depth": 1
    },
    {
      "name": "chinese_number_constants",
      "file_path": "src/builtin_constants.ml",
      "start_line": 32,
      "end_line": 44,
      "length": 13,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "log_with_context",
      "file_path": "src/logging_migration.ml",
      "start_line": 73,
      "end_line": 93,
      "length": 21,
      "cyclomatic_complexity": 8,
      "cognitive_complexity": 7,
      "is_recursive": false,
      "parameters_count": 4,
      "match_expressions_count": 1,
      "nesting_depth": 2
    },
    {
      "name": "infof_ctx",
      "file_path": "src/logging_migration.ml",
      "start_line": 95,
      "end_line": 96,
      "length": 2,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 3,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "warningf_ctx",
      "file_path": "src/logging_migration.ml",
      "start_line": 98,
      "end_line": 99,
      "length": 2,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 3,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "errorf_ctx",
      "file_path": "src/logging_migration.ml",
      "start_line": 101,
      "end_line": 104,
      "length": 4,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 3,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "compilation_stats",
      "file_path": "src/logging_migration.ml",
      "start_line": 107,
      "end_line": 109,
      "length": 3,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 3,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "cache_stats",
      "file_path": "src/logging_migration.ml",
      "start_line": 111,
      "end_line": 112,
      "length": 2,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 3,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "parsing_time",
      "file_path": "src/logging_migration.ml",
      "start_line": 114,
      "end_line": 116,
      "length": 3,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "init_info_error_loggers",
      "file_path": "src/logging_migration.ml",
      "start_line": 133,
      "end_line": 136,
      "length": 4,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 1
    },
    {
      "name": "init_debug_error_loggers",
      "file_path": "src/logging_migration.ml",
      "start_line": 138,
      "end_line": 141,
      "length": 4,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 1
    },
    {
      "name": "init_info_warn_error_loggers",
      "file_path": "src/logging_migration.ml",
      "start_line": 143,
      "end_line": 146,
      "length": 4,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 1
    },
    {
      "name": "init_debug_info_error_loggers",
      "file_path": "src/logging_migration.ml",
      "start_line": 148,
      "end_line": 151,
      "length": 4,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 1
    },
    {
      "name": "init_debug_info_loggers",
      "file_path": "src/logging_migration.ml",
      "start_line": 153,
      "end_line": 156,
      "length": 4,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 1
    },
    {
      "name": "init_info_logger",
      "file_path": "src/logging_migration.ml",
      "start_line": 158,
      "end_line": 161,
      "length": 4,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 1
    },
    {
      "name": "init_error_logger",
      "file_path": "src/logging_migration.ml",
      "start_line": 163,
      "end_line": 166,
      "length": 4,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 1
    },
    {
      "name": "init_debug_logger",
      "file_path": "src/logging_migration.ml",
      "start_line": 168,
      "end_line": 171,
      "length": 4,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 1
    },
    {
      "name": "init_no_logger",
      "file_path": "src/logging_migration.ml",
      "start_line": 173,
      "end_line": 176,
      "length": 4,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 1
    },
    {
      "name": "infer_module_name",
      "file_path": "src/logging_migration.ml",
      "start_line": 181,
      "end_line": 203,
      "length": 23,
      "cyclomatic_complexity": 4,
      "cognitive_complexity": 6,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 9
    },
    {
      "name": "smart_init",
      "file_path": "src/logging_migration.ml",
      "start_line": 205,
      "end_line": 218,
      "length": 14,
      "cyclomatic_complexity": 12,
      "cognitive_complexity": 7,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 1,
      "nesting_depth": 2
    },
    {
      "name": "is_module_migrated",
      "file_path": "src/logging_migration.ml",
      "start_line": 220,
      "end_line": 224,
      "length": 5,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "create_migration_report",
      "file_path": "src/logging_migration.ml",
      "start_line": 226,
      "end_line": 238,
      "length": 13,
      "cyclomatic_complexity": 3,
      "cognitive_complexity": 2,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 2
    },
    {
      "name": "suggest_migration_order",
      "file_path": "src/logging_migration.ml",
      "start_line": 240,
      "end_line": 254,
      "length": 15,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 2
    },
    {
      "name": "is_mixed_naming",
      "file_path": "src/refactoring_analyzer_naming.ml",
      "start_line": 13,
      "end_line": 24,
      "length": 12,
      "cyclomatic_complexity": 6,
      "cognitive_complexity": 11,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 6
    },
    {
      "name": "is_meaningless_naming",
      "file_path": "src/refactoring_analyzer_naming.ml",
      "start_line": 29,
      "end_line": 40,
      "length": 12,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "naming_checks",
      "file_path": "src/refactoring_analyzer_naming.ml",
      "start_line": 42,
      "end_line": 73,
      "length": 32,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "create_naming_suggestion",
      "file_path": "src/refactoring_analyzer_naming.ml",
      "start_line": 75,
      "end_line": 83,
      "length": 9,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "analyze_naming_quality",
      "file_path": "src/refactoring_analyzer_naming.ml",
      "start_line": 85,
      "end_line": 90,
      "length": 6,
      "cyclomatic_complexity": 2,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 1
    },
    {
      "name": "analyze_multiple_names",
      "file_path": "src/refactoring_analyzer_naming.ml",
      "start_line": 92,
      "end_line": 94,
      "length": 3,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "get_naming_statistics",
      "file_path": "src/refactoring_analyzer_naming.ml",
      "start_line": 96,
      "end_line": 132,
      "length": 37,
      "cyclomatic_complexity": 6,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "generate_naming_report",
      "file_path": "src/refactoring_analyzer_naming.ml",
      "start_line": 134,
      "end_line": 166,
      "length": 33,
      "cyclomatic_complexity": 6,
      "cognitive_complexity": 15,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 7
    },
    {
      "name": "read_string_until",
      "file_path": "src/lexer_utils_modular.ml",
      "start_line": 21,
      "end_line": 29,
      "length": 9,
      "cyclomatic_complexity": 3,
      "cognitive_complexity": 3,
      "is_recursive": false,
      "parameters_count": 3,
      "match_expressions_count": 0,
      "nesting_depth": 3
    },
    {
      "name": "process_escape_sequences",
      "file_path": "src/lexer_utils_modular.ml",
      "start_line": 46,
      "end_line": 82,
      "length": 37,
      "cyclomatic_complexity": 11,
      "cognitive_complexity": 28,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 1,
      "nesting_depth": 5
    },
    {
      "name": "read_fullwidth_number_sequence",
      "file_path": "src/lexer_utils_modular.ml",
      "start_line": 88,
      "end_line": 102,
      "length": 15,
      "cyclomatic_complexity": 4,
      "cognitive_complexity": 3,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 6
    },
    {
      "name": "convert_fullwidth_number_sequence",
      "file_path": "src/lexer_utils_modular.ml",
      "start_line": 104,
      "end_line": 116,
      "length": 13,
      "cyclomatic_complexity": 6,
      "cognitive_complexity": 12,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 1,
      "nesting_depth": 4
    },
    {
      "name": "default_options",
      "file_path": "src/compile_options.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "test_options",
      "file_path": "src/compile_options.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "quiet_options",
      "file_path": "src/compile_options.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "parse_array_expr",
      "file_path": "src/parser_expressions_structured_consolidated.ml",
      "start_line": 26,
      "end_line": 44,
      "length": 19,
      "cyclomatic_complexity": 5,
      "cognitive_complexity": 5,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 0,
      "nesting_depth": 7
    },
    {
      "name": "parse_record_fields",
      "file_path": "src/parser_expressions_structured_consolidated.ml",
      "start_line": 46,
      "end_line": 65,
      "length": 20,
      "cyclomatic_complexity": 6,
      "cognitive_complexity": 6,
      "is_recursive": true,
      "parameters_count": 3,
      "match_expressions_count": 1,
      "nesting_depth": 8
    },
    {
      "name": "parse_record_updates",
      "file_path": "src/parser_expressions_structured_consolidated.ml",
      "start_line": 67,
      "end_line": 77,
      "length": 11,
      "cyclomatic_complexity": 2,
      "cognitive_complexity": 1,
      "is_recursive": true,
      "parameters_count": 2,
      "match_expressions_count": 0,
      "nesting_depth": 7
    },
    {
      "name": "parse_record_expr",
      "file_path": "src/parser_expressions_structured_consolidated.ml",
      "start_line": 79,
      "end_line": 109,
      "length": 31,
      "cyclomatic_complexity": 6,
      "cognitive_complexity": 7,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 1,
      "nesting_depth": 16
    },
    {
      "name": "parse_function_arguments",
      "file_path": "src/parser_expressions_structured_consolidated.ml",
      "start_line": 111,
      "end_line": 121,
      "length": 11,
      "cyclomatic_complexity": 5,
      "cognitive_complexity": 5,
      "is_recursive": true,
      "parameters_count": 3,
      "match_expressions_count": 0,
      "nesting_depth": 5
    },
    {
      "name": "parse_function_call_expr",
      "file_path": "src/parser_expressions_structured_consolidated.ml",
      "start_line": 123,
      "end_line": 129,
      "length": 7,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 3,
      "match_expressions_count": 0,
      "nesting_depth": 2
    },
    {
      "name": "parse_match_cases",
      "file_path": "src/parser_expressions_structured_consolidated.ml",
      "start_line": 131,
      "end_line": 142,
      "length": 12,
      "cyclomatic_complexity": 2,
      "cognitive_complexity": 1,
      "is_recursive": true,
      "parameters_count": 3,
      "match_expressions_count": 0,
      "nesting_depth": 8
    },
    {
      "name": "parse_match_expr",
      "file_path": "src/parser_expressions_structured_consolidated.ml",
      "start_line": 144,
      "end_line": 152,
      "length": 9,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 0,
      "nesting_depth": 4
    },
    {
      "name": "parse_conditional_expr",
      "file_path": "src/parser_expressions_structured_consolidated.ml",
      "start_line": 154,
      "end_line": 172,
      "length": 19,
      "cyclomatic_complexity": 2,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 0,
      "nesting_depth": 10
    },
    {
      "name": "parse_function_params",
      "file_path": "src/parser_expressions_structured_consolidated.ml",
      "start_line": 174,
      "end_line": 181,
      "length": 8,
      "cyclomatic_complexity": 6,
      "cognitive_complexity": 4,
      "is_recursive": true,
      "parameters_count": 2,
      "match_expressions_count": 0,
      "nesting_depth": 3
    },
    {
      "name": "parse_function_expr",
      "file_path": "src/parser_expressions_structured_consolidated.ml",
      "start_line": 183,
      "end_line": 199,
      "length": 17,
      "cyclomatic_complexity": 4,
      "cognitive_complexity": 6,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 0,
      "nesting_depth": 6
    },
    {
      "name": "parse_let_expr",
      "file_path": "src/parser_expressions_structured_consolidated.ml",
      "start_line": 201,
      "end_line": 237,
      "length": 37,
      "cyclomatic_complexity": 4,
      "cognitive_complexity": 3,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 0,
      "nesting_depth": 15
    },
    {
      "name": "parse_exception_cases",
      "file_path": "src/parser_expressions_structured_consolidated.ml",
      "start_line": 239,
      "end_line": 250,
      "length": 12,
      "cyclomatic_complexity": 2,
      "cognitive_complexity": 1,
      "is_recursive": true,
      "parameters_count": 3,
      "match_expressions_count": 0,
      "nesting_depth": 8
    },
    {
      "name": "parse_try_expr",
      "file_path": "src/parser_expressions_structured_consolidated.ml",
      "start_line": 252,
      "end_line": 258,
      "length": 7,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 0,
      "nesting_depth": 4
    },
    {
      "name": "parse_raise_expr",
      "file_path": "src/parser_expressions_structured_consolidated.ml",
      "start_line": 260,
      "end_line": 266,
      "length": 7,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 0,
      "nesting_depth": 2
    },
    {
      "name": "parse_ref_expr",
      "file_path": "src/parser_expressions_structured_consolidated.ml",
      "start_line": 268,
      "end_line": 274,
      "length": 7,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 0,
      "nesting_depth": 2
    },
    {
      "name": "parse_combine_expr",
      "file_path": "src/parser_expressions_structured_consolidated.ml",
      "start_line": 276,
      "end_line": 296,
      "length": 21,
      "cyclomatic_complexity": 4,
      "cognitive_complexity": 3,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 1,
      "nesting_depth": 6
    },
    {
      "name": "parse_structured_expr",
      "file_path": "src/parser_expressions_structured_consolidated.ml",
      "start_line": 298,
      "end_line": 331,
      "length": 34,
      "cyclomatic_complexity": 14,
      "cognitive_complexity": 12,
      "is_recursive": false,
      "parameters_count": 3,
      "match_expressions_count": 1,
      "nesting_depth": 3
    },
    {
      "name": "parse_record_updates",
      "file_path": "src/parser_expressions_structured_consolidated.ml",
      "start_line": 348,
      "end_line": 359,
      "length": 12,
      "cyclomatic_complexity": 2,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 0,
      "nesting_depth": 6
    },
    {
      "name": "convert_literal_token",
      "file_path": "src/lexer_token_converter.ml",
      "start_line": 14,
      "end_line": 27,
      "length": 14,
      "cyclomatic_complexity": 10,
      "cognitive_complexity": 9,
      "is_recursive": false,
      "parameters_count": 4,
      "match_expressions_count": 1,
      "nesting_depth": 1
    },
    {
      "name": "convert_basic_keyword_token",
      "file_path": "src/lexer_token_converter.ml",
      "start_line": 29,
      "end_line": 50,
      "length": 22,
      "cyclomatic_complexity": 20,
      "cognitive_complexity": 19,
      "is_recursive": false,
      "parameters_count": 4,
      "match_expressions_count": 1,
      "nesting_depth": 1
    },
    {
      "name": "convert_semantic_keyword_token",
      "file_path": "src/lexer_token_converter.ml",
      "start_line": 52,
      "end_line": 66,
      "length": 15,
      "cyclomatic_complexity": 13,
      "cognitive_complexity": 12,
      "is_recursive": false,
      "parameters_count": 4,
      "match_expressions_count": 1,
      "nesting_depth": 1
    },
    {
      "name": "convert_module_keyword_token",
      "file_path": "src/lexer_token_converter.ml",
      "start_line": 68,
      "end_line": 81,
      "length": 14,
      "cyclomatic_complexity": 12,
      "cognitive_complexity": 11,
      "is_recursive": false,
      "parameters_count": 4,
      "match_expressions_count": 1,
      "nesting_depth": 1
    },
    {
      "name": "convert_type_keyword_token",
      "file_path": "src/lexer_token_converter.ml",
      "start_line": 83,
      "end_line": 100,
      "length": 18,
      "cyclomatic_complexity": 16,
      "cognitive_complexity": 15,
      "is_recursive": false,
      "parameters_count": 4,
      "match_expressions_count": 1,
      "nesting_depth": 1
    },
    {
      "name": "convert_wenyan_keyword_token",
      "file_path": "src/lexer_token_converter.ml",
      "start_line": 102,
      "end_line": 125,
      "length": 24,
      "cyclomatic_complexity": 22,
      "cognitive_complexity": 21,
      "is_recursive": false,
      "parameters_count": 4,
      "match_expressions_count": 1,
      "nesting_depth": 1
    },
    {
      "name": "convert_ancient_keyword_token",
      "file_path": "src/lexer_token_converter.ml",
      "start_line": 127,
      "end_line": 179,
      "length": 53,
      "cyclomatic_complexity": 43,
      "cognitive_complexity": 42,
      "is_recursive": false,
      "parameters_count": 4,
      "match_expressions_count": 1,
      "nesting_depth": 1
    },
    {
      "name": "convert_natural_keyword_token",
      "file_path": "src/lexer_token_converter.ml",
      "start_line": 181,
      "end_line": 205,
      "length": 25,
      "cyclomatic_complexity": 23,
      "cognitive_complexity": 22,
      "is_recursive": false,
      "parameters_count": 4,
      "match_expressions_count": 1,
      "nesting_depth": 1
    },
    {
      "name": "convert_token",
      "file_path": "src/lexer_token_converter.ml",
      "start_line": 207,
      "end_line": 233,
      "length": 27,
      "cyclomatic_complexity": 25,
      "cognitive_complexity": 108,
      "is_recursive": false,
      "parameters_count": 6,
      "match_expressions_count": 8,
      "nesting_depth": 8
    },
    {
      "name": "list_specific_analysis",
      "file_path": "src/performance_analyzer_lists.ml",
      "start_line": 9,
      "end_line": 19,
      "length": 11,
      "cyclomatic_complexity": 5,
      "cognitive_complexity": 4,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 1,
      "nesting_depth": 1
    },
    {
      "name": "levenshtein_distance",
      "file_path": "src/error_messages_analysis.ml",
      "start_line": 17,
      "end_line": 37,
      "length": 21,
      "cyclomatic_complexity": 6,
      "cognitive_complexity": 5,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 0,
      "nesting_depth": 7
    },
    {
      "name": "calculate_similarity_score",
      "file_path": "src/error_messages_analysis.ml",
      "start_line": 39,
      "end_line": 43,
      "length": 5,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 0,
      "nesting_depth": 2
    },
    {
      "name": "find_similar_variables",
      "file_path": "src/error_messages_analysis.ml",
      "start_line": 45,
      "end_line": 55,
      "length": 11,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 0,
      "nesting_depth": 1
    },
    {
      "name": "take_n",
      "file_path": "src/error_messages_analysis.ml",
      "start_line": 57,
      "end_line": 62,
      "length": 6,
      "cyclomatic_complexity": 4,
      "cognitive_complexity": 3,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 1,
      "nesting_depth": 1
    },
    {
      "name": "generate_undefined_variable_suggestions",
      "file_path": "src/error_messages_analysis.ml",
      "start_line": 64,
      "end_line": 78,
      "length": 15,
      "cyclomatic_complexity": 6,
      "cognitive_complexity": 5,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 1,
      "nesting_depth": 1
    },
    {
      "name": "generate_undefined_variable_fix_hints",
      "file_path": "src/error_messages_analysis.ml",
      "start_line": 80,
      "end_line": 84,
      "length": 5,
      "cyclomatic_complexity": 4,
      "cognitive_complexity": 3,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 1,
      "nesting_depth": 1
    },
    {
      "name": "analyze_undefined_variable",
      "file_path": "src/error_messages_analysis.ml",
      "start_line": 86,
      "end_line": 98,
      "length": 13,
      "cyclomatic_complexity": 2,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 0,
      "nesting_depth": 4
    },
    {
      "name": "generate_type_mismatch_suggestions",
      "file_path": "src/error_messages_analysis.ml",
      "start_line": 100,
      "end_line": 109,
      "length": 10,
      "cyclomatic_complexity": 9,
      "cognitive_complexity": 8,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 1,
      "nesting_depth": 1
    },
    {
      "name": "generate_type_mismatch_fix_hints",
      "file_path": "src/error_messages_analysis.ml",
      "start_line": 111,
      "end_line": 116,
      "length": 6,
      "cyclomatic_complexity": 5,
      "cognitive_complexity": 4,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 1,
      "nesting_depth": 1
    },
    {
      "name": "analyze_type_mismatch",
      "file_path": "src/error_messages_analysis.ml",
      "start_line": 118,
      "end_line": 129,
      "length": 12,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 0,
      "nesting_depth": 2
    },
    {
      "name": "generate_function_arity_suggestions",
      "file_path": "src/error_messages_analysis.ml",
      "start_line": 131,
      "end_line": 146,
      "length": 16,
      "cyclomatic_complexity": 2,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 3,
      "match_expressions_count": 0,
      "nesting_depth": 1
    },
    {
      "name": "generate_function_arity_fix_hints",
      "file_path": "src/error_messages_analysis.ml",
      "start_line": 148,
      "end_line": 152,
      "length": 5,
      "cyclomatic_complexity": 2,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 0,
      "nesting_depth": 1
    },
    {
      "name": "analyze_function_arity",
      "file_path": "src/error_messages_analysis.ml",
      "start_line": 154,
      "end_line": 167,
      "length": 14,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 3,
      "match_expressions_count": 0,
      "nesting_depth": 2
    },
    {
      "name": "generate_pattern_match_suggestions",
      "file_path": "src/error_messages_analysis.ml",
      "start_line": 169,
      "end_line": 173,
      "length": 5,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 2
    },
    {
      "name": "generate_pattern_match_fix_hints",
      "file_path": "src/error_messages_analysis.ml",
      "start_line": 175,
      "end_line": 179,
      "length": 5,
      "cyclomatic_complexity": 2,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 1
    },
    {
      "name": "analyze_pattern_match_error",
      "file_path": "src/error_messages_analysis.ml",
      "start_line": 181,
      "end_line": 192,
      "length": 12,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 2
    },
    {
      "name": "parse_undefined_variable_details",
      "file_path": "src/error_messages_analysis.ml",
      "start_line": 194,
      "end_line": 199,
      "length": 6,
      "cyclomatic_complexity": 5,
      "cognitive_complexity": 4,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 1,
      "nesting_depth": 1
    },
    {
      "name": "parse_type_mismatch_details",
      "file_path": "src/error_messages_analysis.ml",
      "start_line": 201,
      "end_line": 203,
      "length": 3,
      "cyclomatic_complexity": 3,
      "cognitive_complexity": 2,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 1,
      "nesting_depth": 1
    },
    {
      "name": "parse_function_arity_details",
      "file_path": "src/error_messages_analysis.ml",
      "start_line": 205,
      "end_line": 210,
      "length": 6,
      "cyclomatic_complexity": 5,
      "cognitive_complexity": 4,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 1,
      "nesting_depth": 1
    },
    {
      "name": "create_default_error_analysis",
      "file_path": "src/error_messages_analysis.ml",
      "start_line": 212,
      "end_line": 221,
      "length": 10,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "intelligent_error_analysis",
      "file_path": "src/error_messages_analysis.ml",
      "start_line": 223,
      "end_line": 239,
      "length": 17,
      "cyclomatic_complexity": 10,
      "cognitive_complexity": 15,
      "is_recursive": false,
      "parameters_count": 3,
      "match_expressions_count": 2,
      "nesting_depth": 7
    },
    {
      "name": "advance_position_with_column",
      "file_path": "src/lexer_state.ml",
      "start_line": 17,
      "end_line": 19,
      "length": 3,
      "cyclomatic_complexity": 2,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "create_lexer_state",
      "file_path": "src/lexer_state.ml",
      "start_line": 21,
      "end_line": 30,
      "length": 10,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "current_char",
      "file_path": "src/lexer_state.ml",
      "start_line": 32,
      "end_line": 34,
      "length": 3,
      "cyclomatic_complexity": 2,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 1
    },
    {
      "name": "advance",
      "file_path": "src/lexer_state.ml",
      "start_line": 36,
      "end_line": 48,
      "length": 13,
      "cyclomatic_complexity": 5,
      "cognitive_complexity": 3,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 3
    },
    {
      "name": "get_position",
      "file_path": "src/lexer_state.ml",
      "start_line": 50,
      "end_line": 52,
      "length": 3,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "skip_comment",
      "file_path": "src/lexer_state.ml",
      "start_line": 54,
      "end_line": 72,
      "length": 19,
      "cyclomatic_complexity": 13,
      "cognitive_complexity": 29,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 3,
      "nesting_depth": 6
    },
    {
      "name": "check_utf8_char",
      "file_path": "src/lexer_state.ml",
      "start_line": 74,
      "end_line": 78,
      "length": 5,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 2,
      "is_recursive": false,
      "parameters_count": 4,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "skip_chinese_comment",
      "file_path": "src/lexer_state.ml",
      "start_line": 80,
      "end_line": 109,
      "length": 30,
      "cyclomatic_complexity": 11,
      "cognitive_complexity": 21,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 2,
      "nesting_depth": 5
    },
    {
      "name": "skip_whitespace_and_comments",
      "file_path": "src/lexer_state.ml",
      "start_line": 111,
      "end_line": 144,
      "length": 34,
      "cyclomatic_complexity": 19,
      "cognitive_complexity": 35,
      "is_recursive": true,
      "parameters_count": 1,
      "match_expressions_count": 3,
      "nesting_depth": 8
    },
    {
      "name": "convert_token",
      "file_path": "src/token_conversion_core_refactored.ml",
      "start_line": 26,
      "end_line": 40,
      "length": 15,
      "cyclomatic_complexity": 13,
      "cognitive_complexity": 30,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 4,
      "nesting_depth": 4
    },
    {
      "name": "_convert_token_list_safe",
      "file_path": "src/token_conversion_core_refactored.ml",
      "start_line": 45,
      "end_line": 53,
      "length": 9,
      "cyclomatic_complexity": 5,
      "cognitive_complexity": 4,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 1,
      "nesting_depth": 1
    },
    {
      "name": "get_token_type",
      "file_path": "src/token_conversion_core_refactored.ml",
      "start_line": 55,
      "end_line": 62,
      "length": 8,
      "cyclomatic_complexity": 6,
      "cognitive_complexity": 15,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 5
    },
    {
      "name": "get_conversion_stats",
      "file_path": "src/token_conversion_core_refactored.ml",
      "start_line": 65,
      "end_line": 85,
      "length": 21,
      "cyclomatic_complexity": 3,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 5
    },
    {
      "name": "_convert_token_list_with_exceptions",
      "file_path": "src/token_conversion_core_refactored.ml",
      "start_line": 118,
      "end_line": 128,
      "length": 11,
      "cyclomatic_complexity": 4,
      "cognitive_complexity": 3,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 1,
      "nesting_depth": 2
    },
    {
      "name": "field_not_found",
      "file_path": "src/expression_evaluator_data.ml",
      "start_line": 16,
      "end_line": 17,
      "length": 2,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "array_index_out_of_bounds",
      "file_path": "src/expression_evaluator_data.ml",
      "start_line": 23,
      "end_line": 26,
      "length": 4,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "eval_record_expr",
      "file_path": "src/expression_evaluator_data.ml",
      "start_line": 29,
      "end_line": 31,
      "length": 3,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 3,
      "match_expressions_count": 0,
      "nesting_depth": 1
    },
    {
      "name": "eval_field_access",
      "file_path": "src/expression_evaluator_data.ml",
      "start_line": 33,
      "end_line": 55,
      "length": 23,
      "cyclomatic_complexity": 10,
      "cognitive_complexity": 17,
      "is_recursive": false,
      "parameters_count": 4,
      "match_expressions_count": 2,
      "nesting_depth": 7
    },
    {
      "name": "eval_array_expr",
      "file_path": "src/expression_evaluator_data.ml",
      "start_line": 58,
      "end_line": 60,
      "length": 3,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 3,
      "match_expressions_count": 0,
      "nesting_depth": 1
    },
    {
      "name": "validate_array_index",
      "file_path": "src/expression_evaluator_data.ml",
      "start_line": 62,
      "end_line": 64,
      "length": 3,
      "cyclomatic_complexity": 2,
      "cognitive_complexity": 2,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 0,
      "nesting_depth": 1
    },
    {
      "name": "eval_array_access",
      "file_path": "src/expression_evaluator_data.ml",
      "start_line": 66,
      "end_line": 88,
      "length": 23,
      "cyclomatic_complexity": 9,
      "cognitive_complexity": 12,
      "is_recursive": false,
      "parameters_count": 4,
      "match_expressions_count": 2,
      "nesting_depth": 7
    },
    {
      "name": "eval_tuple_expr",
      "file_path": "src/expression_evaluator_data.ml",
      "start_line": 91,
      "end_line": 93,
      "length": 3,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 3,
      "match_expressions_count": 0,
      "nesting_depth": 1
    },
    {
      "name": "eval_list_expr",
      "file_path": "src/expression_evaluator_data.ml",
      "start_line": 95,
      "end_line": 99,
      "length": 5,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 3,
      "match_expressions_count": 0,
      "nesting_depth": 1
    },
    {
      "name": "estimate_recursion_depth",
      "file_path": "src/performance_analyzer_recursion.ml",
      "start_line": 9,
      "end_line": 41,
      "length": 33,
      "cyclomatic_complexity": 8,
      "cognitive_complexity": 2,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 1,
      "nesting_depth": 7
    },
    {
      "name": "recursion_specific_analysis",
      "file_path": "src/performance_analyzer_recursion.ml",
      "start_line": 43,
      "end_line": 52,
      "length": 10,
      "cyclomatic_complexity": 2,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 2
    },
    {
      "name": "analyze_recursion_performance",
      "file_path": "src/performance_analyzer_recursion.ml",
      "start_line": 54,
      "end_line": 55,
      "length": 2,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "convert_token_list",
      "file_path": "src/conversion_registry.ml",
      "start_line": 22,
      "end_line": 35,
      "length": 14,
      "cyclomatic_complexity": 9,
      "cognitive_complexity": 12,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 1,
      "nesting_depth": 1
    },
    {
      "name": "complexity_specific_analysis",
      "file_path": "src/performance_analyzer_complexity.ml",
      "start_line": 15,
      "end_line": 24,
      "length": 10,
      "cyclomatic_complexity": 5,
      "cognitive_complexity": 6,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 1,
      "nesting_depth": 3
    },
    {
      "name": "analyze_computational_complexity",
      "file_path": "src/performance_analyzer_complexity.ml",
      "start_line": 26,
      "end_line": 27,
      "length": 2,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "variable_suggestion",
      "file_path": "src/formatter_errors.ml",
      "start_line": 20,
      "end_line": 23,
      "length": 4,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 0,
      "nesting_depth": 1
    },
    {
      "name": "function_param_count_mismatch",
      "file_path": "src/formatter_errors.ml",
      "start_line": 27,
      "end_line": 37,
      "length": 11,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 3,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "function_param_count_mismatch_simple",
      "file_path": "src/formatter_errors.ml",
      "start_line": 39,
      "end_line": 41,
      "length": 3,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "function_needs_params",
      "file_path": "src/formatter_errors.ml",
      "start_line": 43,
      "end_line": 47,
      "length": 5,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 3,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "function_excess_params",
      "file_path": "src/formatter_errors.ml",
      "start_line": 49,
      "end_line": 54,
      "length": 6,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 3,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "type_mismatch_detailed",
      "file_path": "src/formatter_errors.ml",
      "start_line": 58,
      "end_line": 59,
      "length": 2,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 3,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "invalid_argument_type",
      "file_path": "src/formatter_errors.ml",
      "start_line": 64,
      "end_line": 66,
      "length": 3,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "member_not_found",
      "file_path": "src/formatter_errors.ml",
      "start_line": 84,
      "end_line": 86,
      "length": 3,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "variable_spell_correction",
      "file_path": "src/formatter_errors.ml",
      "start_line": 105,
      "end_line": 108,
      "length": 4,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "unexpected_error_format",
      "file_path": "src/formatter_errors.ml",
      "start_line": 113,
      "end_line": 115,
      "length": 3,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "parse_failure_with_token",
      "file_path": "src/formatter_errors.ml",
      "start_line": 127,
      "end_line": 129,
      "length": 3,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 3,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "error_with_position",
      "file_path": "src/formatter_errors.ml",
      "start_line": 136,
      "end_line": 137,
      "length": 2,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 3,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "lexical_error_with_position",
      "file_path": "src/formatter_errors.ml",
      "start_line": 139,
      "end_line": 141,
      "length": 3,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 3,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "invalid_argument",
      "file_path": "src/formatter_errors.ml",
      "start_line": 149,
      "end_line": 150,
      "length": 2,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 3,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "index_out_of_bounds",
      "file_path": "src/formatter_errors.ml",
      "start_line": 155,
      "end_line": 156,
      "length": 2,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "array_bounds_error",
      "file_path": "src/formatter_errors.ml",
      "start_line": 158,
      "end_line": 160,
      "length": 3,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "module_member_not_found",
      "file_path": "src/formatter_errors.ml",
      "start_line": 180,
      "end_line": 182,
      "length": 3,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "token_expectation_error",
      "file_path": "src/formatter_errors.ml",
      "start_line": 187,
      "end_line": 188,
      "length": 2,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "codegen_error",
      "file_path": "src/formatter_errors.ml",
      "start_line": 193,
      "end_line": 194,
      "length": 2,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 3,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "unsupported_feature",
      "file_path": "src/formatter_errors.ml",
      "start_line": 196,
      "end_line": 198,
      "length": 3,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "parser_state_error",
      "file_path": "src/formatter_errors.ml",
      "start_line": 205,
      "end_line": 206,
      "length": 2,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "lexer_error",
      "file_path": "src/formatter_errors.ml",
      "start_line": 208,
      "end_line": 210,
      "length": 3,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "format_error_statistics",
      "file_path": "src/formatter_errors.ml",
      "start_line": 225,
      "end_line": 227,
      "length": 3,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "format_error_context",
      "file_path": "src/formatter_errors.ml",
      "start_line": 235,
      "end_line": 237,
      "length": 3,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "format_unified_error",
      "file_path": "src/formatter_errors.ml",
      "start_line": 239,
      "end_line": 241,
      "length": 3,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "format_error_suggestion",
      "file_path": "src/formatter_errors.ml",
      "start_line": 243,
      "end_line": 245,
      "length": 3,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "format_error_hint",
      "file_path": "src/formatter_errors.ml",
      "start_line": 247,
      "end_line": 249,
      "length": 3,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "format_confidence_score",
      "file_path": "src/formatter_errors.ml",
      "start_line": 251,
      "end_line": 253,
      "length": 3,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "format_stack_trace",
      "file_path": "src/formatter_errors.ml",
      "start_line": 257,
      "end_line": 260,
      "length": 4,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 1
    },
    {
      "name": "deprecation_warning",
      "file_path": "src/formatter_errors.ml",
      "start_line": 264,
      "end_line": 266,
      "length": 3,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "performance_warning",
      "file_path": "src/formatter_errors.ml",
      "start_line": 270,
      "end_line": 281,
      "length": 12,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 3,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "type_keyword_mapping",
      "file_path": "src/keyword_converter_special.ml",
      "start_line": 7,
      "end_line": 22,
      "length": 16,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "convert_type_keywords",
      "file_path": "src/keyword_converter_special.ml",
      "start_line": 24,
      "end_line": 27,
      "length": 4,
      "cyclomatic_complexity": 3,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 0,
      "nesting_depth": 1
    },
    {
      "name": "poetry_keyword_mapping",
      "file_path": "src/keyword_converter_special.ml",
      "start_line": 29,
      "end_line": 59,
      "length": 31,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "convert_poetry_keywords",
      "file_path": "src/keyword_converter_special.ml",
      "start_line": 61,
      "end_line": 64,
      "length": 4,
      "cyclomatic_complexity": 3,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 0,
      "nesting_depth": 1
    },
    {
      "name": "wenyan_keyword_mapping",
      "file_path": "src/keyword_converter_chinese.ml",
      "start_line": 8,
      "end_line": 36,
      "length": 29,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "convert_wenyan_keywords",
      "file_path": "src/keyword_converter_chinese.ml",
      "start_line": 38,
      "end_line": 42,
      "length": 5,
      "cyclomatic_complexity": 4,
      "cognitive_complexity": 3,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 1,
      "nesting_depth": 1
    },
    {
      "name": "ancient_basic_structure_mapping",
      "file_path": "src/keyword_converter_chinese.ml",
      "start_line": 44,
      "end_line": 60,
      "length": 17,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "ancient_particle_function_mapping",
      "file_path": "src/keyword_converter_chinese.ml",
      "start_line": 62,
      "end_line": 69,
      "length": 8,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "ancient_list_operation_mapping",
      "file_path": "src/keyword_converter_chinese.ml",
      "start_line": 71,
      "end_line": 84,
      "length": 14,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "ancient_operation_control_mapping",
      "file_path": "src/keyword_converter_chinese.ml",
      "start_line": 86,
      "end_line": 99,
      "length": 14,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "ancient_punctuation_record_mapping",
      "file_path": "src/keyword_converter_chinese.ml",
      "start_line": 101,
      "end_line": 111,
      "length": 11,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "ancient_keyword_mapping",
      "file_path": "src/keyword_converter_chinese.ml",
      "start_line": 113,
      "end_line": 122,
      "length": 10,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "convert_ancient_keywords",
      "file_path": "src/keyword_converter_chinese.ml",
      "start_line": 124,
      "end_line": 127,
      "length": 4,
      "cyclomatic_complexity": 3,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 0,
      "nesting_depth": 1
    },
    {
      "name": "natural_keyword_mapping",
      "file_path": "src/keyword_converter_chinese.ml",
      "start_line": 129,
      "end_line": 162,
      "length": 34,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "convert_natural_keywords",
      "file_path": "src/keyword_converter_chinese.ml",
      "start_line": 164,
      "end_line": 166,
      "length": 3,
      "cyclomatic_complexity": 3,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 0,
      "nesting_depth": 1
    },
    {
      "name": "chinese_type_error_message",
      "file_path": "src/error_messages_translation.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "chinese_runtime_error_message",
      "file_path": "src/error_messages_translation.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "create_expr_parser_chain",
      "file_path": "src/parser_expressions_consolidated.ml",
      "start_line": 32,
      "end_line": 71,
      "length": 40,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 3
    },
    {
      "name": "get_expr_parser",
      "file_path": "src/parser_expressions_consolidated.ml",
      "start_line": 76,
      "end_line": 79,
      "length": 4,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 1
    },
    {
      "name": "get_primary_expr_parser",
      "file_path": "src/parser_expressions_consolidated.ml",
      "start_line": 81,
      "end_line": 86,
      "length": 6,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 1
    },
    {
      "name": "parse_expr",
      "file_path": "src/parser_expressions_consolidated.ml",
      "start_line": 88,
      "end_line": 279,
      "length": 192,
      "cyclomatic_complexity": 20,
      "cognitive_complexity": 28,
      "is_recursive": true,
      "parameters_count": 1,
      "match_expressions_count": 1,
      "nesting_depth": 18
    },
    {
      "name": "verify_backward_compatibility",
      "file_path": "src/parser_expressions_consolidated.ml",
      "start_line": 281,
      "end_line": 296,
      "length": 16,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "trim_whitespace",
      "file_path": "src/data_loader_parser.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "extract_array_content",
      "file_path": "src/data_loader_parser.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "extract_and_parse_array",
      "file_path": "src/data_loader_parser.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "parse_string_array",
      "file_path": "src/data_loader_parser.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "parse_word_class_pairs",
      "file_path": "src/data_loader_parser.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "parse_simple_object",
      "file_path": "src/data_loader_parser.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "convert_basic_keyword_token",
      "file_path": "src/lexer_token_conversion_basic_keywords.ml",
      "start_line": 157,
      "end_line": 175,
      "length": 19,
      "cyclomatic_complexity": 19,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 1
    },
    {
      "name": "parse_natural_arithmetic_continuation",
      "file_path": "src/parser_expressions_natural_language.ml",
      "start_line": 9,
      "end_line": 18,
      "length": 10,
      "cyclomatic_complexity": 4,
      "cognitive_complexity": 3,
      "is_recursive": false,
      "parameters_count": 3,
      "match_expressions_count": 1,
      "nesting_depth": 4
    },
    {
      "name": "parse_natural_function_definition",
      "file_path": "src/parser_expressions_natural_language.ml",
      "start_line": 20,
      "end_line": 178,
      "length": 159,
      "cyclomatic_complexity": 52,
      "cognitive_complexity": 172,
      "is_recursive": true,
      "parameters_count": 2,
      "match_expressions_count": 8,
      "nesting_depth": 70
    },
    {
      "name": "parse_natural_expression",
      "file_path": "src/parser_expressions_natural_language.ml",
      "start_line": 180,
      "end_line": 183,
      "length": 4,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 3,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "parse_natural_arithmetic_expression",
      "file_path": "src/parser_expressions_natural_language.ml",
      "start_line": 185,
      "end_line": 187,
      "length": 3,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 3,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "create_test_tokens",
      "file_path": "src/token_conversion_benchmark.ml",
      "start_line": 14,
      "end_line": 58,
      "length": 45,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "benchmark_original_version",
      "file_path": "src/token_conversion_benchmark.ml",
      "start_line": 60,
      "end_line": 78,
      "length": 19,
      "cyclomatic_complexity": 3,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 0,
      "nesting_depth": 8
    },
    {
      "name": "benchmark_refactored_version",
      "file_path": "src/token_conversion_benchmark.ml",
      "start_line": 80,
      "end_line": 99,
      "length": 20,
      "cyclomatic_complexity": 4,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 0,
      "nesting_depth": 7
    },
    {
      "name": "benchmark_optimized_version",
      "file_path": "src/token_conversion_benchmark.ml",
      "start_line": 101,
      "end_line": 121,
      "length": 21,
      "cyclomatic_complexity": 4,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 0,
      "nesting_depth": 7
    },
    {
      "name": "generate_performance_report",
      "file_path": "src/token_conversion_benchmark.ml",
      "start_line": 123,
      "end_line": 201,
      "length": 79,
      "cyclomatic_complexity": 7,
      "cognitive_complexity": 23,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 11
    },
    {
      "name": "convert_literal_token_safe",
      "file_path": "src/token_conversion_literals.ml",
      "start_line": 34,
      "end_line": 35,
      "length": 2,
      "cyclomatic_complexity": 2,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 1
    },
    {
      "name": "get_config_file_path",
      "file_path": "src/chinese_best_practices.ml",
      "start_line": 59,
      "end_line": 61,
      "length": 3,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 1
    },
    {
      "name": "get_json_config",
      "file_path": "src/chinese_best_practices.ml",
      "start_line": 69,
      "end_line": 92,
      "length": 24,
      "cyclomatic_complexity": 8,
      "cognitive_complexity": 7,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 1,
      "nesting_depth": 3
    },
    {
      "name": "parse_test_cases",
      "file_path": "src/chinese_best_practices.ml",
      "start_line": 94,
      "end_line": 98,
      "length": 5,
      "cyclomatic_complexity": 6,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 1
    },
    {
      "name": "get_checker_function",
      "file_path": "src/chinese_best_practices.ml",
      "start_line": 100,
      "end_line": 112,
      "length": 13,
      "cyclomatic_complexity": 9,
      "cognitive_complexity": 8,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 1,
      "nesting_depth": 1
    },
    {
      "name": "parse_test_config",
      "file_path": "src/chinese_best_practices.ml",
      "start_line": 114,
      "end_line": 126,
      "length": 13,
      "cyclomatic_complexity": 9,
      "cognitive_complexity": 3,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 6
    },
    {
      "name": "test_configs",
      "file_path": "src/chinese_best_practices.ml",
      "start_line": 128,
      "end_line": 134,
      "length": 7,
      "cyclomatic_complexity": 6,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 2
    },
    {
      "name": "comprehensive_test_cases",
      "file_path": "src/chinese_best_practices.ml",
      "start_line": 136,
      "end_line": 142,
      "length": 7,
      "cyclomatic_complexity": 6,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 2
    },
    {
      "name": "test_summary_items",
      "file_path": "src/chinese_best_practices.ml",
      "start_line": 144,
      "end_line": 152,
      "length": 9,
      "cyclomatic_complexity": 6,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 2
    },
    {
      "name": "comprehensive_practice_check",
      "file_path": "src/chinese_best_practices.ml",
      "start_line": 154,
      "end_line": 158,
      "length": 5,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 2
    },
    {
      "name": "detect_mixed_language_patterns",
      "file_path": "src/chinese_best_practices.ml",
      "start_line": 163,
      "end_line": 164,
      "length": 2,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "check_chinese_word_order",
      "file_path": "src/chinese_best_practices.ml",
      "start_line": 166,
      "end_line": 167,
      "length": 2,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "check_idiomatic_chinese",
      "file_path": "src/chinese_best_practices.ml",
      "start_line": 169,
      "end_line": 170,
      "length": 2,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "check_style_consistency",
      "file_path": "src/chinese_best_practices.ml",
      "start_line": 172,
      "end_line": 173,
      "length": 2,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "check_classical_style_appropriateness",
      "file_path": "src/chinese_best_practices.ml",
      "start_line": 175,
      "end_line": 176,
      "length": 2,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "check_ai_friendly_patterns",
      "file_path": "src/chinese_best_practices.ml",
      "start_line": 178,
      "end_line": 182,
      "length": 5,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "run_test_suite",
      "file_path": "src/chinese_best_practices.ml",
      "start_line": 184,
      "end_line": 195,
      "length": 12,
      "cyclomatic_complexity": 2,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 3
    },
    {
      "name": "run_comprehensive_test",
      "file_path": "src/chinese_best_practices.ml",
      "start_line": 197,
      "end_line": 209,
      "length": 13,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 2
    },
    {
      "name": "print_test_summary",
      "file_path": "src/chinese_best_practices.ml",
      "start_line": 211,
      "end_line": 218,
      "length": 8,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 1
    },
    {
      "name": "test_chinese_best_practices",
      "file_path": "src/chinese_best_practices.ml",
      "start_line": 220,
      "end_line": 235,
      "length": 16,
      "cyclomatic_complexity": 5,
      "cognitive_complexity": 2,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 2
    },
    {
      "name": "map_legacy_keyword_to_unified",
      "file_path": "src/token_compatibility_unified.ml",
      "start_line": 176,
      "end_line": 195,
      "length": 20,
      "cyclomatic_complexity": 19,
      "cognitive_complexity": 63,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 6,
      "nesting_depth": 6
    },
    {
      "name": "convert_legacy_token_string",
      "file_path": "src/token_compatibility_unified.ml",
      "start_line": 197,
      "end_line": 213,
      "length": 17,
      "cyclomatic_complexity": 16,
      "cognitive_complexity": 45,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 5,
      "nesting_depth": 5
    },
    {
      "name": "make_compatible_positioned_token",
      "file_path": "src/token_compatibility_unified.ml",
      "start_line": 215,
      "end_line": 221,
      "length": 7,
      "cyclomatic_complexity": 4,
      "cognitive_complexity": 3,
      "is_recursive": false,
      "parameters_count": 5,
      "match_expressions_count": 1,
      "nesting_depth": 2
    },
    {
      "name": "is_compatible_with_legacy",
      "file_path": "src/token_compatibility_unified.ml",
      "start_line": 223,
      "end_line": 225,
      "length": 3,
      "cyclomatic_complexity": 3,
      "cognitive_complexity": 2,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 1,
      "nesting_depth": 1
    },
    {
      "name": "find_data_file",
      "file_path": "src/token_compatibility_unified.ml",
      "start_line": 228,
      "end_line": 231,
      "length": 4,
      "cyclomatic_complexity": 3,
      "cognitive_complexity": 3,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 2
    },
    {
      "name": "load_token_category",
      "file_path": "src/token_compatibility_unified.ml",
      "start_line": 233,
      "end_line": 257,
      "length": 25,
      "cyclomatic_complexity": 6,
      "cognitive_complexity": 3,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 1,
      "nesting_depth": 5
    },
    {
      "name": "get_supported_legacy_tokens",
      "file_path": "src/token_compatibility_unified.ml",
      "start_line": 259,
      "end_line": 287,
      "length": 29,
      "cyclomatic_complexity": 8,
      "cognitive_complexity": 4,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 1,
      "nesting_depth": 2
    },
    {
      "name": "generate_compatibility_report",
      "file_path": "src/token_compatibility_unified.ml",
      "start_line": 289,
      "end_line": 293,
      "length": 5,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 2
    },
    {
      "name": "generate_detailed_compatibility_report",
      "file_path": "src/token_compatibility_unified.ml",
      "start_line": 295,
      "end_line": 299,
      "length": 5,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 2
    },
    {
      "name": "get_compatibility_stats",
      "file_path": "src/token_compatibility_unified.ml",
      "start_line": 346,
      "end_line": 348,
      "length": 3,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 1
    },
    {
      "name": "format_enhanced_error",
      "file_path": "src/error_handler_formatting.ml",
      "start_line": 11,
      "end_line": 57,
      "length": 47,
      "cyclomatic_complexity": 12,
      "cognitive_complexity": 12,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 1,
      "nesting_depth": 5
    },
    {
      "name": "colorize_error_message",
      "file_path": "src/error_handler_formatting.ml",
      "start_line": 59,
      "end_line": 70,
      "length": 12,
      "cyclomatic_complexity": 6,
      "cognitive_complexity": 9,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 1,
      "nesting_depth": 3
    },
    {
      "name": "log_error_to_file",
      "file_path": "src/error_handler_formatting.ml",
      "start_line": 72,
      "end_line": 89,
      "length": 18,
      "cyclomatic_complexity": 7,
      "cognitive_complexity": 10,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 6
    },
    {
      "name": "parse_expression",
      "file_path": "src/parser_expressions.ml",
      "start_line": 19,
      "end_line": 249,
      "length": 231,
      "cyclomatic_complexity": 62,
      "cognitive_complexity": 50,
      "is_recursive": true,
      "parameters_count": 1,
      "match_expressions_count": 2,
      "nesting_depth": 5
    },
    {
      "name": "count_pattern_in_hashtbl",
      "file_path": "src/refactoring_analyzer_duplication.ml",
      "start_line": 16,
      "end_line": 19,
      "length": 4,
      "cyclomatic_complexity": 2,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 0,
      "nesting_depth": 1
    },
    {
      "name": "create_duplication_suggestion",
      "file_path": "src/refactoring_analyzer_duplication.ml",
      "start_line": 21,
      "end_line": 29,
      "length": 9,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 5,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "add_suggestions_from_hashtbl",
      "file_path": "src/refactoring_analyzer_duplication.ml",
      "start_line": 31,
      "end_line": 45,
      "length": 15,
      "cyclomatic_complexity": 2,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 4,
      "match_expressions_count": 0,
      "nesting_depth": 2
    },
    {
      "name": "extract_expression_pattern",
      "file_path": "src/refactoring_analyzer_duplication.ml",
      "start_line": 47,
      "end_line": 97,
      "length": 51,
      "cyclomatic_complexity": 23,
      "cognitive_complexity": 22,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 2,
      "nesting_depth": 10
    },
    {
      "name": "detect_simple_duplication",
      "file_path": "src/refactoring_analyzer_duplication.ml",
      "start_line": 99,
      "end_line": 131,
      "length": 33,
      "cyclomatic_complexity": 8,
      "cognitive_complexity": 7,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 1,
      "nesting_depth": 3
    },
    {
      "name": "detect_structural_duplication",
      "file_path": "src/refactoring_analyzer_duplication.ml",
      "start_line": 133,
      "end_line": 168,
      "length": 36,
      "cyclomatic_complexity": 5,
      "cognitive_complexity": 6,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 8
    },
    {
      "name": "detect_function_duplication",
      "file_path": "src/refactoring_analyzer_duplication.ml",
      "start_line": 170,
      "end_line": 209,
      "length": 40,
      "cyclomatic_complexity": 3,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 6
    },
    {
      "name": "detect_code_clones",
      "file_path": "src/refactoring_analyzer_duplication.ml",
      "start_line": 211,
      "end_line": 250,
      "length": 40,
      "cyclomatic_complexity": 2,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 4
    },
    {
      "name": "detect_code_duplication",
      "file_path": "src/refactoring_analyzer_duplication.ml",
      "start_line": 252,
      "end_line": 262,
      "length": 11,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 4
    },
    {
      "name": "analyze_duplication_impact",
      "file_path": "src/refactoring_analyzer_duplication.ml",
      "start_line": 264,
      "end_line": 278,
      "length": 15,
      "cyclomatic_complexity": 2,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 1
    },
    {
      "name": "generate_duplication_report",
      "file_path": "src/refactoring_analyzer_duplication.ml",
      "start_line": 280,
      "end_line": 316,
      "length": 37,
      "cyclomatic_complexity": 5,
      "cognitive_complexity": 10,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 7
    },
    {
      "name": "keyword_map",
      "file_path": "src/keyword_tables.ml",
      "start_line": 39,
      "end_line": 43,
      "length": 5,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "reserved_words_set",
      "file_path": "src/keyword_tables.ml",
      "start_line": 63,
      "end_line": 65,
      "length": 3,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "convert_basic_keyword_token",
      "file_path": "src/token_conversion_keywords.ml",
      "start_line": 152,
      "end_line": 170,
      "length": 19,
      "cyclomatic_complexity": 5,
      "cognitive_complexity": 2,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 1,
      "nesting_depth": 1
    },
    {
      "name": "convert_basic_keyword_token_safe",
      "file_path": "src/token_conversion_keywords.ml",
      "start_line": 172,
      "end_line": 174,
      "length": 3,
      "cyclomatic_complexity": 3,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 1
    },
    {
      "name": "is_basic_keyword_token",
      "file_path": "src/token_conversion_keywords.ml",
      "start_line": 176,
      "end_line": 177,
      "length": 2,
      "cyclomatic_complexity": 3,
      "cognitive_complexity": 2,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 1,
      "nesting_depth": 1
    },
    {
      "name": "format_position_with_fields",
      "file_path": "src/string_processing_utils.ml",
      "start_line": 46,
      "end_line": 47,
      "length": 2,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "format_optional_position_with_extractor",
      "file_path": "src/string_processing_utils.ml",
      "start_line": 49,
      "end_line": 51,
      "length": 3,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "is_type_keyword_token",
      "file_path": "src/token_conversion_types.ml",
      "start_line": 33,
      "end_line": 38,
      "length": 6,
      "cyclomatic_complexity": 3,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 2
    },
    {
      "name": "convert_type_keyword_token_safe",
      "file_path": "src/token_conversion_types.ml",
      "start_line": 40,
      "end_line": 41,
      "length": 2,
      "cyclomatic_complexity": 2,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 1
    },
    {
      "name": "validate_string_list",
      "file_path": "src/data_loader_validator.ml",
      "start_line": 16,
      "end_line": 21,
      "length": 6,
      "cyclomatic_complexity": 4,
      "cognitive_complexity": 3,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 1,
      "nesting_depth": 2
    },
    {
      "name": "validate_word_class_pairs",
      "file_path": "src/data_loader_validator.ml",
      "start_line": 23,
      "end_line": 48,
      "length": 26,
      "cyclomatic_complexity": 3,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 5
    },
    {
      "name": "validate_key_value_pairs",
      "file_path": "src/data_loader_validator.ml",
      "start_line": 50,
      "end_line": 54,
      "length": 5,
      "cyclomatic_complexity": 4,
      "cognitive_complexity": 3,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 1,
      "nesting_depth": 1
    },
    {
      "name": "validate_non_empty_list",
      "file_path": "src/data_loader_validator.ml",
      "start_line": 56,
      "end_line": 59,
      "length": 4,
      "cyclomatic_complexity": 4,
      "cognitive_complexity": 3,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 1,
      "nesting_depth": 1
    },
    {
      "name": "is_keyword_token",
      "file_path": "src/token_category_checker.ml",
      "start_line": 61,
      "end_line": 63,
      "length": 3,
      "cyclomatic_complexity": 9,
      "cognitive_complexity": 4,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "get_token_category_safe",
      "file_path": "src/token_category_checker.ml",
      "start_line": 89,
      "end_line": 98,
      "length": 10,
      "cyclomatic_complexity": 7,
      "cognitive_complexity": 21,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 6
    },
    {
      "name": "get_token_category",
      "file_path": "src/token_category_checker.ml",
      "start_line": 100,
      "end_line": 103,
      "length": 4,
      "cyclomatic_complexity": 4,
      "cognitive_complexity": 3,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 1,
      "nesting_depth": 1
    },
    {
      "name": "init_all_loggers",
      "file_path": "src/logger_utils.ml",
      "start_line": 13,
      "end_line": 16,
      "length": 4,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 1
    },
    {
      "name": "init_info_error_loggers",
      "file_path": "src/logger_utils.ml",
      "start_line": 18,
      "end_line": 21,
      "length": 4,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 1
    },
    {
      "name": "init_debug_error_loggers",
      "file_path": "src/logger_utils.ml",
      "start_line": 23,
      "end_line": 26,
      "length": 4,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 1
    },
    {
      "name": "init_info_warn_error_loggers",
      "file_path": "src/logger_utils.ml",
      "start_line": 28,
      "end_line": 31,
      "length": 4,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 1
    },
    {
      "name": "init_debug_info_error_loggers",
      "file_path": "src/logger_utils.ml",
      "start_line": 33,
      "end_line": 36,
      "length": 4,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 1
    },
    {
      "name": "init_debug_info_loggers",
      "file_path": "src/logger_utils.ml",
      "start_line": 38,
      "end_line": 41,
      "length": 4,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 1
    },
    {
      "name": "init_info_logger",
      "file_path": "src/logger_utils.ml",
      "start_line": 43,
      "end_line": 46,
      "length": 4,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 1
    },
    {
      "name": "init_error_logger",
      "file_path": "src/logger_utils.ml",
      "start_line": 48,
      "end_line": 51,
      "length": 4,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 1
    },
    {
      "name": "init_debug_logger",
      "file_path": "src/logger_utils.ml",
      "start_line": 53,
      "end_line": 56,
      "length": 4,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 1
    },
    {
      "name": "init_no_logger",
      "file_path": "src/logger_utils.ml",
      "start_line": 58,
      "end_line": 61,
      "length": 4,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 1
    },
    {
      "name": "infer_module_name",
      "file_path": "src/logger_utils.ml",
      "start_line": 66,
      "end_line": 89,
      "length": 24,
      "cyclomatic_complexity": 4,
      "cognitive_complexity": 6,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 9
    },
    {
      "name": "smart_init",
      "file_path": "src/logger_utils.ml",
      "start_line": 91,
      "end_line": 100,
      "length": 10,
      "cyclomatic_complexity": 12,
      "cognitive_complexity": 7,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 1,
      "nesting_depth": 2
    },
    {
      "name": "hash_expr",
      "file_path": "src/types_cache.ml",
      "start_line": 27,
      "end_line": 40,
      "length": 14,
      "cyclomatic_complexity": 11,
      "cognitive_complexity": 10,
      "is_recursive": true,
      "parameters_count": 1,
      "match_expressions_count": 1,
      "nesting_depth": 1
    },
    {
      "name": "cache",
      "file_path": "src/types_cache.ml",
      "start_line": 42,
      "end_line": 43,
      "length": 2,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 5,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "reset_cache",
      "file_path": "src/types_cache.ml",
      "start_line": 49,
      "end_line": 52,
      "length": 4,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "lookup",
      "file_path": "src/types_cache.ml",
      "start_line": 54,
      "end_line": 62,
      "length": 9,
      "cyclomatic_complexity": 3,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 3
    },
    {
      "name": "store",
      "file_path": "src/types_cache.ml",
      "start_line": 64,
      "end_line": 66,
      "length": 3,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 3,
      "match_expressions_count": 0,
      "nesting_depth": 1
    },
    {
      "name": "get_stats",
      "file_path": "src/types_cache.ml",
      "start_line": 79,
      "end_line": 81,
      "length": 3,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 1
    },
    {
      "name": "reset_stats",
      "file_path": "src/types_cache.ml",
      "start_line": 83,
      "end_line": 87,
      "length": 5,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "get_cache_hit_rate",
      "file_path": "src/types_cache.ml",
      "start_line": 96,
      "end_line": 99,
      "length": 4,
      "cyclomatic_complexity": 2,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 2
    },
    {
      "name": "print_stats",
      "file_path": "src/types_cache.ml",
      "start_line": 101,
      "end_line": 115,
      "length": 15,
      "cyclomatic_complexity": 2,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 3
    },
    {
      "name": "quick_type_check",
      "file_path": "src/types_cache.ml",
      "start_line": 119,
      "end_line": 129,
      "length": 11,
      "cyclomatic_complexity": 10,
      "cognitive_complexity": 8,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 1,
      "nesting_depth": 1
    },
    {
      "name": "types_equal",
      "file_path": "src/types_cache.ml",
      "start_line": 131,
      "end_line": 141,
      "length": 11,
      "cyclomatic_complexity": 9,
      "cognitive_complexity": 8,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 1,
      "nesting_depth": 1
    },
    {
      "name": "raise_parse_error",
      "file_path": "src/parser_expressions_identifiers.ml",
      "start_line": 25,
      "end_line": 34,
      "length": 10,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 4,
      "match_expressions_count": 0,
      "nesting_depth": 1
    },
    {
      "name": "parse_single_argument",
      "file_path": "src/parser_expressions_identifiers.ml",
      "start_line": 36,
      "end_line": 74,
      "length": 39,
      "cyclomatic_complexity": 13,
      "cognitive_complexity": 11,
      "is_recursive": false,
      "parameters_count": 3,
      "match_expressions_count": 1,
      "nesting_depth": 13
    },
    {
      "name": "collect_function_arguments",
      "file_path": "src/parser_expressions_identifiers.ml",
      "start_line": 76,
      "end_line": 82,
      "length": 7,
      "cyclomatic_complexity": 2,
      "cognitive_complexity": 1,
      "is_recursive": true,
      "parameters_count": 3,
      "match_expressions_count": 0,
      "nesting_depth": 3
    },
    {
      "name": "parse_function_call_or_variable",
      "file_path": "src/parser_expressions_identifiers.ml",
      "start_line": 87,
      "end_line": 98,
      "length": 12,
      "cyclomatic_complexity": 2,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 3,
      "match_expressions_count": 0,
      "nesting_depth": 3
    },
    {
      "name": "parse_quoted_identifier",
      "file_path": "src/parser_expressions_identifiers.ml",
      "start_line": 100,
      "end_line": 105,
      "length": 6,
      "cyclomatic_complexity": 2,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 3,
      "match_expressions_count": 0,
      "nesting_depth": 2
    },
    {
      "name": "parse_special_identifier",
      "file_path": "src/parser_expressions_identifiers.ml",
      "start_line": 107,
      "end_line": 110,
      "length": 4,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 3,
      "match_expressions_count": 0,
      "nesting_depth": 1
    },
    {
      "name": "parse_number_keyword_identifier",
      "file_path": "src/parser_expressions_identifiers.ml",
      "start_line": 112,
      "end_line": 115,
      "length": 4,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 0,
      "nesting_depth": 1
    },
    {
      "name": "parse_keyword_compound_identifier",
      "file_path": "src/parser_expressions_identifiers.ml",
      "start_line": 117,
      "end_line": 120,
      "length": 4,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 0,
      "nesting_depth": 1
    },
    {
      "name": "parse_identifier_expr",
      "file_path": "src/parser_expressions_identifiers.ml",
      "start_line": 122,
      "end_line": 138,
      "length": 17,
      "cyclomatic_complexity": 20,
      "cognitive_complexity": 7,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 1,
      "nesting_depth": 2
    },
    {
      "name": "parse_type_keyword_expr",
      "file_path": "src/parser_expressions_identifiers.ml",
      "start_line": 140,
      "end_line": 180,
      "length": 41,
      "cyclomatic_complexity": 9,
      "cognitive_complexity": 8,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 1,
      "nesting_depth": 14
    },
    {
      "name": "parse_identifier_expr_safe",
      "file_path": "src/parser_expressions_identifiers.ml",
      "start_line": 207,
      "end_line": 210,
      "length": 4,
      "cyclomatic_complexity": 3,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 3,
      "match_expressions_count": 0,
      "nesting_depth": 1
    },
    {
      "name": "parse_type_keyword_expr_safe",
      "file_path": "src/parser_expressions_identifiers.ml",
      "start_line": 212,
      "end_line": 213,
      "length": 2,
      "cyclomatic_complexity": 2,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 0,
      "nesting_depth": 1
    },
    {
      "name": "make_expected_but_found_error",
      "file_path": "src/parser_utils.ml",
      "start_line": 12,
      "end_line": 13,
      "length": 2,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 3,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "create_parser_state",
      "file_path": "src/parser_utils.ml",
      "start_line": 20,
      "end_line": 23,
      "length": 4,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 1
    },
    {
      "name": "current_token",
      "file_path": "src/parser_utils.ml",
      "start_line": 25,
      "end_line": 28,
      "length": 4,
      "cyclomatic_complexity": 2,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 1
    },
    {
      "name": "peek_token",
      "file_path": "src/parser_utils.ml",
      "start_line": 30,
      "end_line": 34,
      "length": 5,
      "cyclomatic_complexity": 2,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 2
    },
    {
      "name": "advance_parser",
      "file_path": "src/parser_utils.ml",
      "start_line": 36,
      "end_line": 39,
      "length": 4,
      "cyclomatic_complexity": 3,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 1
    },
    {
      "name": "skip_newlines",
      "file_path": "src/parser_utils.ml",
      "start_line": 41,
      "end_line": 47,
      "length": 7,
      "cyclomatic_complexity": 7,
      "cognitive_complexity": 7,
      "is_recursive": true,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 3
    },
    {
      "name": "expect_token",
      "file_path": "src/parser_utils.ml",
      "start_line": 49,
      "end_line": 53,
      "length": 5,
      "cyclomatic_complexity": 2,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 0,
      "nesting_depth": 2
    },
    {
      "name": "is_token",
      "file_path": "src/parser_utils.ml",
      "start_line": 55,
      "end_line": 60,
      "length": 6,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 0,
      "nesting_depth": 1
    },
    {
      "name": "parse_identifier",
      "file_path": "src/parser_utils.ml",
      "start_line": 62,
      "end_line": 67,
      "length": 6,
      "cyclomatic_complexity": 4,
      "cognitive_complexity": 3,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 1,
      "nesting_depth": 2
    },
    {
      "name": "parse_identifier_allow_keywords",
      "file_path": "src/parser_utils.ml",
      "start_line": 69,
      "end_line": 78,
      "length": 10,
      "cyclomatic_complexity": 5,
      "cognitive_complexity": 4,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 1,
      "nesting_depth": 2
    },
    {
      "name": "parse_wenyan_compound_identifier",
      "file_path": "src/parser_utils.ml",
      "start_line": 80,
      "end_line": 100,
      "length": 21,
      "cyclomatic_complexity": 10,
      "cognitive_complexity": 13,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 1,
      "nesting_depth": 4
    },
    {
      "name": "is_identifier_like",
      "file_path": "src/parser_utils.ml",
      "start_line": 119,
      "end_line": 126,
      "length": 8,
      "cyclomatic_complexity": 21,
      "cognitive_complexity": 5,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 1,
      "nesting_depth": 1
    },
    {
      "name": "is_literal_token",
      "file_path": "src/parser_utils.ml",
      "start_line": 128,
      "end_line": 136,
      "length": 9,
      "cyclomatic_complexity": 11,
      "cognitive_complexity": 7,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 2,
      "nesting_depth": 2
    },
    {
      "name": "is_punctuation",
      "file_path": "src/parser_utils.ml",
      "start_line": 138,
      "end_line": 141,
      "length": 4,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 0,
      "nesting_depth": 1
    },
    {
      "name": "expect_token_punctuation",
      "file_path": "src/parser_utils.ml",
      "start_line": 143,
      "end_line": 149,
      "length": 7,
      "cyclomatic_complexity": 2,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 3,
      "match_expressions_count": 0,
      "nesting_depth": 2
    },
    {
      "name": "chinese_number_to_int",
      "file_path": "src/parser_utils.ml",
      "start_line": 166,
      "end_line": 170,
      "length": 5,
      "cyclomatic_complexity": 2,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 1
    },
    {
      "name": "parse_literal",
      "file_path": "src/parser_utils.ml",
      "start_line": 172,
      "end_line": 185,
      "length": 14,
      "cyclomatic_complexity": 8,
      "cognitive_complexity": 7,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 1,
      "nesting_depth": 3
    },
    {
      "name": "binary_operator_mappings",
      "file_path": "src/parser_utils.ml",
      "start_line": 187,
      "end_line": 219,
      "length": 33,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "binary_operator_table",
      "file_path": "src/parser_utils.ml",
      "start_line": 221,
      "end_line": 225,
      "length": 5,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 1
    },
    {
      "name": "token_to_binary_op",
      "file_path": "src/parser_utils.ml",
      "start_line": 227,
      "end_line": 231,
      "length": 5,
      "cyclomatic_complexity": 2,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 1
    },
    {
      "name": "parse_identifier_content",
      "file_path": "src/parser_utils.ml",
      "start_line": 233,
      "end_line": 240,
      "length": 8,
      "cyclomatic_complexity": 6,
      "cognitive_complexity": 5,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 1,
      "nesting_depth": 2
    },
    {
      "name": "parse_specific_keyword",
      "file_path": "src/parser_utils.ml",
      "start_line": 242,
      "end_line": 250,
      "length": 9,
      "cyclomatic_complexity": 5,
      "cognitive_complexity": 4,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 1,
      "nesting_depth": 2
    },
    {
      "name": "basic_type_mappings",
      "file_path": "src/parser_utils.ml",
      "start_line": 252,
      "end_line": 262,
      "length": 11,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "try_parse_basic_type",
      "file_path": "src/parser_utils.ml",
      "start_line": 264,
      "end_line": 271,
      "length": 8,
      "cyclomatic_complexity": 5,
      "cognitive_complexity": 5,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 1,
      "nesting_depth": 2
    },
    {
      "name": "infer_type",
      "file_path": "src/types_infer.ml",
      "start_line": 15,
      "end_line": 148,
      "length": 134,
      "cyclomatic_complexity": 22,
      "cognitive_complexity": 42,
      "is_recursive": true,
      "parameters_count": 2,
      "match_expressions_count": 3,
      "nesting_depth": 39
    },
    {
      "name": "show_expr_type",
      "file_path": "src/types_infer.ml",
      "start_line": 150,
      "end_line": 156,
      "length": 7,
      "cyclomatic_complexity": 3,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 0,
      "nesting_depth": 3
    },
    {
      "name": "show_program_types",
      "file_path": "src/types_infer.ml",
      "start_line": 158,
      "end_line": 180,
      "length": 23,
      "cyclomatic_complexity": 9,
      "cognitive_complexity": 7,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 1,
      "nesting_depth": 8
    },
    {
      "name": "find_arithmetic_operation",
      "file_path": "src/binary_operations.ml",
      "start_line": 10,
      "end_line": 12,
      "length": 3,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "execute_int_arithmetic_op",
      "file_path": "src/binary_operations.ml",
      "start_line": 14,
      "end_line": 28,
      "length": 15,
      "cyclomatic_complexity": 11,
      "cognitive_complexity": 13,
      "is_recursive": false,
      "parameters_count": 3,
      "match_expressions_count": 3,
      "nesting_depth": 3
    },
    {
      "name": "execute_float_arithmetic_op",
      "file_path": "src/binary_operations.ml",
      "start_line": 30,
      "end_line": 35,
      "length": 6,
      "cyclomatic_complexity": 4,
      "cognitive_complexity": 3,
      "is_recursive": false,
      "parameters_count": 3,
      "match_expressions_count": 1,
      "nesting_depth": 2
    },
    {
      "name": "execute_string_op",
      "file_path": "src/binary_operations.ml",
      "start_line": 37,
      "end_line": 42,
      "length": 6,
      "cyclomatic_complexity": 4,
      "cognitive_complexity": 3,
      "is_recursive": false,
      "parameters_count": 3,
      "match_expressions_count": 1,
      "nesting_depth": 2
    },
    {
      "name": "execute_typed_comparison",
      "file_path": "src/binary_operations.ml",
      "start_line": 44,
      "end_line": 62,
      "length": 19,
      "cyclomatic_complexity": 17,
      "cognitive_complexity": 37,
      "is_recursive": false,
      "parameters_count": 3,
      "match_expressions_count": 3,
      "nesting_depth": 4
    },
    {
      "name": "execute_comparison_op",
      "file_path": "src/binary_operations.ml",
      "start_line": 64,
      "end_line": 70,
      "length": 7,
      "cyclomatic_complexity": 9,
      "cognitive_complexity": 5,
      "is_recursive": false,
      "parameters_count": 3,
      "match_expressions_count": 1,
      "nesting_depth": 1
    },
    {
      "name": "execute_logical_op",
      "file_path": "src/binary_operations.ml",
      "start_line": 72,
      "end_line": 77,
      "length": 6,
      "cyclomatic_complexity": 7,
      "cognitive_complexity": 6,
      "is_recursive": false,
      "parameters_count": 3,
      "match_expressions_count": 1,
      "nesting_depth": 1
    },
    {
      "name": "try_arithmetic_conversion",
      "file_path": "src/binary_operations.ml",
      "start_line": 79,
      "end_line": 104,
      "length": 26,
      "cyclomatic_complexity": 11,
      "cognitive_complexity": 24,
      "is_recursive": false,
      "parameters_count": 3,
      "match_expressions_count": 2,
      "nesting_depth": 4
    },
    {
      "name": "try_comparison_conversion",
      "file_path": "src/binary_operations.ml",
      "start_line": 106,
      "end_line": 114,
      "length": 9,
      "cyclomatic_complexity": 4,
      "cognitive_complexity": 3,
      "is_recursive": false,
      "parameters_count": 3,
      "match_expressions_count": 1,
      "nesting_depth": 1
    },
    {
      "name": "try_with_conversion",
      "file_path": "src/binary_operations.ml",
      "start_line": 116,
      "end_line": 132,
      "length": 17,
      "cyclomatic_complexity": 13,
      "cognitive_complexity": 10,
      "is_recursive": false,
      "parameters_count": 3,
      "match_expressions_count": 1,
      "nesting_depth": 3
    },
    {
      "name": "execute_binary_op_internal",
      "file_path": "src/binary_operations.ml",
      "start_line": 134,
      "end_line": 147,
      "length": 14,
      "cyclomatic_complexity": 22,
      "cognitive_complexity": 7,
      "is_recursive": false,
      "parameters_count": 3,
      "match_expressions_count": 1,
      "nesting_depth": 1
    },
    {
      "name": "execute_binary_op",
      "file_path": "src/binary_operations.ml",
      "start_line": 149,
      "end_line": 153,
      "length": 5,
      "cyclomatic_complexity": 4,
      "cognitive_complexity": 3,
      "is_recursive": false,
      "parameters_count": 3,
      "match_expressions_count": 1,
      "nesting_depth": 1
    },
    {
      "name": "execute_unary_op_internal",
      "file_path": "src/binary_operations.ml",
      "start_line": 155,
      "end_line": 162,
      "length": 8,
      "cyclomatic_complexity": 6,
      "cognitive_complexity": 5,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 1,
      "nesting_depth": 1
    },
    {
      "name": "execute_unary_op",
      "file_path": "src/binary_operations.ml",
      "start_line": 164,
      "end_line": 167,
      "length": 4,
      "cyclomatic_complexity": 4,
      "cognitive_complexity": 3,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 1,
      "nesting_depth": 1
    },
    {
      "name": "gen_binary_op",
      "file_path": "src/c_codegen_operations.ml",
      "start_line": 28,
      "end_line": 33,
      "length": 6,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 5,
      "match_expressions_count": 0,
      "nesting_depth": 3
    },
    {
      "name": "gen_unary_op",
      "file_path": "src/c_codegen_operations.ml",
      "start_line": 40,
      "end_line": 45,
      "length": 6,
      "cyclomatic_complexity": 4,
      "cognitive_complexity": 3,
      "is_recursive": false,
      "parameters_count": 4,
      "match_expressions_count": 1,
      "nesting_depth": 2
    },
    {
      "name": "gen_operations",
      "file_path": "src/c_codegen_operations.ml",
      "start_line": 47,
      "end_line": 52,
      "length": 6,
      "cyclomatic_complexity": 5,
      "cognitive_complexity": 4,
      "is_recursive": false,
      "parameters_count": 3,
      "match_expressions_count": 1,
      "nesting_depth": 1
    },
    {
      "name": "gen_single_arg_func",
      "file_path": "src/c_codegen_operations.ml",
      "start_line": 54,
      "end_line": 57,
      "length": 4,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 4,
      "match_expressions_count": 0,
      "nesting_depth": 1
    },
    {
      "name": "gen_double_arg_func",
      "file_path": "src/c_codegen_operations.ml",
      "start_line": 59,
      "end_line": 63,
      "length": 5,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 5,
      "match_expressions_count": 0,
      "nesting_depth": 2
    },
    {
      "name": "gen_ref_expr",
      "file_path": "src/c_codegen_operations.ml",
      "start_line": 65,
      "end_line": 67,
      "length": 3,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 3,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "gen_deref_expr",
      "file_path": "src/c_codegen_operations.ml",
      "start_line": 69,
      "end_line": 71,
      "length": 3,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 3,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "gen_assign_expr",
      "file_path": "src/c_codegen_operations.ml",
      "start_line": 73,
      "end_line": 75,
      "length": 3,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 4,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "gen_memory_operations",
      "file_path": "src/c_codegen_operations.ml",
      "start_line": 77,
      "end_line": 82,
      "length": 6,
      "cyclomatic_complexity": 6,
      "cognitive_complexity": 5,
      "is_recursive": false,
      "parameters_count": 3,
      "match_expressions_count": 1,
      "nesting_depth": 1
    },
    {
      "name": "apply_numeric_binary_op",
      "file_path": "src/numeric_ops.ml",
      "start_line": 14,
      "end_line": 21,
      "length": 8,
      "cyclomatic_complexity": 7,
      "cognitive_complexity": 6,
      "is_recursive": false,
      "parameters_count": 3,
      "match_expressions_count": 1,
      "nesting_depth": 1
    },
    {
      "name": "create_numeric_folder",
      "file_path": "src/numeric_ops.ml",
      "start_line": 23,
      "end_line": 27,
      "length": 5,
      "cyclomatic_complexity": 2,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 4,
      "match_expressions_count": 0,
      "nesting_depth": 1
    },
    {
      "name": "fold_numeric_list",
      "file_path": "src/numeric_ops.ml",
      "start_line": 41,
      "end_line": 43,
      "length": 3,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 4,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "process_nonempty_numeric_list",
      "file_path": "src/numeric_ops.ml",
      "start_line": 45,
      "end_line": 49,
      "length": 5,
      "cyclomatic_complexity": 4,
      "cognitive_complexity": 3,
      "is_recursive": false,
      "parameters_count": 3,
      "match_expressions_count": 1,
      "nesting_depth": 1
    },
    {
      "name": "validate_numeric_list",
      "file_path": "src/numeric_ops.ml",
      "start_line": 54,
      "end_line": 56,
      "length": 3,
      "cyclomatic_complexity": 2,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 0,
      "nesting_depth": 1
    },
    {
      "name": "create_numeric_aggregator",
      "file_path": "src/numeric_ops.ml",
      "start_line": 58,
      "end_line": 62,
      "length": 5,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 3,
      "match_expressions_count": 0,
      "nesting_depth": 1
    },
    {
      "name": "create_nonempty_numeric_aggregator",
      "file_path": "src/numeric_ops.ml",
      "start_line": 64,
      "end_line": 67,
      "length": 4,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 0,
      "nesting_depth": 1
    },
    {
      "name": "handle_unsupported_syntax",
      "file_path": "src/parser_expressions_primary_consolidated.ml",
      "start_line": 61,
      "end_line": 80,
      "length": 20,
      "cyclomatic_complexity": 6,
      "cognitive_complexity": 2,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 1,
      "nesting_depth": 1
    },
    {
      "name": "raise_parse_error",
      "file_path": "src/parser_expressions_primary_consolidated.ml",
      "start_line": 93,
      "end_line": 100,
      "length": 8,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 4,
      "match_expressions_count": 0,
      "nesting_depth": 1
    },
    {
      "name": "parse_literal_expr_safe",
      "file_path": "src/parser_expressions_primary_consolidated.ml",
      "start_line": 102,
      "end_line": 106,
      "length": 5,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "parse_container_expr_safe",
      "file_path": "src/parser_expressions_primary_consolidated.ml",
      "start_line": 108,
      "end_line": 111,
      "length": 4,
      "cyclomatic_complexity": 3,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 5,
      "match_expressions_count": 0,
      "nesting_depth": 1
    },
    {
      "name": "parse_special_keyword_expr_safe",
      "file_path": "src/parser_expressions_primary_consolidated.ml",
      "start_line": 113,
      "end_line": 116,
      "length": 4,
      "cyclomatic_complexity": 3,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 5,
      "match_expressions_count": 0,
      "nesting_depth": 1
    },
    {
      "name": "parse_primary_expr",
      "file_path": "src/parser_expressions_primary_consolidated.ml",
      "start_line": 118,
      "end_line": 138,
      "length": 21,
      "cyclomatic_complexity": 11,
      "cognitive_complexity": 10,
      "is_recursive": true,
      "parameters_count": 4,
      "match_expressions_count": 1,
      "nesting_depth": 4
    },
    {
      "name": "parse_function_call_or_variable",
      "file_path": "src/parser_expressions_primary_consolidated.ml",
      "start_line": 143,
      "end_line": 144,
      "length": 2,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "chinese_keywords",
      "file_path": "src/keyword_matcher_core.ml",
      "start_line": 6,
      "end_line": 12,
      "length": 7,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "ascii_table",
      "file_path": "src/keyword_matcher_core.ml",
      "start_line": 16,
      "end_line": 18,
      "length": 3,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "find_chinese_keyword",
      "file_path": "src/keyword_matcher_core.ml",
      "start_line": 27,
      "end_line": 29,
      "length": 3,
      "cyclomatic_complexity": 2,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 1
    },
    {
      "name": "find_ascii_keyword",
      "file_path": "src/keyword_matcher_core.ml",
      "start_line": 31,
      "end_line": 33,
      "length": 3,
      "cyclomatic_complexity": 2,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 1
    },
    {
      "name": "find_keyword",
      "file_path": "src/keyword_matcher_core.ml",
      "start_line": 35,
      "end_line": 39,
      "length": 5,
      "cyclomatic_complexity": 4,
      "cognitive_complexity": 3,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 1,
      "nesting_depth": 1
    },
    {
      "name": "get_all_keywords",
      "file_path": "src/keyword_matcher_core.ml",
      "start_line": 45,
      "end_line": 47,
      "length": 3,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "gen_var_pattern_check",
      "file_path": "src/c_codegen_patterns.ml",
      "start_line": 25,
      "end_line": 28,
      "length": 4,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 0,
      "nesting_depth": 1
    },
    {
      "name": "gen_pattern_check",
      "file_path": "src/c_codegen_patterns.ml",
      "start_line": 30,
      "end_line": 38,
      "length": 9,
      "cyclomatic_complexity": 7,
      "cognitive_complexity": 6,
      "is_recursive": false,
      "parameters_count": 3,
      "match_expressions_count": 1,
      "nesting_depth": 2
    },
    {
      "name": "log_error",
      "file_path": "src/data_loader_error.ml",
      "start_line": 15,
      "end_line": 18,
      "length": 4,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 1
    },
    {
      "name": "combine_results",
      "file_path": "src/data_loader_error.ml",
      "start_line": 30,
      "end_line": 36,
      "length": 7,
      "cyclomatic_complexity": 4,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "calculate_expression_complexity",
      "file_path": "src/refactoring_analyzer_complexity.ml",
      "start_line": 8,
      "end_line": 47,
      "length": 40,
      "cyclomatic_complexity": 13,
      "cognitive_complexity": 9,
      "is_recursive": true,
      "parameters_count": 2,
      "match_expressions_count": 1,
      "nesting_depth": 5
    },
    {
      "name": "analyze_function_complexity",
      "file_path": "src/refactoring_analyzer_complexity.ml",
      "start_line": 49,
      "end_line": 71,
      "length": 23,
      "cyclomatic_complexity": 2,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 3,
      "match_expressions_count": 0,
      "nesting_depth": 2
    },
    {
      "name": "check_nesting_depth",
      "file_path": "src/refactoring_analyzer_complexity.ml",
      "start_line": 73,
      "end_line": 84,
      "length": 12,
      "cyclomatic_complexity": 2,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 0,
      "nesting_depth": 1
    },
    {
      "name": "calculate_cyclomatic_complexity",
      "file_path": "src/refactoring_analyzer_complexity.ml",
      "start_line": 86,
      "end_line": 110,
      "length": 25,
      "cyclomatic_complexity": 11,
      "cognitive_complexity": 9,
      "is_recursive": true,
      "parameters_count": 1,
      "match_expressions_count": 1,
      "nesting_depth": 2
    },
    {
      "name": "analyze_nesting_depth",
      "file_path": "src/refactoring_analyzer_complexity.ml",
      "start_line": 112,
      "end_line": 142,
      "length": 31,
      "cyclomatic_complexity": 11,
      "cognitive_complexity": 5,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 1,
      "nesting_depth": 6
    },
    {
      "name": "calculate_cognitive_complexity",
      "file_path": "src/refactoring_analyzer_complexity.ml",
      "start_line": 144,
      "end_line": 180,
      "length": 37,
      "cyclomatic_complexity": 12,
      "cognitive_complexity": 12,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 1,
      "nesting_depth": 4
    },
    {
      "name": "complexity_checks",
      "file_path": "src/refactoring_analyzer_complexity.ml",
      "start_line": 182,
      "end_line": 221,
      "length": 40,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "create_complexity_suggestion",
      "file_path": "src/refactoring_analyzer_complexity.ml",
      "start_line": 223,
      "end_line": 231,
      "length": 9,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 3,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "comprehensive_complexity_analysis",
      "file_path": "src/refactoring_analyzer_complexity.ml",
      "start_line": 233,
      "end_line": 250,
      "length": 18,
      "cyclomatic_complexity": 2,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 3,
      "match_expressions_count": 0,
      "nesting_depth": 1
    },
    {
      "name": "generate_complexity_report",
      "file_path": "src/refactoring_analyzer_complexity.ml",
      "start_line": 252,
      "end_line": 280,
      "length": 29,
      "cyclomatic_complexity": 8,
      "cognitive_complexity": 9,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 2,
      "nesting_depth": 3
    },
    {
      "name": "find_data_file",
      "file_path": "src/unicode/unicode_types.ml",
      "start_line": 32,
      "end_line": 49,
      "length": 18,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "parse_triple",
      "file_path": "src/unicode/unicode_types.ml",
      "start_line": 51,
      "end_line": 57,
      "length": 7,
      "cyclomatic_complexity": 7,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 1
    },
    {
      "name": "parse_char_def",
      "file_path": "src/unicode/unicode_types.ml",
      "start_line": 59,
      "end_line": 66,
      "length": 8,
      "cyclomatic_complexity": 9,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 1
    },
    {
      "name": "load_char_definitions",
      "file_path": "src/unicode/unicode_types.ml",
      "start_line": 68,
      "end_line": 94,
      "length": 27,
      "cyclomatic_complexity": 11,
      "cognitive_complexity": 6,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 8
    },
    {
      "name": "name_to_char_table",
      "file_path": "src/unicode/unicode_constants_optimized.ml",
      "start_line": 16,
      "end_line": 22,
      "length": 7,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 1
    },
    {
      "name": "char_to_bytes_table",
      "file_path": "src/unicode/unicode_constants_optimized.ml",
      "start_line": 24,
      "end_line": 30,
      "length": 7,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 1
    },
    {
      "name": "name_to_bytes_table",
      "file_path": "src/unicode/unicode_constants_optimized.ml",
      "start_line": 32,
      "end_line": 38,
      "length": 7,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 1
    },
    {
      "name": "category_to_definitions_table",
      "file_path": "src/unicode/unicode_constants_optimized.ml",
      "start_line": 40,
      "end_line": 53,
      "length": 14,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 2
    },
    {
      "name": "find_char_by_name_fast",
      "file_path": "src/unicode/unicode_constants_optimized.ml",
      "start_line": 55,
      "end_line": 57,
      "length": 3,
      "cyclomatic_complexity": 2,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 1
    },
    {
      "name": "find_bytes_by_char_fast",
      "file_path": "src/unicode/unicode_constants_optimized.ml",
      "start_line": 59,
      "end_line": 61,
      "length": 3,
      "cyclomatic_complexity": 2,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 1
    },
    {
      "name": "find_bytes_by_name_fast",
      "file_path": "src/unicode/unicode_constants_optimized.ml",
      "start_line": 63,
      "end_line": 65,
      "length": 3,
      "cyclomatic_complexity": 2,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 1
    },
    {
      "name": "find_definitions_by_category_fast",
      "file_path": "src/unicode/unicode_constants_optimized.ml",
      "start_line": 67,
      "end_line": 69,
      "length": 3,
      "cyclomatic_complexity": 2,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 1
    },
    {
      "name": "get_all_categories",
      "file_path": "src/unicode/unicode_constants_optimized.ml",
      "start_line": 77,
      "end_line": 80,
      "length": 4,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "cached_lookup_tables",
      "file_path": "src/unicode/unicode_constants_optimized.ml",
      "start_line": 87,
      "end_line": 93,
      "length": 7,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "warm_cache",
      "file_path": "src/unicode/unicode_constants_optimized.ml",
      "start_line": 101,
      "end_line": 106,
      "length": 6,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "is_known_chinese_char_bytes",
      "file_path": "src/unicode/unicode_constants_optimized.ml",
      "start_line": 116,
      "end_line": 122,
      "length": 7,
      "cyclomatic_complexity": 2,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 3,
      "match_expressions_count": 0,
      "nesting_depth": 2
    },
    {
      "name": "check_char_list",
      "file_path": "src/unicode/unicode_constants_optimized.ml",
      "start_line": 127,
      "end_line": 130,
      "length": 4,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "get_char_statistics",
      "file_path": "src/unicode/unicode_constants_optimized.ml",
      "start_line": 134,
      "end_line": 143,
      "length": 10,
      "cyclomatic_complexity": 2,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 3
    },
    {
      "name": "print_statistics",
      "file_path": "src/unicode/unicode_constants_optimized.ml",
      "start_line": 145,
      "end_line": 152,
      "length": 8,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 1
    },
    {
      "name": "get_lookup_performance_info",
      "file_path": "src/unicode/unicode_constants_optimized.ml",
      "start_line": 154,
      "end_line": 161,
      "length": 8,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 4
    },
    {
      "name": "smart_find",
      "file_path": "src/unicode/unicode_constants_optimized.ml",
      "start_line": 176,
      "end_line": 187,
      "length": 12,
      "cyclomatic_complexity": 7,
      "cognitive_complexity": 9,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 2,
      "nesting_depth": 3
    },
    {
      "name": "get_category_info",
      "file_path": "src/unicode/unicode_constants_optimized.ml",
      "start_line": 192,
      "end_line": 199,
      "length": 8,
      "cyclomatic_complexity": 4,
      "cognitive_complexity": 3,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 1,
      "nesting_depth": 3
    },
    {
      "name": "export_char_mapping",
      "file_path": "src/unicode/unicode_constants_optimized.ml",
      "start_line": 201,
      "end_line": 218,
      "length": 18,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 3
    },
    {
      "name": "get_char_bytes_by_name",
      "file_path": "src/unicode/unicode_constants_optimized.ml",
      "start_line": 222,
      "end_line": 224,
      "length": 3,
      "cyclomatic_complexity": 3,
      "cognitive_complexity": 2,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 1,
      "nesting_depth": 1
    },
    {
      "name": "get_char_bytes_by_char",
      "file_path": "src/unicode/unicode_constants_optimized.ml",
      "start_line": 226,
      "end_line": 230,
      "length": 5,
      "cyclomatic_complexity": 4,
      "cognitive_complexity": 3,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 1,
      "nesting_depth": 1
    },
    {
      "name": "get_char_bytes",
      "file_path": "src/unicode/char_byte_definitions.ml",
      "start_line": 6,
      "end_line": 13,
      "length": 8,
      "cyclomatic_complexity": 7,
      "cognitive_complexity": 10,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 2,
      "nesting_depth": 2
    },
    {
      "name": "get_char_bytes_by_name",
      "file_path": "src/unicode/unicode_constants_unified.ml",
      "start_line": 21,
      "end_line": 28,
      "length": 8,
      "cyclomatic_complexity": 7,
      "cognitive_complexity": 10,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 2,
      "nesting_depth": 2
    },
    {
      "name": "get_char_bytes_by_char",
      "file_path": "src/unicode/unicode_constants_unified.ml",
      "start_line": 30,
      "end_line": 34,
      "length": 5,
      "cyclomatic_complexity": 4,
      "cognitive_complexity": 3,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 1,
      "nesting_depth": 1
    },
    {
      "name": "all_quote_chars",
      "file_path": "src/unicode/unicode_constants_unified.ml",
      "start_line": 50,
      "end_line": 56,
      "length": 7,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "all_punctuation_chars",
      "file_path": "src/unicode/unicode_constants_unified.ml",
      "start_line": 81,
      "end_line": 102,
      "length": 22,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "all_symbol_chars",
      "file_path": "src/unicode/unicode_constants_unified.ml",
      "start_line": 124,
      "end_line": 144,
      "length": 21,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "all_poetry_chars",
      "file_path": "src/unicode/unicode_constants_unified.ml",
      "start_line": 169,
      "end_line": 180,
      "length": 12,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "all_char_definitions",
      "file_path": "src/unicode/unicode_constants_unified.ml",
      "start_line": 202,
      "end_line": 205,
      "length": 4,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "find_by_category",
      "file_path": "src/unicode/unicode_constants_unified.ml",
      "start_line": 207,
      "end_line": 209,
      "length": 3,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "get",
      "file_path": "src/unicode/unicode_mapping.ml",
      "start_line": 17,
      "end_line": 40,
      "length": 24,
      "cyclomatic_complexity": 6,
      "cognitive_complexity": 8,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 1,
      "nesting_depth": 5
    },
    {
      "name": "name_to_char_tbl",
      "file_path": "src/unicode/unicode_mapping.ml",
      "start_line": 44,
      "end_line": 48,
      "length": 5,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 1
    },
    {
      "name": "name_to_triple_tbl",
      "file_path": "src/unicode/unicode_mapping.ml",
      "start_line": 50,
      "end_line": 54,
      "length": 5,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 1
    },
    {
      "name": "char_to_triple_tbl",
      "file_path": "src/unicode/unicode_mapping.ml",
      "start_line": 56,
      "end_line": 61,
      "length": 6,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 1
    },
    {
      "name": "name_to_char_map",
      "file_path": "src/unicode/unicode_mapping.ml",
      "start_line": 68,
      "end_line": 69,
      "length": 2,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "name_to_triple_map",
      "file_path": "src/unicode/unicode_mapping.ml",
      "start_line": 71,
      "end_line": 72,
      "length": 2,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "char_to_triple_map",
      "file_path": "src/unicode/unicode_mapping.ml",
      "start_line": 74,
      "end_line": 78,
      "length": 5,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "filter_by_category",
      "file_path": "src/unicode/unicode_mapping.ml",
      "start_line": 91,
      "end_line": 98,
      "length": 8,
      "cyclomatic_complexity": 4,
      "cognitive_complexity": 3,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 1,
      "nesting_depth": 2
    },
    {
      "name": "get_char_bytes",
      "file_path": "src/unicode/unicode_mapping.ml",
      "start_line": 112,
      "end_line": 119,
      "length": 8,
      "cyclomatic_complexity": 7,
      "cognitive_complexity": 10,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 2,
      "nesting_depth": 2
    },
    {
      "name": "is_char_category",
      "file_path": "src/unicode/unicode_mapping.ml",
      "start_line": 124,
      "end_line": 138,
      "length": 15,
      "cyclomatic_complexity": 7,
      "cognitive_complexity": 3,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 1,
      "nesting_depth": 4
    },
    {
      "name": "batch_find_chars_by_names",
      "file_path": "src/unicode/unicode_mapping.ml",
      "start_line": 142,
      "end_line": 150,
      "length": 9,
      "cyclomatic_complexity": 3,
      "cognitive_complexity": 2,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 1,
      "nesting_depth": 2
    },
    {
      "name": "get_mapping_stats",
      "file_path": "src/unicode/unicode_mapping.ml",
      "start_line": 152,
      "end_line": 159,
      "length": 8,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "get_stats",
      "file_path": "src/unicode/unicode_mapping.ml",
      "start_line": 176,
      "end_line": 182,
      "length": 7,
      "cyclomatic_complexity": 2,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 1
    },
    {
      "name": "reset_stats",
      "file_path": "src/unicode/unicode_mapping.ml",
      "start_line": 184,
      "end_line": 188,
      "length": 5,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "chinese_square_left_bracket_bytes",
      "file_path": "src/unicode/compatibility_core.ml",
      "start_line": 73,
      "end_line": 74,
      "length": 2,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "chinese_square_right_bracket_bytes",
      "file_path": "src/unicode/compatibility_core.ml",
      "start_line": 76,
      "end_line": 78,
      "length": 3,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "chinese_square_left_bracket_byte1",
      "file_path": "src/unicode/compatibility_core.ml",
      "start_line": 110,
      "end_line": 111,
      "length": 2,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "chinese_square_left_bracket_byte2",
      "file_path": "src/unicode/compatibility_core.ml",
      "start_line": 113,
      "end_line": 114,
      "length": 2,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "chinese_square_left_bracket_byte3",
      "file_path": "src/unicode/compatibility_core.ml",
      "start_line": 116,
      "end_line": 117,
      "length": 2,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "chinese_square_right_bracket_byte1",
      "file_path": "src/unicode/compatibility_core.ml",
      "start_line": 119,
      "end_line": 120,
      "length": 2,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "chinese_square_right_bracket_byte2",
      "file_path": "src/unicode/compatibility_core.ml",
      "start_line": 122,
      "end_line": 123,
      "length": 2,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "chinese_square_right_bracket_byte3",
      "file_path": "src/unicode/compatibility_core.ml",
      "start_line": 125,
      "end_line": 127,
      "length": 3,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "char_xe3",
      "file_path": "src/unicode/unicode_chars.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "char_x80",
      "file_path": "src/unicode/unicode_chars.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "char_x8e",
      "file_path": "src/unicode/unicode_chars.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "char_x8f",
      "file_path": "src/unicode/unicode_chars.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "char_xef",
      "file_path": "src/unicode/unicode_chars.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "char_xbc",
      "file_path": "src/unicode/unicode_chars.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "char_xbd",
      "file_path": "src/unicode/unicode_chars.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "char_x9c",
      "file_path": "src/unicode/unicode_chars.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "char_xe8",
      "file_path": "src/unicode/unicode_chars.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "char_xb4",
      "file_path": "src/unicode/unicode_chars.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "char_x9f",
      "file_path": "src/unicode/unicode_chars.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "char_xe2",
      "file_path": "src/unicode/unicode_chars.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "join_chinese",
      "file_path": "src/string_processing/collection_formatting.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "join_english",
      "file_path": "src/string_processing/collection_formatting.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "join_semicolon",
      "file_path": "src/string_processing/collection_formatting.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "join_newline",
      "file_path": "src/string_processing/collection_formatting.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "indented_list",
      "file_path": "src/string_processing/collection_formatting.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "array_format",
      "file_path": "src/string_processing/collection_formatting.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "tuple_format",
      "file_path": "src/string_processing/collection_formatting.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "type_signature_format",
      "file_path": "src/string_processing/collection_formatting.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "stats_line",
      "file_path": "src/string_processing/report_formatting.ml",
      "start_line": 14,
      "end_line": 16,
      "length": 3,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 3,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "analysis_result_line",
      "file_path": "src/string_processing/report_formatting.ml",
      "start_line": 18,
      "end_line": 20,
      "length": 3,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "suggestion_line",
      "file_path": "src/string_processing/report_formatting.ml",
      "start_line": 25,
      "end_line": 27,
      "length": 3,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "similarity_suggestion",
      "file_path": "src/string_processing/report_formatting.ml",
      "start_line": 29,
      "end_line": 30,
      "length": 2,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "token_debug_info",
      "file_path": "src/string_processing/token_formatter.ml",
      "start_line": 58,
      "end_line": 60,
      "length": 3,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 3,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "function_call_token",
      "file_path": "src/string_processing/token_formatter.ml",
      "start_line": 62,
      "end_line": 63,
      "length": 2,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "module_access_token",
      "file_path": "src/string_processing/token_formatter.ml",
      "start_line": 65,
      "end_line": 67,
      "length": 3,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "red",
      "file_path": "src/string_processing/style_formatting.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "green",
      "file_path": "src/string_processing/style_formatting.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "yellow",
      "file_path": "src/string_processing/style_formatting.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "blue",
      "file_path": "src/string_processing/style_formatting.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "bold",
      "file_path": "src/string_processing/style_formatting.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "reset",
      "file_path": "src/string_processing/style_formatting.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "with_color",
      "file_path": "src/string_processing/style_formatting.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "red_text",
      "file_path": "src/string_processing/style_formatting.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "green_text",
      "file_path": "src/string_processing/style_formatting.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "yellow_text",
      "file_path": "src/string_processing/style_formatting.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "blue_text",
      "file_path": "src/string_processing/style_formatting.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "bold_text",
      "file_path": "src/string_processing/style_formatting.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "block_comment_skip_logic",
      "file_path": "src/string_processing/core_string_ops.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "luoyan_string_skip_logic",
      "file_path": "src/string_processing/core_string_ops.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "english_string_skip_logic",
      "file_path": "src/string_processing/core_string_ops.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "remove_double_slash_comment",
      "file_path": "src/string_processing/core_string_ops.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "remove_hash_comment",
      "file_path": "src/string_processing/core_string_ops.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "remove_block_comments",
      "file_path": "src/string_processing/core_string_ops.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "remove_luoyan_strings",
      "file_path": "src/string_processing/core_string_ops.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "remove_english_strings",
      "file_path": "src/string_processing/core_string_ops.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "format_position_with_extractor",
      "file_path": "src/string_processing/position_formatting.ml",
      "start_line": 19,
      "end_line": 21,
      "length": 3,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 4,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "format_compiler_error_position_from_fields",
      "file_path": "src/string_processing/position_formatting.ml",
      "start_line": 23,
      "end_line": 25,
      "length": 3,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 3,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "format_optional_position_with_extractor",
      "file_path": "src/string_processing/position_formatting.ml",
      "start_line": 27,
      "end_line": 33,
      "length": 7,
      "cyclomatic_complexity": 4,
      "cognitive_complexity": 3,
      "is_recursive": false,
      "parameters_count": 4,
      "match_expressions_count": 1,
      "nesting_depth": 2
    },
    {
      "name": "error_with_position_extractor",
      "file_path": "src/string_processing/position_formatting.ml",
      "start_line": 35,
      "end_line": 40,
      "length": 6,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 6,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "range_format",
      "file_path": "src/string_processing/position_formatting.ml",
      "start_line": 53,
      "end_line": 55,
      "length": 3,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 4,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "relative_position",
      "file_path": "src/string_processing/position_formatting.ml",
      "start_line": 65,
      "end_line": 69,
      "length": 5,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 4,
      "match_expressions_count": 0,
      "nesting_depth": 2
    },
    {
      "name": "full_position_with_file",
      "file_path": "src/string_processing/position_formatting.ml",
      "start_line": 71,
      "end_line": 73,
      "length": 3,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 3,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "position_range_description",
      "file_path": "src/string_processing/position_formatting.ml",
      "start_line": 75,
      "end_line": 78,
      "length": 4,
      "cyclomatic_complexity": 2,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 4,
      "match_expressions_count": 0,
      "nesting_depth": 1
    },
    {
      "name": "debug_position_info",
      "file_path": "src/string_processing/position_formatting.ml",
      "start_line": 83,
      "end_line": 85,
      "length": 3,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 4,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "position_comparison",
      "file_path": "src/string_processing/position_formatting.ml",
      "start_line": 87,
      "end_line": 91,
      "length": 5,
      "cyclomatic_complexity": 5,
      "cognitive_complexity": 7,
      "is_recursive": false,
      "parameters_count": 4,
      "match_expressions_count": 0,
      "nesting_depth": 2
    },
    {
      "name": "function_param_mismatch",
      "file_path": "src/string_processing/error_message_formatter.ml",
      "start_line": 55,
      "end_line": 57,
      "length": 3,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 3,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "binary_function_call",
      "file_path": "src/string_processing/c_codegen_formatting.ml",
      "start_line": 17,
      "end_line": 19,
      "length": 3,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 3,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "string_equality_check",
      "file_path": "src/string_processing/c_codegen_formatting.ml",
      "start_line": 21,
      "end_line": 23,
      "length": 3,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "function_param_error",
      "file_path": "src/string_processing/error_templates.ml",
      "start_line": 16,
      "end_line": 19,
      "length": 4,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 3,
      "match_expressions_count": 0,
      "nesting_depth": 2
    },
    {
      "name": "function_param_type_error",
      "file_path": "src/string_processing/error_templates.ml",
      "start_line": 21,
      "end_line": 24,
      "length": 4,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 0,
      "nesting_depth": 2
    },
    {
      "name": "function_single_param_error",
      "file_path": "src/string_processing/error_templates.ml",
      "start_line": 26,
      "end_line": 28,
      "length": 3,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 1
    },
    {
      "name": "function_double_param_error",
      "file_path": "src/string_processing/error_templates.ml",
      "start_line": 30,
      "end_line": 32,
      "length": 3,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 1
    },
    {
      "name": "function_no_param_error",
      "file_path": "src/string_processing/error_templates.ml",
      "start_line": 34,
      "end_line": 37,
      "length": 4,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 1
    },
    {
      "name": "type_mismatch_error",
      "file_path": "src/string_processing/error_templates.ml",
      "start_line": 39,
      "end_line": 41,
      "length": 3,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 0,
      "nesting_depth": 1
    },
    {
      "name": "undefined_variable_error",
      "file_path": "src/string_processing/error_templates.ml",
      "start_line": 43,
      "end_line": 44,
      "length": 2,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "index_out_of_bounds_error",
      "file_path": "src/string_processing/error_templates.ml",
      "start_line": 46,
      "end_line": 49,
      "length": 4,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 0,
      "nesting_depth": 1
    },
    {
      "name": "file_operation_error",
      "file_path": "src/string_processing/error_templates.ml",
      "start_line": 51,
      "end_line": 54,
      "length": 4,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 0,
      "nesting_depth": 1
    },
    {
      "name": "generic_function_error",
      "file_path": "src/string_processing/error_templates.ml",
      "start_line": 56,
      "end_line": 58,
      "length": 3,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 0,
      "nesting_depth": 1
    },
    {
      "name": "add_stats_batch",
      "file_path": "src/string_processing/buffer_helpers.ml",
      "start_line": 13,
      "end_line": 18,
      "length": 6,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "add_error_with_context",
      "file_path": "src/string_processing/buffer_helpers.ml",
      "start_line": 20,
      "end_line": 24,
      "length": 5,
      "cyclomatic_complexity": 4,
      "cognitive_complexity": 3,
      "is_recursive": false,
      "parameters_count": 3,
      "match_expressions_count": 1,
      "nesting_depth": 1
    },
    {
      "name": "default_threshold",
      "file_path": "src/performance/benchmark_regression.ml",
      "start_line": 17,
      "end_line": 37,
      "length": 21,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "performance_change",
      "file_path": "src/performance/benchmark_regression.ml",
      "start_line": 41,
      "end_line": 43,
      "length": 3,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "memory_change",
      "file_path": "src/performance/benchmark_regression.ml",
      "start_line": 45,
      "end_line": 50,
      "length": 6,
      "cyclomatic_complexity": 4,
      "cognitive_complexity": 3,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 1,
      "nesting_depth": 1
    },
    {
      "name": "variance_change",
      "file_path": "src/performance/benchmark_regression.ml",
      "start_line": 52,
      "end_line": 56,
      "length": 5,
      "cyclomatic_complexity": 4,
      "cognitive_complexity": 3,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 1,
      "nesting_depth": 1
    },
    {
      "name": "generate_regression_report",
      "file_path": "src/performance/benchmark_regression.ml",
      "start_line": 117,
      "end_line": 152,
      "length": 36,
      "cyclomatic_complexity": 4,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 3
    },
    {
      "name": "baseline_map",
      "file_path": "src/performance/benchmark_regression.ml",
      "start_line": 156,
      "end_line": 158,
      "length": 3,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "all_regressions",
      "file_path": "src/performance/benchmark_regression.ml",
      "start_line": 160,
      "end_line": 169,
      "length": 10,
      "cyclomatic_complexity": 3,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 3
    },
    {
      "name": "report_header",
      "file_path": "src/performance/benchmark_regression.ml",
      "start_line": 171,
      "end_line": 214,
      "length": 44,
      "cyclomatic_complexity": 2,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 1
    },
    {
      "name": "analyze_performance_regression",
      "file_path": "src/performance/benchmark_regression.ml",
      "start_line": 216,
      "end_line": 234,
      "length": 19,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "create_metric",
      "file_path": "src/performance/benchmark_core.ml",
      "start_line": 48,
      "end_line": 50,
      "length": 3,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 6,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "create_result",
      "file_path": "src/performance/benchmark_core.ml",
      "start_line": 52,
      "end_line": 54,
      "length": 3,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 6,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "create_suite",
      "file_path": "src/performance/benchmark_core.ml",
      "start_line": 56,
      "end_line": 58,
      "length": 3,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 4,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "get_timestamp",
      "file_path": "src/performance/benchmark_core.ml",
      "start_line": 60,
      "end_line": 78,
      "length": 19,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 2
    },
    {
      "name": "get_environment_info",
      "file_path": "src/performance/benchmark_core.ml",
      "start_line": 80,
      "end_line": 84,
      "length": 5,
      "cyclomatic_complexity": 2,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 2
    },
    {
      "name": "run_single_test",
      "file_path": "src/performance/benchmark_core.ml",
      "start_line": 86,
      "end_line": 89,
      "length": 4,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 3,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "run_batch_tests",
      "file_path": "src/performance/benchmark_core.ml",
      "start_line": 91,
      "end_line": 107,
      "length": 17,
      "cyclomatic_complexity": 3,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 3,
      "match_expressions_count": 0,
      "nesting_depth": 4
    },
    {
      "name": "calculate_mean",
      "file_path": "src/performance/benchmark_core.ml",
      "start_line": 111,
      "end_line": 115,
      "length": 5,
      "cyclomatic_complexity": 2,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 3
    },
    {
      "name": "calculate_variance",
      "file_path": "src/performance/benchmark_core.ml",
      "start_line": 117,
      "end_line": 121,
      "length": 5,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 2
    },
    {
      "name": "calculate_confidence_interval",
      "file_path": "src/performance/benchmark_core.ml",
      "start_line": 126,
      "end_line": 133,
      "length": 8,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 0,
      "nesting_depth": 4
    },
    {
      "name": "generate_test_data",
      "file_path": "src/performance/benchmark_core.ml",
      "start_line": 137,
      "end_line": 143,
      "length": 7,
      "cyclomatic_complexity": 2,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 0,
      "nesting_depth": 2
    },
    {
      "name": "format_execution_time",
      "file_path": "src/performance/benchmark_core.ml",
      "start_line": 151,
      "end_line": 159,
      "length": 9,
      "cyclomatic_complexity": 3,
      "cognitive_complexity": 3,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 2
    },
    {
      "name": "format_memory_usage",
      "file_path": "src/performance/benchmark_core.ml",
      "start_line": 161,
      "end_line": 169,
      "length": 9,
      "cyclomatic_complexity": 3,
      "cognitive_complexity": 3,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 4
    },
    {
      "name": "summarize_metric",
      "file_path": "src/performance/benchmark_reporter.ml",
      "start_line": 10,
      "end_line": 24,
      "length": 15,
      "cyclomatic_complexity": 6,
      "cognitive_complexity": 4,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 1,
      "nesting_depth": 1
    },
    {
      "name": "generate_simple_report",
      "file_path": "src/performance/benchmark_reporter.ml",
      "start_line": 26,
      "end_line": 42,
      "length": 17,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "generate_detailed_metrics_report",
      "file_path": "src/performance/benchmark_reporter.ml",
      "start_line": 44,
      "end_line": 81,
      "length": 38,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 0,
      "nesting_depth": 1
    },
    {
      "name": "generate_markdown_report",
      "file_path": "src/performance/benchmark_reporter.ml",
      "start_line": 83,
      "end_line": 119,
      "length": 37,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "generate_performance_statistics",
      "file_path": "src/performance/benchmark_reporter.ml",
      "start_line": 121,
      "end_line": 154,
      "length": 34,
      "cyclomatic_complexity": 2,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 0,
      "nesting_depth": 1
    },
    {
      "name": "save_report_to_file",
      "file_path": "src/performance/benchmark_reporter.ml",
      "start_line": 156,
      "end_line": 162,
      "length": 7,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 3,
      "match_expressions_count": 0,
      "nesting_depth": 2
    },
    {
      "name": "save_detailed_report_to_file",
      "file_path": "src/performance/benchmark_reporter.ml",
      "start_line": 164,
      "end_line": 170,
      "length": 7,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 3,
      "match_expressions_count": 0,
      "nesting_depth": 2
    },
    {
      "name": "save_markdown_report_to_file",
      "file_path": "src/performance/benchmark_reporter.ml",
      "start_line": 172,
      "end_line": 179,
      "length": 8,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 3,
      "match_expressions_count": 0,
      "nesting_depth": 2
    },
    {
      "name": "create_test_data",
      "file_path": "src/performance/benchmark_lexer.ml",
      "start_line": 10,
      "end_line": 17,
      "length": 8,
      "cyclomatic_complexity": 2,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 3
    },
    {
      "name": "get_lexer_test_configs",
      "file_path": "src/performance/benchmark_lexer.ml",
      "start_line": 22,
      "end_line": 28,
      "length": 7,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "run_lexer_benchmark",
      "file_path": "src/performance/benchmark_lexer.ml",
      "start_line": 30,
      "end_line": 34,
      "length": 5,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 1
    },
    {
      "name": "run_lexer_benchmark_with_memory",
      "file_path": "src/performance/benchmark_lexer.ml",
      "start_line": 36,
      "end_line": 41,
      "length": 6,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 1
    },
    {
      "name": "get_memory_usage",
      "file_path": "src/performance/benchmark_memory.ml",
      "start_line": 13,
      "end_line": 17,
      "length": 5,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 1
    },
    {
      "name": "measure_memory_usage",
      "file_path": "src/performance/benchmark_memory.ml",
      "start_line": 19,
      "end_line": 27,
      "length": 9,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 0,
      "nesting_depth": 4
    },
    {
      "name": "batch_memory_test",
      "file_path": "src/performance/benchmark_memory.ml",
      "start_line": 29,
      "end_line": 36,
      "length": 8,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 0,
      "nesting_depth": 2
    },
    {
      "name": "detect_memory_leak",
      "file_path": "src/performance/benchmark_memory.ml",
      "start_line": 38,
      "end_line": 57,
      "length": 20,
      "cyclomatic_complexity": 3,
      "cognitive_complexity": 2,
      "is_recursive": false,
      "parameters_count": 3,
      "match_expressions_count": 0,
      "nesting_depth": 10
    },
    {
      "name": "get_gc_statistics",
      "file_path": "src/performance/benchmark_memory.ml",
      "start_line": 59,
      "end_line": 69,
      "length": 11,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 1
    },
    {
      "name": "analyze_memory_usage",
      "file_path": "src/performance/benchmark_memory.ml",
      "start_line": 83,
      "end_line": 126,
      "length": 44,
      "cyclomatic_complexity": 2,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 3,
      "match_expressions_count": 0,
      "nesting_depth": 10
    },
    {
      "name": "format_memory_analysis",
      "file_path": "src/performance/benchmark_memory.ml",
      "start_line": 128,
      "end_line": 138,
      "length": 11,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "default_memory_config",
      "file_path": "src/performance/benchmark_memory.ml",
      "start_line": 150,
      "end_line": 158,
      "length": 9,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "quick_memory_config",
      "file_path": "src/performance/benchmark_memory.ml",
      "start_line": 160,
      "end_line": 168,
      "length": 9,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "detailed_memory_config",
      "file_path": "src/performance/benchmark_memory.ml",
      "start_line": 170,
      "end_line": 178,
      "length": 9,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "lexer_test_configs",
      "file_path": "src/performance/benchmark_config.ml",
      "start_line": 13,
      "end_line": 19,
      "length": 7,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "parser_test_configs",
      "file_path": "src/performance/benchmark_config.ml",
      "start_line": 21,
      "end_line": 27,
      "length": 7,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "poetry_test_configs",
      "file_path": "src/performance/benchmark_config.ml",
      "start_line": 29,
      "end_line": 35,
      "length": 7,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "get_configs_by_type",
      "file_path": "src/performance/benchmark_config.ml",
      "start_line": 37,
      "end_line": 43,
      "length": 7,
      "cyclomatic_complexity": 6,
      "cognitive_complexity": 5,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 1,
      "nesting_depth": 1
    },
    {
      "name": "create_custom_config",
      "file_path": "src/performance/benchmark_config.ml",
      "start_line": 45,
      "end_line": 48,
      "length": 4,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 4,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "performance_thresholds",
      "file_path": "src/performance/benchmark_config.ml",
      "start_line": 52,
      "end_line": 63,
      "length": 12,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "memory_thresholds",
      "file_path": "src/performance/benchmark_config.ml",
      "start_line": 65,
      "end_line": 76,
      "length": 12,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "get_performance_threshold",
      "file_path": "src/performance/benchmark_config.ml",
      "start_line": 78,
      "end_line": 81,
      "length": 4,
      "cyclomatic_complexity": 3,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 1
    },
    {
      "name": "get_memory_threshold",
      "file_path": "src/performance/benchmark_config.ml",
      "start_line": 83,
      "end_line": 85,
      "length": 3,
      "cyclomatic_complexity": 2,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 1
    },
    {
      "name": "add_custom_threshold",
      "file_path": "src/performance/benchmark_config.ml",
      "start_line": 87,
      "end_line": 92,
      "length": 6,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 3,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "get_environment_info",
      "file_path": "src/performance/benchmark_config.ml",
      "start_line": 106,
      "end_line": 122,
      "length": 17,
      "cyclomatic_complexity": 2,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 4
    },
    {
      "name": "format_environment_info",
      "file_path": "src/performance/benchmark_config.ml",
      "start_line": 124,
      "end_line": 132,
      "length": 9,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "check_environment_compatibility",
      "file_path": "src/performance/benchmark_config.ml",
      "start_line": 134,
      "end_line": 145,
      "length": 12,
      "cyclomatic_complexity": 3,
      "cognitive_complexity": 3,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 0,
      "nesting_depth": 3
    },
    {
      "name": "default_global_config",
      "file_path": "src/performance/benchmark_config.ml",
      "start_line": 159,
      "end_line": 168,
      "length": 10,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "load_from_env",
      "file_path": "src/performance/benchmark_config.ml",
      "start_line": 179,
      "end_line": 203,
      "length": 25,
      "cyclomatic_complexity": 13,
      "cognitive_complexity": 8,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 1,
      "nesting_depth": 2
    },
    {
      "name": "execute_benchmark_tests",
      "file_path": "src/performance/benchmark_coordinator.ml",
      "start_line": 33,
      "end_line": 43,
      "length": 11,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 3,
      "match_expressions_count": 0,
      "nesting_depth": 6
    },
    {
      "name": "execute_benchmark_tests_with_memory",
      "file_path": "src/performance/benchmark_coordinator.ml",
      "start_line": 45,
      "end_line": 78,
      "length": 34,
      "cyclomatic_complexity": 8,
      "cognitive_complexity": 3,
      "is_recursive": false,
      "parameters_count": 3,
      "match_expressions_count": 1,
      "nesting_depth": 7
    },
    {
      "name": "create_benchmark_result",
      "file_path": "src/performance/benchmark_coordinator.ml",
      "start_line": 83,
      "end_line": 84,
      "length": 2,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 5,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "run_coordinated_benchmarks",
      "file_path": "src/performance/benchmark_coordinator.ml",
      "start_line": 89,
      "end_line": 111,
      "length": 23,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 5
    },
    {
      "name": "time_function",
      "file_path": "src/performance/benchmark_timer.ml",
      "start_line": 13,
      "end_line": 19,
      "length": 7,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 0,
      "nesting_depth": 4
    },
    {
      "name": "time_function_with_iterations",
      "file_path": "src/performance/benchmark_timer.ml",
      "start_line": 21,
      "end_line": 35,
      "length": 15,
      "cyclomatic_complexity": 2,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 3,
      "match_expressions_count": 0,
      "nesting_depth": 9
    },
    {
      "name": "time_with_warmup",
      "file_path": "src/performance/benchmark_timer.ml",
      "start_line": 37,
      "end_line": 45,
      "length": 9,
      "cyclomatic_complexity": 2,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 4,
      "match_expressions_count": 0,
      "nesting_depth": 2
    },
    {
      "name": "high_precision_timer",
      "file_path": "src/performance/benchmark_timer.ml",
      "start_line": 47,
      "end_line": 53,
      "length": 7,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 0,
      "nesting_depth": 4
    },
    {
      "name": "batch_timing_test",
      "file_path": "src/performance/benchmark_timer.ml",
      "start_line": 55,
      "end_line": 62,
      "length": 8,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 3,
      "match_expressions_count": 0,
      "nesting_depth": 2
    },
    {
      "name": "regression_timing_test",
      "file_path": "src/performance/benchmark_timer.ml",
      "start_line": 64,
      "end_line": 72,
      "length": 9,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 5,
      "match_expressions_count": 0,
      "nesting_depth": 4
    },
    {
      "name": "analyze_timing_results",
      "file_path": "src/performance/benchmark_timer.ml",
      "start_line": 87,
      "end_line": 108,
      "length": 22,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 6
    },
    {
      "name": "format_timing_analysis",
      "file_path": "src/performance/benchmark_timer.ml",
      "start_line": 110,
      "end_line": 120,
      "length": 11,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "deep_timing_analysis",
      "file_path": "src/performance/benchmark_timer.ml",
      "start_line": 122,
      "end_line": 130,
      "length": 9,
      "cyclomatic_complexity": 2,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 3,
      "match_expressions_count": 0,
      "nesting_depth": 3
    },
    {
      "name": "default_config",
      "file_path": "src/performance/benchmark_timer.ml",
      "start_line": 134,
      "end_line": 136,
      "length": 3,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "detailed_config",
      "file_path": "src/performance/benchmark_timer.ml",
      "start_line": 141,
      "end_line": 143,
      "length": 3,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "create_config",
      "file_path": "src/performance/benchmark_timer.ml",
      "start_line": 145,
      "end_line": 147,
      "length": 3,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 4,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "create_poetry_text",
      "file_path": "src/performance/benchmark_poetry.ml",
      "start_line": 9,
      "end_line": 27,
      "length": 19,
      "cyclomatic_complexity": 2,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 2
    },
    {
      "name": "dummy_poetry_analyzer",
      "file_path": "src/performance/benchmark_poetry.ml",
      "start_line": 29,
      "end_line": 32,
      "length": 4,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 1
    },
    {
      "name": "get_poetry_test_configs",
      "file_path": "src/performance/benchmark_poetry.ml",
      "start_line": 34,
      "end_line": 40,
      "length": 7,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "run_poetry_benchmark",
      "file_path": "src/performance/benchmark_poetry.ml",
      "start_line": 42,
      "end_line": 46,
      "length": 5,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 1
    },
    {
      "name": "run_poetry_benchmark_with_memory",
      "file_path": "src/performance/benchmark_poetry.ml",
      "start_line": 48,
      "end_line": 52,
      "length": 5,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 1
    },
    {
      "name": "run_poetry_feature_benchmark",
      "file_path": "src/performance/benchmark_poetry.ml",
      "start_line": 54,
      "end_line": 74,
      "length": 21,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 6
    },
    {
      "name": "create_complex_expression",
      "file_path": "src/performance/benchmark_parser.ml",
      "start_line": 10,
      "end_line": 18,
      "length": 9,
      "cyclomatic_complexity": 2,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 1
    },
    {
      "name": "get_parser_test_configs",
      "file_path": "src/performance/benchmark_parser.ml",
      "start_line": 23,
      "end_line": 29,
      "length": 7,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "run_parser_benchmark",
      "file_path": "src/performance/benchmark_parser.ml",
      "start_line": 31,
      "end_line": 35,
      "length": 5,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 1
    },
    {
      "name": "run_parser_benchmark_with_memory",
      "file_path": "src/performance/benchmark_parser.ml",
      "start_line": 37,
      "end_line": 41,
      "length": 5,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 1
    },
    {
      "name": "run_complex_expression_benchmark",
      "file_path": "src/performance/benchmark_parser.ml",
      "start_line": 43,
      "end_line": 63,
      "length": 21,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 6
    },
    {
      "name": "convert_with_mapping",
      "file_path": "src/utils/conversion_utils.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "merge_mappings",
      "file_path": "src/utils/conversion_utils.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "empty_stats",
      "file_path": "src/utils/conversion_utils.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "update_stats",
      "file_path": "src/utils/conversion_utils.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "param_count_pattern",
      "file_path": "src/utils/error_formatters.ml",
      "start_line": 21,
      "end_line": 23,
      "length": 3,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "function_param_error_pattern",
      "file_path": "src/utils/error_formatters.ml",
      "start_line": 28,
      "end_line": 30,
      "length": 3,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 3,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "function_type_error_pattern",
      "file_path": "src/utils/error_formatters.ml",
      "start_line": 35,
      "end_line": 37,
      "length": 3,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "index_out_of_bounds_pattern",
      "file_path": "src/utils/error_formatters.ml",
      "start_line": 42,
      "end_line": 44,
      "length": 3,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "file_operation_error_pattern",
      "file_path": "src/utils/error_formatters.ml",
      "start_line": 46,
      "end_line": 48,
      "length": 3,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "function_param_mismatch_pattern",
      "file_path": "src/utils/error_formatters.ml",
      "start_line": 107,
      "end_line": 118,
      "length": 12,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 3,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "member_not_found_pattern",
      "file_path": "src/utils/error_formatters.ml",
      "start_line": 123,
      "end_line": 125,
      "length": 3,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "pattern_match_failure_pattern",
      "file_path": "src/utils/error_formatters.ml",
      "start_line": 130,
      "end_line": 132,
      "length": 3,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "suggestion_replacement_pattern",
      "file_path": "src/utils/error_formatters.ml",
      "start_line": 146,
      "end_line": 148,
      "length": 3,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "similarity_match_pattern",
      "file_path": "src/utils/error_formatters.ml",
      "start_line": 150,
      "end_line": 152,
      "length": 3,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "violation_numbered_pattern",
      "file_path": "src/utils/error_formatters.ml",
      "start_line": 154,
      "end_line": 156,
      "length": 3,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 4,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "violation_confidence_pattern",
      "file_path": "src/utils/error_formatters.ml",
      "start_line": 161,
      "end_line": 163,
      "length": 3,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "variable_correction_pattern",
      "file_path": "src/utils/error_formatters.ml",
      "start_line": 165,
      "end_line": 170,
      "length": 6,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "char_token_pattern",
      "file_path": "src/utils/syntax_formatters.ml",
      "start_line": 21,
      "end_line": 23,
      "length": 3,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "function_call_format",
      "file_path": "src/utils/syntax_formatters.ml",
      "start_line": 25,
      "end_line": 27,
      "length": 3,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "module_access_format",
      "file_path": "src/utils/syntax_formatters.ml",
      "start_line": 29,
      "end_line": 31,
      "length": 3,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "binary_function_pattern",
      "file_path": "src/utils/syntax_formatters.ml",
      "start_line": 33,
      "end_line": 35,
      "length": 3,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 3,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "luoyan_function_pattern",
      "file_path": "src/utils/syntax_formatters.ml",
      "start_line": 37,
      "end_line": 39,
      "length": 3,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "luoyan_env_bind_pattern",
      "file_path": "src/utils/syntax_formatters.ml",
      "start_line": 41,
      "end_line": 43,
      "length": 3,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "c_code_structure_pattern",
      "file_path": "src/utils/syntax_formatters.ml",
      "start_line": 45,
      "end_line": 47,
      "length": 3,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 3,
      "match_expressions_count": 0,
      "nesting_depth": 1
    },
    {
      "name": "luoyan_string_equality_pattern",
      "file_path": "src/utils/syntax_formatters.ml",
      "start_line": 49,
      "end_line": 51,
      "length": 3,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "c_record_field_pattern",
      "file_path": "src/utils/syntax_formatters.ml",
      "start_line": 56,
      "end_line": 58,
      "length": 3,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "c_record_constructor_pattern",
      "file_path": "src/utils/syntax_formatters.ml",
      "start_line": 60,
      "end_line": 62,
      "length": 3,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "c_record_get_pattern",
      "file_path": "src/utils/syntax_formatters.ml",
      "start_line": 64,
      "end_line": 66,
      "length": 3,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "c_record_update_pattern",
      "file_path": "src/utils/syntax_formatters.ml",
      "start_line": 68,
      "end_line": 79,
      "length": 12,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 3,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "c_constructor_pattern",
      "file_path": "src/utils/syntax_formatters.ml",
      "start_line": 81,
      "end_line": 83,
      "length": 3,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 3,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "c_label_name_pattern",
      "file_path": "src/utils/syntax_formatters.ml",
      "start_line": 91,
      "end_line": 93,
      "length": 3,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "type_conversion_log_pattern",
      "file_path": "src/utils/syntax_formatters.ml",
      "start_line": 110,
      "end_line": 112,
      "length": 3,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "float_to_int_conversion_pattern",
      "file_path": "src/utils/syntax_formatters.ml",
      "start_line": 114,
      "end_line": 116,
      "length": 3,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "string_to_int_conversion_pattern",
      "file_path": "src/utils/syntax_formatters.ml",
      "start_line": 118,
      "end_line": 120,
      "length": 3,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "bool_to_int_conversion_pattern",
      "file_path": "src/utils/syntax_formatters.ml",
      "start_line": 122,
      "end_line": 124,
      "length": 3,
      "cyclomatic_complexity": 2,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 0,
      "nesting_depth": 1
    },
    {
      "name": "int_to_float_conversion_pattern",
      "file_path": "src/utils/syntax_formatters.ml",
      "start_line": 126,
      "end_line": 128,
      "length": 3,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "string_to_float_conversion_pattern",
      "file_path": "src/utils/syntax_formatters.ml",
      "start_line": 130,
      "end_line": 132,
      "length": 3,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "value_to_string_conversion_pattern",
      "file_path": "src/utils/syntax_formatters.ml",
      "start_line": 134,
      "end_line": 139,
      "length": 6,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "member_not_found",
      "file_path": "src/utils/unified_error_formatter.ml",
      "start_line": 24,
      "end_line": 25,
      "length": 2,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "function_param_mismatch",
      "file_path": "src/utils/unified_error_formatter.ml",
      "start_line": 63,
      "end_line": 67,
      "length": 5,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 3,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "expected_token",
      "file_path": "src/utils/unified_error_formatter.ml",
      "start_line": 71,
      "end_line": 72,
      "length": 2,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "ancient_list_syntax_error",
      "file_path": "src/utils/unified_error_formatter.ml",
      "start_line": 89,
      "end_line": 97,
      "length": 9,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "position_error",
      "file_path": "src/utils/unified_error_formatter.ml",
      "start_line": 131,
      "end_line": 132,
      "length": 2,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 4,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "wrong_error_type",
      "file_path": "src/utils/unified_error_formatter.ml",
      "start_line": 140,
      "end_line": 142,
      "length": 3,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "structure_validation_failure",
      "file_path": "src/utils/unified_error_formatter.ml",
      "start_line": 144,
      "end_line": 145,
      "length": 2,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "classification_test_failure",
      "file_path": "src/utils/unified_error_formatter.ml",
      "start_line": 147,
      "end_line": 148,
      "length": 2,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "character_rhyme_match",
      "file_path": "src/utils/unified_error_formatter.ml",
      "start_line": 159,
      "end_line": 161,
      "length": 3,
      "cyclomatic_complexity": 2,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 3,
      "match_expressions_count": 0,
      "nesting_depth": 1
    },
    {
      "name": "traditional_simplified_failure",
      "file_path": "src/utils/unified_error_formatter.ml",
      "start_line": 169,
      "end_line": 171,
      "length": 3,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "invalid_config_value",
      "file_path": "src/utils/unified_error_formatter.ml",
      "start_line": 190,
      "end_line": 192,
      "length": 3,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "format_triple_with_dash",
      "file_path": "src/utils/unified_error_formatter.ml",
      "start_line": 198,
      "end_line": 199,
      "length": 2,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 3,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "concat_strings",
      "file_path": "src/utils/base_string_ops.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "join_with_separator",
      "file_path": "src/utils/base_string_ops.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "int_to_string",
      "file_path": "src/utils/base_string_ops.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "float_to_string",
      "file_path": "src/utils/base_string_ops.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "bool_to_string",
      "file_path": "src/utils/base_string_ops.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "char_to_string",
      "file_path": "src/utils/base_string_ops.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "template_replace",
      "file_path": "src/utils/base_string_ops.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "list_format",
      "file_path": "src/utils/base_string_ops.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "concat_strings",
      "file_path": "src/utils/base_string_ops.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "join_with_separator",
      "file_path": "src/utils/base_string_ops.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "int_to_string",
      "file_path": "src/utils/base_string_ops.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "float_to_string",
      "file_path": "src/utils/base_string_ops.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "bool_to_string",
      "file_path": "src/utils/base_string_ops.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "char_to_string",
      "file_path": "src/utils/base_string_ops.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "template_replace",
      "file_path": "src/utils/base_string_ops.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "list_format",
      "file_path": "src/utils/base_string_ops.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "safe_execute",
      "file_path": "src/utils/error_handling_utils.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "safe_numeric_op",
      "file_path": "src/utils/error_handling_utils.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "format_error_msg",
      "file_path": "src/utils/error_handling_utils.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "param_error_msg",
      "file_path": "src/utils/error_handling_utils.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "option_to_result",
      "file_path": "src/utils/error_handling_utils.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "check_condition",
      "file_path": "src/utils/error_handling_utils.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "file_position_pattern",
      "file_path": "src/utils/position_formatters.ml",
      "start_line": 18,
      "end_line": 20,
      "length": 3,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 3,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "line_col_message_pattern",
      "file_path": "src/utils/position_formatters.ml",
      "start_line": 22,
      "end_line": 24,
      "length": 3,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 3,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "token_position_pattern",
      "file_path": "src/utils/position_formatters.ml",
      "start_line": 26,
      "end_line": 28,
      "length": 3,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 3,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "position_standard",
      "file_path": "src/utils/position_formatters.ml",
      "start_line": 30,
      "end_line": 32,
      "length": 3,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 3,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "position_chinese_format",
      "file_path": "src/utils/position_formatters.ml",
      "start_line": 34,
      "end_line": 36,
      "length": 3,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "position_parentheses",
      "file_path": "src/utils/position_formatters.ml",
      "start_line": 38,
      "end_line": 40,
      "length": 3,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "position_range",
      "file_path": "src/utils/position_formatters.ml",
      "start_line": 42,
      "end_line": 53,
      "length": 12,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 4,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "position_with_offset_format",
      "file_path": "src/utils/position_formatters.ml",
      "start_line": 61,
      "end_line": 64,
      "length": 4,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 3,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "relative_position_format",
      "file_path": "src/utils/position_formatters.ml",
      "start_line": 66,
      "end_line": 68,
      "length": 3,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "full_position_with_file_format",
      "file_path": "src/utils/position_formatters.ml",
      "start_line": 70,
      "end_line": 72,
      "length": 3,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 3,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "same_line_range_format",
      "file_path": "src/utils/position_formatters.ml",
      "start_line": 74,
      "end_line": 77,
      "length": 4,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 3,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "multi_line_range_format",
      "file_path": "src/utils/position_formatters.ml",
      "start_line": 79,
      "end_line": 92,
      "length": 14,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 4,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "error_position_marker_format",
      "file_path": "src/utils/position_formatters.ml",
      "start_line": 94,
      "end_line": 96,
      "length": 3,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "debug_position_info_format",
      "file_path": "src/utils/position_formatters.ml",
      "start_line": 98,
      "end_line": 101,
      "length": 4,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 4,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "error_type_with_position_format",
      "file_path": "src/utils/position_formatters.ml",
      "start_line": 103,
      "end_line": 105,
      "length": 3,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 3,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "optional_position_wrapper_format",
      "file_path": "src/utils/position_formatters.ml",
      "start_line": 107,
      "end_line": 112,
      "length": 6,
      "cyclomatic_complexity": 2,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 1
    },
    {
      "name": "stat_report_pattern",
      "file_path": "src/utils/analysis_formatters.ml",
      "start_line": 18,
      "end_line": 20,
      "length": 3,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 3,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "stat_report_line_pattern",
      "file_path": "src/utils/analysis_formatters.ml",
      "start_line": 22,
      "end_line": 24,
      "length": 3,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 3,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "analysis_message_line_pattern",
      "file_path": "src/utils/analysis_formatters.ml",
      "start_line": 29,
      "end_line": 31,
      "length": 3,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "performance_creation_pattern",
      "file_path": "src/utils/analysis_formatters.ml",
      "start_line": 33,
      "end_line": 35,
      "length": 3,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "performance_field_pattern",
      "file_path": "src/utils/analysis_formatters.ml",
      "start_line": 37,
      "end_line": 39,
      "length": 3,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "poetry_char_count_pattern",
      "file_path": "src/utils/analysis_formatters.ml",
      "start_line": 41,
      "end_line": 43,
      "length": 3,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "poetry_couplet_pattern",
      "file_path": "src/utils/analysis_formatters.ml",
      "start_line": 45,
      "end_line": 48,
      "length": 4,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "poetry_quatrain_pattern",
      "file_path": "src/utils/analysis_formatters.ml",
      "start_line": 50,
      "end_line": 52,
      "length": 3,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "semantic_report_title_pattern",
      "file_path": "src/utils/analysis_formatters.ml",
      "start_line": 78,
      "end_line": 80,
      "length": 3,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "recursive_feature_pattern",
      "file_path": "src/utils/analysis_formatters.ml",
      "start_line": 82,
      "end_line": 84,
      "length": 3,
      "cyclomatic_complexity": 2,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 1
    },
    {
      "name": "recursive_context_pattern",
      "file_path": "src/utils/analysis_formatters.ml",
      "start_line": 95,
      "end_line": 97,
      "length": 3,
      "cyclomatic_complexity": 2,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 1
    },
    {
      "name": "return",
      "file_path": "src/utils/validation_utils.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "validate_non_empty_string",
      "file_path": "src/utils/validation_utils.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "validate_non_empty_list",
      "file_path": "src/utils/validation_utils.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "is_valid_chinese_char",
      "file_path": "src/utils/validation_utils.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "validate_chinese_string",
      "file_path": "src/utils/validation_utils.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "validate_in_range",
      "file_path": "src/utils/validation_utils.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "validate_non_negative",
      "file_path": "src/utils/validation_utils.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "validation_result_to_option",
      "file_path": "src/utils/validation_utils.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "validation_result_to_bool",
      "file_path": "src/utils/validation_utils.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "tiny",
      "file_path": "src/utils/buffer_formatting_utils.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "small",
      "file_path": "src/utils/buffer_formatting_utils.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "standard",
      "file_path": "src/utils/buffer_formatting_utils.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "medium",
      "file_path": "src/utils/buffer_formatting_utils.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "large",
      "file_path": "src/utils/buffer_formatting_utils.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "xlarge",
      "file_path": "src/utils/buffer_formatting_utils.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "xxlarge",
      "file_path": "src/utils/buffer_formatting_utils.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "huge",
      "file_path": "src/utils/buffer_formatting_utils.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "format_ocaml_list",
      "file_path": "src/utils/buffer_formatting_utils.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "format_ocaml_array",
      "file_path": "src/utils/buffer_formatting_utils.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "format_ocaml_tuple",
      "file_path": "src/utils/buffer_formatting_utils.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "format_function_args",
      "file_path": "src/utils/buffer_formatting_utils.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "format_variant_types",
      "file_path": "src/utils/buffer_formatting_utils.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "format_product_types",
      "file_path": "src/utils/buffer_formatting_utils.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "format_function_type",
      "file_path": "src/utils/buffer_formatting_utils.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "create_report_buffer",
      "file_path": "src/utils/buffer_formatting_utils.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "create_large_report_buffer",
      "file_path": "src/utils/buffer_formatting_utils.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "add_header",
      "file_path": "src/utils/buffer_formatting_utils.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "add_item_list",
      "file_path": "src/utils/buffer_formatting_utils.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "add_numbered_list",
      "file_path": "src/utils/buffer_formatting_utils.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "create_standard_buffer",
      "file_path": "src/utils/buffer_formatting_utils.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "create_medium_buffer",
      "file_path": "src/utils/buffer_formatting_utils.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "create_large_buffer",
      "file_path": "src/utils/buffer_formatting_utils.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "format_simple_list",
      "file_path": "src/utils/buffer_formatting_utils.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "evaluate_rhyme_harmony",
      "file_path": "src/poetry/artistic_evaluators.ml",
      "start_line": 17,
      "end_line": 36,
      "length": 20,
      "cyclomatic_complexity": 5,
      "cognitive_complexity": 4,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 2,
      "nesting_depth": 3
    },
    {
      "name": "evaluate_tonal_balance",
      "file_path": "src/poetry/artistic_evaluators.ml",
      "start_line": 38,
      "end_line": 56,
      "length": 19,
      "cyclomatic_complexity": 4,
      "cognitive_complexity": 4,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 1,
      "nesting_depth": 8
    },
    {
      "name": "evaluate_parallelism",
      "file_path": "src/poetry/artistic_evaluators.ml",
      "start_line": 58,
      "end_line": 87,
      "length": 30,
      "cyclomatic_complexity": 5,
      "cognitive_complexity": 6,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 0,
      "nesting_depth": 10
    },
    {
      "name": "evaluate_imagery",
      "file_path": "src/poetry/artistic_evaluators.ml",
      "start_line": 89,
      "end_line": 139,
      "length": 51,
      "cyclomatic_complexity": 2,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 2
    },
    {
      "name": "evaluate_rhythm",
      "file_path": "src/poetry/artistic_evaluators.ml",
      "start_line": 141,
      "end_line": 167,
      "length": 27,
      "cyclomatic_complexity": 10,
      "cognitive_complexity": 6,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 1,
      "nesting_depth": 4
    },
    {
      "name": "evaluate_elegance",
      "file_path": "src/poetry/artistic_evaluators.ml",
      "start_line": 169,
      "end_line": 223,
      "length": 55,
      "cyclomatic_complexity": 2,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 1
    },
    {
      "name": "determine_overall_grade",
      "file_path": "src/poetry/artistic_evaluators.ml",
      "start_line": 225,
      "end_line": 235,
      "length": 11,
      "cyclomatic_complexity": 4,
      "cognitive_complexity": 6,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 4
    },
    {
      "name": "evaluate",
      "file_path": "src/poetry/artistic_evaluator_form.ml",
      "start_line": 14,
      "end_line": 28,
      "length": 15,
      "cyclomatic_complexity": 3,
      "cognitive_complexity": 2,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 2
    },
    {
      "name": "evaluate",
      "file_path": "src/poetry/artistic_evaluator_form.ml",
      "start_line": 34,
      "end_line": 56,
      "length": 23,
      "cyclomatic_complexity": 6,
      "cognitive_complexity": 9,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 5
    },
    {
      "name": "evaluate",
      "file_path": "src/poetry/artistic_evaluator_form.ml",
      "start_line": 62,
      "end_line": 88,
      "length": 27,
      "cyclomatic_complexity": 4,
      "cognitive_complexity": 3,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 5
    },
    {
      "name": "siyan_standards",
      "file_path": "src/poetry/poetry_standards.ml",
      "start_line": 6,
      "end_line": 13,
      "length": 8,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "wuyan_lushi_standards",
      "file_path": "src/poetry/poetry_standards.ml",
      "start_line": 15,
      "end_line": 42,
      "length": 28,
      "cyclomatic_complexity": 5,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "qiyan_jueju_standards",
      "file_path": "src/poetry/poetry_standards.ml",
      "start_line": 44,
      "end_line": 63,
      "length": 20,
      "cyclomatic_complexity": 5,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "validate_siyan_format",
      "file_path": "src/poetry/poetry_standards.ml",
      "start_line": 77,
      "end_line": 80,
      "length": 4,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 1
    },
    {
      "name": "validate_wuyan_lushi_format",
      "file_path": "src/poetry/poetry_standards.ml",
      "start_line": 82,
      "end_line": 84,
      "length": 3,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "validate_qiyan_jueju_format",
      "file_path": "src/poetry/poetry_standards.ml",
      "start_line": 86,
      "end_line": 88,
      "length": 3,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "validate_format",
      "file_path": "src/poetry/poetry_standards.ml",
      "start_line": 90,
      "end_line": 99,
      "length": 10,
      "cyclomatic_complexity": 8,
      "cognitive_complexity": 7,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 1,
      "nesting_depth": 1
    },
    {
      "name": "create_siyan_standards",
      "file_path": "src/poetry/poetry_standards.ml",
      "start_line": 142,
      "end_line": 144,
      "length": 3,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 4,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "create_wuyan_lushi_standards",
      "file_path": "src/poetry/poetry_standards.ml",
      "start_line": 146,
      "end_line": 149,
      "length": 4,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 4,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "create_qiyan_jueju_standards",
      "file_path": "src/poetry/poetry_standards.ml",
      "start_line": 151,
      "end_line": 155,
      "length": 5,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 4,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "compare_siyan_standards",
      "file_path": "src/poetry/poetry_standards.ml",
      "start_line": 159,
      "end_line": 168,
      "length": 10,
      "cyclomatic_complexity": 4,
      "cognitive_complexity": 6,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 0,
      "nesting_depth": 4
    },
    {
      "name": "generate_improvement_suggestions",
      "file_path": "src/poetry/artistic_guidance.ml",
      "start_line": 9,
      "end_line": 25,
      "length": 17,
      "cyclomatic_complexity": 8,
      "cognitive_complexity": 28,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 8
    },
    {
      "name": "comprehensive_artistic_evaluation",
      "file_path": "src/poetry/artistic_guidance.ml",
      "start_line": 27,
      "end_line": 66,
      "length": 40,
      "cyclomatic_complexity": 2,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 0,
      "nesting_depth": 6
    },
    {
      "name": "enhanced_comprehensive_artistic_evaluation",
      "file_path": "src/poetry/artistic_guidance.ml",
      "start_line": 68,
      "end_line": 122,
      "length": 55,
      "cyclomatic_complexity": 12,
      "cognitive_complexity": 66,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 17
    },
    {
      "name": "poetic_critique",
      "file_path": "src/poetry/artistic_guidance.ml",
      "start_line": 124,
      "end_line": 135,
      "length": 12,
      "cyclomatic_complexity": 6,
      "cognitive_complexity": 4,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 1,
      "nesting_depth": 2
    },
    {
      "name": "poetic_aesthetics_guidance",
      "file_path": "src/poetry/artistic_guidance.ml",
      "start_line": 137,
      "end_line": 149,
      "length": 13,
      "cyclomatic_complexity": 8,
      "cognitive_complexity": 6,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 1,
      "nesting_depth": 2
    },
    {
      "name": "rhyme_category_to_string",
      "file_path": "src/poetry/rhyme_types.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "rhyme_group_to_string",
      "file_path": "src/poetry/rhyme_types.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "rhyme_category_equal",
      "file_path": "src/poetry/rhyme_types.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "rhyme_group_equal",
      "file_path": "src/poetry/rhyme_types.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "is_ping_sheng",
      "file_path": "src/poetry/rhyme_types.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "is_ze_sheng",
      "file_path": "src/poetry/rhyme_types.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "trim_whitespace",
      "file_path": "src/poetry/rhyme_utils.ml",
      "start_line": 21,
      "end_line": 34,
      "length": 14,
      "cyclomatic_complexity": 17,
      "cognitive_complexity": 22,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 4
    },
    {
      "name": "split_verse_lines",
      "file_path": "src/poetry/rhyme_utils.ml",
      "start_line": 41,
      "end_line": 44,
      "length": 4,
      "cyclomatic_complexity": 2,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 1
    },
    {
      "name": "filter_map",
      "file_path": "src/poetry/rhyme_utils.ml",
      "start_line": 70,
      "end_line": 72,
      "length": 3,
      "cyclomatic_complexity": 3,
      "cognitive_complexity": 2,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 1,
      "nesting_depth": 1
    },
    {
      "name": "enumerate",
      "file_path": "src/poetry/rhyme_utils.ml",
      "start_line": 77,
      "end_line": 80,
      "length": 4,
      "cyclomatic_complexity": 2,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 1
    },
    {
      "name": "evaluate_rhyme_quality",
      "file_path": "src/poetry/rhyme_scoring.ml",
      "start_line": 13,
      "end_line": 37,
      "length": 25,
      "cyclomatic_complexity": 5,
      "cognitive_complexity": 8,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 8
    },
    {
      "name": "evaluate_rhyme_diversity",
      "file_path": "src/poetry/rhyme_scoring.ml",
      "start_line": 39,
      "end_line": 54,
      "length": 16,
      "cyclomatic_complexity": 5,
      "cognitive_complexity": 10,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 9
    },
    {
      "name": "evaluate_rhyme_regularity",
      "file_path": "src/poetry/rhyme_scoring.ml",
      "start_line": 56,
      "end_line": 74,
      "length": 19,
      "cyclomatic_complexity": 9,
      "cognitive_complexity": 12,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 1,
      "nesting_depth": 5
    },
    {
      "name": "evaluate_rhyme_harmony",
      "file_path": "src/poetry/rhyme_scoring.ml",
      "start_line": 76,
      "end_line": 99,
      "length": 24,
      "cyclomatic_complexity": 8,
      "cognitive_complexity": 10,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 8
    },
    {
      "name": "evaluate_rhyme_completeness",
      "file_path": "src/poetry/rhyme_scoring.ml",
      "start_line": 101,
      "end_line": 129,
      "length": 29,
      "cyclomatic_complexity": 6,
      "cognitive_complexity": 15,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 9
    },
    {
      "name": "generate_comprehensive_score",
      "file_path": "src/poetry/rhyme_scoring.ml",
      "start_line": 131,
      "end_line": 170,
      "length": 40,
      "cyclomatic_complexity": 2,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 10
    },
    {
      "name": "score_to_grade",
      "file_path": "src/poetry/rhyme_scoring.ml",
      "start_line": 180,
      "end_line": 187,
      "length": 8,
      "cyclomatic_complexity": 5,
      "cognitive_complexity": 10,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 5
    },
    {
      "name": "generate_improvement_suggestions",
      "file_path": "src/poetry/rhyme_scoring.ml",
      "start_line": 197,
      "end_line": 213,
      "length": 17,
      "cyclomatic_complexity": 7,
      "cognitive_complexity": 21,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 7
    },
    {
      "name": "quick_quality_check",
      "file_path": "src/poetry/rhyme_scoring.ml",
      "start_line": 215,
      "end_line": 220,
      "length": 6,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 3
    },
    {
      "name": "compare_rhyme_quality",
      "file_path": "src/poetry/rhyme_scoring.ml",
      "start_line": 222,
      "end_line": 225,
      "length": 4,
      "cyclomatic_complexity": 2,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 0,
      "nesting_depth": 3
    },
    {
      "name": "rhyme_category_to_string",
      "file_path": "src/poetry/poetry_types_consolidated.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "rhyme_group_to_string",
      "file_path": "src/poetry/poetry_types_consolidated.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "dimension_to_string",
      "file_path": "src/poetry/poetry_types_consolidated.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "grade_to_string",
      "file_path": "src/poetry/poetry_types_consolidated.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "form_to_string",
      "file_path": "src/poetry/poetry_types_consolidated.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "rhyme_category_equal",
      "file_path": "src/poetry/poetry_types_consolidated.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "rhyme_group_equal",
      "file_path": "src/poetry/poetry_types_consolidated.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "is_ping_sheng",
      "file_path": "src/poetry/poetry_types_consolidated.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "is_ze_sheng",
      "file_path": "src/poetry/poetry_types_consolidated.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "create_empty_report",
      "file_path": "src/poetry/poetry_types_consolidated.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "calculate_overall_score",
      "file_path": "src/poetry/poetry_types_consolidated.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "update_overall_grade",
      "file_path": "src/poetry/poetry_types_consolidated.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "rhyme_weight",
      "file_path": "src/poetry/poetry_types_consolidated.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "tone_weight",
      "file_path": "src/poetry/poetry_types_consolidated.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "parallelism_weight",
      "file_path": "src/poetry/poetry_types_consolidated.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "imagery_weight",
      "file_path": "src/poetry/poetry_types_consolidated.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "rhythm_weight",
      "file_path": "src/poetry/poetry_types_consolidated.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "elegance_weight",
      "file_path": "src/poetry/poetry_types_consolidated.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "all_weights",
      "file_path": "src/poetry/poetry_types_consolidated.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "calculate_weighted_score",
      "file_path": "src/poetry/poetry_types_consolidated.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "is_valid_score",
      "file_path": "src/poetry/poetry_types_consolidated.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "clamp_score",
      "file_path": "src/poetry/poetry_types_consolidated.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "validate_report",
      "file_path": "src/poetry/poetry_types_consolidated.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "normalize_report",
      "file_path": "src/poetry/poetry_types_consolidated.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "find_rhyme_info",
      "file_path": "src/poetry/rhyme_api_core.ml",
      "start_line": 20,
      "end_line": 28,
      "length": 9,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "detect_rhyme_category",
      "file_path": "src/poetry/rhyme_api_core.ml",
      "start_line": 30,
      "end_line": 37,
      "length": 8,
      "cyclomatic_complexity": 3,
      "cognitive_complexity": 2,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 1,
      "nesting_depth": 1
    },
    {
      "name": "detect_rhyme_group",
      "file_path": "src/poetry/rhyme_api_core.ml",
      "start_line": 39,
      "end_line": 46,
      "length": 8,
      "cyclomatic_complexity": 3,
      "cognitive_complexity": 2,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 1,
      "nesting_depth": 1
    },
    {
      "name": "get_rhyme_characters",
      "file_path": "src/poetry/rhyme_api_core.ml",
      "start_line": 48,
      "end_line": 56,
      "length": 9,
      "cyclomatic_complexity": 3,
      "cognitive_complexity": 2,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 1,
      "nesting_depth": 1
    },
    {
      "name": "validate_rhyme_consistency",
      "file_path": "src/poetry/rhyme_api_core.ml",
      "start_line": 58,
      "end_line": 71,
      "length": 14,
      "cyclomatic_complexity": 5,
      "cognitive_complexity": 5,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 1,
      "nesting_depth": 3
    },
    {
      "name": "check_rhyme",
      "file_path": "src/poetry/rhyme_api_core.ml",
      "start_line": 73,
      "end_line": 82,
      "length": 10,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 2,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 0,
      "nesting_depth": 2
    },
    {
      "name": "find_rhyming_characters",
      "file_path": "src/poetry/rhyme_api_core.ml",
      "start_line": 84,
      "end_line": 98,
      "length": 15,
      "cyclomatic_complexity": 4,
      "cognitive_complexity": 5,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 1,
      "nesting_depth": 4
    },
    {
      "name": "get_rhyme_description",
      "file_path": "src/poetry/rhyme_api_core.ml",
      "start_line": 120,
      "end_line": 127,
      "length": 8,
      "cyclomatic_complexity": 8,
      "cognitive_complexity": 7,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 1,
      "nesting_depth": 1
    },
    {
      "name": "initialize_rhyme_lookup",
      "file_path": "src/poetry/rhyme_lookup.ml",
      "start_line": 29,
      "end_line": 45,
      "length": 17,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "lookup_rhyme_fast",
      "file_path": "src/poetry/rhyme_lookup.ml",
      "start_line": 52,
      "end_line": 55,
      "length": 4,
      "cyclomatic_complexity": 2,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 1
    },
    {
      "name": "lookup_rhyme_expanded_fast",
      "file_path": "src/poetry/rhyme_lookup.ml",
      "start_line": 57,
      "end_line": 60,
      "length": 4,
      "cyclomatic_complexity": 2,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 1
    },
    {
      "name": "lookup_rhyme_group_fast",
      "file_path": "src/poetry/rhyme_lookup.ml",
      "start_line": 62,
      "end_line": 65,
      "length": 4,
      "cyclomatic_complexity": 2,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 1
    },
    {
      "name": "lookup_rhyme_category_fast",
      "file_path": "src/poetry/rhyme_lookup.ml",
      "start_line": 67,
      "end_line": 70,
      "length": 4,
      "cyclomatic_complexity": 2,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 1
    },
    {
      "name": "is_rhyme_char_fast",
      "file_path": "src/poetry/rhyme_lookup.ml",
      "start_line": 72,
      "end_line": 75,
      "length": 4,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "is_expanded_rhyme_char_fast",
      "file_path": "src/poetry/rhyme_lookup.ml",
      "start_line": 77,
      "end_line": 80,
      "length": 4,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "is_ping_sheng_fast",
      "file_path": "src/poetry/rhyme_lookup.ml",
      "start_line": 82,
      "end_line": 84,
      "length": 3,
      "cyclomatic_complexity": 3,
      "cognitive_complexity": 2,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 1,
      "nesting_depth": 1
    },
    {
      "name": "is_ze_sheng_fast",
      "file_path": "src/poetry/rhyme_lookup.ml",
      "start_line": 86,
      "end_line": 90,
      "length": 5,
      "cyclomatic_complexity": 7,
      "cognitive_complexity": 3,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 1,
      "nesting_depth": 1
    },
    {
      "name": "is_same_rhyme_fast",
      "file_path": "src/poetry/rhyme_lookup.ml",
      "start_line": 92,
      "end_line": 96,
      "length": 5,
      "cyclomatic_complexity": 4,
      "cognitive_complexity": 3,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 1,
      "nesting_depth": 1
    },
    {
      "name": "is_same_category_fast",
      "file_path": "src/poetry/rhyme_lookup.ml",
      "start_line": 98,
      "end_line": 104,
      "length": 7,
      "cyclomatic_complexity": 4,
      "cognitive_complexity": 3,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 1,
      "nesting_depth": 1
    },
    {
      "name": "lookup_string_rhyme_groups",
      "file_path": "src/poetry/rhyme_lookup.ml",
      "start_line": 106,
      "end_line": 110,
      "length": 5,
      "cyclomatic_complexity": 2,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 1
    },
    {
      "name": "lookup_string_rhyme_categories",
      "file_path": "src/poetry/rhyme_lookup.ml",
      "start_line": 112,
      "end_line": 116,
      "length": 5,
      "cyclomatic_complexity": 2,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 1
    },
    {
      "name": "is_all_ping_sheng",
      "file_path": "src/poetry/rhyme_lookup.ml",
      "start_line": 118,
      "end_line": 121,
      "length": 4,
      "cyclomatic_complexity": 2,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 1
    },
    {
      "name": "is_all_ze_sheng",
      "file_path": "src/poetry/rhyme_lookup.ml",
      "start_line": 123,
      "end_line": 128,
      "length": 6,
      "cyclomatic_complexity": 2,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 1
    },
    {
      "name": "get_rhyme_database_size",
      "file_path": "src/poetry/rhyme_lookup.ml",
      "start_line": 130,
      "end_line": 133,
      "length": 4,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "get_expanded_rhyme_database_size",
      "file_path": "src/poetry/rhyme_lookup.ml",
      "start_line": 135,
      "end_line": 138,
      "length": 4,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "get_all_rhyme_groups",
      "file_path": "src/poetry/rhyme_lookup.ml",
      "start_line": 140,
      "end_line": 144,
      "length": 5,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 1
    },
    {
      "name": "get_all_rhyme_categories",
      "file_path": "src/poetry/rhyme_lookup.ml",
      "start_line": 146,
      "end_line": 152,
      "length": 7,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "group_chars_by_rhyme_group",
      "file_path": "src/poetry/rhyme_lookup.ml",
      "start_line": 154,
      "end_line": 163,
      "length": 10,
      "cyclomatic_complexity": 2,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 2
    },
    {
      "name": "group_chars_by_rhyme_category",
      "file_path": "src/poetry/rhyme_lookup.ml",
      "start_line": 165,
      "end_line": 176,
      "length": 12,
      "cyclomatic_complexity": 2,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 2
    },
    {
      "name": "benchmark_lookup_performance",
      "file_path": "src/poetry/rhyme_lookup.ml",
      "start_line": 178,
      "end_line": 186,
      "length": 9,
      "cyclomatic_complexity": 2,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 0,
      "nesting_depth": 3
    },
    {
      "name": "benchmark_list_performance",
      "file_path": "src/poetry/rhyme_lookup.ml",
      "start_line": 188,
      "end_line": 195,
      "length": 8,
      "cyclomatic_complexity": 2,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 0,
      "nesting_depth": 3
    },
    {
      "name": "compare_performance",
      "file_path": "src/poetry/rhyme_lookup.ml",
      "start_line": 197,
      "end_line": 204,
      "length": 8,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 0,
      "nesting_depth": 3
    },
    {
      "name": "clear_all_caches",
      "file_path": "src/poetry/rhyme_lookup.ml",
      "start_line": 206,
      "end_line": 211,
      "length": 6,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "refresh_caches",
      "file_path": "src/poetry/rhyme_lookup.ml",
      "start_line": 213,
      "end_line": 216,
      "length": 4,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "get_cache_stats",
      "file_path": "src/poetry/rhyme_lookup.ml",
      "start_line": 218,
      "end_line": 235,
      "length": 18,
      "cyclomatic_complexity": 11,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "noun_data",
      "file_path": "src/poetry/word_class_data.ml",
      "start_line": 16,
      "end_line": 61,
      "length": 46,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "verb_data",
      "file_path": "src/poetry/word_class_data.ml",
      "start_line": 63,
      "end_line": 97,
      "length": 35,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "adjective_data",
      "file_path": "src/poetry/word_class_data.ml",
      "start_line": 99,
      "end_line": 123,
      "length": 25,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "other_data",
      "file_path": "src/poetry/word_class_data.ml",
      "start_line": 125,
      "end_line": 174,
      "length": 50,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "make_ping_sheng_group",
      "file_path": "src/poetry/rhyme_helpers.ml",
      "start_line": 17,
      "end_line": 19,
      "length": 3,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "make_shang_sheng_group",
      "file_path": "src/poetry/rhyme_helpers.ml",
      "start_line": 21,
      "end_line": 23,
      "length": 3,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "make_mixed_tone_group",
      "file_path": "src/poetry/rhyme_helpers.ml",
      "start_line": 37,
      "end_line": 41,
      "length": 5,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "make_multiple_ping_sheng_groups",
      "file_path": "src/poetry/rhyme_helpers.ml",
      "start_line": 43,
      "end_line": 47,
      "length": 5,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "make_direction_group",
      "file_path": "src/poetry/rhyme_helpers.ml",
      "start_line": 54,
      "end_line": 56,
      "length": 3,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "group_by_rhyme",
      "file_path": "src/poetry/rhyme_helpers.ml",
      "start_line": 70,
      "end_line": 82,
      "length": 13,
      "cyclomatic_complexity": 4,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 3
    },
    {
      "name": "validate_rhyme_group",
      "file_path": "src/poetry/rhyme_helpers.ml",
      "start_line": 84,
      "end_line": 88,
      "length": 5,
      "cyclomatic_complexity": 4,
      "cognitive_complexity": 3,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 1,
      "nesting_depth": 1
    },
    {
      "name": "check_duplicate_chars",
      "file_path": "src/poetry/rhyme_helpers.ml",
      "start_line": 90,
      "end_line": 97,
      "length": 8,
      "cyclomatic_complexity": 4,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 1
    },
    {
      "name": "siyan_standards",
      "file_path": "src/poetry/poetry_artistic_standards.ml",
      "start_line": 20,
      "end_line": 27,
      "length": 8,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "wuyan_lushi_standards",
      "file_path": "src/poetry/poetry_artistic_standards.ml",
      "start_line": 29,
      "end_line": 38,
      "length": 10,
      "cyclomatic_complexity": 5,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "qiyan_jueju_standards",
      "file_path": "src/poetry/poetry_artistic_standards.ml",
      "start_line": 40,
      "end_line": 48,
      "length": 9,
      "cyclomatic_complexity": 5,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "auto_detect_form",
      "file_path": "src/poetry/poetry_artistic_standards.ml",
      "start_line": 61,
      "end_line": 118,
      "length": 58,
      "cyclomatic_complexity": 22,
      "cognitive_complexity": 56,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 4,
      "nesting_depth": 9
    },
    {
      "name": "evaluate_siyan_parallel_prose",
      "file_path": "src/poetry/poetry_form_evaluators.ml",
      "start_line": 19,
      "end_line": 54,
      "length": 36,
      "cyclomatic_complexity": 6,
      "cognitive_complexity": 7,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 12
    },
    {
      "name": "evaluate_wuyan_lushi",
      "file_path": "src/poetry/poetry_form_evaluators.ml",
      "start_line": 56,
      "end_line": 86,
      "length": 31,
      "cyclomatic_complexity": 4,
      "cognitive_complexity": 3,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 5
    },
    {
      "name": "evaluate_qiyan_jueju",
      "file_path": "src/poetry/poetry_form_evaluators.ml",
      "start_line": 88,
      "end_line": 97,
      "length": 10,
      "cyclomatic_complexity": 3,
      "cognitive_complexity": 3,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 4
    },
    {
      "name": "evaluate_poetry_by_form",
      "file_path": "src/poetry/poetry_form_evaluators.ml",
      "start_line": 99,
      "end_line": 108,
      "length": 10,
      "cyclomatic_complexity": 8,
      "cognitive_complexity": 5,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 1,
      "nesting_depth": 2
    },
    {
      "name": "poetic_critique",
      "file_path": "src/poetry/poetry_form_evaluators.ml",
      "start_line": 110,
      "end_line": 132,
      "length": 23,
      "cyclomatic_complexity": 15,
      "cognitive_complexity": 10,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 2,
      "nesting_depth": 3
    },
    {
      "name": "analyze_artistic_progression",
      "file_path": "src/poetry/poetry_form_evaluators.ml",
      "start_line": 134,
      "end_line": 140,
      "length": 7,
      "cyclomatic_complexity": 2,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 1
    },
    {
      "name": "compare_artistic_quality",
      "file_path": "src/poetry/poetry_form_evaluators.ml",
      "start_line": 142,
      "end_line": 147,
      "length": 6,
      "cyclomatic_complexity": 2,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 0,
      "nesting_depth": 5
    },
    {
      "name": "detect_artistic_flaws",
      "file_path": "src/poetry/poetry_form_evaluators.ml",
      "start_line": 149,
      "end_line": 151,
      "length": 3,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 1
    },
    {
      "name": "evaluate",
      "file_path": "src/poetry/artistic_evaluator_content.ml",
      "start_line": 17,
      "end_line": 55,
      "length": 39,
      "cyclomatic_complexity": 2,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 8
    },
    {
      "name": "detect_word_class",
      "file_path": "src/poetry/parallelism_analysis.ml",
      "start_line": 42,
      "end_line": 47,
      "length": 6,
      "cyclomatic_complexity": 3,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 3
    },
    {
      "name": "detect_word_class_by_string",
      "file_path": "src/poetry/parallelism_analysis.ml",
      "start_line": 49,
      "end_line": 56,
      "length": 8,
      "cyclomatic_complexity": 3,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 2
    },
    {
      "name": "word_classes_match",
      "file_path": "src/poetry/parallelism_analysis.ml",
      "start_line": 58,
      "end_line": 79,
      "length": 22,
      "cyclomatic_complexity": 39,
      "cognitive_complexity": 43,
      "is_recursive": false,
      "parameters_count": 3,
      "match_expressions_count": 1,
      "nesting_depth": 1
    },
    {
      "name": "analyze_parallelism_quality",
      "file_path": "src/poetry/parallelism_analysis.ml",
      "start_line": 81,
      "end_line": 153,
      "length": 73,
      "cyclomatic_complexity": 8,
      "cognitive_complexity": 17,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 0,
      "nesting_depth": 9
    },
    {
      "name": "generate_parallelism_report",
      "file_path": "src/poetry/parallelism_analysis.ml",
      "start_line": 155,
      "end_line": 212,
      "length": 58,
      "cyclomatic_complexity": 3,
      "cognitive_complexity": 3,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 0,
      "nesting_depth": 5
    },
    {
      "name": "validate_regulated_verse_parallelism",
      "file_path": "src/poetry/parallelism_analysis.ml",
      "start_line": 214,
      "end_line": 244,
      "length": 31,
      "cyclomatic_complexity": 14,
      "cognitive_complexity": 25,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 2,
      "nesting_depth": 5
    },
    {
      "name": "suggest_parallelism_improvements",
      "file_path": "src/poetry/parallelism_analysis.ml",
      "start_line": 246,
      "end_line": 281,
      "length": 36,
      "cyclomatic_complexity": 11,
      "cognitive_complexity": 18,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 1,
      "nesting_depth": 2
    },
    {
      "name": "get_engine_stats",
      "file_path": "src/poetry/poetry_rhyme_engine.ml",
      "start_line": 50,
      "end_line": 57,
      "length": 8,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 2
    },
    {
      "name": "analyze_char_rhyme",
      "file_path": "src/poetry/poetry_rhyme_engine.ml",
      "start_line": 59,
      "end_line": 73,
      "length": 15,
      "cyclomatic_complexity": 4,
      "cognitive_complexity": 2,
      "is_recursive": false,
      "parameters_count": 4,
      "match_expressions_count": 1,
      "nesting_depth": 1
    },
    {
      "name": "analyze_chars_rhyme",
      "file_path": "src/poetry/poetry_rhyme_engine.ml",
      "start_line": 75,
      "end_line": 79,
      "length": 5,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 7,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "check_rhyme_match",
      "file_path": "src/poetry/poetry_rhyme_engine.ml",
      "start_line": 81,
      "end_line": 120,
      "length": 40,
      "cyclomatic_complexity": 12,
      "cognitive_complexity": 25,
      "is_recursive": false,
      "parameters_count": 5,
      "match_expressions_count": 2,
      "nesting_depth": 4
    },
    {
      "name": "validate_poem_rhyme",
      "file_path": "src/poetry/poetry_rhyme_engine.ml",
      "start_line": 122,
      "end_line": 140,
      "length": 19,
      "cyclomatic_complexity": 4,
      "cognitive_complexity": 5,
      "is_recursive": false,
      "parameters_count": 6,
      "match_expressions_count": 0,
      "nesting_depth": 4
    },
    {
      "name": "common_rhyme_patterns",
      "file_path": "src/poetry/poetry_rhyme_engine.ml",
      "start_line": 142,
      "end_line": 156,
      "length": 15,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "detect_rhyme_pattern",
      "file_path": "src/poetry/poetry_rhyme_engine.ml",
      "start_line": 158,
      "end_line": 188,
      "length": 31,
      "cyclomatic_complexity": 12,
      "cognitive_complexity": 33,
      "is_recursive": false,
      "parameters_count": 6,
      "match_expressions_count": 2,
      "nesting_depth": 10
    },
    {
      "name": "find_rhyming_chars",
      "file_path": "src/poetry/poetry_rhyme_engine.ml",
      "start_line": 190,
      "end_line": 193,
      "length": 4,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 4,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "suggest_rhyme_improvements",
      "file_path": "src/poetry/poetry_rhyme_engine.ml",
      "start_line": 195,
      "end_line": 218,
      "length": 24,
      "cyclomatic_complexity": 3,
      "cognitive_complexity": 2,
      "is_recursive": false,
      "parameters_count": 5,
      "match_expressions_count": 0,
      "nesting_depth": 3
    },
    {
      "name": "warm_up_engine",
      "file_path": "src/poetry/poetry_rhyme_engine.ml",
      "start_line": 220,
      "end_line": 225,
      "length": 6,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 1
    },
    {
      "name": "evaluate_poetry_by_form",
      "file_path": "src/poetry/poetry_form_dispatch.ml",
      "start_line": 7,
      "end_line": 14,
      "length": 8,
      "cyclomatic_complexity": 8,
      "cognitive_complexity": 7,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 1,
      "nesting_depth": 1
    },
    {
      "name": "find_rhyme_info",
      "file_path": "src/poetry/rhyme_matching.ml",
      "start_line": 13,
      "end_line": 23,
      "length": 11,
      "cyclomatic_complexity": 3,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 2
    },
    {
      "name": "detect_rhyme_category",
      "file_path": "src/poetry/rhyme_matching.ml",
      "start_line": 25,
      "end_line": 37,
      "length": 13,
      "cyclomatic_complexity": 5,
      "cognitive_complexity": 2,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 1,
      "nesting_depth": 2
    },
    {
      "name": "detect_rhyme_group",
      "file_path": "src/poetry/rhyme_matching.ml",
      "start_line": 39,
      "end_line": 43,
      "length": 5,
      "cyclomatic_complexity": 3,
      "cognitive_complexity": 2,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 1,
      "nesting_depth": 1
    },
    {
      "name": "chars_rhyme",
      "file_path": "src/poetry/rhyme_matching.ml",
      "start_line": 45,
      "end_line": 51,
      "length": 7,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 0,
      "nesting_depth": 2
    },
    {
      "name": "suggest_rhyme_characters",
      "file_path": "src/poetry/rhyme_matching.ml",
      "start_line": 53,
      "end_line": 59,
      "length": 7,
      "cyclomatic_complexity": 2,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 1
    },
    {
      "name": "extract_verse_rhyme_info",
      "file_path": "src/poetry/rhyme_validation.ml",
      "start_line": 12,
      "end_line": 16,
      "length": 5,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 2
    },
    {
      "name": "extract_verse_rhyme_groups",
      "file_path": "src/poetry/rhyme_validation.ml",
      "start_line": 18,
      "end_line": 32,
      "length": 15,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 1
    },
    {
      "name": "chars_rhyme",
      "file_path": "src/poetry/rhyme_validation.ml",
      "start_line": 34,
      "end_line": 38,
      "length": 5,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 0,
      "nesting_depth": 2
    },
    {
      "name": "strings_rhyme",
      "file_path": "src/poetry/rhyme_validation.ml",
      "start_line": 40,
      "end_line": 46,
      "length": 7,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 0,
      "nesting_depth": 2
    },
    {
      "name": "validate_rhyme_consistency",
      "file_path": "src/poetry/rhyme_validation.ml",
      "start_line": 48,
      "end_line": 58,
      "length": 11,
      "cyclomatic_complexity": 6,
      "cognitive_complexity": 5,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 1,
      "nesting_depth": 2
    },
    {
      "name": "validate_rhyme_scheme",
      "file_path": "src/poetry/rhyme_validation.ml",
      "start_line": 60,
      "end_line": 80,
      "length": 21,
      "cyclomatic_complexity": 9,
      "cognitive_complexity": 9,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 1,
      "nesting_depth": 2
    },
    {
      "name": "evaluate_rhyme_quality",
      "file_path": "src/poetry/rhyme_validation.ml",
      "start_line": 82,
      "end_line": 103,
      "length": 22,
      "cyclomatic_complexity": 5,
      "cognitive_complexity": 8,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 7
    },
    {
      "name": "validate_ping_ze_pattern",
      "file_path": "src/poetry/rhyme_validation.ml",
      "start_line": 105,
      "end_line": 112,
      "length": 8,
      "cyclomatic_complexity": 2,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 0,
      "nesting_depth": 3
    },
    {
      "name": "check_tone_balance",
      "file_path": "src/poetry/rhyme_validation.ml",
      "start_line": 114,
      "end_line": 131,
      "length": 18,
      "cyclomatic_complexity": 4,
      "cognitive_complexity": 5,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 6
    },
    {
      "name": "validate_poem_structure",
      "file_path": "src/poetry/rhyme_validation.ml",
      "start_line": 133,
      "end_line": 151,
      "length": 19,
      "cyclomatic_complexity": 4,
      "cognitive_complexity": 3,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 1,
      "nesting_depth": 5
    },
    {
      "name": "check_rhyme_errors",
      "file_path": "src/poetry/rhyme_validation.ml",
      "start_line": 153,
      "end_line": 179,
      "length": 27,
      "cyclomatic_complexity": 4,
      "cognitive_complexity": 6,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 9
    },
    {
      "name": "generate_rhyme_suggestions",
      "file_path": "src/poetry/rhyme_validation.ml",
      "start_line": 181,
      "end_line": 201,
      "length": 21,
      "cyclomatic_complexity": 8,
      "cognitive_complexity": 22,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 1,
      "nesting_depth": 8
    },
    {
      "name": "contains_substring",
      "file_path": "src/poetry/poetry_analysis_utils.ml",
      "start_line": 18,
      "end_line": 38,
      "length": 21,
      "cyclomatic_complexity": 7,
      "cognitive_complexity": 20,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 0,
      "nesting_depth": 7
    },
    {
      "name": "count_imagery_words",
      "file_path": "src/poetry/poetry_analysis_utils.ml",
      "start_line": 40,
      "end_line": 44,
      "length": 5,
      "cyclomatic_complexity": 2,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 2
    },
    {
      "name": "count_elegant_words",
      "file_path": "src/poetry/poetry_analysis_utils.ml",
      "start_line": 46,
      "end_line": 52,
      "length": 7,
      "cyclomatic_complexity": 2,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 2
    },
    {
      "name": "generate_improvement_suggestions",
      "file_path": "src/poetry/poetry_analysis_utils.ml",
      "start_line": 54,
      "end_line": 71,
      "length": 18,
      "cyclomatic_complexity": 7,
      "cognitive_complexity": 21,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 7
    },
    {
      "name": "detect_artistic_flaws",
      "file_path": "src/poetry/poetry_analysis_utils.ml",
      "start_line": 73,
      "end_line": 82,
      "length": 10,
      "cyclomatic_complexity": 6,
      "cognitive_complexity": 15,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 0,
      "nesting_depth": 6
    },
    {
      "name": "calculate_overall_score",
      "file_path": "src/poetry/poetry_analysis_utils.ml",
      "start_line": 84,
      "end_line": 89,
      "length": 6,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "is_valid",
      "file_path": "src/poetry/poetry_json_unified.ml",
      "start_line": 22,
      "end_line": 34,
      "length": 13,
      "cyclomatic_complexity": 6,
      "cognitive_complexity": 7,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 2,
      "nesting_depth": 3
    },
    {
      "name": "clear",
      "file_path": "src/poetry/poetry_json_unified.ml",
      "start_line": 36,
      "end_line": 38,
      "length": 3,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "refresh",
      "file_path": "src/poetry/poetry_json_unified.ml",
      "start_line": 40,
      "end_line": 44,
      "length": 5,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "clean_string",
      "file_path": "src/poetry/poetry_json_unified.ml",
      "start_line": 48,
      "end_line": 70,
      "length": 23,
      "cyclomatic_complexity": 5,
      "cognitive_complexity": 13,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 7
    },
    {
      "name": "create_state",
      "file_path": "src/poetry/poetry_json_unified.ml",
      "start_line": 72,
      "end_line": 82,
      "length": 11,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "finalize_group",
      "file_path": "src/poetry/poetry_json_unified.ml",
      "start_line": 84,
      "end_line": 105,
      "length": 22,
      "cyclomatic_complexity": 6,
      "cognitive_complexity": 5,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 1,
      "nesting_depth": 5
    },
    {
      "name": "process_category_field",
      "file_path": "src/poetry/poetry_json_unified.ml",
      "start_line": 107,
      "end_line": 111,
      "length": 5,
      "cyclomatic_complexity": 2,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 0,
      "nesting_depth": 3
    },
    {
      "name": "process_character",
      "file_path": "src/poetry/poetry_json_unified.ml",
      "start_line": 113,
      "end_line": 116,
      "length": 4,
      "cyclomatic_complexity": 3,
      "cognitive_complexity": 3,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 0,
      "nesting_depth": 3
    },
    {
      "name": "process_line",
      "file_path": "src/poetry/poetry_json_unified.ml",
      "start_line": 118,
      "end_line": 154,
      "length": 37,
      "cyclomatic_complexity": 16,
      "cognitive_complexity": 24,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 0,
      "nesting_depth": 5
    },
    {
      "name": "parse_json",
      "file_path": "src/poetry/poetry_json_unified.ml",
      "start_line": 156,
      "end_line": 163,
      "length": 8,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 2
    },
    {
      "name": "safe_read_file",
      "file_path": "src/poetry/poetry_json_unified.ml",
      "start_line": 168,
      "end_line": 176,
      "length": 9,
      "cyclomatic_complexity": 5,
      "cognitive_complexity": 2,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 3
    },
    {
      "name": "load_from_file",
      "file_path": "src/poetry/poetry_json_unified.ml",
      "start_line": 178,
      "end_line": 190,
      "length": 13,
      "cyclomatic_complexity": 6,
      "cognitive_complexity": 3,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 4
    },
    {
      "name": "fallback_data",
      "file_path": "src/poetry/poetry_json_unified.ml",
      "start_line": 193,
      "end_line": 199,
      "length": 7,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "use_fallback",
      "file_path": "src/poetry/poetry_json_unified.ml",
      "start_line": 201,
      "end_line": 209,
      "length": 9,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 1
    },
    {
      "name": "get_data",
      "file_path": "src/poetry/poetry_json_unified.ml",
      "start_line": 211,
      "end_line": 217,
      "length": 7,
      "cyclomatic_complexity": 3,
      "cognitive_complexity": 3,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 2
    },
    {
      "name": "get_data_safe",
      "file_path": "src/poetry/poetry_json_unified.ml",
      "start_line": 219,
      "end_line": 222,
      "length": 4,
      "cyclomatic_complexity": 4,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 1
    },
    {
      "name": "get_all_groups",
      "file_path": "src/poetry/poetry_json_unified.ml",
      "start_line": 224,
      "end_line": 227,
      "length": 4,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 1
    },
    {
      "name": "get_group_characters",
      "file_path": "src/poetry/poetry_json_unified.ml",
      "start_line": 229,
      "end_line": 235,
      "length": 7,
      "cyclomatic_complexity": 3,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 3
    },
    {
      "name": "get_group_category",
      "file_path": "src/poetry/poetry_json_unified.ml",
      "start_line": 237,
      "end_line": 243,
      "length": 7,
      "cyclomatic_complexity": 3,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 3
    },
    {
      "name": "get_char_mappings",
      "file_path": "src/poetry/poetry_json_unified.ml",
      "start_line": 245,
      "end_line": 257,
      "length": 13,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 4
    },
    {
      "name": "lookup_char",
      "file_path": "src/poetry/poetry_json_unified.ml",
      "start_line": 259,
      "end_line": 265,
      "length": 7,
      "cyclomatic_complexity": 3,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 3
    },
    {
      "name": "get_statistics",
      "file_path": "src/poetry/poetry_json_unified.ml",
      "start_line": 267,
      "end_line": 278,
      "length": 12,
      "cyclomatic_complexity": 3,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 3
    },
    {
      "name": "print_statistics",
      "file_path": "src/poetry/poetry_json_unified.ml",
      "start_line": 280,
      "end_line": 287,
      "length": 8,
      "cyclomatic_complexity": 2,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 2
    },
    {
      "name": "safe_read_file",
      "file_path": "src/poetry/rhyme_json_io.ml",
      "start_line": 21,
      "end_line": 32,
      "length": 12,
      "cyclomatic_complexity": 5,
      "cognitive_complexity": 2,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 3
    },
    {
      "name": "load_rhyme_data_from_file",
      "file_path": "src/poetry/rhyme_json_io.ml",
      "start_line": 34,
      "end_line": 45,
      "length": 12,
      "cyclomatic_complexity": 6,
      "cognitive_complexity": 3,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 4
    },
    {
      "name": "get_rhyme_data",
      "file_path": "src/poetry/rhyme_json_io.ml",
      "start_line": 47,
      "end_line": 52,
      "length": 6,
      "cyclomatic_complexity": 3,
      "cognitive_complexity": 3,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 2
    },
    {
      "name": "get_all_rhyme_groups",
      "file_path": "src/poetry/rhyme_json_access.ml",
      "start_line": 14,
      "end_line": 17,
      "length": 4,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 1
    },
    {
      "name": "get_rhyme_group_characters",
      "file_path": "src/poetry/rhyme_json_access.ml",
      "start_line": 19,
      "end_line": 25,
      "length": 7,
      "cyclomatic_complexity": 3,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 3
    },
    {
      "name": "get_rhyme_group_category",
      "file_path": "src/poetry/rhyme_json_access.ml",
      "start_line": 27,
      "end_line": 33,
      "length": 7,
      "cyclomatic_complexity": 3,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 3
    },
    {
      "name": "get_rhyme_mappings",
      "file_path": "src/poetry/rhyme_json_access.ml",
      "start_line": 35,
      "end_line": 50,
      "length": 16,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 4
    },
    {
      "name": "get_data_statistics",
      "file_path": "src/poetry/rhyme_json_access.ml",
      "start_line": 52,
      "end_line": 63,
      "length": 12,
      "cyclomatic_complexity": 3,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 3
    },
    {
      "name": "print_statistics",
      "file_path": "src/poetry/rhyme_json_access.ml",
      "start_line": 65,
      "end_line": 73,
      "length": 9,
      "cyclomatic_complexity": 5,
      "cognitive_complexity": 6,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 1,
      "nesting_depth": 2
    },
    {
      "name": "generate_improvement_suggestions",
      "file_path": "src/poetry/artistic_form_evaluators.ml",
      "start_line": 17,
      "end_line": 37,
      "length": 21,
      "cyclomatic_complexity": 7,
      "cognitive_complexity": 21,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 7
    },
    {
      "name": "evaluate_siyan_parallel_prose",
      "file_path": "src/poetry/artistic_form_evaluators.ml",
      "start_line": 39,
      "end_line": 75,
      "length": 37,
      "cyclomatic_complexity": 6,
      "cognitive_complexity": 7,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 12
    },
    {
      "name": "evaluate_wuyan_lushi",
      "file_path": "src/poetry/artistic_form_evaluators.ml",
      "start_line": 77,
      "end_line": 108,
      "length": 32,
      "cyclomatic_complexity": 4,
      "cognitive_complexity": 3,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 5
    },
    {
      "name": "evaluate_qiyan_jueju",
      "file_path": "src/poetry/artistic_form_evaluators.ml",
      "start_line": 110,
      "end_line": 121,
      "length": 12,
      "cyclomatic_complexity": 3,
      "cognitive_complexity": 3,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 4
    },
    {
      "name": "evaluate_poetry_by_form",
      "file_path": "src/poetry/artistic_form_evaluators.ml",
      "start_line": 123,
      "end_line": 130,
      "length": 8,
      "cyclomatic_complexity": 8,
      "cognitive_complexity": 5,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 1,
      "nesting_depth": 2
    },
    {
      "name": "clean_json_string",
      "file_path": "src/poetry/rhyme_json_parser.ml",
      "start_line": 14,
      "end_line": 38,
      "length": 25,
      "cyclomatic_complexity": 5,
      "cognitive_complexity": 13,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 7
    },
    {
      "name": "create_parse_state",
      "file_path": "src/poetry/rhyme_json_parser.ml",
      "start_line": 40,
      "end_line": 53,
      "length": 14,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "finalize_current_group",
      "file_path": "src/poetry/rhyme_json_parser.ml",
      "start_line": 55,
      "end_line": 65,
      "length": 11,
      "cyclomatic_complexity": 4,
      "cognitive_complexity": 2,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 1,
      "nesting_depth": 1
    },
    {
      "name": "process_rhyme_group_header",
      "file_path": "src/poetry/rhyme_json_parser.ml",
      "start_line": 67,
      "end_line": 78,
      "length": 12,
      "cyclomatic_complexity": 3,
      "cognitive_complexity": 3,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 0,
      "nesting_depth": 5
    },
    {
      "name": "process_category_field",
      "file_path": "src/poetry/rhyme_json_parser.ml",
      "start_line": 80,
      "end_line": 85,
      "length": 6,
      "cyclomatic_complexity": 2,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 0,
      "nesting_depth": 3
    },
    {
      "name": "process_character_element",
      "file_path": "src/poetry/rhyme_json_parser.ml",
      "start_line": 87,
      "end_line": 93,
      "length": 7,
      "cyclomatic_complexity": 3,
      "cognitive_complexity": 3,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 0,
      "nesting_depth": 3
    },
    {
      "name": "process_line_content",
      "file_path": "src/poetry/rhyme_json_parser.ml",
      "start_line": 95,
      "end_line": 133,
      "length": 39,
      "cyclomatic_complexity": 16,
      "cognitive_complexity": 24,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 0,
      "nesting_depth": 5
    },
    {
      "name": "parse_nested_json",
      "file_path": "src/poetry/rhyme_json_parser.ml",
      "start_line": 135,
      "end_line": 142,
      "length": 8,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 2
    },
    {
      "name": "evaluate",
      "file_path": "src/poetry/artistic_evaluator_sound.ml",
      "start_line": 25,
      "end_line": 59,
      "length": 35,
      "cyclomatic_complexity": 6,
      "cognitive_complexity": 9,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 1,
      "nesting_depth": 5
    },
    {
      "name": "evaluate",
      "file_path": "src/poetry/artistic_evaluator_sound.ml",
      "start_line": 65,
      "end_line": 102,
      "length": 38,
      "cyclomatic_complexity": 9,
      "cognitive_complexity": 8,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 1,
      "nesting_depth": 3
    },
    {
      "name": "evaluators",
      "file_path": "src/poetry/artistic_evaluator_comprehensive.ml",
      "start_line": 16,
      "end_line": 34,
      "length": 19,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "calculate_overall_score",
      "file_path": "src/poetry/artistic_evaluator_comprehensive.ml",
      "start_line": 46,
      "end_line": 70,
      "length": 25,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "generate_report",
      "file_path": "src/poetry/artistic_evaluator_comprehensive.ml",
      "start_line": 72,
      "end_line": 103,
      "length": 32,
      "cyclomatic_complexity": 9,
      "cognitive_complexity": 8,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 1,
      "nesting_depth": 2
    },
    {
      "name": "evaluate_wuyan_lushi",
      "file_path": "src/poetry/form_evaluators.ml",
      "start_line": 9,
      "end_line": 43,
      "length": 35,
      "cyclomatic_complexity": 3,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 6
    },
    {
      "name": "evaluate_qiyan_jueju",
      "file_path": "src/poetry/form_evaluators.ml",
      "start_line": 45,
      "end_line": 79,
      "length": 35,
      "cyclomatic_complexity": 3,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 6
    },
    {
      "name": "evaluate_siyan_pianti",
      "file_path": "src/poetry/form_evaluators.ml",
      "start_line": 81,
      "end_line": 113,
      "length": 33,
      "cyclomatic_complexity": 2,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 7
    },
    {
      "name": "evaluate_cipai",
      "file_path": "src/poetry/form_evaluators.ml",
      "start_line": 115,
      "end_line": 127,
      "length": 13,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "evaluate_modern_poetry",
      "file_path": "src/poetry/form_evaluators.ml",
      "start_line": 129,
      "end_line": 154,
      "length": 26,
      "cyclomatic_complexity": 4,
      "cognitive_complexity": 6,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 8
    },
    {
      "name": "evaluate_siyan_parallel_prose",
      "file_path": "src/poetry/form_evaluators.ml",
      "start_line": 156,
      "end_line": 193,
      "length": 38,
      "cyclomatic_complexity": 3,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 6
    },
    {
      "name": "create_evaluation_context",
      "file_path": "src/poetry/artistic_evaluator_context.ml",
      "start_line": 19,
      "end_line": 33,
      "length": 15,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 3
    },
    {
      "name": "get_char_tone",
      "file_path": "src/poetry/artistic_evaluator_context.ml",
      "start_line": 35,
      "end_line": 37,
      "length": 3,
      "cyclomatic_complexity": 2,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 0,
      "nesting_depth": 1
    },
    {
      "name": "dimension_to_string",
      "file_path": "src/poetry/artistic_types.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "grade_to_string",
      "file_path": "src/poetry/artistic_types.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "form_to_string",
      "file_path": "src/poetry/artistic_types.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "create_empty_report",
      "file_path": "src/poetry/artistic_types.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "calculate_overall_score",
      "file_path": "src/poetry/artistic_types.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "update_overall_grade",
      "file_path": "src/poetry/artistic_types.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "rhyme_weight",
      "file_path": "src/poetry/artistic_types.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "tone_weight",
      "file_path": "src/poetry/artistic_types.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "parallelism_weight",
      "file_path": "src/poetry/artistic_types.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "imagery_weight",
      "file_path": "src/poetry/artistic_types.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "rhythm_weight",
      "file_path": "src/poetry/artistic_types.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "elegance_weight",
      "file_path": "src/poetry/artistic_types.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "all_weights",
      "file_path": "src/poetry/artistic_types.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "calculate_weighted_score",
      "file_path": "src/poetry/artistic_types.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "is_valid_score",
      "file_path": "src/poetry/artistic_types.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "validate_report",
      "file_path": "src/poetry/artistic_types.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "clamp_score",
      "file_path": "src/poetry/artistic_types.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "normalize_report",
      "file_path": "src/poetry/artistic_types.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "check_syntax_patterns",
      "file_path": "src/poetry/artistic_soul_evaluation.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "analyze_complexity_patterns",
      "file_path": "src/poetry/artistic_soul_evaluation.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "check_error_patterns",
      "file_path": "src/poetry/artistic_soul_evaluation.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "analyze_efficiency_patterns",
      "file_path": "src/poetry/artistic_soul_evaluation.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "count_poetic_patterns",
      "file_path": "src/poetry/artistic_soul_evaluation.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "analyze_rhythmic_quality",
      "file_path": "src/poetry/artistic_soul_evaluation.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "analyze_metaphorical_content",
      "file_path": "src/poetry/artistic_soul_evaluation.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "evaluate_linguistic_elegance",
      "file_path": "src/poetry/artistic_soul_evaluation.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "count_classical_references",
      "file_path": "src/poetry/artistic_soul_evaluation.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "analyze_philosophical_concepts",
      "file_path": "src/poetry/artistic_soul_evaluation.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "check_historical_allusions",
      "file_path": "src/poetry/artistic_soul_evaluation.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "count_cultural_symbols",
      "file_path": "src/poetry/artistic_soul_evaluation.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "count_emotional_vocabulary",
      "file_path": "src/poetry/artistic_soul_evaluation.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "analyze_human_connection",
      "file_path": "src/poetry/artistic_soul_evaluation.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "check_empathy_patterns",
      "file_path": "src/poetry/artistic_soul_evaluation.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "evaluate_storytelling_elements",
      "file_path": "src/poetry/artistic_soul_evaluation.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "count_wisdom_concepts",
      "file_path": "src/poetry/artistic_soul_evaluation.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "analyze_logical_depth",
      "file_path": "src/poetry/artistic_soul_evaluation.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "check_universal_principles",
      "file_path": "src/poetry/artistic_soul_evaluation.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "evaluate_moral_aspects",
      "file_path": "src/poetry/artistic_soul_evaluation.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "analyze_imagery_richness",
      "file_path": "src/poetry/artistic_soul_evaluation.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "evaluate_artistic_expression",
      "file_path": "src/poetry/artistic_soul_evaluation.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "analyze_creative_naming",
      "file_path": "src/poetry/artistic_soul_evaluation.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "evaluate_aesthetic_harmony",
      "file_path": "src/poetry/artistic_soul_evaluation.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "analyze_imagery_deeply",
      "file_path": "src/poetry/artistic_soul_evaluation.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "analyze_cultural_content",
      "file_path": "src/poetry/artistic_soul_evaluation.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "evaluate_technical_mastery",
      "file_path": "src/poetry/artistic_soul_evaluation.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "evaluate_literary_beauty",
      "file_path": "src/poetry/artistic_soul_evaluation.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "evaluate_cultural_depth",
      "file_path": "src/poetry/artistic_soul_evaluation.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "evaluate_emotional_resonance",
      "file_path": "src/poetry/artistic_soul_evaluation.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "evaluate_philosophical_wisdom",
      "file_path": "src/poetry/artistic_soul_evaluation.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "evaluate_poetic_spirit",
      "file_path": "src/poetry/artistic_soul_evaluation.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "evaluate_artistic_soul",
      "file_path": "src/poetry/artistic_soul_evaluation.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "determine_soul_grade",
      "file_path": "src/poetry/artistic_soul_evaluation.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "generate_soul_evaluation_report",
      "file_path": "src/poetry/artistic_soul_evaluation.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "poetic_soul_critique",
      "file_path": "src/poetry/artistic_soul_evaluation.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "evaluate_rhyme_harmony",
      "file_path": "src/poetry/poetry_evaluation_engine.ml",
      "start_line": 33,
      "end_line": 139,
      "length": 107,
      "cyclomatic_complexity": 22,
      "cognitive_complexity": 63,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 3,
      "nesting_depth": 26
    },
    {
      "name": "evaluate_imagery",
      "file_path": "src/poetry/poetry_evaluation_engine.ml",
      "start_line": 141,
      "end_line": 147,
      "length": 7,
      "cyclomatic_complexity": 2,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 4
    },
    {
      "name": "evaluate_rhythm",
      "file_path": "src/poetry/poetry_evaluation_engine.ml",
      "start_line": 149,
      "end_line": 172,
      "length": 24,
      "cyclomatic_complexity": 5,
      "cognitive_complexity": 10,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 11
    },
    {
      "name": "evaluate_elegance",
      "file_path": "src/poetry/poetry_evaluation_engine.ml",
      "start_line": 174,
      "end_line": 184,
      "length": 11,
      "cyclomatic_complexity": 3,
      "cognitive_complexity": 4,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 5
    },
    {
      "name": "determine_overall_grade",
      "file_path": "src/poetry/poetry_evaluation_engine.ml",
      "start_line": 186,
      "end_line": 195,
      "length": 10,
      "cyclomatic_complexity": 4,
      "cognitive_complexity": 6,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 4
    },
    {
      "name": "comprehensive_artistic_evaluation",
      "file_path": "src/poetry/poetry_evaluation_engine.ml",
      "start_line": 197,
      "end_line": 231,
      "length": 35,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 0,
      "nesting_depth": 7
    },
    {
      "name": "lookup_rhyme_group_chars",
      "file_path": "src/poetry/rhyme_cache.ml",
      "start_line": 34,
      "end_line": 36,
      "length": 3,
      "cyclomatic_complexity": 2,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 1
    },
    {
      "name": "get_cache_stats",
      "file_path": "src/poetry/rhyme_cache.ml",
      "start_line": 38,
      "end_line": 42,
      "length": 5,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 2
    },
    {
      "name": "clear_cache",
      "file_path": "src/poetry/rhyme_cache.ml",
      "start_line": 44,
      "end_line": 48,
      "length": 5,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "utf8_to_char_list",
      "file_path": "src/poetry/rhyme_pattern.ml",
      "start_line": 11,
      "end_line": 18,
      "length": 8,
      "cyclomatic_complexity": 2,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 1
    },
    {
      "name": "extract_rhyme_ending",
      "file_path": "src/poetry/rhyme_pattern.ml",
      "start_line": 20,
      "end_line": 27,
      "length": 8,
      "cyclomatic_complexity": 5,
      "cognitive_complexity": 6,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 1,
      "nesting_depth": 3
    },
    {
      "name": "validate_rhyme_consistency",
      "file_path": "src/poetry/rhyme_pattern.ml",
      "start_line": 29,
      "end_line": 40,
      "length": 12,
      "cyclomatic_complexity": 6,
      "cognitive_complexity": 5,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 1,
      "nesting_depth": 3
    },
    {
      "name": "validate_rhyme_scheme",
      "file_path": "src/poetry/rhyme_pattern.ml",
      "start_line": 42,
      "end_line": 61,
      "length": 20,
      "cyclomatic_complexity": 9,
      "cognitive_complexity": 13,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 1,
      "nesting_depth": 5
    },
    {
      "name": "analyze_rhyme_pattern",
      "file_path": "src/poetry/rhyme_pattern.ml",
      "start_line": 63,
      "end_line": 84,
      "length": 22,
      "cyclomatic_complexity": 2,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 2
    },
    {
      "name": "generate_rhyme_report",
      "file_path": "src/poetry/rhyme_pattern.ml",
      "start_line": 86,
      "end_line": 119,
      "length": 34,
      "cyclomatic_complexity": 8,
      "cognitive_complexity": 7,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 2,
      "nesting_depth": 3
    },
    {
      "name": "analyze_poem_rhyme",
      "file_path": "src/poetry/rhyme_pattern.ml",
      "start_line": 121,
      "end_line": 133,
      "length": 13,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 5
    },
    {
      "name": "suggest_rhyme_improvements",
      "file_path": "src/poetry/rhyme_pattern.ml",
      "start_line": 135,
      "end_line": 146,
      "length": 12,
      "cyclomatic_complexity": 5,
      "cognitive_complexity": 7,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 1,
      "nesting_depth": 4
    },
    {
      "name": "detect_rhyme_pattern",
      "file_path": "src/poetry/rhyme_pattern.ml",
      "start_line": 148,
      "end_line": 172,
      "length": 25,
      "cyclomatic_complexity": 7,
      "cognitive_complexity": 9,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 1,
      "nesting_depth": 5
    },
    {
      "name": "validate_specific_pattern",
      "file_path": "src/poetry/rhyme_pattern.ml",
      "start_line": 174,
      "end_line": 177,
      "length": 4,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 0,
      "nesting_depth": 1
    },
    {
      "name": "common_patterns",
      "file_path": "src/poetry/rhyme_pattern.ml",
      "start_line": 179,
      "end_line": 187,
      "length": 9,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "identify_pattern_type",
      "file_path": "src/poetry/rhyme_pattern.ml",
      "start_line": 189,
      "end_line": 193,
      "length": 5,
      "cyclomatic_complexity": 2,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 2
    },
    {
      "name": "find_rhyme_info_string",
      "file_path": "src/poetry/poetry_rhyme_core.ml",
      "start_line": 18,
      "end_line": 26,
      "length": 9,
      "cyclomatic_complexity": 3,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 4
    },
    {
      "name": "find_rhyme_info",
      "file_path": "src/poetry/poetry_rhyme_core.ml",
      "start_line": 28,
      "end_line": 31,
      "length": 4,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 1
    },
    {
      "name": "detect_rhyme_category",
      "file_path": "src/poetry/poetry_rhyme_core.ml",
      "start_line": 33,
      "end_line": 42,
      "length": 10,
      "cyclomatic_complexity": 5,
      "cognitive_complexity": 7,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 2,
      "nesting_depth": 4
    },
    {
      "name": "strings_rhyme",
      "file_path": "src/poetry/poetry_rhyme_core.ml",
      "start_line": 44,
      "end_line": 51,
      "length": 8,
      "cyclomatic_complexity": 4,
      "cognitive_complexity": 5,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 1,
      "nesting_depth": 2
    },
    {
      "name": "extract_rhyme_ending",
      "file_path": "src/poetry/poetry_rhyme_core.ml",
      "start_line": 53,
      "end_line": 63,
      "length": 11,
      "cyclomatic_complexity": 4,
      "cognitive_complexity": 6,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 5
    },
    {
      "name": "verses_rhyme",
      "file_path": "src/poetry/poetry_rhyme_core.ml",
      "start_line": 65,
      "end_line": 70,
      "length": 6,
      "cyclomatic_complexity": 3,
      "cognitive_complexity": 2,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 1,
      "nesting_depth": 3
    },
    {
      "name": "analyze_rhyme_pattern",
      "file_path": "src/poetry/poetry_rhyme_core.ml",
      "start_line": 72,
      "end_line": 81,
      "length": 10,
      "cyclomatic_complexity": 2,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 4
    },
    {
      "name": "validate_rhyme_consistency",
      "file_path": "src/poetry/poetry_rhyme_core.ml",
      "start_line": 87,
      "end_line": 99,
      "length": 13,
      "cyclomatic_complexity": 4,
      "cognitive_complexity": 5,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 1,
      "nesting_depth": 4
    },
    {
      "name": "generate_rhyme_report",
      "file_path": "src/poetry/poetry_rhyme_core.ml",
      "start_line": 105,
      "end_line": 112,
      "length": 8,
      "cyclomatic_complexity": 5,
      "cognitive_complexity": 6,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 2,
      "nesting_depth": 4
    },
    {
      "name": "evaluate_rhyme_quality",
      "file_path": "src/poetry/poetry_rhyme_core.ml",
      "start_line": 114,
      "end_line": 142,
      "length": 29,
      "cyclomatic_complexity": 10,
      "cognitive_complexity": 28,
      "is_recursive": true,
      "parameters_count": 1,
      "match_expressions_count": 2,
      "nesting_depth": 13
    },
    {
      "name": "evaluate_rhyme_regularity",
      "file_path": "src/poetry/poetry_rhyme_core.ml",
      "start_line": 144,
      "end_line": 151,
      "length": 8,
      "cyclomatic_complexity": 2,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 4
    },
    {
      "name": "get_rhyme_characters",
      "file_path": "src/poetry/poetry_rhyme_core.ml",
      "start_line": 153,
      "end_line": 157,
      "length": 5,
      "cyclomatic_complexity": 2,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 2
    },
    {
      "name": "find_rhyming_characters",
      "file_path": "src/poetry/poetry_rhyme_core.ml",
      "start_line": 161,
      "end_line": 163,
      "length": 3,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 1
    },
    {
      "name": "get_rhyme_description",
      "file_path": "src/poetry/poetry_rhyme_core.ml",
      "start_line": 167,
      "end_line": 183,
      "length": 17,
      "cyclomatic_complexity": 4,
      "cognitive_complexity": 3,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 1,
      "nesting_depth": 3
    },
    {
      "name": "identify_pattern_type",
      "file_path": "src/poetry/poetry_rhyme_core.ml",
      "start_line": 185,
      "end_line": 211,
      "length": 27,
      "cyclomatic_complexity": 7,
      "cognitive_complexity": 6,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 1,
      "nesting_depth": 5
    },
    {
      "name": "quick_rhyme_diagnosis",
      "file_path": "src/poetry/poetry_rhyme_core.ml",
      "start_line": 213,
      "end_line": 249,
      "length": 37,
      "cyclomatic_complexity": 7,
      "cognitive_complexity": 18,
      "is_recursive": true,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 10
    },
    {
      "name": "common_patterns",
      "file_path": "src/poetry/poetry_rhyme_core.ml",
      "start_line": 251,
      "end_line": 254,
      "length": 4,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "load_rhyme_data_from_json",
      "file_path": "src/poetry/unified_rhyme_data.ml",
      "start_line": 29,
      "end_line": 73,
      "length": 45,
      "cyclomatic_complexity": 6,
      "cognitive_complexity": 6,
      "is_recursive": true,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 4
    },
    {
      "name": "get_rhyme_groups_data",
      "file_path": "src/poetry/unified_rhyme_data.ml",
      "start_line": 78,
      "end_line": 87,
      "length": 10,
      "cyclomatic_complexity": 4,
      "cognitive_complexity": 3,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 1,
      "nesting_depth": 2
    },
    {
      "name": "load_rhyme_data_to_cache",
      "file_path": "src/poetry/unified_rhyme_data.ml",
      "start_line": 89,
      "end_line": 101,
      "length": 13,
      "cyclomatic_complexity": 2,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 2
    },
    {
      "name": "get_rhyme_group_chars",
      "file_path": "src/poetry/unified_rhyme_data.ml",
      "start_line": 103,
      "end_line": 106,
      "length": 4,
      "cyclomatic_complexity": 2,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 1
    },
    {
      "name": "get_all_rhyme_groups",
      "file_path": "src/poetry/unified_rhyme_data.ml",
      "start_line": 108,
      "end_line": 111,
      "length": 4,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 1
    },
    {
      "name": "get_data_stats",
      "file_path": "src/poetry/unified_rhyme_data.ml",
      "start_line": 113,
      "end_line": 117,
      "length": 5,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 3
    },
    {
      "name": "find_rhyme_info",
      "file_path": "src/poetry/poetry_recommended_api.ml",
      "start_line": 48,
      "end_line": 58,
      "length": 11,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 4,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "detect_rhyme_category",
      "file_path": "src/poetry/poetry_recommended_api.ml",
      "start_line": 60,
      "end_line": 71,
      "length": 12,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 4,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "check_rhyme_match",
      "file_path": "src/poetry/poetry_recommended_api.ml",
      "start_line": 73,
      "end_line": 88,
      "length": 16,
      "cyclomatic_complexity": 4,
      "cognitive_complexity": 3,
      "is_recursive": false,
      "parameters_count": 5,
      "match_expressions_count": 1,
      "nesting_depth": 1
    },
    {
      "name": "evaluate_poem",
      "file_path": "src/poetry/poetry_recommended_api.ml",
      "start_line": 90,
      "end_line": 144,
      "length": 55,
      "cyclomatic_complexity": 7,
      "cognitive_complexity": 4,
      "is_recursive": false,
      "parameters_count": 4,
      "match_expressions_count": 0,
      "nesting_depth": 4
    },
    {
      "name": "read_file_safely",
      "file_path": "src/poetry/artistic_data_loader.ml",
      "start_line": 14,
      "end_line": 28,
      "length": 15,
      "cyclomatic_complexity": 5,
      "cognitive_complexity": 2,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 2
    },
    {
      "name": "find_json_section",
      "file_path": "src/poetry/artistic_data_loader.ml",
      "start_line": 30,
      "end_line": 55,
      "length": 26,
      "cyclomatic_complexity": 11,
      "cognitive_complexity": 19,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 1,
      "nesting_depth": 8
    },
    {
      "name": "extract_words_from_category",
      "file_path": "src/poetry/artistic_data_loader.ml",
      "start_line": 57,
      "end_line": 62,
      "length": 6,
      "cyclomatic_complexity": 5,
      "cognitive_complexity": 4,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 1,
      "nesting_depth": 2
    },
    {
      "name": "supported_categories",
      "file_path": "src/poetry/artistic_data_loader.ml",
      "start_line": 64,
      "end_line": 86,
      "length": 23,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "load_words_from_json_file",
      "file_path": "src/poetry/artistic_data_loader.ml",
      "start_line": 88,
      "end_line": 100,
      "length": 13,
      "cyclomatic_complexity": 4,
      "cognitive_complexity": 3,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 1,
      "nesting_depth": 2
    },
    {
      "name": "default_imagery_keywords",
      "file_path": "src/poetry/artistic_data_loader.ml",
      "start_line": 102,
      "end_line": 168,
      "length": 67,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "default_elegant_words",
      "file_path": "src/poetry/artistic_data_loader.ml",
      "start_line": 170,
      "end_line": 205,
      "length": 36,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "imagery_keywords",
      "file_path": "src/poetry/artistic_data_loader.ml",
      "start_line": 207,
      "end_line": 212,
      "length": 6,
      "cyclomatic_complexity": 2,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 3
    },
    {
      "name": "elegant_words",
      "file_path": "src/poetry/artistic_data_loader.ml",
      "start_line": 214,
      "end_line": 221,
      "length": 8,
      "cyclomatic_complexity": 2,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 3
    },
    {
      "name": "string_to_rhyme_category",
      "file_path": "src/poetry/rhyme_json_core.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "string_to_rhyme_group",
      "file_path": "src/poetry/rhyme_json_core.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "cache_ttl",
      "file_path": "src/poetry/rhyme_json_core.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "cached_data",
      "file_path": "src/poetry/rhyme_json_core.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "cache_timestamp",
      "file_path": "src/poetry/rhyme_json_core.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "is_cache_valid",
      "file_path": "src/poetry/rhyme_json_core.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "get_cached_data",
      "file_path": "src/poetry/rhyme_json_core.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "set_cached_data",
      "file_path": "src/poetry/rhyme_json_core.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "clear_cache",
      "file_path": "src/poetry/rhyme_json_core.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "refresh_cache",
      "file_path": "src/poetry/rhyme_json_core.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "clean_json_string",
      "file_path": "src/poetry/rhyme_json_core.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "create_parse_state",
      "file_path": "src/poetry/rhyme_json_core.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "finalize_current_group",
      "file_path": "src/poetry/rhyme_json_core.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "process_rhyme_group_header",
      "file_path": "src/poetry/rhyme_json_core.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "process_category_field",
      "file_path": "src/poetry/rhyme_json_core.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "process_character_element",
      "file_path": "src/poetry/rhyme_json_core.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "process_line_content",
      "file_path": "src/poetry/rhyme_json_core.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "parse_nested_json",
      "file_path": "src/poetry/rhyme_json_core.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "default_data_file",
      "file_path": "src/poetry/rhyme_json_core.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "safe_read_file",
      "file_path": "src/poetry/rhyme_json_core.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "load_rhyme_data_from_file",
      "file_path": "src/poetry/rhyme_json_core.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "fallback_rhyme_data",
      "file_path": "src/poetry/rhyme_json_core.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "use_fallback_data",
      "file_path": "src/poetry/rhyme_json_core.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "get_rhyme_data",
      "file_path": "src/poetry/rhyme_json_core.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "get_all_rhyme_groups",
      "file_path": "src/poetry/rhyme_json_core.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "get_rhyme_group_characters",
      "file_path": "src/poetry/rhyme_json_core.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "get_rhyme_group_category",
      "file_path": "src/poetry/rhyme_json_core.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "get_data_statistics",
      "file_path": "src/poetry/rhyme_json_core.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "print_statistics",
      "file_path": "src/poetry/rhyme_json_core.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "utf8_to_char_list",
      "file_path": "src/poetry/rhyme_analysis.ml",
      "start_line": 15,
      "end_line": 22,
      "length": 8,
      "cyclomatic_complexity": 2,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 1
    },
    {
      "name": "generate_rhyme_report",
      "file_path": "src/poetry/rhyme_analysis.ml",
      "start_line": 37,
      "end_line": 72,
      "length": 36,
      "cyclomatic_complexity": 8,
      "cognitive_complexity": 7,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 2,
      "nesting_depth": 7
    },
    {
      "name": "comprehensive_poem_analysis",
      "file_path": "src/poetry/rhyme_analysis.ml",
      "start_line": 111,
      "end_line": 119,
      "length": 9,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 5
    },
    {
      "name": "smart_rhyme_suggestions",
      "file_path": "src/poetry/rhyme_analysis.ml",
      "start_line": 121,
      "end_line": 143,
      "length": 23,
      "cyclomatic_complexity": 3,
      "cognitive_complexity": 3,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 5
    },
    {
      "name": "quick_rhyme_diagnosis",
      "file_path": "src/poetry/rhyme_analysis.ml",
      "start_line": 145,
      "end_line": 158,
      "length": 14,
      "cyclomatic_complexity": 4,
      "cognitive_complexity": 6,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 6
    },
    {
      "name": "optimize_rhyme_suggestions",
      "file_path": "src/poetry/rhyme_analysis.ml",
      "start_line": 160,
      "end_line": 183,
      "length": 24,
      "cyclomatic_complexity": 5,
      "cognitive_complexity": 10,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 0,
      "nesting_depth": 7
    },
    {
      "name": "rhyme_learning_guide",
      "file_path": "src/poetry/rhyme_analysis.ml",
      "start_line": 185,
      "end_line": 216,
      "length": 32,
      "cyclomatic_complexity": 3,
      "cognitive_complexity": 2,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 1,
      "nesting_depth": 2
    },
    {
      "name": "find_tone_info_by_char",
      "file_path": "src/poetry/tone_pattern.ml",
      "start_line": 19,
      "end_line": 25,
      "length": 7,
      "cyclomatic_complexity": 3,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 3
    },
    {
      "name": "find_tone_info",
      "file_path": "src/poetry/tone_pattern.ml",
      "start_line": 27,
      "end_line": 34,
      "length": 8,
      "cyclomatic_complexity": 3,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 2
    },
    {
      "name": "detect_tone_by_char",
      "file_path": "src/poetry/tone_pattern.ml",
      "start_line": 36,
      "end_line": 41,
      "length": 6,
      "cyclomatic_complexity": 5,
      "cognitive_complexity": 6,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 2,
      "nesting_depth": 2
    },
    {
      "name": "is_oblique_tone",
      "file_path": "src/poetry/tone_pattern.ml",
      "start_line": 53,
      "end_line": 59,
      "length": 7,
      "cyclomatic_complexity": 7,
      "cognitive_complexity": 3,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 1,
      "nesting_depth": 1
    },
    {
      "name": "analyze_tone_sequence",
      "file_path": "src/poetry/tone_pattern.ml",
      "start_line": 61,
      "end_line": 71,
      "length": 11,
      "cyclomatic_complexity": 3,
      "cognitive_complexity": 2,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 1,
      "nesting_depth": 2
    },
    {
      "name": "analyze_simple_tone_pattern",
      "file_path": "src/poetry/tone_pattern.ml",
      "start_line": 73,
      "end_line": 80,
      "length": 8,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 1
    },
    {
      "name": "qijue_tone_patterns",
      "file_path": "src/poetry/tone_pattern.ml",
      "start_line": 82,
      "end_line": 101,
      "length": 20,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "wuyan_tone_patterns",
      "file_path": "src/poetry/tone_pattern.ml",
      "start_line": 103,
      "end_line": 121,
      "length": 19,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "siyan_tone_patterns",
      "file_path": "src/poetry/tone_pattern.ml",
      "start_line": 123,
      "end_line": 127,
      "length": 5,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "validate_tone_pattern",
      "file_path": "src/poetry/tone_pattern.ml",
      "start_line": 129,
      "end_line": 142,
      "length": 14,
      "cyclomatic_complexity": 2,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 0,
      "nesting_depth": 7
    },
    {
      "name": "validate_qijue_tone_pattern",
      "file_path": "src/poetry/tone_pattern.ml",
      "start_line": 144,
      "end_line": 149,
      "length": 6,
      "cyclomatic_complexity": 2,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 1
    },
    {
      "name": "validate_wuyan_tone_pattern",
      "file_path": "src/poetry/tone_pattern.ml",
      "start_line": 151,
      "end_line": 156,
      "length": 6,
      "cyclomatic_complexity": 2,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 1
    },
    {
      "name": "validate_siyan_tone_pattern",
      "file_path": "src/poetry/tone_pattern.ml",
      "start_line": 158,
      "end_line": 175,
      "length": 18,
      "cyclomatic_complexity": 2,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 1
    },
    {
      "name": "generate_tone_report",
      "file_path": "src/poetry/tone_pattern.ml",
      "start_line": 177,
      "end_line": 185,
      "length": 9,
      "cyclomatic_complexity": 2,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 0,
      "nesting_depth": 4
    },
    {
      "name": "suggest_tone_improvements",
      "file_path": "src/poetry/tone_pattern.ml",
      "start_line": 187,
      "end_line": 211,
      "length": 25,
      "cyclomatic_complexity": 7,
      "cognitive_complexity": 7,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 1,
      "nesting_depth": 4
    },
    {
      "name": "get_tone_character_suggestions",
      "file_path": "src/poetry/tone_pattern.ml",
      "start_line": 213,
      "end_line": 225,
      "length": 13,
      "cyclomatic_complexity": 5,
      "cognitive_complexity": 4,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 1,
      "nesting_depth": 1
    },
    {
      "name": "is_entry_valid",
      "file_path": "src/poetry/poetry_data_unified.ml",
      "start_line": 47,
      "end_line": 49,
      "length": 3,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 1
    },
    {
      "name": "get",
      "file_path": "src/poetry/poetry_data_unified.ml",
      "start_line": 51,
      "end_line": 55,
      "length": 5,
      "cyclomatic_complexity": 4,
      "cognitive_complexity": 2,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 3
    },
    {
      "name": "set",
      "file_path": "src/poetry/poetry_data_unified.ml",
      "start_line": 57,
      "end_line": 59,
      "length": 3,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 0,
      "nesting_depth": 1
    },
    {
      "name": "get_project_root",
      "file_path": "src/poetry/poetry_data_unified.ml",
      "start_line": 66,
      "end_line": 74,
      "length": 9,
      "cyclomatic_complexity": 3,
      "cognitive_complexity": 3,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 4
    },
    {
      "name": "safe_read_file",
      "file_path": "src/poetry/poetry_data_unified.ml",
      "start_line": 76,
      "end_line": 84,
      "length": 9,
      "cyclomatic_complexity": 5,
      "cognitive_complexity": 2,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 3
    },
    {
      "name": "resolve_relative_path",
      "file_path": "src/poetry/poetry_data_unified.ml",
      "start_line": 86,
      "end_line": 90,
      "length": 5,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 1
    },
    {
      "name": "clean_string",
      "file_path": "src/poetry/poetry_data_unified.ml",
      "start_line": 93,
      "end_line": 112,
      "length": 20,
      "cyclomatic_complexity": 5,
      "cognitive_complexity": 13,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 7
    },
    {
      "name": "create_state",
      "file_path": "src/poetry/poetry_data_unified.ml",
      "start_line": 114,
      "end_line": 122,
      "length": 9,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "finalize_group",
      "file_path": "src/poetry/poetry_data_unified.ml",
      "start_line": 124,
      "end_line": 177,
      "length": 54,
      "cyclomatic_complexity": 19,
      "cognitive_complexity": 54,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 1,
      "nesting_depth": 16
    },
    {
      "name": "register",
      "file_path": "src/poetry/poetry_data_unified.ml",
      "start_line": 182,
      "end_line": 186,
      "length": 5,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 3,
      "match_expressions_count": 0,
      "nesting_depth": 1
    },
    {
      "name": "get_by_name",
      "file_path": "src/poetry/poetry_data_unified.ml",
      "start_line": 190,
      "end_line": 191,
      "length": 2,
      "cyclomatic_complexity": 2,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 1
    },
    {
      "name": "load_from_json_file",
      "file_path": "src/poetry/poetry_data_unified.ml",
      "start_line": 198,
      "end_line": 204,
      "length": 7,
      "cyclomatic_complexity": 2,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 2
    },
    {
      "name": "load_from_source",
      "file_path": "src/poetry/poetry_data_unified.ml",
      "start_line": 206,
      "end_line": 234,
      "length": 29,
      "cyclomatic_complexity": 11,
      "cognitive_complexity": 12,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 3,
      "nesting_depth": 3
    },
    {
      "name": "default_sources",
      "file_path": "src/poetry/poetry_data_unified.ml",
      "start_line": 237,
      "end_line": 238,
      "length": 2,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "register_defaults",
      "file_path": "src/poetry/poetry_data_unified.ml",
      "start_line": 240,
      "end_line": 244,
      "length": 5,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "use_fallback_data",
      "file_path": "src/poetry/poetry_data_unified.ml",
      "start_line": 246,
      "end_line": 257,
      "length": 12,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "build_database",
      "file_path": "src/poetry/poetry_data_unified.ml",
      "start_line": 260,
      "end_line": 288,
      "length": 29,
      "cyclomatic_complexity": 4,
      "cognitive_complexity": 2,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 8
    },
    {
      "name": "lookup_char",
      "file_path": "src/poetry/poetry_data_unified.ml",
      "start_line": 290,
      "end_line": 291,
      "length": 2,
      "cyclomatic_complexity": 2,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 0,
      "nesting_depth": 1
    },
    {
      "name": "get_statistics",
      "file_path": "src/poetry/poetry_data_unified.ml",
      "start_line": 293,
      "end_line": 300,
      "length": 8,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 2
    },
    {
      "name": "build_unified_database",
      "file_path": "src/poetry/poetry_data_unified.ml",
      "start_line": 316,
      "end_line": 320,
      "length": 5,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 2
    },
    {
      "name": "get_unified_database",
      "file_path": "src/poetry/poetry_data_unified.ml",
      "start_line": 322,
      "end_line": 324,
      "length": 3,
      "cyclomatic_complexity": 3,
      "cognitive_complexity": 2,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 1,
      "nesting_depth": 1
    },
    {
      "name": "lookup_char",
      "file_path": "src/poetry/poetry_data_unified.ml",
      "start_line": 326,
      "end_line": 329,
      "length": 4,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 1
    },
    {
      "name": "get_statistics",
      "file_path": "src/poetry/poetry_data_unified.ml",
      "start_line": 331,
      "end_line": 334,
      "length": 4,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 1
    },
    {
      "name": "refresh_data",
      "file_path": "src/poetry/poetry_data_unified.ml",
      "start_line": 338,
      "end_line": 341,
      "length": 4,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "register_standard_sources",
      "file_path": "src/poetry/poetry_data_unified.ml",
      "start_line": 343,
      "end_line": 349,
      "length": 7,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "poetic_critique",
      "file_path": "src/poetry/artistic_advanced_analysis.ml",
      "start_line": 20,
      "end_line": 33,
      "length": 14,
      "cyclomatic_complexity": 8,
      "cognitive_complexity": 5,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 1,
      "nesting_depth": 2
    },
    {
      "name": "poetic_aesthetics_guidance",
      "file_path": "src/poetry/artistic_advanced_analysis.ml",
      "start_line": 35,
      "end_line": 49,
      "length": 15,
      "cyclomatic_complexity": 8,
      "cognitive_complexity": 5,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 1,
      "nesting_depth": 2
    },
    {
      "name": "calculate_overall_score",
      "file_path": "src/poetry/artistic_advanced_analysis.ml",
      "start_line": 51,
      "end_line": 57,
      "length": 7,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "analyze_artistic_progression",
      "file_path": "src/poetry/artistic_advanced_analysis.ml",
      "start_line": 59,
      "end_line": 69,
      "length": 11,
      "cyclomatic_complexity": 2,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 1
    },
    {
      "name": "compare_artistic_quality",
      "file_path": "src/poetry/artistic_advanced_analysis.ml",
      "start_line": 71,
      "end_line": 83,
      "length": 13,
      "cyclomatic_complexity": 2,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 0,
      "nesting_depth": 1
    },
    {
      "name": "detect_artistic_flaws",
      "file_path": "src/poetry/artistic_advanced_analysis.ml",
      "start_line": 85,
      "end_line": 97,
      "length": 13,
      "cyclomatic_complexity": 6,
      "cognitive_complexity": 15,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 7
    },
    {
      "name": "siyan_standards",
      "file_path": "src/poetry/artistic_advanced_analysis.ml",
      "start_line": 101,
      "end_line": 109,
      "length": 9,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "wuyan_lushi_standards",
      "file_path": "src/poetry/artistic_advanced_analysis.ml",
      "start_line": 111,
      "end_line": 121,
      "length": 11,
      "cyclomatic_complexity": 5,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "qiyan_jueju_standards",
      "file_path": "src/poetry/artistic_advanced_analysis.ml",
      "start_line": 123,
      "end_line": 134,
      "length": 12,
      "cyclomatic_complexity": 5,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "auto_detect_form",
      "file_path": "src/poetry/artistic_advanced_analysis.ml",
      "start_line": 150,
      "end_line": 162,
      "length": 13,
      "cyclomatic_complexity": 7,
      "cognitive_complexity": 11,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 1,
      "nesting_depth": 4
    },
    {
      "name": "adaptive_evaluation",
      "file_path": "src/poetry/artistic_advanced_analysis.ml",
      "start_line": 164,
      "end_line": 192,
      "length": 29,
      "cyclomatic_complexity": 6,
      "cognitive_complexity": 5,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 1,
      "nesting_depth": 3
    },
    {
      "name": "smart_suggestions",
      "file_path": "src/poetry/artistic_advanced_analysis.ml",
      "start_line": 194,
      "end_line": 213,
      "length": 20,
      "cyclomatic_complexity": 11,
      "cognitive_complexity": 10,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 2,
      "nesting_depth": 2
    },
    {
      "name": "clear_cache",
      "file_path": "src/poetry/rhyme_json_unified.ml",
      "start_line": 42,
      "end_line": 45,
      "length": 4,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "get_cached_data",
      "file_path": "src/poetry/rhyme_json_unified.ml",
      "start_line": 47,
      "end_line": 55,
      "length": 9,
      "cyclomatic_complexity": 4,
      "cognitive_complexity": 3,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 1,
      "nesting_depth": 1
    },
    {
      "name": "set_cached_data",
      "file_path": "src/poetry/rhyme_json_unified.ml",
      "start_line": 57,
      "end_line": 60,
      "length": 4,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "get_cache_stats",
      "file_path": "src/poetry/rhyme_json_unified.ml",
      "start_line": 62,
      "end_line": 66,
      "length": 5,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "clean_json_string",
      "file_path": "src/poetry/rhyme_json_unified.ml",
      "start_line": 70,
      "end_line": 93,
      "length": 24,
      "cyclomatic_complexity": 5,
      "cognitive_complexity": 13,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 7
    },
    {
      "name": "create_parse_state",
      "file_path": "src/poetry/rhyme_json_unified.ml",
      "start_line": 95,
      "end_line": 106,
      "length": 12,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "parse_rhyme_json",
      "file_path": "src/poetry/rhyme_json_unified.ml",
      "start_line": 108,
      "end_line": 138,
      "length": 31,
      "cyclomatic_complexity": 9,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 5
    },
    {
      "name": "read_json_file",
      "file_path": "src/poetry/rhyme_json_unified.ml",
      "start_line": 145,
      "end_line": 154,
      "length": 10,
      "cyclomatic_complexity": 5,
      "cognitive_complexity": 2,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 3
    },
    {
      "name": "get_rhyme_data",
      "file_path": "src/poetry/rhyme_json_unified.ml",
      "start_line": 156,
      "end_line": 172,
      "length": 17,
      "cyclomatic_complexity": 5,
      "cognitive_complexity": 7,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 1,
      "nesting_depth": 6
    },
    {
      "name": "get_all_rhyme_groups",
      "file_path": "src/poetry/rhyme_json_unified.ml",
      "start_line": 176,
      "end_line": 179,
      "length": 4,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 1
    },
    {
      "name": "get_rhyme_group_characters",
      "file_path": "src/poetry/rhyme_json_unified.ml",
      "start_line": 181,
      "end_line": 187,
      "length": 7,
      "cyclomatic_complexity": 3,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 3
    },
    {
      "name": "get_rhyme_group_category",
      "file_path": "src/poetry/rhyme_json_unified.ml",
      "start_line": 189,
      "end_line": 195,
      "length": 7,
      "cyclomatic_complexity": 3,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 3
    },
    {
      "name": "get_rhyme_mappings",
      "file_path": "src/poetry/rhyme_json_unified.ml",
      "start_line": 197,
      "end_line": 209,
      "length": 13,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 4
    },
    {
      "name": "get_data_statistics",
      "file_path": "src/poetry/rhyme_json_unified.ml",
      "start_line": 211,
      "end_line": 220,
      "length": 10,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 2
    },
    {
      "name": "use_fallback_data",
      "file_path": "src/poetry/rhyme_json_unified.ml",
      "start_line": 229,
      "end_line": 242,
      "length": 14,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 1
    },
    {
      "name": "get_rhyme_data",
      "file_path": "src/poetry/rhyme_json_unified.ml",
      "start_line": 244,
      "end_line": 247,
      "length": 4,
      "cyclomatic_complexity": 4,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 1
    },
    {
      "name": "analyze_content_depth",
      "file_path": "src/poetry/poetry_artistic_engine.ml",
      "start_line": 55,
      "end_line": 76,
      "length": 22,
      "cyclomatic_complexity": 3,
      "cognitive_complexity": 3,
      "is_recursive": false,
      "parameters_count": 6,
      "match_expressions_count": 0,
      "nesting_depth": 6
    },
    {
      "name": "analyze_form_beauty",
      "file_path": "src/poetry/poetry_artistic_engine.ml",
      "start_line": 78,
      "end_line": 101,
      "length": 24,
      "cyclomatic_complexity": 6,
      "cognitive_complexity": 6,
      "is_recursive": false,
      "parameters_count": 6,
      "match_expressions_count": 1,
      "nesting_depth": 5
    },
    {
      "name": "analyze_sound_harmony",
      "file_path": "src/poetry/poetry_artistic_engine.ml",
      "start_line": 103,
      "end_line": 122,
      "length": 20,
      "cyclomatic_complexity": 3,
      "cognitive_complexity": 2,
      "is_recursive": false,
      "parameters_count": 6,
      "match_expressions_count": 0,
      "nesting_depth": 4
    },
    {
      "name": "analyze_mood_creation",
      "file_path": "src/poetry/poetry_artistic_engine.ml",
      "start_line": 124,
      "end_line": 155,
      "length": 32,
      "cyclomatic_complexity": 5,
      "cognitive_complexity": 5,
      "is_recursive": false,
      "parameters_count": 4,
      "match_expressions_count": 0,
      "nesting_depth": 5
    },
    {
      "name": "detect_rhetoric_techniques",
      "file_path": "src/poetry/poetry_artistic_engine.ml",
      "start_line": 157,
      "end_line": 197,
      "length": 41,
      "cyclomatic_complexity": 8,
      "cognitive_complexity": 10,
      "is_recursive": false,
      "parameters_count": 4,
      "match_expressions_count": 1,
      "nesting_depth": 8
    },
    {
      "name": "comprehensive_artistic_evaluation",
      "file_path": "src/poetry/poetry_artistic_engine.ml",
      "start_line": 199,
      "end_line": 266,
      "length": 68,
      "cyclomatic_complexity": 13,
      "cognitive_complexity": 34,
      "is_recursive": false,
      "parameters_count": 4,
      "match_expressions_count": 1,
      "nesting_depth": 13
    },
    {
      "name": "generate_improvement_guidance",
      "file_path": "src/poetry/poetry_artistic_engine.ml",
      "start_line": 268,
      "end_line": 303,
      "length": 36,
      "cyclomatic_complexity": 14,
      "cognitive_complexity": 28,
      "is_recursive": false,
      "parameters_count": 4,
      "match_expressions_count": 2,
      "nesting_depth": 4
    },
    {
      "name": "evaluate_poem_artistic",
      "file_path": "src/poetry/poetry_artistic_engine.ml",
      "start_line": 305,
      "end_line": 308,
      "length": 4,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 4,
      "match_expressions_count": 0,
      "nesting_depth": 1
    },
    {
      "name": "quick_artistic_check",
      "file_path": "src/poetry/poetry_artistic_engine.ml",
      "start_line": 310,
      "end_line": 313,
      "length": 4,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 6,
      "match_expressions_count": 0,
      "nesting_depth": 1
    },
    {
      "name": "rhyme_category_to_string",
      "file_path": "src/poetry/poetry_core_types.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "rhyme_group_to_string",
      "file_path": "src/poetry/poetry_core_types.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "string_to_rhyme_category",
      "file_path": "src/poetry/poetry_core_types.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "string_to_rhyme_group",
      "file_path": "src/poetry/poetry_core_types.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "rhyme_category_equal",
      "file_path": "src/poetry/poetry_core_types.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "rhyme_group_equal",
      "file_path": "src/poetry/poetry_core_types.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "is_ping_sheng",
      "file_path": "src/poetry/poetry_core_types.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "is_ze_sheng",
      "file_path": "src/poetry/poetry_core_types.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "rhyme_database",
      "file_path": "src/poetry/rhyme_database.ml",
      "start_line": 14,
      "end_line": 32,
      "length": 19,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "find_rhyme_info",
      "file_path": "src/poetry/rhyme_database.ml",
      "start_line": 34,
      "end_line": 37,
      "length": 4,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 1
    },
    {
      "name": "get_database_stats",
      "file_path": "src/poetry/rhyme_database.ml",
      "start_line": 39,
      "end_line": 60,
      "length": 22,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 1
    },
    {
      "name": "get_chars_by_group",
      "file_path": "src/poetry/rhyme_database.ml",
      "start_line": 62,
      "end_line": 64,
      "length": 3,
      "cyclomatic_complexity": 2,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 1
    },
    {
      "name": "get_chars_by_category",
      "file_path": "src/poetry/rhyme_database.ml",
      "start_line": 66,
      "end_line": 67,
      "length": 2,
      "cyclomatic_complexity": 2,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 1
    },
    {
      "name": "contains_substring",
      "file_path": "src/poetry/artistic_core_evaluators.ml",
      "start_line": 16,
      "end_line": 34,
      "length": 19,
      "cyclomatic_complexity": 7,
      "cognitive_complexity": 20,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 0,
      "nesting_depth": 7
    },
    {
      "name": "count_imagery_words",
      "file_path": "src/poetry/artistic_core_evaluators.ml",
      "start_line": 36,
      "end_line": 40,
      "length": 5,
      "cyclomatic_complexity": 2,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 2
    },
    {
      "name": "count_elegant_words",
      "file_path": "src/poetry/artistic_core_evaluators.ml",
      "start_line": 42,
      "end_line": 60,
      "length": 19,
      "cyclomatic_complexity": 2,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 2
    },
    {
      "name": "evaluate_rhyme_harmony",
      "file_path": "src/poetry/artistic_core_evaluators.ml",
      "start_line": 62,
      "end_line": 91,
      "length": 30,
      "cyclomatic_complexity": 5,
      "cognitive_complexity": 5,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 1,
      "nesting_depth": 5
    },
    {
      "name": "evaluate_tonal_balance",
      "file_path": "src/poetry/artistic_core_evaluators.ml",
      "start_line": 93,
      "end_line": 128,
      "length": 36,
      "cyclomatic_complexity": 12,
      "cognitive_complexity": 23,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 2,
      "nesting_depth": 12
    },
    {
      "name": "evaluate_parallelism",
      "file_path": "src/poetry/artistic_core_evaluators.ml",
      "start_line": 130,
      "end_line": 176,
      "length": 47,
      "cyclomatic_complexity": 7,
      "cognitive_complexity": 11,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 0,
      "nesting_depth": 11
    },
    {
      "name": "evaluate_imagery",
      "file_path": "src/poetry/artistic_core_evaluators.ml",
      "start_line": 178,
      "end_line": 187,
      "length": 10,
      "cyclomatic_complexity": 2,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 4
    },
    {
      "name": "evaluate_rhythm",
      "file_path": "src/poetry/artistic_core_evaluators.ml",
      "start_line": 189,
      "end_line": 215,
      "length": 27,
      "cyclomatic_complexity": 5,
      "cognitive_complexity": 10,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 11
    },
    {
      "name": "evaluate_elegance",
      "file_path": "src/poetry/artistic_core_evaluators.ml",
      "start_line": 217,
      "end_line": 230,
      "length": 14,
      "cyclomatic_complexity": 3,
      "cognitive_complexity": 4,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 5
    },
    {
      "name": "determine_overall_grade",
      "file_path": "src/poetry/artistic_core_evaluators.ml",
      "start_line": 232,
      "end_line": 245,
      "length": 14,
      "cyclomatic_complexity": 4,
      "cognitive_complexity": 6,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 4
    },
    {
      "name": "comprehensive_artistic_evaluation",
      "file_path": "src/poetry/artistic_core_evaluators.ml",
      "start_line": 247,
      "end_line": 281,
      "length": 35,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 0,
      "nesting_depth": 7
    },
    {
      "name": "rhyme_cache",
      "file_path": "src/poetry/rhyme_detection.ml",
      "start_line": 16,
      "end_line": 23,
      "length": 8,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 1
    },
    {
      "name": "find_rhyme_info_cached",
      "file_path": "src/poetry/rhyme_detection.ml",
      "start_line": 25,
      "end_line": 32,
      "length": 8,
      "cyclomatic_complexity": 3,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 2
    },
    {
      "name": "find_rhyme_info",
      "file_path": "src/poetry/rhyme_detection.ml",
      "start_line": 34,
      "end_line": 37,
      "length": 4,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 1
    },
    {
      "name": "detect_rhyme_category",
      "file_path": "src/poetry/rhyme_detection.ml",
      "start_line": 44,
      "end_line": 46,
      "length": 3,
      "cyclomatic_complexity": 3,
      "cognitive_complexity": 2,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 1,
      "nesting_depth": 1
    },
    {
      "name": "detect_rhyme_category_by_string",
      "file_path": "src/poetry/rhyme_detection.ml",
      "start_line": 48,
      "end_line": 52,
      "length": 5,
      "cyclomatic_complexity": 3,
      "cognitive_complexity": 2,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 1,
      "nesting_depth": 1
    },
    {
      "name": "detect_rhyme_group",
      "file_path": "src/poetry/rhyme_detection.ml",
      "start_line": 54,
      "end_line": 56,
      "length": 3,
      "cyclomatic_complexity": 3,
      "cognitive_complexity": 2,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 1,
      "nesting_depth": 1
    },
    {
      "name": "detect_rhyme_group_by_string",
      "file_path": "src/poetry/rhyme_detection.ml",
      "start_line": 58,
      "end_line": 62,
      "length": 5,
      "cyclomatic_complexity": 3,
      "cognitive_complexity": 2,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 1,
      "nesting_depth": 1
    },
    {
      "name": "extract_rhyme_ending",
      "file_path": "src/poetry/rhyme_detection.ml",
      "start_line": 64,
      "end_line": 69,
      "length": 6,
      "cyclomatic_complexity": 5,
      "cognitive_complexity": 6,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 1,
      "nesting_depth": 3
    },
    {
      "name": "extract_rhyme_ending_string",
      "file_path": "src/poetry/rhyme_detection.ml",
      "start_line": 71,
      "end_line": 76,
      "length": 6,
      "cyclomatic_complexity": 5,
      "cognitive_complexity": 6,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 1,
      "nesting_depth": 3
    },
    {
      "name": "detect_verse_rhyme_info",
      "file_path": "src/poetry/rhyme_detection.ml",
      "start_line": 78,
      "end_line": 85,
      "length": 8,
      "cyclomatic_complexity": 7,
      "cognitive_complexity": 9,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 2,
      "nesting_depth": 2
    },
    {
      "name": "is_ping_sheng_verse",
      "file_path": "src/poetry/rhyme_detection.ml",
      "start_line": 87,
      "end_line": 92,
      "length": 6,
      "cyclomatic_complexity": 6,
      "cognitive_complexity": 7,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 2,
      "nesting_depth": 2
    },
    {
      "name": "is_ze_sheng_verse",
      "file_path": "src/poetry/rhyme_detection.ml",
      "start_line": 94,
      "end_line": 101,
      "length": 8,
      "cyclomatic_complexity": 10,
      "cognitive_complexity": 9,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 2,
      "nesting_depth": 2
    },
    {
      "name": "same_rhyme_group",
      "file_path": "src/poetry/rhyme_detection.ml",
      "start_line": 103,
      "end_line": 107,
      "length": 5,
      "cyclomatic_complexity": 4,
      "cognitive_complexity": 3,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 1,
      "nesting_depth": 1
    },
    {
      "name": "same_rhyme_group_string",
      "file_path": "src/poetry/rhyme_detection.ml",
      "start_line": 109,
      "end_line": 113,
      "length": 5,
      "cyclomatic_complexity": 4,
      "cognitive_complexity": 3,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 1,
      "nesting_depth": 1
    },
    {
      "name": "verses_rhyme",
      "file_path": "src/poetry/rhyme_detection.ml",
      "start_line": 115,
      "end_line": 119,
      "length": 5,
      "cyclomatic_complexity": 4,
      "cognitive_complexity": 3,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 1,
      "nesting_depth": 1
    },
    {
      "name": "analyze_verse_chars",
      "file_path": "src/poetry/rhyme_detection.ml",
      "start_line": 121,
      "end_line": 132,
      "length": 12,
      "cyclomatic_complexity": 5,
      "cognitive_complexity": 7,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 1,
      "nesting_depth": 4
    },
    {
      "name": "detect_verse_pattern",
      "file_path": "src/poetry/rhyme_detection.ml",
      "start_line": 134,
      "end_line": 147,
      "length": 14,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 1
    },
    {
      "name": "generate_verse_summary",
      "file_path": "src/poetry/rhyme_detection.ml",
      "start_line": 149,
      "end_line": 162,
      "length": 14,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 5
    },
    {
      "name": "ping_sheng_chars",
      "file_path": "src/poetry/tone_data.ml",
      "start_line": 27,
      "end_line": 29,
      "length": 3,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "shang_sheng_chars",
      "file_path": "src/poetry/tone_data.ml",
      "start_line": 31,
      "end_line": 33,
      "length": 3,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "qu_sheng_chars",
      "file_path": "src/poetry/tone_data.ml",
      "start_line": 35,
      "end_line": 37,
      "length": 3,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "ru_sheng_chars",
      "file_path": "src/poetry/tone_data.ml",
      "start_line": 39,
      "end_line": 45,
      "length": 7,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "calculate_tone_scores",
      "file_path": "src/poetry/evaluation_framework.ml",
      "start_line": 17,
      "end_line": 28,
      "length": 12,
      "cyclomatic_complexity": 4,
      "cognitive_complexity": 3,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 1,
      "nesting_depth": 1
    },
    {
      "name": "calculate_parallelism_scores",
      "file_path": "src/poetry/evaluation_framework.ml",
      "start_line": 30,
      "end_line": 42,
      "length": 13,
      "cyclomatic_complexity": 5,
      "cognitive_complexity": 5,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 1,
      "nesting_depth": 1
    },
    {
      "name": "calculate_overall_grade",
      "file_path": "src/poetry/evaluation_framework.ml",
      "start_line": 44,
      "end_line": 56,
      "length": 13,
      "cyclomatic_complexity": 4,
      "cognitive_complexity": 6,
      "is_recursive": false,
      "parameters_count": 7,
      "match_expressions_count": 0,
      "nesting_depth": 3
    },
    {
      "name": "create_evaluation_result",
      "file_path": "src/poetry/evaluation_framework.ml",
      "start_line": 58,
      "end_line": 72,
      "length": 15,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 8,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "create_error_evaluation",
      "file_path": "src/poetry/evaluation_framework.ml",
      "start_line": 74,
      "end_line": 85,
      "length": 12,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "collect_raw_data",
      "file_path": "src/poetry/consolidated_rhyme_data.ml",
      "start_line": 51,
      "end_line": 161,
      "length": 111,
      "cyclomatic_complexity": 3,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 2
    },
    {
      "name": "deduplicate_data",
      "file_path": "src/poetry/consolidated_rhyme_data.ml",
      "start_line": 163,
      "end_line": 177,
      "length": 15,
      "cyclomatic_complexity": 2,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 3
    },
    {
      "name": "build_index",
      "file_path": "src/poetry/consolidated_rhyme_data.ml",
      "start_line": 179,
      "end_line": 185,
      "length": 7,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 1
    },
    {
      "name": "calculate_statistics",
      "file_path": "src/poetry/consolidated_rhyme_data.ml",
      "start_line": 187,
      "end_line": 227,
      "length": 41,
      "cyclomatic_complexity": 3,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 7
    },
    {
      "name": "build_consolidated_database",
      "file_path": "src/poetry/consolidated_rhyme_data.ml",
      "start_line": 229,
      "end_line": 236,
      "length": 8,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 4
    },
    {
      "name": "find_rhyme_info",
      "file_path": "src/poetry/consolidated_rhyme_data.ml",
      "start_line": 243,
      "end_line": 246,
      "length": 4,
      "cyclomatic_complexity": 2,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 2
    },
    {
      "name": "get_all_rhyme_data",
      "file_path": "src/poetry/consolidated_rhyme_data.ml",
      "start_line": 248,
      "end_line": 251,
      "length": 4,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 1
    },
    {
      "name": "get_database_stats",
      "file_path": "src/poetry/consolidated_rhyme_data.ml",
      "start_line": 253,
      "end_line": 256,
      "length": 4,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 1
    },
    {
      "name": "get_entries_by_group",
      "file_path": "src/poetry/consolidated_rhyme_data.ml",
      "start_line": 258,
      "end_line": 261,
      "length": 4,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 1
    },
    {
      "name": "get_entries_by_category",
      "file_path": "src/poetry/consolidated_rhyme_data.ml",
      "start_line": 263,
      "end_line": 268,
      "length": 6,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 1
    },
    {
      "name": "print_database_info",
      "file_path": "src/poetry/consolidated_rhyme_data.ml",
      "start_line": 270,
      "end_line": 296,
      "length": 27,
      "cyclomatic_complexity": 14,
      "cognitive_complexity": 13,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 1,
      "nesting_depth": 2
    },
    {
      "name": "an_yun_ping_sheng",
      "file_path": "src/poetry/rhyme_data.ml",
      "start_line": 25,
      "end_line": 29,
      "length": 5,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "chong_rhyme_group",
      "file_path": "src/poetry/rhyme_data.ml",
      "start_line": 39,
      "end_line": 41,
      "length": 3,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "song_rhyme_group",
      "file_path": "src/poetry/rhyme_data.ml",
      "start_line": 43,
      "end_line": 45,
      "length": 3,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "su_rhyme_group",
      "file_path": "src/poetry/rhyme_data.ml",
      "start_line": 47,
      "end_line": 49,
      "length": 3,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "gu_rhyme_group",
      "file_path": "src/poetry/rhyme_data.ml",
      "start_line": 51,
      "end_line": 54,
      "length": 4,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "dou_rhyme_group",
      "file_path": "src/poetry/rhyme_data.ml",
      "start_line": 62,
      "end_line": 74,
      "length": 13,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "du_variant_group",
      "file_path": "src/poetry/rhyme_data.ml",
      "start_line": 76,
      "end_line": 84,
      "length": 9,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "si_yun_ping_sheng",
      "file_path": "src/poetry/rhyme_data.ml",
      "start_line": 90,
      "end_line": 107,
      "length": 18,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "tian_yun_all_chars",
      "file_path": "src/poetry/rhyme_data.ml",
      "start_line": 127,
      "end_line": 137,
      "length": 11,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "wang_yun_ze_sheng",
      "file_path": "src/poetry/rhyme_data.ml",
      "start_line": 144,
      "end_line": 147,
      "length": 4,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "qu_yun_ze_sheng",
      "file_path": "src/poetry/rhyme_data.ml",
      "start_line": 149,
      "end_line": 188,
      "length": 40,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "all_chars",
      "file_path": "src/poetry/rhyme_data.ml",
      "start_line": 198,
      "end_line": 202,
      "length": 5,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "rhyme_database",
      "file_path": "src/poetry/rhyme_data.ml",
      "start_line": 211,
      "end_line": 223,
      "length": 13,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "expanded_rhyme_database",
      "file_path": "src/poetry/rhyme_data.ml",
      "start_line": 225,
      "end_line": 256,
      "length": 32,
      "cyclomatic_complexity": 21,
      "cognitive_complexity": 20,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 2,
      "nesting_depth": 1
    },
    {
      "name": "is_in_expanded_rhyme_database",
      "file_path": "src/poetry/rhyme_data.ml",
      "start_line": 264,
      "end_line": 265,
      "length": 2,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "string_to_rhyme_category",
      "file_path": "src/poetry/rhyme_json_types.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "string_to_rhyme_group",
      "file_path": "src/poetry/rhyme_json_types.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "analyze_rhyme_pattern",
      "file_path": "src/poetry/rhyme_advanced_analysis.ml",
      "start_line": 19,
      "end_line": 41,
      "length": 23,
      "cyclomatic_complexity": 6,
      "cognitive_complexity": 5,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 1,
      "nesting_depth": 9
    },
    {
      "name": "get_rhyme_stats",
      "file_path": "src/poetry/rhyme_advanced_analysis.ml",
      "start_line": 43,
      "end_line": 73,
      "length": 31,
      "cyclomatic_complexity": 7,
      "cognitive_complexity": 4,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 1,
      "nesting_depth": 7
    },
    {
      "name": "analyze_poem_line_structure",
      "file_path": "src/poetry/rhyme_advanced_analysis.ml",
      "start_line": 75,
      "end_line": 90,
      "length": 16,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 4
    },
    {
      "name": "detect_poem_rhyme_scheme",
      "file_path": "src/poetry/rhyme_advanced_analysis.ml",
      "start_line": 92,
      "end_line": 118,
      "length": 27,
      "cyclomatic_complexity": 3,
      "cognitive_complexity": 2,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 3
    },
    {
      "name": "evaluate_rhyme_quality",
      "file_path": "src/poetry/rhyme_advanced_analysis.ml",
      "start_line": 120,
      "end_line": 152,
      "length": 33,
      "cyclomatic_complexity": 6,
      "cognitive_complexity": 6,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 9
    },
    {
      "name": "suggest_rhyming_chars",
      "file_path": "src/poetry/rhyme_advanced_analysis.ml",
      "start_line": 154,
      "end_line": 156,
      "length": 3,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 0,
      "nesting_depth": 1
    },
    {
      "name": "get_rhyme_data",
      "file_path": "src/poetry/rhyme_json_api.ml",
      "start_line": 133,
      "end_line": 136,
      "length": 4,
      "cyclomatic_complexity": 4,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 1
    },
    {
      "name": "fallback_rhyme_data",
      "file_path": "src/poetry/rhyme_json_fallback.ml",
      "start_line": 15,
      "end_line": 22,
      "length": 8,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "use_fallback_data",
      "file_path": "src/poetry/rhyme_json_fallback.ml",
      "start_line": 24,
      "end_line": 28,
      "length": 5,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 1
    },
    {
      "name": "comprehensive_poetry_analysis",
      "file_path": "src/poetry/poetry_artistic_core.ml",
      "start_line": 78,
      "end_line": 96,
      "length": 19,
      "cyclomatic_complexity": 5,
      "cognitive_complexity": 2,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 1,
      "nesting_depth": 2
    },
    {
      "name": "comparative_quality_analysis",
      "file_path": "src/poetry/poetry_artistic_core.ml",
      "start_line": 98,
      "end_line": 120,
      "length": 23,
      "cyclomatic_complexity": 9,
      "cognitive_complexity": 4,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 2,
      "nesting_depth": 1
    },
    {
      "name": "comprehensive_improvement_guidance",
      "file_path": "src/poetry/poetry_artistic_core.ml",
      "start_line": 122,
      "end_line": 132,
      "length": 11,
      "cyclomatic_complexity": 2,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 0,
      "nesting_depth": 6
    },
    {
      "name": "read_file_safely",
      "file_path": "src/poetry/poetry_data_loader.ml",
      "start_line": 19,
      "end_line": 33,
      "length": 15,
      "cyclomatic_complexity": 5,
      "cognitive_complexity": 2,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 2
    },
    {
      "name": "find_json_section",
      "file_path": "src/poetry/poetry_data_loader.ml",
      "start_line": 35,
      "end_line": 60,
      "length": 26,
      "cyclomatic_complexity": 11,
      "cognitive_complexity": 19,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 1,
      "nesting_depth": 8
    },
    {
      "name": "extract_words_from_category",
      "file_path": "src/poetry/poetry_data_loader.ml",
      "start_line": 62,
      "end_line": 67,
      "length": 6,
      "cyclomatic_complexity": 5,
      "cognitive_complexity": 4,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 1,
      "nesting_depth": 2
    },
    {
      "name": "supported_categories",
      "file_path": "src/poetry/poetry_data_loader.ml",
      "start_line": 69,
      "end_line": 91,
      "length": 23,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "load_words_from_json_file",
      "file_path": "src/poetry/poetry_data_loader.ml",
      "start_line": 93,
      "end_line": 105,
      "length": 13,
      "cyclomatic_complexity": 4,
      "cognitive_complexity": 3,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 1,
      "nesting_depth": 2
    },
    {
      "name": "imagery_keywords",
      "file_path": "src/poetry/poetry_data_loader.ml",
      "start_line": 107,
      "end_line": 179,
      "length": 73,
      "cyclomatic_complexity": 2,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 3
    },
    {
      "name": "elegant_words",
      "file_path": "src/poetry/poetry_data_loader.ml",
      "start_line": 181,
      "end_line": 219,
      "length": 39,
      "cyclomatic_complexity": 2,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 3
    },
    {
      "name": "rhyme_data_strings",
      "file_path": "src/poetry/poetry_rhyme_data.ml",
      "start_line": 14,
      "end_line": 114,
      "length": 101,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "string_to_char_data",
      "file_path": "src/poetry/poetry_rhyme_data.ml",
      "start_line": 116,
      "end_line": 122,
      "length": 7,
      "cyclomatic_complexity": 3,
      "cognitive_complexity": 2,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 1
    },
    {
      "name": "initialize_data",
      "file_path": "src/poetry/poetry_rhyme_data.ml",
      "start_line": 134,
      "end_line": 141,
      "length": 8,
      "cyclomatic_complexity": 3,
      "cognitive_complexity": 3,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 2
    },
    {
      "name": "get_all_rhyme_data",
      "file_path": "src/poetry/poetry_rhyme_data.ml",
      "start_line": 143,
      "end_line": 145,
      "length": 3,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "get_rhyme_by_category",
      "file_path": "src/poetry/poetry_rhyme_data.ml",
      "start_line": 147,
      "end_line": 152,
      "length": 6,
      "cyclomatic_complexity": 2,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 1
    },
    {
      "name": "get_rhyme_by_group",
      "file_path": "src/poetry/poetry_rhyme_data.ml",
      "start_line": 154,
      "end_line": 159,
      "length": 6,
      "cyclomatic_complexity": 2,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 1
    },
    {
      "name": "lookup_char_info",
      "file_path": "src/poetry/poetry_rhyme_data.ml",
      "start_line": 161,
      "end_line": 163,
      "length": 3,
      "cyclomatic_complexity": 2,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 1
    },
    {
      "name": "batch_lookup",
      "file_path": "src/poetry/poetry_rhyme_data.ml",
      "start_line": 165,
      "end_line": 175,
      "length": 11,
      "cyclomatic_complexity": 5,
      "cognitive_complexity": 4,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 1,
      "nesting_depth": 1
    },
    {
      "name": "list_all_rhyme_groups",
      "file_path": "src/poetry/poetry_rhyme_data.ml",
      "start_line": 180,
      "end_line": 194,
      "length": 15,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "get_ze_sheng_chars",
      "file_path": "src/poetry/poetry_rhyme_data.ml",
      "start_line": 202,
      "end_line": 209,
      "length": 8,
      "cyclomatic_complexity": 5,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "get_category_distribution",
      "file_path": "src/poetry/poetry_rhyme_data.ml",
      "start_line": 211,
      "end_line": 219,
      "length": 9,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 2
    },
    {
      "name": "reload_data",
      "file_path": "src/poetry/poetry_rhyme_data.ml",
      "start_line": 221,
      "end_line": 223,
      "length": 3,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "parse_single_entry",
      "file_path": "src/poetry/poetry_rhyme_data.ml",
      "start_line": 252,
      "end_line": 262,
      "length": 11,
      "cyclomatic_complexity": 5,
      "cognitive_complexity": 4,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 7
    },
    {
      "name": "parse_rhyme_data",
      "file_path": "src/poetry/poetry_rhyme_data.ml",
      "start_line": 264,
      "end_line": 274,
      "length": 11,
      "cyclomatic_complexity": 4,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 3
    },
    {
      "name": "export_to_json",
      "file_path": "src/poetry/poetry_rhyme_data.ml",
      "start_line": 276,
      "end_line": 288,
      "length": 13,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "clear_cache",
      "file_path": "src/poetry/poetry_rhyme_data.ml",
      "start_line": 298,
      "end_line": 301,
      "length": 4,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "get_cache_stats",
      "file_path": "src/poetry/poetry_rhyme_data.ml",
      "start_line": 303,
      "end_line": 310,
      "length": 8,
      "cyclomatic_complexity": 2,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 3
    },
    {
      "name": "validate_data_integrity",
      "file_path": "src/poetry/poetry_rhyme_data.ml",
      "start_line": 312,
      "end_line": 330,
      "length": 19,
      "cyclomatic_complexity": 6,
      "cognitive_complexity": 6,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 5
    },
    {
      "name": "get_data_statistics",
      "file_path": "src/poetry/poetry_rhyme_data.ml",
      "start_line": 332,
      "end_line": 340,
      "length": 9,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 5
    },
    {
      "name": "find_data_conflicts",
      "file_path": "src/poetry/poetry_rhyme_data.ml",
      "start_line": 342,
      "end_line": 349,
      "length": 8,
      "cyclomatic_complexity": 2,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 1
    },
    {
      "name": "load_from_file",
      "file_path": "src/poetry/poetry_rhyme_data.ml",
      "start_line": 351,
      "end_line": 364,
      "length": 14,
      "cyclomatic_complexity": 5,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 3
    },
    {
      "name": "save_to_file",
      "file_path": "src/poetry/poetry_rhyme_data.ml",
      "start_line": 366,
      "end_line": 373,
      "length": 8,
      "cyclomatic_complexity": 3,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 3
    },
    {
      "name": "merge_external_data",
      "file_path": "src/poetry/poetry_rhyme_data.ml",
      "start_line": 375,
      "end_line": 391,
      "length": 17,
      "cyclomatic_complexity": 3,
      "cognitive_complexity": 2,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 3
    },
    {
      "name": "is_cache_valid",
      "file_path": "src/poetry/rhyme_json_cache.ml",
      "start_line": 27,
      "end_line": 33,
      "length": 7,
      "cyclomatic_complexity": 4,
      "cognitive_complexity": 3,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 1,
      "nesting_depth": 2
    },
    {
      "name": "get_cached_data",
      "file_path": "src/poetry/rhyme_json_cache.ml",
      "start_line": 35,
      "end_line": 37,
      "length": 3,
      "cyclomatic_complexity": 3,
      "cognitive_complexity": 2,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 1,
      "nesting_depth": 1
    },
    {
      "name": "set_cached_data",
      "file_path": "src/poetry/rhyme_json_cache.ml",
      "start_line": 39,
      "end_line": 42,
      "length": 4,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "clear_cache",
      "file_path": "src/poetry/rhyme_json_cache.ml",
      "start_line": 44,
      "end_line": 47,
      "length": 4,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "refresh_cache",
      "file_path": "src/poetry/rhyme_json_cache.ml",
      "start_line": 49,
      "end_line": 51,
      "length": 3,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "suggest_rhyming_chars",
      "file_path": "src/poetry/unified_rhyme_api.ml",
      "start_line": 67,
      "end_line": 71,
      "length": 5,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "get_all_rhyme_groups",
      "file_path": "src/poetry/unified_rhyme_api.ml",
      "start_line": 79,
      "end_line": 81,
      "length": 3,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "preload_rhyme_data",
      "file_path": "src/poetry/unified_rhyme_api.ml",
      "start_line": 94,
      "end_line": 99,
      "length": 6,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "batch_validate_rhyme_consistency",
      "file_path": "src/poetry/unified_rhyme_api.ml",
      "start_line": 104,
      "end_line": 108,
      "length": 5,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "get_rhyme_analysis_report",
      "file_path": "src/poetry/unified_rhyme_api.ml",
      "start_line": 110,
      "end_line": 153,
      "length": 44,
      "cyclomatic_complexity": 20,
      "cognitive_complexity": 19,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 2,
      "nesting_depth": 3
    },
    {
      "name": "validate_rhyme_data_integrity",
      "file_path": "src/poetry/unified_rhyme_api.ml",
      "start_line": 155,
      "end_line": 170,
      "length": 16,
      "cyclomatic_complexity": 6,
      "cognitive_complexity": 12,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 1,
      "nesting_depth": 5
    },
    {
      "name": "safe_find_rhyme_info",
      "file_path": "src/poetry/unified_rhyme_api.ml",
      "start_line": 172,
      "end_line": 180,
      "length": 9,
      "cyclomatic_complexity": 3,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 1
    },
    {
      "name": "initialize",
      "file_path": "src/poetry/unified_rhyme_api.ml",
      "start_line": 194,
      "end_line": 198,
      "length": 5,
      "cyclomatic_complexity": 2,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 2
    },
    {
      "name": "function_param_mismatch",
      "file_path": "src/logging/log_messages.ml",
      "start_line": 10,
      "end_line": 11,
      "length": 2,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 3,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "compilation_complete",
      "file_path": "src/logging/log_messages.ml",
      "start_line": 18,
      "end_line": 20,
      "length": 3,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "analysis_stats",
      "file_path": "src/logging/log_messages.ml",
      "start_line": 22,
      "end_line": 30,
      "length": 9,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "function_call",
      "file_path": "src/logging/log_messages.ml",
      "start_line": 34,
      "end_line": 35,
      "length": 2,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "function_arity_mismatch",
      "file_path": "src/logging/log_messages.ml",
      "start_line": 44,
      "end_line": 45,
      "length": 2,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 3,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "module_member_not_found",
      "file_path": "src/logging/log_messages.ml",
      "start_line": 50,
      "end_line": 53,
      "length": 4,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "compilation_complete",
      "file_path": "src/logging/log_messages.ml",
      "start_line": 58,
      "end_line": 59,
      "length": 2,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "analysis_stats",
      "file_path": "src/logging/log_messages.ml",
      "start_line": 61,
      "end_line": 64,
      "length": 4,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "global_config",
      "file_path": "src/logging/log_core.ml",
      "start_line": 28,
      "end_line": 39,
      "length": 12,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "get_timestamp",
      "file_path": "src/logging/log_core.ml",
      "start_line": 85,
      "end_line": 108,
      "length": 24,
      "cyclomatic_complexity": 2,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 5
    },
    {
      "name": "format_message",
      "file_path": "src/logging/log_core.ml",
      "start_line": 113,
      "end_line": 123,
      "length": 11,
      "cyclomatic_complexity": 6,
      "cognitive_complexity": 10,
      "is_recursive": false,
      "parameters_count": 3,
      "match_expressions_count": 0,
      "nesting_depth": 6
    },
    {
      "name": "log_internal",
      "file_path": "src/logging/log_core.ml",
      "start_line": 125,
      "end_line": 138,
      "length": 14,
      "cyclomatic_complexity": 6,
      "cognitive_complexity": 9,
      "is_recursive": false,
      "parameters_count": 3,
      "match_expressions_count": 1,
      "nesting_depth": 3
    },
    {
      "name": "create_module_logger",
      "file_path": "src/logging/log_core.ml",
      "start_line": 182,
      "end_line": 188,
      "length": 7,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 4
    },
    {
      "name": "time_operation",
      "file_path": "src/logging/log_core.ml",
      "start_line": 195,
      "end_line": 214,
      "length": 20,
      "cyclomatic_complexity": 3,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 3,
      "match_expressions_count": 0,
      "nesting_depth": 6
    },
    {
      "name": "init_from_env",
      "file_path": "src/logging/log_core.ml",
      "start_line": 216,
      "end_line": 249,
      "length": 34,
      "cyclomatic_complexity": 17,
      "cognitive_complexity": 14,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 1,
      "nesting_depth": 5
    },
    {
      "name": "init",
      "file_path": "src/logging/log_core.ml",
      "start_line": 251,
      "end_line": 256,
      "length": 6,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "enable_debug",
      "file_path": "src/logging/log_core.ml",
      "start_line": 258,
      "end_line": 262,
      "length": 5,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "enable_quiet",
      "file_path": "src/logging/log_core.ml",
      "start_line": 264,
      "end_line": 267,
      "length": 4,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "enable_verbose",
      "file_path": "src/logging/log_core.ml",
      "start_line": 269,
      "end_line": 273,
      "length": 5,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "success",
      "file_path": "src/logging/log_output.ml",
      "start_line": 6,
      "end_line": 9,
      "length": 4,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "warning",
      "file_path": "src/logging/log_output.ml",
      "start_line": 11,
      "end_line": 14,
      "length": 4,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "error",
      "file_path": "src/logging/log_output.ml",
      "start_line": 16,
      "end_line": 19,
      "length": 4,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "info",
      "file_path": "src/logging/log_output.ml",
      "start_line": 21,
      "end_line": 24,
      "length": 4,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "progress",
      "file_path": "src/logging/log_output.ml",
      "start_line": 26,
      "end_line": 29,
      "length": 4,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "print_user_output",
      "file_path": "src/logging/log_output.ml",
      "start_line": 31,
      "end_line": 34,
      "length": 4,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "print_compiler_message",
      "file_path": "src/logging/log_output.ml",
      "start_line": 36,
      "end_line": 40,
      "length": 5,
      "cyclomatic_complexity": 2,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 1
    },
    {
      "name": "print_debug_info",
      "file_path": "src/logging/log_output.ml",
      "start_line": 42,
      "end_line": 46,
      "length": 5,
      "cyclomatic_complexity": 2,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 1
    },
    {
      "name": "print_user_prompt",
      "file_path": "src/logging/log_output.ml",
      "start_line": 48,
      "end_line": 50,
      "length": 3,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "print_string",
      "file_path": "src/logging/log_legacy.ml",
      "start_line": 17,
      "end_line": 21,
      "length": 5,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "is_valid_config_line",
      "file_path": "src/config/config_loader.ml",
      "start_line": 4,
      "end_line": 7,
      "length": 4,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 1
    },
    {
      "name": "remove_quotes",
      "file_path": "src/config/config_loader.ml",
      "start_line": 9,
      "end_line": 13,
      "length": 5,
      "cyclomatic_complexity": 2,
      "cognitive_complexity": 3,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 2
    },
    {
      "name": "remove_trailing_comma",
      "file_path": "src/config/config_loader.ml",
      "start_line": 15,
      "end_line": 18,
      "length": 4,
      "cyclomatic_complexity": 2,
      "cognitive_complexity": 2,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 2
    },
    {
      "name": "clean_json_value",
      "file_path": "src/config/config_loader.ml",
      "start_line": 20,
      "end_line": 150,
      "length": 131,
      "cyclomatic_complexity": 37,
      "cognitive_complexity": 157,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 3,
      "nesting_depth": 28
    },
    {
      "name": "set_compiler_config",
      "file_path": "src/config/unified_config.ml",
      "start_line": 23,
      "end_line": 25,
      "length": 3,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "set_runtime_config",
      "file_path": "src/config/unified_config.ml",
      "start_line": 27,
      "end_line": 30,
      "length": 4,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "parse_positive_int_env_var",
      "file_path": "src/config/unified_config.ml",
      "start_line": 34,
      "end_line": 38,
      "length": 5,
      "cyclomatic_complexity": 4,
      "cognitive_complexity": 2,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 3
    },
    {
      "name": "parse_positive_float_env_var",
      "file_path": "src/config/unified_config.ml",
      "start_line": 40,
      "end_line": 44,
      "length": 5,
      "cyclomatic_complexity": 4,
      "cognitive_complexity": 2,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 3
    },
    {
      "name": "parse_int_range_env_var",
      "file_path": "src/config/unified_config.ml",
      "start_line": 48,
      "end_line": 52,
      "length": 5,
      "cyclomatic_complexity": 4,
      "cognitive_complexity": 3,
      "is_recursive": false,
      "parameters_count": 3,
      "match_expressions_count": 0,
      "nesting_depth": 3
    },
    {
      "name": "parse_enum_env_var",
      "file_path": "src/config/unified_config.ml",
      "start_line": 54,
      "end_line": 65,
      "length": 12,
      "cyclomatic_complexity": 2,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 0,
      "nesting_depth": 2
    },
    {
      "name": "load_from_env",
      "file_path": "src/config/unified_config.ml",
      "start_line": 67,
      "end_line": 70,
      "length": 4,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "load_all_from_env",
      "file_path": "src/config/unified_config.ml",
      "start_line": 72,
      "end_line": 78,
      "length": 7,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "validate_compiler_config",
      "file_path": "src/config/unified_config.ml",
      "start_line": 80,
      "end_line": 84,
      "length": 5,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 4,
      "is_recursive": false,
      "parameters_count": 3,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "validate_runtime_config",
      "file_path": "src/config/unified_config.ml",
      "start_line": 86,
      "end_line": 88,
      "length": 3,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 3,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "reset_to_defaults",
      "file_path": "src/config/unified_config.ml",
      "start_line": 90,
      "end_line": 94,
      "length": 5,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "default",
      "file_path": "src/config/runtime_config.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "current",
      "file_path": "src/config/runtime_config.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "get",
      "file_path": "src/config/runtime_config.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "set",
      "file_path": "src/config/runtime_config.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "update_debug_mode",
      "file_path": "src/config/runtime_config.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "update_verbose_logging",
      "file_path": "src/config/runtime_config.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "update_log_level",
      "file_path": "src/config/runtime_config.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "update_max_error_count",
      "file_path": "src/config/runtime_config.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "update_colored_output",
      "file_path": "src/config/runtime_config.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "parse_boolean_env_var",
      "file_path": "src/config/runtime_config.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "parse_positive_int_env_var",
      "file_path": "src/config/runtime_config.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "parse_enum_env_var",
      "file_path": "src/config/runtime_config.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "env_var_mappings",
      "file_path": "src/config/runtime_config.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "load_from_env",
      "file_path": "src/config/runtime_config.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "parse_boolean",
      "file_path": "src/config/env_var_config.ml",
      "start_line": 32,
      "end_line": 41,
      "length": 10,
      "cyclomatic_complexity": 10,
      "cognitive_complexity": 6,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 1,
      "nesting_depth": 4
    },
    {
      "name": "parse_positive_float",
      "file_path": "src/config/env_var_config.ml",
      "start_line": 43,
      "end_line": 47,
      "length": 5,
      "cyclomatic_complexity": 4,
      "cognitive_complexity": 2,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 3
    },
    {
      "name": "parse_non_empty_string",
      "file_path": "src/config/env_var_config.ml",
      "start_line": 49,
      "end_line": 51,
      "length": 3,
      "cyclomatic_complexity": 2,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 2
    },
    {
      "name": "parse_int_range",
      "file_path": "src/config/env_var_config.ml",
      "start_line": 53,
      "end_line": 57,
      "length": 5,
      "cyclomatic_complexity": 3,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 3,
      "match_expressions_count": 0,
      "nesting_depth": 2
    },
    {
      "name": "parse_enum",
      "file_path": "src/config/env_var_config.ml",
      "start_line": 59,
      "end_line": 63,
      "length": 5,
      "cyclomatic_complexity": 2,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 0,
      "nesting_depth": 2
    },
    {
      "name": "create_spec",
      "file_path": "src/config/env_var_config.ml",
      "start_line": 66,
      "end_line": 68,
      "length": 3,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 5,
      "match_expressions_count": 0,
      "nesting_depth": 1
    },
    {
      "name": "config_definitions",
      "file_path": "src/config/env_var_config.ml",
      "start_line": 75,
      "end_line": 91,
      "length": 17,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "generate_config_specs",
      "file_path": "src/config/env_var_config.ml",
      "start_line": 93,
      "end_line": 100,
      "length": 8,
      "cyclomatic_complexity": 4,
      "cognitive_complexity": 3,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 1,
      "nesting_depth": 1
    },
    {
      "name": "apply_runtime_config",
      "file_path": "src/config/env_var_config.ml",
      "start_line": 103,
      "end_line": 144,
      "length": 42,
      "cyclomatic_complexity": 16,
      "cognitive_complexity": 23,
      "is_recursive": false,
      "parameters_count": 3,
      "match_expressions_count": 2,
      "nesting_depth": 13
    },
    {
      "name": "create_env_var_config",
      "file_path": "src/config/env_var_config.ml",
      "start_line": 146,
      "end_line": 156,
      "length": 11,
      "cyclomatic_complexity": 6,
      "cognitive_complexity": 6,
      "is_recursive": false,
      "parameters_count": 3,
      "match_expressions_count": 1,
      "nesting_depth": 2
    },
    {
      "name": "process_all_env_vars",
      "file_path": "src/config/env_var_config.ml",
      "start_line": 158,
      "end_line": 167,
      "length": 10,
      "cyclomatic_complexity": 3,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 0,
      "nesting_depth": 4
    },
    {
      "name": "process_env_var",
      "file_path": "src/config/env_var_config.ml",
      "start_line": 169,
      "end_line": 173,
      "length": 5,
      "cyclomatic_complexity": 3,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 2
    },
    {
      "name": "get_all_env_var_names",
      "file_path": "src/config/env_var_config.ml",
      "start_line": 175,
      "end_line": 177,
      "length": 3,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 0,
      "nesting_depth": 1
    },
    {
      "name": "get_config_description",
      "file_path": "src/config/env_var_config.ml",
      "start_line": 179,
      "end_line": 184,
      "length": 6,
      "cyclomatic_complexity": 3,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 3,
      "match_expressions_count": 0,
      "nesting_depth": 3
    },
    {
      "name": "print_env_var_help",
      "file_path": "src/config/env_var_config.ml",
      "start_line": 186,
      "end_line": 189,
      "length": 4,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 0,
      "nesting_depth": 1
    },
    {
      "name": "default",
      "file_path": "src/config/compiler_config.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "current",
      "file_path": "src/config/compiler_config.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "get",
      "file_path": "src/config/compiler_config.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "set",
      "file_path": "src/config/compiler_config.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "update_buffer_size",
      "file_path": "src/config/compiler_config.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "update_compilation_timeout",
      "file_path": "src/config/compiler_config.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "update_output_directory",
      "file_path": "src/config/compiler_config.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "update_temp_directory",
      "file_path": "src/config/compiler_config.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "update_c_compiler",
      "file_path": "src/config/compiler_config.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "update_optimization_level",
      "file_path": "src/config/compiler_config.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "parse_positive_int_env_var",
      "file_path": "src/config/compiler_config.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "parse_positive_float_env_var",
      "file_path": "src/config/compiler_config.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "parse_non_empty_string_env_var",
      "file_path": "src/config/compiler_config.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "parse_int_range_env_var",
      "file_path": "src/config/compiler_config.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "env_var_mappings",
      "file_path": "src/config/compiler_config.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "load_from_env",
      "file_path": "src/config/compiler_config.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "performance_stats_header",
      "file_path": "src/constants/message_constants.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "infer_calls_format",
      "file_path": "src/constants/message_constants.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "unify_calls_format",
      "file_path": "src/constants/message_constants.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "subst_apps_format",
      "file_path": "src/constants/message_constants.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "cache_hits_format",
      "file_path": "src/constants/message_constants.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "cache_misses_format",
      "file_path": "src/constants/message_constants.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "hit_rate_format",
      "file_path": "src/constants/message_constants.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "cache_size_format",
      "file_path": "src/constants/message_constants.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "debug_prefix",
      "file_path": "src/constants/message_constants.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "info_prefix",
      "file_path": "src/constants/message_constants.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "warning_prefix",
      "file_path": "src/constants/message_constants.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "error_prefix",
      "file_path": "src/constants/message_constants.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "fatal_prefix",
      "file_path": "src/constants/message_constants.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "compiling_file",
      "file_path": "src/constants/message_constants.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "compilation_complete",
      "file_path": "src/constants/message_constants.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "compilation_failed",
      "file_path": "src/constants/message_constants.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "parsing_started",
      "file_path": "src/constants/message_constants.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "parsing_complete",
      "file_path": "src/constants/message_constants.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "type_checking_started",
      "file_path": "src/constants/message_constants.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "type_checking_complete",
      "file_path": "src/constants/message_constants.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "ancient_list_syntax_error",
      "file_path": "src/constants/error_constants.ml",
      "start_line": 52,
      "end_line": 60,
      "length": 9,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "zero",
      "file_path": "src/constants/core_constants.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "one",
      "file_path": "src/constants/core_constants.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "two",
      "file_path": "src/constants/core_constants.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "three",
      "file_path": "src/constants/core_constants.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "four",
      "file_path": "src/constants/core_constants.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "five",
      "file_path": "src/constants/core_constants.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "ten",
      "file_path": "src/constants/core_constants.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "hundred",
      "file_path": "src/constants/core_constants.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "thousand",
      "file_path": "src/constants/core_constants.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "zero_float",
      "file_path": "src/constants/core_constants.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "one_float",
      "file_path": "src/constants/core_constants.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "half_float",
      "file_path": "src/constants/core_constants.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "pi",
      "file_path": "src/constants/core_constants.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "full_percentage",
      "file_path": "src/constants/core_constants.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "half_percentage",
      "file_path": "src/constants/core_constants.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "quarter_percentage",
      "file_path": "src/constants/core_constants.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "percentage_multiplier",
      "file_path": "src/constants/core_constants.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "type_complexity_basic",
      "file_path": "src/constants/core_constants.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "type_complexity_composite",
      "file_path": "src/constants/core_constants.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "default_buffer_size",
      "file_path": "src/constants/core_constants.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "large_buffer_size",
      "file_path": "src/constants/core_constants.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "report_buffer_size",
      "file_path": "src/constants/core_constants.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "utf8_char_buffer_size",
      "file_path": "src/constants/core_constants.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "utf8_char_max_bytes",
      "file_path": "src/constants/core_constants.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "file_chunk_size",
      "file_path": "src/constants/core_constants.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "max_file_size",
      "file_path": "src/constants/core_constants.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "default_hash_table_size",
      "file_path": "src/constants/core_constants.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "large_hash_table_size",
      "file_path": "src/constants/core_constants.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "default_cache_size",
      "file_path": "src/constants/core_constants.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "large_cache_size",
      "file_path": "src/constants/core_constants.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "max_recursion_depth",
      "file_path": "src/constants/core_constants.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "default_timeout_ms",
      "file_path": "src/constants/core_constants.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "string_slice_length",
      "file_path": "src/constants/core_constants.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "max_verse_length",
      "file_path": "src/constants/core_constants.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "max_poem_lines",
      "file_path": "src/constants/core_constants.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "default_rhyme_scheme_length",
      "file_path": "src/constants/core_constants.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "small_test_number",
      "file_path": "src/constants/core_constants.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "large_test_number",
      "file_path": "src/constants/core_constants.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "factorial_test_input",
      "file_path": "src/constants/core_constants.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "factorial_expected_result",
      "file_path": "src/constants/core_constants.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "sum_1_to_100",
      "file_path": "src/constants/core_constants.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "default_buffer_size",
      "file_path": "src/constants/core_constants.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "large_buffer_size",
      "file_path": "src/constants/core_constants.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "report_buffer_size",
      "file_path": "src/constants/core_constants.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "utf8_char_buffer_size",
      "file_path": "src/constants/core_constants.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "zero",
      "file_path": "src/constants/core_constants.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "one",
      "file_path": "src/constants/core_constants.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "two",
      "file_path": "src/constants/core_constants.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "three",
      "file_path": "src/constants/core_constants.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "four",
      "file_path": "src/constants/core_constants.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "five",
      "file_path": "src/constants/core_constants.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "ten",
      "file_path": "src/constants/core_constants.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "hundred",
      "file_path": "src/constants/core_constants.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "thousand",
      "file_path": "src/constants/core_constants.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "zero_float",
      "file_path": "src/constants/core_constants.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "one_float",
      "file_path": "src/constants/core_constants.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "half_float",
      "file_path": "src/constants/core_constants.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "pi",
      "file_path": "src/constants/core_constants.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "full_percentage",
      "file_path": "src/constants/core_constants.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "half_percentage",
      "file_path": "src/constants/core_constants.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "quarter_percentage",
      "file_path": "src/constants/core_constants.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "type_complexity_basic",
      "file_path": "src/constants/core_constants.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "type_complexity_composite",
      "file_path": "src/constants/core_constants.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "default_hash_table_size",
      "file_path": "src/constants/core_constants.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "large_hash_table_size",
      "file_path": "src/constants/core_constants.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "default_cache_size",
      "file_path": "src/constants/core_constants.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "large_cache_size",
      "file_path": "src/constants/core_constants.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "utf8_char_max_bytes",
      "file_path": "src/constants/core_constants.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "string_slice_length",
      "file_path": "src/constants/core_constants.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "percentage_multiplier",
      "file_path": "src/constants/core_constants.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "max_recursion_depth",
      "file_path": "src/constants/core_constants.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "default_timeout_ms",
      "file_path": "src/constants/core_constants.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "file_chunk_size",
      "file_path": "src/constants/core_constants.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "max_file_size",
      "file_path": "src/constants/core_constants.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "max_verse_length",
      "file_path": "src/constants/core_constants.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "max_poem_lines",
      "file_path": "src/constants/core_constants.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "default_rhyme_scheme_length",
      "file_path": "src/constants/core_constants.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "small_test_number",
      "file_path": "src/constants/core_constants.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "large_test_number",
      "file_path": "src/constants/core_constants.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "factorial_test_input",
      "file_path": "src/constants/core_constants.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "factorial_expected_result",
      "file_path": "src/constants/core_constants.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "sum_1_to_100",
      "file_path": "src/constants/core_constants.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "default_c_output",
      "file_path": "src/constants/compiler_constants.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "temp_file_prefix",
      "file_path": "src/constants/compiler_constants.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "default_position",
      "file_path": "src/constants/compiler_constants.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "default_output_directory",
      "file_path": "src/constants/compiler_constants.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "default_temp_directory",
      "file_path": "src/constants/compiler_constants.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "default_runtime_directory",
      "file_path": "src/constants/compiler_constants.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "add",
      "file_path": "src/constants/runtime_constants.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "subtract",
      "file_path": "src/constants/runtime_constants.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "multiply",
      "file_path": "src/constants/runtime_constants.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "divide",
      "file_path": "src/constants/runtime_constants.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "modulo",
      "file_path": "src/constants/runtime_constants.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "equal",
      "file_path": "src/constants/runtime_constants.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "not_equal",
      "file_path": "src/constants/runtime_constants.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "less_than",
      "file_path": "src/constants/runtime_constants.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "greater_than",
      "file_path": "src/constants/runtime_constants.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "less_equal",
      "file_path": "src/constants/runtime_constants.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "greater_equal",
      "file_path": "src/constants/runtime_constants.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "logical_and",
      "file_path": "src/constants/runtime_constants.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "logical_or",
      "file_path": "src/constants/runtime_constants.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "concat",
      "file_path": "src/constants/runtime_constants.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "logical_not",
      "file_path": "src/constants/runtime_constants.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "int_zero",
      "file_path": "src/constants/runtime_constants.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "ref_create",
      "file_path": "src/constants/runtime_constants.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "deref",
      "file_path": "src/constants/runtime_constants.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "assign",
      "file_path": "src/constants/runtime_constants.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "c_extension",
      "file_path": "src/constants/runtime_constants.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "ly_extension",
      "file_path": "src/constants/runtime_constants.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "temp_extension",
      "file_path": "src/constants/runtime_constants.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "red",
      "file_path": "src/constants/color_constants.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "green",
      "file_path": "src/constants/color_constants.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "yellow",
      "file_path": "src/constants/color_constants.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "blue",
      "file_path": "src/constants/color_constants.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "magenta",
      "file_path": "src/constants/color_constants.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "cyan",
      "file_path": "src/constants/color_constants.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "white",
      "file_path": "src/constants/color_constants.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "bright_red",
      "file_path": "src/constants/color_constants.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "bright_green",
      "file_path": "src/constants/color_constants.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "bright_yellow",
      "file_path": "src/constants/color_constants.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "bright_blue",
      "file_path": "src/constants/color_constants.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "bright_magenta",
      "file_path": "src/constants/color_constants.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "bright_cyan",
      "file_path": "src/constants/color_constants.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "bright_white",
      "file_path": "src/constants/color_constants.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "bold",
      "file_path": "src/constants/color_constants.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "dim",
      "file_path": "src/constants/color_constants.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "italic",
      "file_path": "src/constants/color_constants.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "underline",
      "file_path": "src/constants/color_constants.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "blink",
      "file_path": "src/constants/color_constants.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "reverse",
      "file_path": "src/constants/color_constants.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "strikethrough",
      "file_path": "src/constants/color_constants.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "reset",
      "file_path": "src/constants/color_constants.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "with_color",
      "file_path": "src/constants/color_constants.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "red_text",
      "file_path": "src/constants/color_constants.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "green_text",
      "file_path": "src/constants/color_constants.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "yellow_text",
      "file_path": "src/constants/color_constants.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "blue_text",
      "file_path": "src/constants/color_constants.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "cyan_text",
      "file_path": "src/constants/color_constants.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "bold_text",
      "file_path": "src/constants/color_constants.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "bright_red_text",
      "file_path": "src/constants/color_constants.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "debug_color",
      "file_path": "src/constants/color_constants.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "info_color",
      "file_path": "src/constants/color_constants.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "warn_color",
      "file_path": "src/constants/color_constants.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "error_color",
      "file_path": "src/constants/color_constants.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "fatal_color",
      "file_path": "src/constants/color_constants.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "confidence_multiplier",
      "file_path": "src/constants/metrics_constants.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "full_confidence",
      "file_path": "src/constants/metrics_constants.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "zero_confidence",
      "file_path": "src/constants/metrics_constants.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "default_confidence_threshold",
      "file_path": "src/constants/metrics_constants.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "zero_division_fallback",
      "file_path": "src/constants/metrics_constants.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "percentage_multiplier",
      "file_path": "src/constants/metrics_constants.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "precision_decimal_places",
      "file_path": "src/constants/metrics_constants.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "get_registry_stats",
      "file_path": "src/lexer/token_mapping/token_registry_stats.ml",
      "start_line": 6,
      "end_line": 32,
      "length": 27,
      "cyclomatic_complexity": 2,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 2
    },
    {
      "name": "validate_registry",
      "file_path": "src/lexer/token_mapping/token_registry_stats.ml",
      "start_line": 34,
      "end_line": 48,
      "length": 15,
      "cyclomatic_complexity": 4,
      "cognitive_complexity": 3,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 1
    },
    {
      "name": "register_basic_keywords",
      "file_path": "src/lexer/token_mapping/token_registry_keywords.ml",
      "start_line": 7,
      "end_line": 38,
      "length": 32,
      "cyclomatic_complexity": 3,
      "cognitive_complexity": 3,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 2
    },
    {
      "name": "register_type_keywords",
      "file_path": "src/lexer/token_mapping/token_registry_keywords.ml",
      "start_line": 40,
      "end_line": 65,
      "length": 26,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "keyword_mappers",
      "file_path": "src/lexer/token_mapping/basic_token_mapping.ml",
      "start_line": 181,
      "end_line": 194,
      "length": 14,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "try_mappers",
      "file_path": "src/lexer/token_mapping/basic_token_mapping.ml",
      "start_line": 196,
      "end_line": 203,
      "length": 8,
      "cyclomatic_complexity": 4,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 0,
      "nesting_depth": 1
    },
    {
      "name": "map_basic_variant",
      "file_path": "src/lexer/token_mapping/basic_token_mapping.ml",
      "start_line": 205,
      "end_line": 209,
      "length": 5,
      "cyclomatic_complexity": 4,
      "cognitive_complexity": 3,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 1,
      "nesting_depth": 1
    },
    {
      "name": "generate_token_code_by_category",
      "file_path": "src/lexer/token_mapping/token_registry_converter.ml",
      "start_line": 11,
      "end_line": 25,
      "length": 15,
      "cyclomatic_complexity": 14,
      "cognitive_complexity": 22,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 1,
      "nesting_depth": 5
    },
    {
      "name": "generate_token_converter",
      "file_path": "src/lexer/token_mapping/token_registry_converter.ml",
      "start_line": 27,
      "end_line": 54,
      "length": 28,
      "cyclomatic_complexity": 3,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 1
    },
    {
      "name": "token_mappings",
      "file_path": "src/lexer/token_mapping/simple_token_mapper.ml",
      "start_line": 18,
      "end_line": 28,
      "length": 11,
      "cyclomatic_complexity": 2,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 1
    },
    {
      "name": "convert_token",
      "file_path": "src/lexer/token_mapping/simple_token_mapper.ml",
      "start_line": 33,
      "end_line": 45,
      "length": 13,
      "cyclomatic_complexity": 12,
      "cognitive_complexity": 24,
      "is_recursive": false,
      "parameters_count": 3,
      "match_expressions_count": 3,
      "nesting_depth": 3
    },
    {
      "name": "get_stats",
      "file_path": "src/lexer/token_mapping/simple_token_mapper.ml",
      "start_line": 47,
      "end_line": 52,
      "length": 6,
      "cyclomatic_complexity": 2,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 2
    },
    {
      "name": "test_mapping",
      "file_path": "src/lexer/token_mapping/simple_token_mapper.ml",
      "start_line": 54,
      "end_line": 79,
      "length": 26,
      "cyclomatic_complexity": 7,
      "cognitive_complexity": 6,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 1,
      "nesting_depth": 2
    },
    {
      "name": "show_token",
      "file_path": "src/lexer/token_mapping/unified_token_mapper.ml",
      "start_line": 122,
      "end_line": 141,
      "length": 20,
      "cyclomatic_complexity": 19,
      "cognitive_complexity": 63,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 6,
      "nesting_depth": 6
    },
    {
      "name": "map_literal_token",
      "file_path": "src/lexer/token_mapping/unified_token_mapper.ml",
      "start_line": 149,
      "end_line": 157,
      "length": 9,
      "cyclomatic_complexity": 8,
      "cognitive_complexity": 7,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 1,
      "nesting_depth": 1
    },
    {
      "name": "map_identifier_token",
      "file_path": "src/lexer/token_mapping/unified_token_mapper.ml",
      "start_line": 159,
      "end_line": 164,
      "length": 6,
      "cyclomatic_complexity": 5,
      "cognitive_complexity": 4,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 1,
      "nesting_depth": 1
    },
    {
      "name": "map_basic_keyword_token",
      "file_path": "src/lexer/token_mapping/unified_token_mapper.ml",
      "start_line": 166,
      "end_line": 186,
      "length": 21,
      "cyclomatic_complexity": 20,
      "cognitive_complexity": 19,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 1,
      "nesting_depth": 1
    },
    {
      "name": "map_type_keyword_token",
      "file_path": "src/lexer/token_mapping/unified_token_mapper.ml",
      "start_line": 188,
      "end_line": 198,
      "length": 11,
      "cyclomatic_complexity": 10,
      "cognitive_complexity": 9,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 1,
      "nesting_depth": 1
    },
    {
      "name": "map_operator_token",
      "file_path": "src/lexer/token_mapping/unified_token_mapper.ml",
      "start_line": 200,
      "end_line": 212,
      "length": 13,
      "cyclomatic_complexity": 12,
      "cognitive_complexity": 11,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 1,
      "nesting_depth": 1
    },
    {
      "name": "map_token",
      "file_path": "src/lexer/token_mapping/unified_token_mapper.ml",
      "start_line": 214,
      "end_line": 238,
      "length": 25,
      "cyclomatic_complexity": 18,
      "cognitive_complexity": 60,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 5,
      "nesting_depth": 6
    },
    {
      "name": "map_tokens",
      "file_path": "src/lexer/token_mapping/unified_token_mapper.ml",
      "start_line": 267,
      "end_line": 269,
      "length": 3,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "validate_mapping_results",
      "file_path": "src/lexer/token_mapping/unified_token_mapper.ml",
      "start_line": 278,
      "end_line": 300,
      "length": 23,
      "cyclomatic_complexity": 4,
      "cognitive_complexity": 3,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 1,
      "nesting_depth": 1
    },
    {
      "name": "performance_test",
      "file_path": "src/lexer/token_mapping/unified_token_mapper.ml",
      "start_line": 302,
      "end_line": 330,
      "length": 29,
      "cyclomatic_complexity": 2,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 11
    },
    {
      "name": "show_supported_mappings",
      "file_path": "src/lexer/token_mapping/unified_token_mapper.ml",
      "start_line": 332,
      "end_line": 354,
      "length": 23,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 1
    },
    {
      "name": "find_token_mapping",
      "file_path": "src/lexer/token_mapping/token_registry_core.ml",
      "start_line": 21,
      "end_line": 23,
      "length": 3,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "get_mappings_by_category",
      "file_path": "src/lexer/token_mapping/token_registry_core.ml",
      "start_line": 28,
      "end_line": 30,
      "length": 3,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "register_literal_tokens",
      "file_path": "src/lexer/token_mapping/token_registry_literals.ml",
      "start_line": 7,
      "end_line": 28,
      "length": 22,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "initialize_registry",
      "file_path": "src/lexer/token_mapping/token_registry.ml",
      "start_line": 34,
      "end_line": 46,
      "length": 13,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "register_operator_tokens",
      "file_path": "src/lexer/token_mapping/token_registry_operators.ml",
      "start_line": 7,
      "end_line": 36,
      "length": 30,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "generate_operator_code",
      "file_path": "src/lexer/token_mapping/token_registry_operators.ml",
      "start_line": 38,
      "end_line": 49,
      "length": 12,
      "cyclomatic_complexity": 12,
      "cognitive_complexity": 11,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 1,
      "nesting_depth": 1
    },
    {
      "name": "register_identifier_tokens",
      "file_path": "src/lexer/token_mapping/token_registry_identifiers.ml",
      "start_line": 7,
      "end_line": 25,
      "length": 19,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "basic_data_types",
      "file_path": "src/lexer/data/reserved_words_data.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "functional_programming",
      "file_path": "src/lexer/data/reserved_words_data.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "type_system",
      "file_path": "src/lexer/data/reserved_words_data.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "module_system",
      "file_path": "src/lexer/data/reserved_words_data.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "concurrency",
      "file_path": "src/lexer/data/reserved_words_data.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "memory_management",
      "file_path": "src/lexer/data/reserved_words_data.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "compiler_internals",
      "file_path": "src/lexer/data/reserved_words_data.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "metaprogramming",
      "file_path": "src/lexer/data/reserved_words_data.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "error_handling",
      "file_path": "src/lexer/data/reserved_words_data.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "data_structures",
      "file_path": "src/lexer/data/reserved_words_data.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "io_and_system",
      "file_path": "src/lexer/data/reserved_words_data.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "mathematical_computing",
      "file_path": "src/lexer/data/reserved_words_data.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "string_processing",
      "file_path": "src/lexer/data/reserved_words_data.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "testing",
      "file_path": "src/lexer/data/reserved_words_data.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "logging_and_debugging",
      "file_path": "src/lexer/data/reserved_words_data.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "reserved_words_list",
      "file_path": "src/lexer/data/reserved_words_data.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "type_keywords",
      "file_path": "src/lexer/data/basic_keywords_data.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "macro_keywords",
      "file_path": "src/lexer/data/basic_keywords_data.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "variant_keywords",
      "file_path": "src/lexer/data/basic_keywords_data.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "special_keywords",
      "file_path": "src/lexer/data/basic_keywords_data.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "to_string",
      "file_path": "src/lexer/tokens/operator_tokens.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "from_string",
      "file_path": "src/lexer/tokens/operator_tokens.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "is_arithmetic",
      "file_path": "src/lexer/tokens/operator_tokens.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "is_comparison",
      "file_path": "src/lexer/tokens/operator_tokens.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "is_assignment",
      "file_path": "src/lexer/tokens/operator_tokens.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "is_function_related",
      "file_path": "src/lexer/tokens/operator_tokens.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "precedence",
      "file_path": "src/lexer/tokens/operator_tokens.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "to_string",
      "file_path": "src/lexer/tokens/chinese_delimiters.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "from_string",
      "file_path": "src/lexer/tokens/chinese_delimiters.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "is_chinese_left_delimiter",
      "file_path": "src/lexer/tokens/chinese_delimiters.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "is_chinese_right_delimiter",
      "file_path": "src/lexer/tokens/chinese_delimiters.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "is_chinese_bracket_pair",
      "file_path": "src/lexer/tokens/chinese_delimiters.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "is_chinese_punctuation",
      "file_path": "src/lexer/tokens/chinese_delimiters.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "is_chinese_arrow",
      "file_path": "src/lexer/tokens/chinese_delimiters.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "to_string",
      "file_path": "src/lexer/tokens/poetry_keywords.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "from_string",
      "file_path": "src/lexer/tokens/poetry_keywords.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "is_tonal_system",
      "file_path": "src/lexer/tokens/poetry_keywords.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "is_parallel_structure",
      "file_path": "src/lexer/tokens/poetry_keywords.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "is_poetry_form",
      "file_path": "src/lexer/tokens/poetry_keywords.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "is_rhythmic",
      "file_path": "src/lexer/tokens/poetry_keywords.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "to_string",
      "file_path": "src/lexer/tokens/wenyan_keywords.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "from_string",
      "file_path": "src/lexer/tokens/wenyan_keywords.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "is_basic_wenyan",
      "file_path": "src/lexer/tokens/wenyan_keywords.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "is_math_operation",
      "file_path": "src/lexer/tokens/wenyan_keywords.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "is_type_keyword",
      "file_path": "src/lexer/tokens/wenyan_keywords.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "to_string",
      "file_path": "src/lexer/tokens/identifier_tokens.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "get_name",
      "file_path": "src/lexer/tokens/identifier_tokens.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "is_quoted",
      "file_path": "src/lexer/tokens/identifier_tokens.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "is_special",
      "file_path": "src/lexer/tokens/identifier_tokens.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "from_string",
      "file_path": "src/lexer/tokens/identifier_tokens.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "to_string",
      "file_path": "src/lexer/tokens/basic_tokens.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "is_numeric",
      "file_path": "src/lexer/tokens/basic_tokens.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "is_string",
      "file_path": "src/lexer/tokens/basic_tokens.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "from_string",
      "file_path": "src/lexer/tokens/basic_tokens.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "to_string",
      "file_path": "src/lexer/tokens/delimiter_tokens.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "from_string",
      "file_path": "src/lexer/tokens/delimiter_tokens.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "is_left_delimiter",
      "file_path": "src/lexer/tokens/delimiter_tokens.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "is_right_delimiter",
      "file_path": "src/lexer/tokens/delimiter_tokens.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "is_bracket_pair",
      "file_path": "src/lexer/tokens/delimiter_tokens.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "get_matching_bracket",
      "file_path": "src/lexer/tokens/delimiter_tokens.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "is_punctuation",
      "file_path": "src/lexer/tokens/delimiter_tokens.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "from_string",
      "file_path": "src/lexer/tokens/token_unified.ml",
      "start_line": 42,
      "end_line": 71,
      "length": 30,
      "cyclomatic_complexity": 29,
      "cognitive_complexity": 144,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 9,
      "nesting_depth": 9
    },
    {
      "name": "compare_precedence",
      "file_path": "src/lexer/tokens/token_unified.ml",
      "start_line": 96,
      "end_line": 100,
      "length": 5,
      "cyclomatic_complexity": 2,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 0,
      "nesting_depth": 3
    },
    {
      "name": "to_string",
      "file_path": "src/lexer/tokens/ancient_keywords.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "from_string",
      "file_path": "src/lexer/tokens/ancient_keywords.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "is_definition",
      "file_path": "src/lexer/tokens/ancient_keywords.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "is_control_flow",
      "file_path": "src/lexer/tokens/ancient_keywords.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "is_particle",
      "file_path": "src/lexer/tokens/ancient_keywords.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "is_list_operation",
      "file_path": "src/lexer/tokens/ancient_keywords.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "show_position",
      "file_path": "src/lexer/tokens/token_compatibility.ml",
      "start_line": 143,
      "end_line": 144,
      "length": 2,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "show_positioned_token",
      "file_path": "src/lexer/tokens/token_compatibility.ml",
      "start_line": 146,
      "end_line": 147,
      "length": 2,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "to_string",
      "file_path": "src/lexer/tokens/core_keywords.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "from_string",
      "file_path": "src/lexer/tokens/core_keywords.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "is_control_flow",
      "file_path": "src/lexer/tokens/core_keywords.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "is_type_related",
      "file_path": "src/lexer/tokens/core_keywords.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "is_module_system",
      "file_path": "src/lexer/tokens/core_keywords.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "string_of_token",
      "file_path": "src/token_system_unified/core/unified_token_core.ml",
      "start_line": 28,
      "end_line": 36,
      "length": 9,
      "cyclomatic_complexity": 8,
      "cognitive_complexity": 7,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 1,
      "nesting_depth": 1
    },
    {
      "name": "make_simple_token",
      "file_path": "src/token_system_unified/core/unified_token_core.ml",
      "start_line": 44,
      "end_line": 47,
      "length": 4,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 4,
      "match_expressions_count": 0,
      "nesting_depth": 1
    },
    {
      "name": "get_token_priority",
      "file_path": "src/token_system_unified/core/unified_token_core.ml",
      "start_line": 49,
      "end_line": 57,
      "length": 9,
      "cyclomatic_complexity": 8,
      "cognitive_complexity": 7,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 1,
      "nesting_depth": 1
    },
    {
      "name": "positioned_token_to_string",
      "file_path": "src/token_system_unified/core/token_utils.ml",
      "start_line": 131,
      "end_line": 134,
      "length": 4,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "compare_precedence",
      "file_path": "src/token_system_unified/core/token_utils.ml",
      "start_line": 165,
      "end_line": 170,
      "length": 6,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 0,
      "nesting_depth": 3
    },
    {
      "name": "compare_by_category",
      "file_path": "src/token_system_unified/core/token_utils.ml",
      "start_line": 172,
      "end_line": 177,
      "length": 6,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 0,
      "nesting_depth": 2
    },
    {
      "name": "is_valid_positioned_token",
      "file_path": "src/token_system_unified/core/token_utils.ml",
      "start_line": 190,
      "end_line": 192,
      "length": 3,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "create_error_collector",
      "file_path": "src/token_system_unified/core/token_errors.ml",
      "start_line": 57,
      "end_line": 59,
      "length": 3,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "pos_str",
      "file_path": "src/token_system_unified/core/token_errors.ml",
      "start_line": 63,
      "end_line": 80,
      "length": 18,
      "cyclomatic_complexity": 12,
      "cognitive_complexity": 3,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 1,
      "nesting_depth": 1
    },
    {
      "name": "bind_result",
      "file_path": "src/token_system_unified/core/token_errors.ml",
      "start_line": 100,
      "end_line": 102,
      "length": 3,
      "cyclomatic_complexity": 3,
      "cognitive_complexity": 2,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 1,
      "nesting_depth": 1
    },
    {
      "name": "map_result",
      "file_path": "src/token_system_unified/core/token_errors.ml",
      "start_line": 104,
      "end_line": 106,
      "length": 3,
      "cyclomatic_complexity": 3,
      "cognitive_complexity": 2,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 1,
      "nesting_depth": 1
    },
    {
      "name": "collect_error",
      "file_path": "src/token_system_unified/core/token_errors.ml",
      "start_line": 108,
      "end_line": 117,
      "length": 10,
      "cyclomatic_complexity": 4,
      "cognitive_complexity": 2,
      "is_recursive": false,
      "parameters_count": 3,
      "match_expressions_count": 0,
      "nesting_depth": 3
    },
    {
      "name": "get_errors_by_severity",
      "file_path": "src/token_system_unified/core/token_errors.ml",
      "start_line": 122,
      "end_line": 124,
      "length": 3,
      "cyclomatic_complexity": 3,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "format_error_report",
      "file_path": "src/token_system_unified/core/token_errors.ml",
      "start_line": 129,
      "end_line": 142,
      "length": 14,
      "cyclomatic_complexity": 6,
      "cognitive_complexity": 4,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 2,
      "nesting_depth": 2
    },
    {
      "name": "safe_lookup_token",
      "file_path": "src/token_system_unified/core/token_errors.ml",
      "start_line": 155,
      "end_line": 160,
      "length": 6,
      "cyclomatic_complexity": 4,
      "cognitive_complexity": 3,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 1,
      "nesting_depth": 2
    },
    {
      "name": "safe_get_token_text",
      "file_path": "src/token_system_unified/core/token_errors.ml",
      "start_line": 162,
      "end_line": 166,
      "length": 5,
      "cyclomatic_complexity": 4,
      "cognitive_complexity": 3,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 1,
      "nesting_depth": 1
    },
    {
      "name": "safe_create_position",
      "file_path": "src/token_system_unified/core/token_errors.ml",
      "start_line": 168,
      "end_line": 171,
      "length": 4,
      "cyclomatic_complexity": 2,
      "cognitive_complexity": 2,
      "is_recursive": false,
      "parameters_count": 3,
      "match_expressions_count": 0,
      "nesting_depth": 1
    },
    {
      "name": "safe_process_token_stream",
      "file_path": "src/token_system_unified/core/token_errors.ml",
      "start_line": 173,
      "end_line": 181,
      "length": 9,
      "cyclomatic_complexity": 6,
      "cognitive_complexity": 3,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 1,
      "nesting_depth": 2
    },
    {
      "name": "create",
      "file_path": "src/token_system_unified/core/token_registry.ml",
      "start_line": 15,
      "end_line": 23,
      "length": 9,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "next_token_id",
      "file_path": "src/token_system_unified/core/token_registry.ml",
      "start_line": 25,
      "end_line": 28,
      "length": 4,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "lookup_token",
      "file_path": "src/token_system_unified/core/token_registry.ml",
      "start_line": 48,
      "end_line": 58,
      "length": 11,
      "cyclomatic_complexity": 10,
      "cognitive_complexity": 18,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 3,
      "nesting_depth": 3
    },
    {
      "name": "is_registered",
      "file_path": "src/token_system_unified/core/token_registry.ml",
      "start_line": 60,
      "end_line": 62,
      "length": 3,
      "cyclomatic_complexity": 3,
      "cognitive_complexity": 2,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 1,
      "nesting_depth": 1
    },
    {
      "name": "get_token_text",
      "file_path": "src/token_system_unified/core/token_registry.ml",
      "start_line": 73,
      "end_line": 81,
      "length": 9,
      "cyclomatic_complexity": 8,
      "cognitive_complexity": 7,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 1,
      "nesting_depth": 1
    },
    {
      "name": "get_stats",
      "file_path": "src/token_system_unified/core/token_registry.ml",
      "start_line": 83,
      "end_line": 99,
      "length": 17,
      "cyclomatic_complexity": 11,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "clear",
      "file_path": "src/token_system_unified/core/token_registry.ml",
      "start_line": 101,
      "end_line": 106,
      "length": 6,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "size",
      "file_path": "src/token_system_unified/core/token_registry.ml",
      "start_line": 108,
      "end_line": 111,
      "length": 4,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "init_default_registry",
      "file_path": "src/token_system_unified/core/token_registry.ml",
      "start_line": 113,
      "end_line": 167,
      "length": 55,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 1
    },
    {
      "name": "get_token_category_safe",
      "file_path": "src/token_system_unified/core/token_category_checker.ml",
      "start_line": 16,
      "end_line": 24,
      "length": 9,
      "cyclomatic_complexity": 7,
      "cognitive_complexity": 21,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 6
    },
    {
      "name": "get_token_category",
      "file_path": "src/token_system_unified/core/token_category_checker.ml",
      "start_line": 26,
      "end_line": 29,
      "length": 4,
      "cyclomatic_complexity": 4,
      "cognitive_complexity": 3,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 1,
      "nesting_depth": 1
    },
    {
      "name": "get_registry_stats",
      "file_path": "src/token_system_unified/mapping/token_registry_stats.ml",
      "start_line": 6,
      "end_line": 32,
      "length": 27,
      "cyclomatic_complexity": 2,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 2
    },
    {
      "name": "validate_registry",
      "file_path": "src/token_system_unified/mapping/token_registry_stats.ml",
      "start_line": 34,
      "end_line": 48,
      "length": 15,
      "cyclomatic_complexity": 4,
      "cognitive_complexity": 3,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 1
    },
    {
      "name": "symbol_to_operator",
      "file_path": "src/token_system_unified/mapping/operator_mapping.ml",
      "start_line": 11,
      "end_line": 51,
      "length": 41,
      "cyclomatic_complexity": 4,
      "cognitive_complexity": 2,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "chinese_to_operator",
      "file_path": "src/token_system_unified/mapping/operator_mapping.ml",
      "start_line": 53,
      "end_line": 84,
      "length": 32,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "symbol_operator_table",
      "file_path": "src/token_system_unified/mapping/operator_mapping.ml",
      "start_line": 86,
      "end_line": 89,
      "length": 4,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 1
    },
    {
      "name": "chinese_operator_table",
      "file_path": "src/token_system_unified/mapping/operator_mapping.ml",
      "start_line": 91,
      "end_line": 95,
      "length": 5,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 1
    },
    {
      "name": "operator_to_symbol_table",
      "file_path": "src/token_system_unified/mapping/operator_mapping.ml",
      "start_line": 97,
      "end_line": 101,
      "length": 5,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 1
    },
    {
      "name": "operator_to_chinese_table",
      "file_path": "src/token_system_unified/mapping/operator_mapping.ml",
      "start_line": 103,
      "end_line": 107,
      "length": 5,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 1
    },
    {
      "name": "lookup_operator",
      "file_path": "src/token_system_unified/mapping/operator_mapping.ml",
      "start_line": 115,
      "end_line": 119,
      "length": 5,
      "cyclomatic_complexity": 4,
      "cognitive_complexity": 3,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 1,
      "nesting_depth": 1
    },
    {
      "name": "get_operators_by_category",
      "file_path": "src/token_system_unified/mapping/operator_mapping.ml",
      "start_line": 172,
      "end_line": 192,
      "length": 21,
      "cyclomatic_complexity": 25,
      "cognitive_complexity": 12,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 1,
      "nesting_depth": 1
    },
    {
      "name": "get_operator_stats",
      "file_path": "src/token_system_unified/mapping/operator_mapping.ml",
      "start_line": 200,
      "end_line": 223,
      "length": 24,
      "cyclomatic_complexity": 15,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "precedence_table",
      "file_path": "src/token_system_unified/mapping/operator_mapping.ml",
      "start_line": 233,
      "end_line": 251,
      "length": 19,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "compare_precedence",
      "file_path": "src/token_system_unified/mapping/operator_mapping.ml",
      "start_line": 256,
      "end_line": 260,
      "length": 5,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 0,
      "nesting_depth": 2
    },
    {
      "name": "register_basic_keywords",
      "file_path": "src/token_system_unified/mapping/token_registry_keywords.ml",
      "start_line": 7,
      "end_line": 38,
      "length": 32,
      "cyclomatic_complexity": 3,
      "cognitive_complexity": 3,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 2
    },
    {
      "name": "register_type_keywords",
      "file_path": "src/token_system_unified/mapping/token_registry_keywords.ml",
      "start_line": 40,
      "end_line": 65,
      "length": 26,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "keyword_mappers",
      "file_path": "src/token_system_unified/mapping/basic_token_mapping.ml",
      "start_line": 181,
      "end_line": 194,
      "length": 14,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "try_mappers",
      "file_path": "src/token_system_unified/mapping/basic_token_mapping.ml",
      "start_line": 196,
      "end_line": 203,
      "length": 8,
      "cyclomatic_complexity": 4,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 0,
      "nesting_depth": 1
    },
    {
      "name": "map_basic_variant",
      "file_path": "src/token_system_unified/mapping/basic_token_mapping.ml",
      "start_line": 205,
      "end_line": 209,
      "length": 5,
      "cyclomatic_complexity": 4,
      "cognitive_complexity": 3,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 1,
      "nesting_depth": 1
    },
    {
      "name": "generate_token_code_by_category",
      "file_path": "src/token_system_unified/mapping/token_registry_converter.ml",
      "start_line": 11,
      "end_line": 25,
      "length": 15,
      "cyclomatic_complexity": 14,
      "cognitive_complexity": 22,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 1,
      "nesting_depth": 5
    },
    {
      "name": "generate_token_converter",
      "file_path": "src/token_system_unified/mapping/token_registry_converter.ml",
      "start_line": 27,
      "end_line": 54,
      "length": 28,
      "cyclomatic_complexity": 3,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 1
    },
    {
      "name": "register_mapping",
      "file_path": "src/token_system_unified/mapping/unified_token_registry.ml",
      "start_line": 23,
      "end_line": 34,
      "length": 12,
      "cyclomatic_complexity": 3,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 5
    },
    {
      "name": "find_mapping",
      "file_path": "src/token_system_unified/mapping/unified_token_registry.ml",
      "start_line": 39,
      "end_line": 48,
      "length": 10,
      "cyclomatic_complexity": 5,
      "cognitive_complexity": 2,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 1,
      "nesting_depth": 3
    },
    {
      "name": "check_conflicts",
      "file_path": "src/token_system_unified/mapping/unified_token_registry.ml",
      "start_line": 56,
      "end_line": 63,
      "length": 8,
      "cyclomatic_complexity": 2,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 3
    },
    {
      "name": "get_stats",
      "file_path": "src/token_system_unified/mapping/unified_token_registry.ml",
      "start_line": 65,
      "end_line": 77,
      "length": 13,
      "cyclomatic_complexity": 2,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 3
    },
    {
      "name": "clear",
      "file_path": "src/token_system_unified/mapping/unified_token_registry.ml",
      "start_line": 79,
      "end_line": 83,
      "length": 5,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "make_mapping",
      "file_path": "src/token_system_unified/mapping/unified_token_registry.ml",
      "start_line": 87,
      "end_line": 89,
      "length": 3,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 3,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "batch_mappings",
      "file_path": "src/token_system_unified/mapping/unified_token_registry.ml",
      "start_line": 106,
      "end_line": 109,
      "length": 4,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "register_core_mappings",
      "file_path": "src/token_system_unified/mapping/unified_token_registry.ml",
      "start_line": 115,
      "end_line": 164,
      "length": 50,
      "cyclomatic_complexity": 3,
      "cognitive_complexity": 3,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 2
    },
    {
      "name": "register_runtime_extensions",
      "file_path": "src/token_system_unified/mapping/unified_token_registry.ml",
      "start_line": 166,
      "end_line": 171,
      "length": 6,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "validate_mappings",
      "file_path": "src/token_system_unified/mapping/unified_token_registry.ml",
      "start_line": 173,
      "end_line": 193,
      "length": 21,
      "cyclomatic_complexity": 4,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 3
    },
    {
      "name": "initialize_all",
      "file_path": "src/token_system_unified/mapping/unified_token_registry.ml",
      "start_line": 195,
      "end_line": 202,
      "length": 8,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "initialize",
      "file_path": "src/token_system_unified/mapping/unified_token_registry.ml",
      "start_line": 204,
      "end_line": 206,
      "length": 3,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "chinese_digit_mapping",
      "file_path": "src/token_system_unified/mapping/literal_mapping.ml",
      "start_line": 8,
      "end_line": 31,
      "length": 24,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "chinese_unit_mapping",
      "file_path": "src/token_system_unified/mapping/literal_mapping.ml",
      "start_line": 33,
      "end_line": 44,
      "length": 12,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "chinese_bool_mapping",
      "file_path": "src/token_system_unified/mapping/literal_mapping.ml",
      "start_line": 46,
      "end_line": 57,
      "length": 12,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "english_bool_mapping",
      "file_path": "src/token_system_unified/mapping/literal_mapping.ml",
      "start_line": 59,
      "end_line": 68,
      "length": 10,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "chinese_digit_table",
      "file_path": "src/token_system_unified/mapping/literal_mapping.ml",
      "start_line": 70,
      "end_line": 73,
      "length": 4,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 1
    },
    {
      "name": "chinese_unit_table",
      "file_path": "src/token_system_unified/mapping/literal_mapping.ml",
      "start_line": 75,
      "end_line": 78,
      "length": 4,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 1
    },
    {
      "name": "chinese_bool_table",
      "file_path": "src/token_system_unified/mapping/literal_mapping.ml",
      "start_line": 80,
      "end_line": 83,
      "length": 4,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 1
    },
    {
      "name": "english_bool_table",
      "file_path": "src/token_system_unified/mapping/literal_mapping.ml",
      "start_line": 85,
      "end_line": 89,
      "length": 5,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 1
    },
    {
      "name": "is_string_literal",
      "file_path": "src/token_system_unified/mapping/literal_mapping.ml",
      "start_line": 97,
      "end_line": 105,
      "length": 9,
      "cyclomatic_complexity": 5,
      "cognitive_complexity": 7,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 1
    },
    {
      "name": "extract_string_content",
      "file_path": "src/token_system_unified/mapping/literal_mapping.ml",
      "start_line": 107,
      "end_line": 112,
      "length": 6,
      "cyclomatic_complexity": 3,
      "cognitive_complexity": 4,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 3
    },
    {
      "name": "parse_simple_chinese_number",
      "file_path": "src/token_system_unified/mapping/literal_mapping.ml",
      "start_line": 120,
      "end_line": 151,
      "length": 32,
      "cyclomatic_complexity": 24,
      "cognitive_complexity": 106,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 6,
      "nesting_depth": 9
    },
    {
      "name": "is_chinese_number",
      "file_path": "src/token_system_unified/mapping/literal_mapping.ml",
      "start_line": 153,
      "end_line": 155,
      "length": 3,
      "cyclomatic_complexity": 3,
      "cognitive_complexity": 2,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 1,
      "nesting_depth": 1
    },
    {
      "name": "lookup_bool",
      "file_path": "src/token_system_unified/mapping/literal_mapping.ml",
      "start_line": 163,
      "end_line": 165,
      "length": 3,
      "cyclomatic_complexity": 3,
      "cognitive_complexity": 2,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 1,
      "nesting_depth": 1
    },
    {
      "name": "parse_literal",
      "file_path": "src/token_system_unified/mapping/literal_mapping.ml",
      "start_line": 167,
      "end_line": 181,
      "length": 15,
      "cyclomatic_complexity": 12,
      "cognitive_complexity": 33,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 3,
      "nesting_depth": 5
    },
    {
      "name": "compare_literals",
      "file_path": "src/token_system_unified/mapping/literal_mapping.ml",
      "start_line": 228,
      "end_line": 235,
      "length": 8,
      "cyclomatic_complexity": 7,
      "cognitive_complexity": 6,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 1,
      "nesting_depth": 1
    },
    {
      "name": "get_literal_stats",
      "file_path": "src/token_system_unified/mapping/literal_mapping.ml",
      "start_line": 243,
      "end_line": 257,
      "length": 15,
      "cyclomatic_complexity": 9,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "validate_string_charset",
      "file_path": "src/token_system_unified/mapping/literal_mapping.ml",
      "start_line": 270,
      "end_line": 272,
      "length": 3,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "token_mappings",
      "file_path": "src/token_system_unified/mapping/simple_token_mapper.ml",
      "start_line": 18,
      "end_line": 28,
      "length": 11,
      "cyclomatic_complexity": 2,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 1
    },
    {
      "name": "convert_token",
      "file_path": "src/token_system_unified/mapping/simple_token_mapper.ml",
      "start_line": 33,
      "end_line": 45,
      "length": 13,
      "cyclomatic_complexity": 12,
      "cognitive_complexity": 24,
      "is_recursive": false,
      "parameters_count": 3,
      "match_expressions_count": 3,
      "nesting_depth": 3
    },
    {
      "name": "get_stats",
      "file_path": "src/token_system_unified/mapping/simple_token_mapper.ml",
      "start_line": 47,
      "end_line": 52,
      "length": 6,
      "cyclomatic_complexity": 2,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 2
    },
    {
      "name": "test_mapping",
      "file_path": "src/token_system_unified/mapping/simple_token_mapper.ml",
      "start_line": 54,
      "end_line": 79,
      "length": 26,
      "cyclomatic_complexity": 7,
      "cognitive_complexity": 6,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 1,
      "nesting_depth": 2
    },
    {
      "name": "show_token",
      "file_path": "src/token_system_unified/mapping/unified_token_mapper.ml",
      "start_line": 122,
      "end_line": 141,
      "length": 20,
      "cyclomatic_complexity": 19,
      "cognitive_complexity": 63,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 6,
      "nesting_depth": 6
    },
    {
      "name": "map_literal_token",
      "file_path": "src/token_system_unified/mapping/unified_token_mapper.ml",
      "start_line": 149,
      "end_line": 157,
      "length": 9,
      "cyclomatic_complexity": 8,
      "cognitive_complexity": 7,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 1,
      "nesting_depth": 1
    },
    {
      "name": "map_identifier_token",
      "file_path": "src/token_system_unified/mapping/unified_token_mapper.ml",
      "start_line": 159,
      "end_line": 164,
      "length": 6,
      "cyclomatic_complexity": 5,
      "cognitive_complexity": 4,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 1,
      "nesting_depth": 1
    },
    {
      "name": "map_basic_keyword_token",
      "file_path": "src/token_system_unified/mapping/unified_token_mapper.ml",
      "start_line": 166,
      "end_line": 186,
      "length": 21,
      "cyclomatic_complexity": 20,
      "cognitive_complexity": 19,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 1,
      "nesting_depth": 1
    },
    {
      "name": "map_type_keyword_token",
      "file_path": "src/token_system_unified/mapping/unified_token_mapper.ml",
      "start_line": 188,
      "end_line": 198,
      "length": 11,
      "cyclomatic_complexity": 10,
      "cognitive_complexity": 9,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 1,
      "nesting_depth": 1
    },
    {
      "name": "map_operator_token",
      "file_path": "src/token_system_unified/mapping/unified_token_mapper.ml",
      "start_line": 200,
      "end_line": 212,
      "length": 13,
      "cyclomatic_complexity": 12,
      "cognitive_complexity": 11,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 1,
      "nesting_depth": 1
    },
    {
      "name": "map_token",
      "file_path": "src/token_system_unified/mapping/unified_token_mapper.ml",
      "start_line": 214,
      "end_line": 238,
      "length": 25,
      "cyclomatic_complexity": 18,
      "cognitive_complexity": 60,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 5,
      "nesting_depth": 6
    },
    {
      "name": "map_tokens",
      "file_path": "src/token_system_unified/mapping/unified_token_mapper.ml",
      "start_line": 267,
      "end_line": 269,
      "length": 3,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "validate_mapping_results",
      "file_path": "src/token_system_unified/mapping/unified_token_mapper.ml",
      "start_line": 278,
      "end_line": 300,
      "length": 23,
      "cyclomatic_complexity": 4,
      "cognitive_complexity": 3,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 1,
      "nesting_depth": 1
    },
    {
      "name": "performance_test",
      "file_path": "src/token_system_unified/mapping/unified_token_mapper.ml",
      "start_line": 302,
      "end_line": 330,
      "length": 29,
      "cyclomatic_complexity": 2,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 11
    },
    {
      "name": "show_supported_mappings",
      "file_path": "src/token_system_unified/mapping/unified_token_mapper.ml",
      "start_line": 332,
      "end_line": 354,
      "length": 23,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 1
    },
    {
      "name": "find_token_mapping",
      "file_path": "src/token_system_unified/mapping/token_registry_core.ml",
      "start_line": 21,
      "end_line": 23,
      "length": 3,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "get_mappings_by_category",
      "file_path": "src/token_system_unified/mapping/token_registry_core.ml",
      "start_line": 28,
      "end_line": 30,
      "length": 3,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "register_literal_tokens",
      "file_path": "src/token_system_unified/mapping/token_registry_literals.ml",
      "start_line": 7,
      "end_line": 28,
      "length": 22,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "initialize_registry",
      "file_path": "src/token_system_unified/mapping/token_registry.ml",
      "start_line": 34,
      "end_line": 46,
      "length": 13,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "chinese_to_keyword",
      "file_path": "src/token_system_unified/mapping/keyword_mapping.ml",
      "start_line": 8,
      "end_line": 33,
      "length": 26,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "english_to_keyword",
      "file_path": "src/token_system_unified/mapping/keyword_mapping.ml",
      "start_line": 35,
      "end_line": 60,
      "length": 26,
      "cyclomatic_complexity": 5,
      "cognitive_complexity": 3,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 4
    },
    {
      "name": "chinese_keyword_table",
      "file_path": "src/token_system_unified/mapping/keyword_mapping.ml",
      "start_line": 62,
      "end_line": 65,
      "length": 4,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 1
    },
    {
      "name": "english_keyword_table",
      "file_path": "src/token_system_unified/mapping/keyword_mapping.ml",
      "start_line": 67,
      "end_line": 71,
      "length": 5,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 1
    },
    {
      "name": "keyword_to_chinese_table",
      "file_path": "src/token_system_unified/mapping/keyword_mapping.ml",
      "start_line": 73,
      "end_line": 77,
      "length": 5,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 1
    },
    {
      "name": "keyword_to_english_table",
      "file_path": "src/token_system_unified/mapping/keyword_mapping.ml",
      "start_line": 79,
      "end_line": 83,
      "length": 5,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 1
    },
    {
      "name": "lookup_keyword",
      "file_path": "src/token_system_unified/mapping/keyword_mapping.ml",
      "start_line": 91,
      "end_line": 95,
      "length": 5,
      "cyclomatic_complexity": 4,
      "cognitive_complexity": 3,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 1,
      "nesting_depth": 1
    },
    {
      "name": "get_keywords_by_category",
      "file_path": "src/token_system_unified/mapping/keyword_mapping.ml",
      "start_line": 115,
      "end_line": 131,
      "length": 17,
      "cyclomatic_complexity": 22,
      "cognitive_complexity": 8,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 1,
      "nesting_depth": 1
    },
    {
      "name": "get_keyword_stats",
      "file_path": "src/token_system_unified/mapping/keyword_mapping.ml",
      "start_line": 133,
      "end_line": 153,
      "length": 21,
      "cyclomatic_complexity": 13,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "default_config",
      "file_path": "src/token_system_unified/mapping/keyword_mapping.ml",
      "start_line": 163,
      "end_line": 165,
      "length": 3,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "create_mapping",
      "file_path": "src/token_system_unified/mapping/keyword_mapping.ml",
      "start_line": 167,
      "end_line": 182,
      "length": 16,
      "cyclomatic_complexity": 3,
      "cognitive_complexity": 3,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 3
    },
    {
      "name": "create_lookup_function",
      "file_path": "src/token_system_unified/mapping/keyword_mapping.ml",
      "start_line": 184,
      "end_line": 189,
      "length": 6,
      "cyclomatic_complexity": 2,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 2
    },
    {
      "name": "register_operator_tokens",
      "file_path": "src/token_system_unified/mapping/token_registry_operators.ml",
      "start_line": 7,
      "end_line": 36,
      "length": 30,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "generate_operator_code",
      "file_path": "src/token_system_unified/mapping/token_registry_operators.ml",
      "start_line": 38,
      "end_line": 49,
      "length": 12,
      "cyclomatic_complexity": 12,
      "cognitive_complexity": 11,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 1,
      "nesting_depth": 1
    },
    {
      "name": "register_identifier_tokens",
      "file_path": "src/token_system_unified/mapping/token_registry_identifiers.ml",
      "start_line": 7,
      "end_line": 25,
      "length": 19,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "operator_token_to_string",
      "file_path": "src/token_system_unified/utils/operator_tokens.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "get_operator_precedence",
      "file_path": "src/token_system_unified/utils/operator_tokens.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "is_binary_operator",
      "file_path": "src/token_system_unified/utils/operator_tokens.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "is_unary_operator",
      "file_path": "src/token_system_unified/utils/operator_tokens.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "keyword_token_to_string",
      "file_path": "src/token_system_unified/utils/keyword_tokens.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "is_control_flow_keyword",
      "file_path": "src/token_system_unified/utils/keyword_tokens.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "is_type_related_keyword",
      "file_path": "src/token_system_unified/utils/keyword_tokens.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "safe_execute",
      "file_path": "src/token_system_unified/utils/token_string_converter.ml",
      "start_line": 12,
      "end_line": 15,
      "length": 4,
      "cyclomatic_complexity": 3,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 1
    },
    {
      "name": "create_token_type_error",
      "file_path": "src/token_system_unified/utils/token_string_converter.ml",
      "start_line": 17,
      "end_line": 20,
      "length": 4,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "literal_table",
      "file_path": "src/token_system_unified/utils/token_string_converter.ml",
      "start_line": 22,
      "end_line": 31,
      "length": 10,
      "cyclomatic_complexity": 9,
      "cognitive_complexity": 8,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 1,
      "nesting_depth": 1
    },
    {
      "name": "identifier_table",
      "file_path": "src/token_system_unified/utils/token_string_converter.ml",
      "start_line": 33,
      "end_line": 43,
      "length": 11,
      "cyclomatic_complexity": 9,
      "cognitive_complexity": 8,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 1,
      "nesting_depth": 1
    },
    {
      "name": "control_flow_mappings",
      "file_path": "src/token_system_unified/utils/token_string_converter.ml",
      "start_line": 45,
      "end_line": 66,
      "length": 22,
      "cyclomatic_complexity": 6,
      "cognitive_complexity": 3,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 5
    },
    {
      "name": "definition_mappings",
      "file_path": "src/token_system_unified/utils/token_string_converter.ml",
      "start_line": 68,
      "end_line": 81,
      "length": 14,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "module_type_mappings",
      "file_path": "src/token_system_unified/utils/token_string_converter.ml",
      "start_line": 83,
      "end_line": 98,
      "length": 16,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "object_oriented_mappings",
      "file_path": "src/token_system_unified/utils/token_string_converter.ml",
      "start_line": 100,
      "end_line": 109,
      "length": 10,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "basic_value_mappings",
      "file_path": "src/token_system_unified/utils/token_string_converter.ml",
      "start_line": 111,
      "end_line": 121,
      "length": 11,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "keyword_mappings",
      "file_path": "src/token_system_unified/utils/token_string_converter.ml",
      "start_line": 123,
      "end_line": 126,
      "length": 4,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "number_mappings",
      "file_path": "src/token_system_unified/utils/token_string_converter.ml",
      "start_line": 128,
      "end_line": 145,
      "length": 18,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "type_mappings",
      "file_path": "src/token_system_unified/utils/token_string_converter.ml",
      "start_line": 147,
      "end_line": 164,
      "length": 18,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "wenyan_mappings",
      "file_path": "src/token_system_unified/utils/token_string_converter.ml",
      "start_line": 166,
      "end_line": 179,
      "length": 14,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "classical_mappings",
      "file_path": "src/token_system_unified/utils/token_string_converter.ml",
      "start_line": 181,
      "end_line": 194,
      "length": 14,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "operator_mappings",
      "file_path": "src/token_system_unified/utils/token_string_converter.ml",
      "start_line": 196,
      "end_line": 232,
      "length": 37,
      "cyclomatic_complexity": 5,
      "cognitive_complexity": 2,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "delimiter_mappings",
      "file_path": "src/token_system_unified/utils/token_string_converter.ml",
      "start_line": 234,
      "end_line": 334,
      "length": 101,
      "cyclomatic_complexity": 146,
      "cognitive_complexity": 112,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 3,
      "nesting_depth": 4
    },
    {
      "name": "literal_token_to_string",
      "file_path": "src/token_system_unified/utils/literal_tokens.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "is_numeric_literal",
      "file_path": "src/token_system_unified/utils/literal_tokens.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "is_string_literal",
      "file_path": "src/token_system_unified/utils/literal_tokens.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "is_bool_literal",
      "file_path": "src/token_system_unified/utils/literal_tokens.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "wenyan_token_to_string",
      "file_path": "src/token_system_unified/utils/wenyan_tokens.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "is_ancient_style",
      "file_path": "src/token_system_unified/utils/wenyan_tokens.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "is_wenyan_style",
      "file_path": "src/token_system_unified/utils/wenyan_tokens.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "identifier_token_to_string",
      "file_path": "src/token_system_unified/utils/identifier_tokens.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "is_quoted_identifier",
      "file_path": "src/token_system_unified/utils/identifier_tokens.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "is_special_identifier",
      "file_path": "src/token_system_unified/utils/identifier_tokens.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "extract_identifier_content",
      "file_path": "src/token_system_unified/utils/identifier_tokens.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "create_quoted_identifier",
      "file_path": "src/token_system_unified/utils/identifier_tokens.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "create_special_identifier",
      "file_path": "src/token_system_unified/utils/identifier_tokens.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "convert_identifier_token",
      "file_path": "src/token_system_unified/utils/token_dispatcher.ml",
      "start_line": 16,
      "end_line": 19,
      "length": 4,
      "cyclomatic_complexity": 3,
      "cognitive_complexity": 2,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 1,
      "nesting_depth": 1
    },
    {
      "name": "convert_basic_keyword_token",
      "file_path": "src/token_system_unified/utils/token_dispatcher.ml",
      "start_line": 27,
      "end_line": 33,
      "length": 7,
      "cyclomatic_complexity": 3,
      "cognitive_complexity": 2,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 1,
      "nesting_depth": 1
    },
    {
      "name": "convert_type_keyword_token",
      "file_path": "src/token_system_unified/utils/token_dispatcher.ml",
      "start_line": 36,
      "end_line": 42,
      "length": 7,
      "cyclomatic_complexity": 3,
      "cognitive_complexity": 2,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 1,
      "nesting_depth": 1
    },
    {
      "name": "convert_wenyan_token",
      "file_path": "src/token_system_unified/utils/token_dispatcher.ml",
      "start_line": 45,
      "end_line": 69,
      "length": 25,
      "cyclomatic_complexity": 9,
      "cognitive_complexity": 8,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 4,
      "nesting_depth": 1
    },
    {
      "name": "make_extended_token",
      "file_path": "src/token_system_unified/utils/token_utils.ml",
      "start_line": 14,
      "end_line": 25,
      "length": 12,
      "cyclomatic_complexity": 2,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 3,
      "match_expressions_count": 0,
      "nesting_depth": 1
    },
    {
      "name": "positioned_token_to_string",
      "file_path": "src/token_system_unified/utils/token_utils.ml",
      "start_line": 211,
      "end_line": 214,
      "length": 4,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "compare_by_category",
      "file_path": "src/token_system_unified/utils/token_utils.ml",
      "start_line": 230,
      "end_line": 235,
      "length": 6,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 0,
      "nesting_depth": 2
    },
    {
      "name": "is_valid_positioned_token",
      "file_path": "src/token_system_unified/utils/token_utils.ml",
      "start_line": 248,
      "end_line": 250,
      "length": 3,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "natural_language_token_to_string",
      "file_path": "src/token_system_unified/utils/natural_language_tokens.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "is_function_related",
      "file_path": "src/token_system_unified/utils/natural_language_tokens.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "is_arithmetic_related",
      "file_path": "src/token_system_unified/utils/natural_language_tokens.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "make_simple_token",
      "file_path": "src/token_system_unified/utils/token_utils_core.ml",
      "start_line": 8,
      "end_line": 10,
      "length": 3,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 4,
      "match_expressions_count": 0,
      "nesting_depth": 1
    },
    {
      "name": "get_token_priority",
      "file_path": "src/token_system_unified/utils/token_utils_core.ml",
      "start_line": 12,
      "end_line": 54,
      "length": 43,
      "cyclomatic_complexity": 185,
      "cognitive_complexity": 33,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 1,
      "nesting_depth": 1
    },
    {
      "name": "equal_token",
      "file_path": "src/token_system_unified/utils/token_utils_core.ml",
      "start_line": 56,
      "end_line": 77,
      "length": 22,
      "cyclomatic_complexity": 24,
      "cognitive_complexity": 21,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 1,
      "nesting_depth": 1
    },
    {
      "name": "delimiter_token_to_string",
      "file_path": "src/token_system_unified/utils/delimiter_tokens.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "is_left_delimiter",
      "file_path": "src/token_system_unified/utils/delimiter_tokens.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "is_right_delimiter",
      "file_path": "src/token_system_unified/utils/delimiter_tokens.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "get_matching_right_delimiter",
      "file_path": "src/token_system_unified/utils/delimiter_tokens.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "add_unique_to_ref",
      "file_path": "src/token_system_unified/utils/parser_expressions_token_reducer.ml",
      "start_line": 7,
      "end_line": 9,
      "length": 3,
      "cyclomatic_complexity": 2,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 0,
      "nesting_depth": 1
    },
    {
      "name": "default_processor",
      "file_path": "src/token_system_unified/utils/parser_expressions_token_reducer.ml",
      "start_line": 121,
      "end_line": 152,
      "length": 32,
      "cyclomatic_complexity": 21,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "try_process_token_classification",
      "file_path": "src/token_system_unified/utils/parser_expressions_token_reducer.ml",
      "start_line": 154,
      "end_line": 184,
      "length": 31,
      "cyclomatic_complexity": 19,
      "cognitive_complexity": 15,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 4,
      "nesting_depth": 1
    },
    {
      "name": "process_token",
      "file_path": "src/token_system_unified/utils/parser_expressions_token_reducer.ml",
      "start_line": 186,
      "end_line": 188,
      "length": 3,
      "cyclomatic_complexity": 2,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 0,
      "nesting_depth": 1
    },
    {
      "name": "create_group_collections",
      "file_path": "src/token_system_unified/utils/parser_expressions_token_reducer.ml",
      "start_line": 212,
      "end_line": 219,
      "length": 8,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "classify_and_add_token",
      "file_path": "src/token_system_unified/utils/parser_expressions_token_reducer.ml",
      "start_line": 221,
      "end_line": 246,
      "length": 26,
      "cyclomatic_complexity": 13,
      "cognitive_complexity": 12,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 4,
      "nesting_depth": 1
    },
    {
      "name": "calculate_dedup_stats",
      "file_path": "src/token_system_unified/utils/parser_expressions_token_reducer.ml",
      "start_line": 248,
      "end_line": 266,
      "length": 19,
      "cyclomatic_complexity": 2,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 0,
      "nesting_depth": 1
    },
    {
      "name": "analyze_token_duplication",
      "file_path": "src/token_system_unified/utils/parser_expressions_token_reducer.ml",
      "start_line": 268,
      "end_line": 273,
      "length": 6,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 2
    },
    {
      "name": "generate_dedup_report",
      "file_path": "src/token_system_unified/utils/parser_expressions_token_reducer.ml",
      "start_line": 275,
      "end_line": 294,
      "length": 20,
      "cyclomatic_complexity": 2,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 1
    },
    {
      "name": "create_expression_processor",
      "file_path": "src/token_system_unified/utils/parser_expressions_token_reducer.ml",
      "start_line": 298,
      "end_line": 335,
      "length": 38,
      "cyclomatic_complexity": 6,
      "cognitive_complexity": 5,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 1,
      "nesting_depth": 5
    },
    {
      "name": "get_processing_stats",
      "file_path": "src/token_system_unified/utils/parser_expressions_token_reducer.ml",
      "start_line": 337,
      "end_line": 355,
      "length": 19,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 4,
      "match_expressions_count": 0,
      "nesting_depth": 1
    },
    {
      "name": "poetry_token_to_string",
      "file_path": "src/token_system_unified/utils/poetry_tokens.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "is_rhyme_related",
      "file_path": "src/token_system_unified/utils/poetry_tokens.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "is_antithesis_related",
      "file_path": "src/token_system_unified/utils/poetry_tokens.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "is_form_related",
      "file_path": "src/token_system_unified/utils/poetry_tokens.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "is_meter_related",
      "file_path": "src/token_system_unified/utils/poetry_tokens.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "safe_sprintf",
      "file_path": "src/utils/formatting/string_utils.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "format_error",
      "file_path": "src/utils/formatting/string_utils.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "format_position",
      "file_path": "src/utils/formatting/string_utils.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "format_function_call",
      "file_path": "src/utils/formatting/string_utils.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "format_binary_operation",
      "file_path": "src/utils/formatting/string_utils.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "format_list",
      "file_path": "src/utils/formatting/string_utils.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "join",
      "file_path": "src/utils/formatting/string_utils.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "basename",
      "file_path": "src/utils/formatting/string_utils.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "dirname",
      "file_path": "src/utils/formatting/string_utils.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "normalize_separators",
      "file_path": "src/utils/formatting/string_utils.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "is_chinese_char",
      "file_path": "src/utils/formatting/string_utils.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "contains_chinese",
      "file_path": "src/utils/formatting/string_utils.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "display_width",
      "file_path": "src/utils/formatting/string_utils.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "truncate_by_width",
      "file_path": "src/utils/formatting/string_utils.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "pad_chinese",
      "file_path": "src/utils/formatting/string_utils.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "concat",
      "file_path": "src/utils/formatting/string_utils.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "compare_normalized",
      "file_path": "src/utils/formatting/string_utils.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "substring",
      "file_path": "src/utils/formatting/string_utils.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "to_int_safe",
      "file_path": "src/utils/formatting/string_utils.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "format_triple_with_dash",
      "file_path": "src/utils/formatting/error_formatter.ml",
      "start_line": 19,
      "end_line": 20,
      "length": 2,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 3,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "character_rhyme_match",
      "file_path": "src/utils/formatting/error_formatter.ml",
      "start_line": 49,
      "end_line": 51,
      "length": 3,
      "cyclomatic_complexity": 2,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 3,
      "match_expressions_count": 0,
      "nesting_depth": 1
    },
    {
      "name": "traditional_simplified_failure",
      "file_path": "src/utils/formatting/error_formatter.ml",
      "start_line": 59,
      "end_line": 61,
      "length": 3,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "dimension_correct_message",
      "file_path": "src/utils/formatting/error_formatter.ml",
      "start_line": 78,
      "end_line": 79,
      "length": 2,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "evaluation_failure_message",
      "file_path": "src/utils/formatting/error_formatter.ml",
      "start_line": 81,
      "end_line": 82,
      "length": 2,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 3,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "unicode_processing_message_with_feature",
      "file_path": "src/utils/formatting/error_formatter.ml",
      "start_line": 90,
      "end_line": 91,
      "length": 2,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "unicode_processing_failure",
      "file_path": "src/utils/formatting/error_formatter.ml",
      "start_line": 93,
      "end_line": 94,
      "length": 2,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 3,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "format_error",
      "file_path": "src/utils/formatting/error_formatter.ml",
      "start_line": 123,
      "end_line": 125,
      "length": 3,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "format_position",
      "file_path": "src/utils/formatting/error_formatter.ml",
      "start_line": 127,
      "end_line": 131,
      "length": 5,
      "cyclomatic_complexity": 4,
      "cognitive_complexity": 3,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 1,
      "nesting_depth": 1
    },
    {
      "name": "format_error_with_position",
      "file_path": "src/utils/formatting/error_formatter.ml",
      "start_line": 133,
      "end_line": 136,
      "length": 4,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 3,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "format_lexical_error",
      "file_path": "src/utils/formatting/error_formatter.ml",
      "start_line": 138,
      "end_line": 140,
      "length": 3,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "format_parse_error",
      "file_path": "src/utils/formatting/error_formatter.ml",
      "start_line": 142,
      "end_line": 144,
      "length": 3,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "format_semantic_error",
      "file_path": "src/utils/formatting/error_formatter.ml",
      "start_line": 146,
      "end_line": 148,
      "length": 3,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "format_type_error",
      "file_path": "src/utils/formatting/error_formatter.ml",
      "start_line": 150,
      "end_line": 152,
      "length": 3,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "format_runtime_error",
      "file_path": "src/utils/formatting/error_formatter.ml",
      "start_line": 154,
      "end_line": 157,
      "length": 4,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "suggest_recovery",
      "file_path": "src/utils/formatting/error_formatter.ml",
      "start_line": 161,
      "end_line": 178,
      "length": 18,
      "cyclomatic_complexity": 7,
      "cognitive_complexity": 20,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 1,
      "nesting_depth": 6
    },
    {
      "name": "format_suggestions",
      "file_path": "src/utils/formatting/error_formatter.ml",
      "start_line": 180,
      "end_line": 191,
      "length": 12,
      "cyclomatic_complexity": 5,
      "cognitive_complexity": 4,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 1,
      "nesting_depth": 1
    },
    {
      "name": "combine_error_and_suggestions",
      "file_path": "src/utils/formatting/error_formatter.ml",
      "start_line": 193,
      "end_line": 197,
      "length": 5,
      "cyclomatic_complexity": 2,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 0,
      "nesting_depth": 2
    },
    {
      "name": "format_error_summary",
      "file_path": "src/utils/formatting/error_formatter.ml",
      "start_line": 204,
      "end_line": 228,
      "length": 25,
      "cyclomatic_complexity": 7,
      "cognitive_complexity": 6,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 1,
      "nesting_depth": 2
    },
    {
      "name": "make_user_friendly",
      "file_path": "src/utils/formatting/error_formatter.ml",
      "start_line": 236,
      "end_line": 244,
      "length": 9,
      "cyclomatic_complexity": 5,
      "cognitive_complexity": 10,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 5
    },
    {
      "name": "add_solution_hint",
      "file_path": "src/utils/formatting/error_formatter.ml",
      "start_line": 246,
      "end_line": 248,
      "length": 3,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "format_detailed_report",
      "file_path": "src/utils/formatting/error_formatter.ml",
      "start_line": 250,
      "end_line": 262,
      "length": 13,
      "cyclomatic_complexity": 5,
      "cognitive_complexity": 4,
      "is_recursive": false,
      "parameters_count": 3,
      "match_expressions_count": 1,
      "nesting_depth": 3
    },
    {
      "name": "default_config",
      "file_path": "src/chinese_best_practices/core/practice_coordinator.ml",
      "start_line": 24,
      "end_line": 34,
      "length": 11,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "run_basic_checks",
      "file_path": "src/chinese_best_practices/core/practice_coordinator.ml",
      "start_line": 36,
      "end_line": 70,
      "length": 35,
      "cyclomatic_complexity": 7,
      "cognitive_complexity": 21,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 0,
      "nesting_depth": 13
    },
    {
      "name": "filter_violations",
      "file_path": "src/chinese_best_practices/core/practice_coordinator.ml",
      "start_line": 72,
      "end_line": 76,
      "length": 5,
      "cyclomatic_complexity": 4,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 0,
      "nesting_depth": 2
    },
    {
      "name": "comprehensive_practice_check",
      "file_path": "src/chinese_best_practices/core/practice_coordinator.ml",
      "start_line": 78,
      "end_line": 82,
      "length": 5,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 2
    },
    {
      "name": "check_single_category",
      "file_path": "src/chinese_best_practices/core/practice_coordinator.ml",
      "start_line": 84,
      "end_line": 93,
      "length": 10,
      "cyclomatic_complexity": 9,
      "cognitive_complexity": 8,
      "is_recursive": false,
      "parameters_count": 3,
      "match_expressions_count": 1,
      "nesting_depth": 1
    },
    {
      "name": "get_supported_checker_types",
      "file_path": "src/chinese_best_practices/core/practice_coordinator.ml",
      "start_line": 95,
      "end_line": 104,
      "length": 10,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "get_checker_categories",
      "file_path": "src/chinese_best_practices/core/practice_coordinator.ml",
      "start_line": 106,
      "end_line": 114,
      "length": 9,
      "cyclomatic_complexity": 9,
      "cognitive_complexity": 8,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 1,
      "nesting_depth": 1
    },
    {
      "name": "style_consistency_rules",
      "file_path": "src/chinese_best_practices/checkers/style_consistency_checker.ml",
      "start_line": 11,
      "end_line": 22,
      "length": 12,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "collect_violations",
      "file_path": "src/chinese_best_practices/checkers/style_consistency_checker.ml",
      "start_line": 24,
      "end_line": 46,
      "length": 23,
      "cyclomatic_complexity": 4,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 0,
      "nesting_depth": 4
    },
    {
      "name": "check_category",
      "file_path": "src/chinese_best_practices/checkers/style_consistency_checker.ml",
      "start_line": 51,
      "end_line": 96,
      "length": 46,
      "cyclomatic_complexity": 15,
      "cognitive_complexity": 10,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 1,
      "nesting_depth": 4
    },
    {
      "name": "check_with_severity_filter",
      "file_path": "src/chinese_best_practices/checkers/style_consistency_checker.ml",
      "start_line": 101,
      "end_line": 114,
      "length": 14,
      "cyclomatic_complexity": 10,
      "cognitive_complexity": 6,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 1,
      "nesting_depth": 1
    },
    {
      "name": "classical_style_rules",
      "file_path": "src/chinese_best_practices/checkers/classical_style_checker.ml",
      "start_line": 11,
      "end_line": 24,
      "length": 14,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "check_classical_style_appropriateness",
      "file_path": "src/chinese_best_practices/checkers/classical_style_checker.ml",
      "start_line": 26,
      "end_line": 50,
      "length": 25,
      "cyclomatic_complexity": 4,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 4
    },
    {
      "name": "check_category",
      "file_path": "src/chinese_best_practices/checkers/classical_style_checker.ml",
      "start_line": 52,
      "end_line": 83,
      "length": 32,
      "cyclomatic_complexity": 9,
      "cognitive_complexity": 6,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 1,
      "nesting_depth": 4
    },
    {
      "name": "check_with_severity_filter",
      "file_path": "src/chinese_best_practices/checkers/classical_style_checker.ml",
      "start_line": 88,
      "end_line": 122,
      "length": 35,
      "cyclomatic_complexity": 13,
      "cognitive_complexity": 7,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 1,
      "nesting_depth": 4
    },
    {
      "name": "ai_friendly_rules",
      "file_path": "src/chinese_best_practices/checkers/ai_friendly_checker.ml",
      "start_line": 16,
      "end_line": 30,
      "length": 15,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "check_ai_friendly_patterns",
      "file_path": "src/chinese_best_practices/checkers/ai_friendly_checker.ml",
      "start_line": 32,
      "end_line": 56,
      "length": 25,
      "cyclomatic_complexity": 4,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 4
    },
    {
      "name": "check_category",
      "file_path": "src/chinese_best_practices/checkers/ai_friendly_checker.ml",
      "start_line": 58,
      "end_line": 90,
      "length": 33,
      "cyclomatic_complexity": 11,
      "cognitive_complexity": 8,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 1,
      "nesting_depth": 4
    },
    {
      "name": "check_with_severity_filter",
      "file_path": "src/chinese_best_practices/checkers/ai_friendly_checker.ml",
      "start_line": 95,
      "end_line": 129,
      "length": 35,
      "cyclomatic_complexity": 13,
      "cognitive_complexity": 7,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 1,
      "nesting_depth": 4
    },
    {
      "name": "check_idiomatic_chinese",
      "file_path": "src/chinese_best_practices/checkers/idiomatic_checker.ml",
      "start_line": 8,
      "end_line": 34,
      "length": 27,
      "cyclomatic_complexity": 4,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 4
    },
    {
      "name": "check_category",
      "file_path": "src/chinese_best_practices/checkers/idiomatic_checker.ml",
      "start_line": 36,
      "end_line": 63,
      "length": 28,
      "cyclomatic_complexity": 4,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 0,
      "nesting_depth": 5
    },
    {
      "name": "check_with_severity_filter",
      "file_path": "src/chinese_best_practices/checkers/idiomatic_checker.ml",
      "start_line": 68,
      "end_line": 94,
      "length": 27,
      "cyclomatic_complexity": 4,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 0,
      "nesting_depth": 5
    },
    {
      "name": "check_chinese_word_order",
      "file_path": "src/chinese_best_practices/checkers/word_order_checker.ml",
      "start_line": 8,
      "end_line": 34,
      "length": 27,
      "cyclomatic_complexity": 4,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 4
    },
    {
      "name": "check_category",
      "file_path": "src/chinese_best_practices/checkers/word_order_checker.ml",
      "start_line": 36,
      "end_line": 63,
      "length": 28,
      "cyclomatic_complexity": 4,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 0,
      "nesting_depth": 5
    },
    {
      "name": "check_with_severity_filter",
      "file_path": "src/chinese_best_practices/checkers/word_order_checker.ml",
      "start_line": 68,
      "end_line": 94,
      "length": 27,
      "cyclomatic_complexity": 4,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 0,
      "nesting_depth": 5
    },
    {
      "name": "detect_mixed_language_patterns",
      "file_path": "src/chinese_best_practices/checkers/mixed_language_checker.ml",
      "start_line": 8,
      "end_line": 34,
      "length": 27,
      "cyclomatic_complexity": 4,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 4
    },
    {
      "name": "check_category",
      "file_path": "src/chinese_best_practices/checkers/mixed_language_checker.ml",
      "start_line": 36,
      "end_line": 63,
      "length": 28,
      "cyclomatic_complexity": 4,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 0,
      "nesting_depth": 5
    },
    {
      "name": "check_with_severity_filter",
      "file_path": "src/chinese_best_practices/checkers/mixed_language_checker.ml",
      "start_line": 68,
      "end_line": 94,
      "length": 27,
      "cyclomatic_complexity": 4,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 0,
      "nesting_depth": 5
    },
    {
      "name": "create_rule",
      "file_path": "src/chinese_best_practices/rules/idiomatic_rules.ml",
      "start_line": 16,
      "end_line": 23,
      "length": 8,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 4,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "create_tech_rules",
      "file_path": "src/chinese_best_practices/rules/idiomatic_rules.ml",
      "start_line": 31,
      "end_line": 32,
      "length": 2,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "create_action_rules",
      "file_path": "src/chinese_best_practices/rules/idiomatic_rules.ml",
      "start_line": 34,
      "end_line": 37,
      "length": 4,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "create_condition_rules",
      "file_path": "src/chinese_best_practices/rules/idiomatic_rules.ml",
      "start_line": 39,
      "end_line": 44,
      "length": 6,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "idiomatic_rules",
      "file_path": "src/chinese_best_practices/rules/idiomatic_rules.ml",
      "start_line": 46,
      "end_line": 50,
      "length": 5,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "get_rules_by_category",
      "file_path": "src/chinese_best_practices/rules/idiomatic_rules.ml",
      "start_line": 52,
      "end_line": 54,
      "length": 3,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "get_all_categories",
      "file_path": "src/chinese_best_practices/rules/idiomatic_rules.ml",
      "start_line": 56,
      "end_line": 58,
      "length": 3,
      "cyclomatic_complexity": 3,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "get_rules_by_severity",
      "file_path": "src/chinese_best_practices/rules/idiomatic_rules.ml",
      "start_line": 60,
      "end_line": 63,
      "length": 4,
      "cyclomatic_complexity": 4,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 2
    },
    {
      "name": "create_rule",
      "file_path": "src/chinese_best_practices/rules/mixed_language_rules.ml",
      "start_line": 16,
      "end_line": 17,
      "length": 2,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 5,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "keyword_mixing_rules",
      "file_path": "src/chinese_best_practices/rules/mixed_language_rules.ml",
      "start_line": 19,
      "end_line": 25,
      "length": 7,
      "cyclomatic_complexity": 3,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 2
    },
    {
      "name": "naming_convention_rules",
      "file_path": "src/chinese_best_practices/rules/mixed_language_rules.ml",
      "start_line": 27,
      "end_line": 31,
      "length": 5,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "comment_style_rules",
      "file_path": "src/chinese_best_practices/rules/mixed_language_rules.ml",
      "start_line": 33,
      "end_line": 34,
      "length": 2,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "create_keyword_rules",
      "file_path": "src/chinese_best_practices/rules/mixed_language_rules.ml",
      "start_line": 36,
      "end_line": 39,
      "length": 4,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "create_naming_rules",
      "file_path": "src/chinese_best_practices/rules/mixed_language_rules.ml",
      "start_line": 41,
      "end_line": 44,
      "length": 4,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "create_comment_rules",
      "file_path": "src/chinese_best_practices/rules/mixed_language_rules.ml",
      "start_line": 46,
      "end_line": 51,
      "length": 6,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "mixed_language_rules",
      "file_path": "src/chinese_best_practices/rules/mixed_language_rules.ml",
      "start_line": 53,
      "end_line": 57,
      "length": 5,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "get_rules_by_category",
      "file_path": "src/chinese_best_practices/rules/mixed_language_rules.ml",
      "start_line": 59,
      "end_line": 61,
      "length": 3,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "get_all_categories",
      "file_path": "src/chinese_best_practices/rules/mixed_language_rules.ml",
      "start_line": 63,
      "end_line": 65,
      "length": 3,
      "cyclomatic_complexity": 3,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "get_rules_by_severity",
      "file_path": "src/chinese_best_practices/rules/mixed_language_rules.ml",
      "start_line": 67,
      "end_line": 70,
      "length": 4,
      "cyclomatic_complexity": 4,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 2
    },
    {
      "name": "word_order_rules",
      "file_path": "src/chinese_best_practices/rules/word_order_rules.ml",
      "start_line": 15,
      "end_line": 63,
      "length": 49,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "get_rules_by_category",
      "file_path": "src/chinese_best_practices/rules/word_order_rules.ml",
      "start_line": 65,
      "end_line": 67,
      "length": 3,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "get_all_categories",
      "file_path": "src/chinese_best_practices/rules/word_order_rules.ml",
      "start_line": 69,
      "end_line": 71,
      "length": 3,
      "cyclomatic_complexity": 3,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "get_rules_by_severity",
      "file_path": "src/chinese_best_practices/rules/word_order_rules.ml",
      "start_line": 73,
      "end_line": 76,
      "length": 4,
      "cyclomatic_complexity": 4,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 2
    },
    {
      "name": "append_line",
      "file_path": "src/chinese_best_practices/reporters/violation_reporter.ml",
      "start_line": 7,
      "end_line": 10,
      "length": 4,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "count_violations_by_severity",
      "file_path": "src/chinese_best_practices/reporters/violation_reporter.ml",
      "start_line": 18,
      "end_line": 23,
      "length": 6,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "generate_violation_details",
      "file_path": "src/chinese_best_practices/reporters/violation_reporter.ml",
      "start_line": 25,
      "end_line": 43,
      "length": 19,
      "cyclomatic_complexity": 3,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 4
    },
    {
      "name": "generate_stats_report",
      "file_path": "src/chinese_best_practices/reporters/violation_reporter.ml",
      "start_line": 45,
      "end_line": 59,
      "length": 15,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 1
    },
    {
      "name": "generate_improvement_suggestions",
      "file_path": "src/chinese_best_practices/reporters/violation_reporter.ml",
      "start_line": 61,
      "end_line": 78,
      "length": 18,
      "cyclomatic_complexity": 5,
      "cognitive_complexity": 10,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 4
    },
    {
      "name": "generate_success_report",
      "file_path": "src/chinese_best_practices/reporters/violation_reporter.ml",
      "start_line": 80,
      "end_line": 86,
      "length": 7,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 1
    },
    {
      "name": "generate_practice_report",
      "file_path": "src/chinese_best_practices/reporters/violation_reporter.ml",
      "start_line": 88,
      "end_line": 103,
      "length": 16,
      "cyclomatic_complexity": 4,
      "cognitive_complexity": 3,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 1,
      "nesting_depth": 2
    },
    {
      "name": "find_character_rhyme_exn",
      "file_path": "src/poetry/core/rhyme_core_api.ml",
      "start_line": 24,
      "end_line": 28,
      "length": 5,
      "cyclomatic_complexity": 4,
      "cognitive_complexity": 3,
      "is_recursive": false,
      "parameters_count": 3,
      "match_expressions_count": 1,
      "nesting_depth": 1
    },
    {
      "name": "get_character_rhyme_group",
      "file_path": "src/poetry/core/rhyme_core_api.ml",
      "start_line": 30,
      "end_line": 32,
      "length": 3,
      "cyclomatic_complexity": 3,
      "cognitive_complexity": 2,
      "is_recursive": false,
      "parameters_count": 4,
      "match_expressions_count": 1,
      "nesting_depth": 1
    },
    {
      "name": "get_character_rhyme_category",
      "file_path": "src/poetry/core/rhyme_core_api.ml",
      "start_line": 34,
      "end_line": 38,
      "length": 5,
      "cyclomatic_complexity": 3,
      "cognitive_complexity": 2,
      "is_recursive": false,
      "parameters_count": 4,
      "match_expressions_count": 1,
      "nesting_depth": 1
    },
    {
      "name": "get_characters_by_group",
      "file_path": "src/poetry/core/rhyme_core_api.ml",
      "start_line": 40,
      "end_line": 44,
      "length": 5,
      "cyclomatic_complexity": 4,
      "cognitive_complexity": 3,
      "is_recursive": false,
      "parameters_count": 4,
      "match_expressions_count": 1,
      "nesting_depth": 1
    },
    {
      "name": "get_characters_by_category",
      "file_path": "src/poetry/core/rhyme_core_api.ml",
      "start_line": 46,
      "end_line": 50,
      "length": 5,
      "cyclomatic_complexity": 4,
      "cognitive_complexity": 3,
      "is_recursive": false,
      "parameters_count": 4,
      "match_expressions_count": 1,
      "nesting_depth": 1
    },
    {
      "name": "get_rhyme_group_description",
      "file_path": "src/poetry/core/rhyme_core_api.ml",
      "start_line": 52,
      "end_line": 54,
      "length": 3,
      "cyclomatic_complexity": 3,
      "cognitive_complexity": 2,
      "is_recursive": false,
      "parameters_count": 3,
      "match_expressions_count": 1,
      "nesting_depth": 1
    },
    {
      "name": "get_rhyme_group_examples",
      "file_path": "src/poetry/core/rhyme_core_api.ml",
      "start_line": 56,
      "end_line": 60,
      "length": 5,
      "cyclomatic_complexity": 3,
      "cognitive_complexity": 2,
      "is_recursive": false,
      "parameters_count": 4,
      "match_expressions_count": 1,
      "nesting_depth": 1
    },
    {
      "name": "can_rhyme_together",
      "file_path": "src/poetry/core/rhyme_core_api.ml",
      "start_line": 62,
      "end_line": 88,
      "length": 27,
      "cyclomatic_complexity": 20,
      "cognitive_complexity": 45,
      "is_recursive": false,
      "parameters_count": 5,
      "match_expressions_count": 2,
      "nesting_depth": 7
    },
    {
      "name": "find_rhyming_characters",
      "file_path": "src/poetry/core/rhyme_core_api.ml",
      "start_line": 90,
      "end_line": 103,
      "length": 14,
      "cyclomatic_complexity": 6,
      "cognitive_complexity": 10,
      "is_recursive": false,
      "parameters_count": 4,
      "match_expressions_count": 1,
      "nesting_depth": 4
    },
    {
      "name": "analyze_character",
      "file_path": "src/poetry/core/rhyme_core_api.ml",
      "start_line": 105,
      "end_line": 111,
      "length": 7,
      "cyclomatic_complexity": 4,
      "cognitive_complexity": 3,
      "is_recursive": false,
      "parameters_count": 4,
      "match_expressions_count": 1,
      "nesting_depth": 1
    },
    {
      "name": "analyze_verse",
      "file_path": "src/poetry/core/rhyme_core_api.ml",
      "start_line": 113,
      "end_line": 176,
      "length": 64,
      "cyclomatic_complexity": 11,
      "cognitive_complexity": 8,
      "is_recursive": false,
      "parameters_count": 4,
      "match_expressions_count": 2,
      "nesting_depth": 3
    },
    {
      "name": "analyze_poem",
      "file_path": "src/poetry/core/rhyme_core_api.ml",
      "start_line": 178,
      "end_line": 241,
      "length": 64,
      "cyclomatic_complexity": 7,
      "cognitive_complexity": 6,
      "is_recursive": false,
      "parameters_count": 5,
      "match_expressions_count": 0,
      "nesting_depth": 2
    },
    {
      "name": "take",
      "file_path": "src/poetry/core/rhyme_core_api.ml",
      "start_line": 246,
      "end_line": 247,
      "length": 2,
      "cyclomatic_complexity": 4,
      "cognitive_complexity": 2,
      "is_recursive": true,
      "parameters_count": 2,
      "match_expressions_count": 1,
      "nesting_depth": 1
    },
    {
      "name": "cache_get",
      "file_path": "src/poetry/core/rhyme_core_api.ml",
      "start_line": 271,
      "end_line": 273,
      "length": 3,
      "cyclomatic_complexity": 2,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 4,
      "match_expressions_count": 0,
      "nesting_depth": 1
    },
    {
      "name": "cache_put",
      "file_path": "src/poetry/core/rhyme_core_api.ml",
      "start_line": 275,
      "end_line": 279,
      "length": 5,
      "cyclomatic_complexity": 2,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 5,
      "match_expressions_count": 0,
      "nesting_depth": 1
    },
    {
      "name": "find_character_rhyme_cached",
      "file_path": "src/poetry/core/rhyme_core_api.ml",
      "start_line": 281,
      "end_line": 291,
      "length": 11,
      "cyclomatic_complexity": 4,
      "cognitive_complexity": 3,
      "is_recursive": false,
      "parameters_count": 4,
      "match_expressions_count": 1,
      "nesting_depth": 3
    },
    {
      "name": "get_system_stats",
      "file_path": "src/poetry/core/rhyme_core_api.ml",
      "start_line": 293,
      "end_line": 300,
      "length": 8,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "make_entry",
      "file_path": "src/poetry/core/rhyme_core_data_original.ml",
      "start_line": 20,
      "end_line": 22,
      "length": 3,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 4,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "make_group_entries",
      "file_path": "src/poetry/core/rhyme_core_data_original.ml",
      "start_line": 24,
      "end_line": 28,
      "length": 5,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 3,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "an_yun_ping_sheng_chars",
      "file_path": "src/poetry/core/rhyme_core_data_original.ml",
      "start_line": 30,
      "end_line": 80,
      "length": 51,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "an_yun_ze_sheng_chars",
      "file_path": "src/poetry/core/rhyme_core_data_original.ml",
      "start_line": 85,
      "end_line": 123,
      "length": 39,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "si_yun_ping_sheng_chars",
      "file_path": "src/poetry/core/rhyme_core_data_original.ml",
      "start_line": 130,
      "end_line": 168,
      "length": 39,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "si_yun_ze_sheng_chars",
      "file_path": "src/poetry/core/rhyme_core_data_original.ml",
      "start_line": 173,
      "end_line": 211,
      "length": 39,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "tian_yun_ping_sheng_chars",
      "file_path": "src/poetry/core/rhyme_core_data_original.ml",
      "start_line": 218,
      "end_line": 268,
      "length": 51,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "wang_yun_ze_sheng_chars",
      "file_path": "src/poetry/core/rhyme_core_data_original.ml",
      "start_line": 275,
      "end_line": 313,
      "length": 39,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "qu_yun_qu_sheng_chars",
      "file_path": "src/poetry/core/rhyme_core_data_original.ml",
      "start_line": 320,
      "end_line": 358,
      "length": 39,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "yu_yun_ping_sheng_chars",
      "file_path": "src/poetry/core/rhyme_core_data_original.ml",
      "start_line": 365,
      "end_line": 403,
      "length": 39,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "hua_yun_ping_sheng_chars",
      "file_path": "src/poetry/core/rhyme_core_data_original.ml",
      "start_line": 408,
      "end_line": 446,
      "length": 39,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "feng_yun_ping_sheng_chars",
      "file_path": "src/poetry/core/rhyme_core_data_original.ml",
      "start_line": 451,
      "end_line": 489,
      "length": 39,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "yue_yun_ze_sheng_chars",
      "file_path": "src/poetry/core/rhyme_core_data_original.ml",
      "start_line": 494,
      "end_line": 532,
      "length": 39,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "jiang_yun_ping_sheng_chars",
      "file_path": "src/poetry/core/rhyme_core_data_original.ml",
      "start_line": 537,
      "end_line": 575,
      "length": 39,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "hui_yun_ze_sheng_chars",
      "file_path": "src/poetry/core/rhyme_core_data_original.ml",
      "start_line": 580,
      "end_line": 618,
      "length": 39,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "all_rhyme_data",
      "file_path": "src/poetry/core/rhyme_core_data_original.ml",
      "start_line": 625,
      "end_line": 630,
      "length": 6,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "data_by_group",
      "file_path": "src/poetry/core/rhyme_core_data_original.ml",
      "start_line": 632,
      "end_line": 646,
      "length": 15,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "data_by_category",
      "file_path": "src/poetry/core/rhyme_core_data_original.ml",
      "start_line": 648,
      "end_line": 665,
      "length": 18,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "rhyme_group_descriptions",
      "file_path": "src/poetry/core/rhyme_core_data_original.ml",
      "start_line": 667,
      "end_line": 682,
      "length": 16,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "example_poems_by_group",
      "file_path": "src/poetry/core/rhyme_core_data_original.ml",
      "start_line": 684,
      "end_line": 699,
      "length": 16,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "character_lookup_map",
      "file_path": "src/poetry/core/rhyme_core_data_original.ml",
      "start_line": 705,
      "end_line": 709,
      "length": 5,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "find_character_rhyme_fast",
      "file_path": "src/poetry/core/rhyme_core_data_original.ml",
      "start_line": 711,
      "end_line": 715,
      "length": 5,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 4,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "character_count_by_group",
      "file_path": "src/poetry/core/rhyme_core_data_original.ml",
      "start_line": 723,
      "end_line": 725,
      "length": 3,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "character_count_by_category",
      "file_path": "src/poetry/core/rhyme_core_data_original.ml",
      "start_line": 727,
      "end_line": 728,
      "length": 2,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "make_entry",
      "file_path": "src/poetry/core/rhyme_core_data.ml",
      "start_line": 25,
      "end_line": 27,
      "length": 3,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 4,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "make_group_entries",
      "file_path": "src/poetry/core/rhyme_core_data.ml",
      "start_line": 29,
      "end_line": 33,
      "length": 5,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 3,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "tian_yun_ping_sheng_chars",
      "file_path": "src/poetry/core/rhyme_core_data.ml",
      "start_line": 35,
      "end_line": 85,
      "length": 51,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "all_rhyme_data",
      "file_path": "src/poetry/core/rhyme_core_data.ml",
      "start_line": 97,
      "end_line": 99,
      "length": 3,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "data_by_group",
      "file_path": "src/poetry/core/rhyme_core_data.ml",
      "start_line": 101,
      "end_line": 108,
      "length": 8,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "data_by_category",
      "file_path": "src/poetry/core/rhyme_core_data.ml",
      "start_line": 110,
      "end_line": 116,
      "length": 7,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "character_lookup_map",
      "file_path": "src/poetry/core/rhyme_core_data.ml",
      "start_line": 121,
      "end_line": 125,
      "length": 5,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "find_character_rhyme_fast",
      "file_path": "src/poetry/core/rhyme_core_data.ml",
      "start_line": 127,
      "end_line": 131,
      "length": 5,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 4,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "character_count_by_group",
      "file_path": "src/poetry/core/rhyme_core_data.ml",
      "start_line": 139,
      "end_line": 141,
      "length": 3,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "character_count_by_category",
      "file_path": "src/poetry/core/rhyme_core_data.ml",
      "start_line": 143,
      "end_line": 147,
      "length": 5,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "rhyme_group_descriptions",
      "file_path": "src/poetry/core/rhyme_core_data.ml",
      "start_line": 149,
      "end_line": 156,
      "length": 8,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "example_poems_by_group",
      "file_path": "src/poetry/core/rhyme_core_data.ml",
      "start_line": 158,
      "end_line": 168,
      "length": 11,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "make_entry",
      "file_path": "src/poetry/core/si_rhyme_data.ml",
      "start_line": 12,
      "end_line": 14,
      "length": 3,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 4,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "make_group_entries",
      "file_path": "src/poetry/core/si_rhyme_data.ml",
      "start_line": 16,
      "end_line": 18,
      "length": 3,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 3,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "ping_sheng_chars",
      "file_path": "src/poetry/core/si_rhyme_data.ml",
      "start_line": 20,
      "end_line": 59,
      "length": 40,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "ze_sheng_chars",
      "file_path": "src/poetry/core/si_rhyme_data.ml",
      "start_line": 64,
      "end_line": 103,
      "length": 40,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "make_entry",
      "file_path": "src/poetry/core/an_rhyme_data.ml",
      "start_line": 12,
      "end_line": 14,
      "length": 3,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 4,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "make_group_entries",
      "file_path": "src/poetry/core/an_rhyme_data.ml",
      "start_line": 16,
      "end_line": 18,
      "length": 3,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 3,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "ping_sheng_chars",
      "file_path": "src/poetry/core/an_rhyme_data.ml",
      "start_line": 20,
      "end_line": 71,
      "length": 52,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "ze_sheng_chars",
      "file_path": "src/poetry/core/an_rhyme_data.ml",
      "start_line": 76,
      "end_line": 115,
      "length": 40,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "word_class_to_string",
      "file_path": "src/poetry/data/word_class_types.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "make_word_class_list",
      "file_path": "src/poetry/data/word_class_types.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "trim_whitespace",
      "file_path": "src/poetry/data/poetry_json_parser.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "parse_string_array",
      "file_path": "src/poetry/data/poetry_json_parser.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "extract_field",
      "file_path": "src/poetry/data/poetry_json_parser.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "load_nouns",
      "file_path": "src/poetry/data/poetry_word_class_loader.ml",
      "start_line": 12,
      "end_line": 44,
      "length": 33,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 14
    },
    {
      "name": "load_verbs",
      "file_path": "src/poetry/data/poetry_word_class_loader.ml",
      "start_line": 46,
      "end_line": 80,
      "length": 35,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 15
    },
    {
      "name": "load_adjectives",
      "file_path": "src/poetry/data/poetry_word_class_loader.ml",
      "start_line": 82,
      "end_line": 118,
      "length": 37,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 16
    },
    {
      "name": "load_adverbs",
      "file_path": "src/poetry/data/poetry_word_class_loader.ml",
      "start_line": 120,
      "end_line": 136,
      "length": 17,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 7
    },
    {
      "name": "load_numerals_classifiers",
      "file_path": "src/poetry/data/poetry_word_class_loader.ml",
      "start_line": 138,
      "end_line": 154,
      "length": 17,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 7
    },
    {
      "name": "load_function_words",
      "file_path": "src/poetry/data/poetry_word_class_loader.ml",
      "start_line": 156,
      "end_line": 173,
      "length": 18,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 9
    },
    {
      "name": "get_all_data",
      "file_path": "src/poetry/data/expanded_word_class_data.ml",
      "start_line": 28,
      "end_line": 42,
      "length": 15,
      "cyclomatic_complexity": 4,
      "cognitive_complexity": 3,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 1,
      "nesting_depth": 1
    },
    {
      "name": "get_data_by_category",
      "file_path": "src/poetry/data/expanded_word_class_data.ml",
      "start_line": 44,
      "end_line": 103,
      "length": 60,
      "cyclomatic_complexity": 61,
      "cognitive_complexity": 177,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 7,
      "nesting_depth": 14
    },
    {
      "name": "nature_nouns",
      "file_path": "src/poetry/data/expanded_word_class_data.ml",
      "start_line": 171,
      "end_line": 177,
      "length": 7,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "noun_category_data",
      "file_path": "src/poetry/data/expanded_word_class_data.ml",
      "start_line": 179,
      "end_line": 193,
      "length": 15,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "verb_category_data",
      "file_path": "src/poetry/data/expanded_word_class_data.ml",
      "start_line": 195,
      "end_line": 209,
      "length": 15,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "adjective_category_data",
      "file_path": "src/poetry/data/expanded_word_class_data.ml",
      "start_line": 211,
      "end_line": 226,
      "length": 16,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "function_word_category_data",
      "file_path": "src/poetry/data/expanded_word_class_data.ml",
      "start_line": 234,
      "end_line": 236,
      "length": 3,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "all_expanded_word_class_data",
      "file_path": "src/poetry/data/expanded_word_class_data.ml",
      "start_line": 238,
      "end_line": 251,
      "length": 14,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "_get_data_statistics",
      "file_path": "src/poetry/data/expanded_word_class_data.ml",
      "start_line": 253,
      "end_line": 280,
      "length": 28,
      "cyclomatic_complexity": 2,
      "cognitive_complexity": 2,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 7
    },
    {
      "name": "is_in_expanded_word_class_database",
      "file_path": "src/poetry/data/expanded_word_class_data.ml",
      "start_line": 285,
      "end_line": 287,
      "length": 3,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "find_word_class",
      "file_path": "src/poetry/data/expanded_word_class_data.ml",
      "start_line": 292,
      "end_line": 294,
      "length": 3,
      "cyclomatic_complexity": 2,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 1
    },
    {
      "name": "get_chars_by_class",
      "file_path": "src/poetry/data/expanded_word_class_data.ml",
      "start_line": 296,
      "end_line": 302,
      "length": 7,
      "cyclomatic_complexity": 3,
      "cognitive_complexity": 2,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 1
    },
    {
      "name": "basic_person_relation_nouns",
      "file_path": "src/poetry/data/poetry_data_fallback.ml",
      "start_line": 12,
      "end_line": 24,
      "length": 13,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "basic_size_adjectives",
      "file_path": "src/poetry/data/poetry_data_fallback.ml",
      "start_line": 30,
      "end_line": 31,
      "length": 2,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "basic_degree_adverbs",
      "file_path": "src/poetry/data/poetry_data_fallback.ml",
      "start_line": 33,
      "end_line": 34,
      "length": 2,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "basic_numbers",
      "file_path": "src/poetry/data/poetry_data_fallback.ml",
      "start_line": 36,
      "end_line": 37,
      "length": 2,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "basic_classifiers",
      "file_path": "src/poetry/data/poetry_data_fallback.ml",
      "start_line": 39,
      "end_line": 40,
      "length": 2,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "basic_pronouns",
      "file_path": "src/poetry/data/poetry_data_fallback.ml",
      "start_line": 42,
      "end_line": 43,
      "length": 2,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "format_rhyme_error",
      "file_path": "src/poetry/data/rhyme_data_loader.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "ping_sheng_config",
      "file_path": "src/poetry/data/rhyme_data_loader.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "ze_sheng_config",
      "file_path": "src/poetry/data/rhyme_data_loader.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "get_data_path",
      "file_path": "src/poetry/data/rhyme_data_loader.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "read_file_content",
      "file_path": "src/poetry/data/rhyme_data_loader.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "extract_field",
      "file_path": "src/poetry/data/rhyme_data_loader.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "parse_string_array",
      "file_path": "src/poetry/data/rhyme_data_loader.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "parse_rhyme_category",
      "file_path": "src/poetry/data/rhyme_data_loader.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "parse_rhyme_group",
      "file_path": "src/poetry/data/rhyme_data_loader.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "get_rhyme_char_count",
      "file_path": "src/poetry/data/rhyme_data_loader.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "is_char_in_rhyme_database",
      "file_path": "src/poetry/data/rhyme_data_loader.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "get_char_list",
      "file_path": "src/poetry/data/rhyme_data_loader.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "get_project_root",
      "file_path": "src/poetry/data/tone_data_loader.ml",
      "start_line": 23,
      "end_line": 34,
      "length": 12,
      "cyclomatic_complexity": 3,
      "cognitive_complexity": 3,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 4
    },
    {
      "name": "tone_data_file",
      "file_path": "src/poetry/data/tone_data_loader.ml",
      "start_line": 36,
      "end_line": 39,
      "length": 4,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 1
    },
    {
      "name": "parse_string_list",
      "file_path": "src/poetry/data/tone_data_loader.ml",
      "start_line": 41,
      "end_line": 49,
      "length": 9,
      "cyclomatic_complexity": 6,
      "cognitive_complexity": 3,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 1
    },
    {
      "name": "parse_tone_data",
      "file_path": "src/poetry/data/tone_data_loader.ml",
      "start_line": 51,
      "end_line": 62,
      "length": 12,
      "cyclomatic_complexity": 17,
      "cognitive_complexity": 6,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 6
    },
    {
      "name": "load_tone_data_from_json",
      "file_path": "src/poetry/data/tone_data_loader.ml",
      "start_line": 64,
      "end_line": 74,
      "length": 11,
      "cyclomatic_complexity": 7,
      "cognitive_complexity": 8,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 3
    },
    {
      "name": "get_cached_tone_data",
      "file_path": "src/poetry/data/tone_data_loader.ml",
      "start_line": 78,
      "end_line": 85,
      "length": 8,
      "cyclomatic_complexity": 4,
      "cognitive_complexity": 3,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 1,
      "nesting_depth": 2
    },
    {
      "name": "safe_load_tone_data",
      "file_path": "src/poetry/data/tone_data_loader.ml",
      "start_line": 94,
      "end_line": 101,
      "length": 8,
      "cyclomatic_complexity": 3,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 1
    },
    {
      "name": "get_ping_sheng_chars",
      "file_path": "src/poetry/data/tone_data_loader.ml",
      "start_line": 103,
      "end_line": 106,
      "length": 4,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 1
    },
    {
      "name": "get_shang_sheng_chars",
      "file_path": "src/poetry/data/tone_data_loader.ml",
      "start_line": 108,
      "end_line": 111,
      "length": 4,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 1
    },
    {
      "name": "get_qu_sheng_chars",
      "file_path": "src/poetry/data/tone_data_loader.ml",
      "start_line": 113,
      "end_line": 116,
      "length": 4,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 1
    },
    {
      "name": "get_ru_sheng_chars",
      "file_path": "src/poetry/data/tone_data_loader.ml",
      "start_line": 118,
      "end_line": 121,
      "length": 4,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 1
    },
    {
      "name": "reload_tone_data",
      "file_path": "src/poetry/data/tone_data_loader.ml",
      "start_line": 126,
      "end_line": 129,
      "length": 4,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "validate_data",
      "file_path": "src/poetry/data/tone_data_loader.ml",
      "start_line": 131,
      "end_line": 141,
      "length": 11,
      "cyclomatic_complexity": 3,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 3
    },
    {
      "name": "expanded_rhyme_database",
      "file_path": "src/poetry/data/expanded_rhyme_data.ml",
      "start_line": 46,
      "end_line": 73,
      "length": 28,
      "cyclomatic_complexity": 15,
      "cognitive_complexity": 14,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 2,
      "nesting_depth": 2
    },
    {
      "name": "is_in_expanded_rhyme_database",
      "file_path": "src/poetry/data/expanded_rhyme_data.ml",
      "start_line": 81,
      "end_line": 83,
      "length": 3,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "register_data_source",
      "file_path": "src/poetry/data/data_source_manager.ml",
      "start_line": 42,
      "end_line": 45,
      "length": 4,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 3,
      "match_expressions_count": 0,
      "nesting_depth": 1
    },
    {
      "name": "load_rhyme_data_from_file",
      "file_path": "src/poetry/data/data_source_manager.ml",
      "start_line": 47,
      "end_line": 64,
      "length": 18,
      "cyclomatic_complexity": 6,
      "cognitive_complexity": 6,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 4
    },
    {
      "name": "remove_data_source",
      "file_path": "src/poetry/data/data_source_manager.ml",
      "start_line": 88,
      "end_line": 94,
      "length": 7,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 1
    },
    {
      "name": "get_priority_distribution",
      "file_path": "src/poetry/data/data_source_manager.ml",
      "start_line": 109,
      "end_line": 118,
      "length": 10,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 1
    },
    {
      "name": "print_registered_sources",
      "file_path": "src/poetry/data/data_source_manager.ml",
      "start_line": 120,
      "end_line": 125,
      "length": 6,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "merge_data_sources",
      "file_path": "src/poetry/data/cache_manager.ml",
      "start_line": 17,
      "end_line": 35,
      "length": 19,
      "cyclomatic_complexity": 2,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 2
    },
    {
      "name": "build_unified_database",
      "file_path": "src/poetry/data/cache_manager.ml",
      "start_line": 37,
      "end_line": 40,
      "length": 4,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 1
    },
    {
      "name": "get_unified_database",
      "file_path": "src/poetry/data/cache_manager.ml",
      "start_line": 42,
      "end_line": 51,
      "length": 10,
      "cyclomatic_complexity": 4,
      "cognitive_complexity": 3,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 1,
      "nesting_depth": 2
    },
    {
      "name": "reload_database",
      "file_path": "src/poetry/data/cache_manager.ml",
      "start_line": 56,
      "end_line": 59,
      "length": 4,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "is_char_in_database",
      "file_path": "src/poetry/data/cache_manager.ml",
      "start_line": 69,
      "end_line": 72,
      "length": 4,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 1
    },
    {
      "name": "get_char_rhyme_info",
      "file_path": "src/poetry/data/cache_manager.ml",
      "start_line": 74,
      "end_line": 77,
      "length": 4,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 1
    },
    {
      "name": "get_chars_by_rhyme_group",
      "file_path": "src/poetry/data/cache_manager.ml",
      "start_line": 79,
      "end_line": 84,
      "length": 6,
      "cyclomatic_complexity": 2,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 2
    },
    {
      "name": "get_chars_by_rhyme_category",
      "file_path": "src/poetry/data/cache_manager.ml",
      "start_line": 86,
      "end_line": 93,
      "length": 8,
      "cyclomatic_complexity": 2,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 2
    },
    {
      "name": "get_database_stats",
      "file_path": "src/poetry/data/cache_manager.ml",
      "start_line": 95,
      "end_line": 107,
      "length": 13,
      "cyclomatic_complexity": 3,
      "cognitive_complexity": 2,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 3
    },
    {
      "name": "get_cache_info",
      "file_path": "src/poetry/data/cache_manager.ml",
      "start_line": 109,
      "end_line": 120,
      "length": 12,
      "cyclomatic_complexity": 2,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 3
    },
    {
      "name": "validate_database",
      "file_path": "src/poetry/data/cache_manager.ml",
      "start_line": 122,
      "end_line": 146,
      "length": 25,
      "cyclomatic_complexity": 3,
      "cognitive_complexity": 2,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 6
    },
    {
      "name": "expanded_rhyme_char_count",
      "file_path": "src/poetry/data/cache_manager.ml",
      "start_line": 157,
      "end_line": 159,
      "length": 3,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 1
    },
    {
      "name": "basic_nature_nouns",
      "file_path": "src/poetry/data/externalized_data_loader.ml",
      "start_line": 28,
      "end_line": 50,
      "length": 23,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "safe_load_nature_nouns",
      "file_path": "src/poetry/data/externalized_data_loader.ml",
      "start_line": 58,
      "end_line": 74,
      "length": 17,
      "cyclomatic_complexity": 3,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 2
    },
    {
      "name": "safe_load_measuring_classifiers",
      "file_path": "src/poetry/data/externalized_data_loader.ml",
      "start_line": 76,
      "end_line": 84,
      "length": 9,
      "cyclomatic_complexity": 3,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 2
    },
    {
      "name": "safe_load_tools_objects",
      "file_path": "src/poetry/data/externalized_data_loader.ml",
      "start_line": 86,
      "end_line": 94,
      "length": 9,
      "cyclomatic_complexity": 3,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 2
    },
    {
      "name": "safe_load_tone_data",
      "file_path": "src/poetry/data/externalized_data_loader.ml",
      "start_line": 96,
      "end_line": 112,
      "length": 17,
      "cyclomatic_complexity": 3,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 5
    },
    {
      "name": "get_ping_sheng_list",
      "file_path": "src/poetry/data/externalized_data_loader.ml",
      "start_line": 119,
      "end_line": 121,
      "length": 3,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 1
    },
    {
      "name": "get_shang_sheng_list",
      "file_path": "src/poetry/data/externalized_data_loader.ml",
      "start_line": 123,
      "end_line": 125,
      "length": 3,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 1
    },
    {
      "name": "get_qu_sheng_list",
      "file_path": "src/poetry/data/externalized_data_loader.ml",
      "start_line": 127,
      "end_line": 129,
      "length": 3,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 1
    },
    {
      "name": "get_ru_sheng_list",
      "file_path": "src/poetry/data/externalized_data_loader.ml",
      "start_line": 131,
      "end_line": 136,
      "length": 6,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 1
    },
    {
      "name": "get_geography_politics_nouns",
      "file_path": "src/poetry/data/externalized_data_loader.ml",
      "start_line": 141,
      "end_line": 148,
      "length": 8,
      "cyclomatic_complexity": 3,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 2
    },
    {
      "name": "get_person_relation_nouns",
      "file_path": "src/poetry/data/externalized_data_loader.ml",
      "start_line": 150,
      "end_line": 157,
      "length": 8,
      "cyclomatic_complexity": 3,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 2
    },
    {
      "name": "get_social_status_nouns",
      "file_path": "src/poetry/data/externalized_data_loader.ml",
      "start_line": 159,
      "end_line": 166,
      "length": 8,
      "cyclomatic_complexity": 3,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 2
    },
    {
      "name": "get_building_place_nouns",
      "file_path": "src/poetry/data/externalized_data_loader.ml",
      "start_line": 171,
      "end_line": 178,
      "length": 8,
      "cyclomatic_complexity": 3,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 2
    },
    {
      "name": "validate_data_integrity",
      "file_path": "src/poetry/data/externalized_data_loader.ml",
      "start_line": 180,
      "end_line": 200,
      "length": 21,
      "cyclomatic_complexity": 3,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 4
    },
    {
      "name": "load_all_data",
      "file_path": "src/poetry/data/externalized_data_loader.ml",
      "start_line": 202,
      "end_line": 207,
      "length": 6,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 4
    },
    {
      "name": "convert_file_error",
      "file_path": "src/poetry/data/expanded_data_loader.ml",
      "start_line": 28,
      "end_line": 30,
      "length": 3,
      "cyclomatic_complexity": 2,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 1
    },
    {
      "name": "safe_load_nouns",
      "file_path": "src/poetry/data/expanded_data_loader.ml",
      "start_line": 32,
      "end_line": 45,
      "length": 14,
      "cyclomatic_complexity": 3,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 1
    },
    {
      "name": "safe_load_verbs",
      "file_path": "src/poetry/data/expanded_data_loader.ml",
      "start_line": 47,
      "end_line": 51,
      "length": 5,
      "cyclomatic_complexity": 3,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 1
    },
    {
      "name": "safe_load_adjectives",
      "file_path": "src/poetry/data/expanded_data_loader.ml",
      "start_line": 53,
      "end_line": 57,
      "length": 5,
      "cyclomatic_complexity": 3,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 1
    },
    {
      "name": "safe_load_adverbs",
      "file_path": "src/poetry/data/expanded_data_loader.ml",
      "start_line": 59,
      "end_line": 63,
      "length": 5,
      "cyclomatic_complexity": 3,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 1
    },
    {
      "name": "safe_load_numerals_classifiers",
      "file_path": "src/poetry/data/expanded_data_loader.ml",
      "start_line": 65,
      "end_line": 69,
      "length": 5,
      "cyclomatic_complexity": 3,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 1
    },
    {
      "name": "safe_load_function_words",
      "file_path": "src/poetry/data/expanded_data_loader.ml",
      "start_line": 71,
      "end_line": 75,
      "length": 5,
      "cyclomatic_complexity": 3,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 1
    },
    {
      "name": "read_file_content",
      "file_path": "src/poetry/data/poetry_file_reader.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "get_data_path",
      "file_path": "src/poetry/data/poetry_file_reader.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "build_filepath",
      "file_path": "src/poetry/data/file_helper.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "read_file_content",
      "file_path": "src/poetry/data/file_helper.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "file_exists_or_warn",
      "file_path": "src/poetry/data/file_helper.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "safe_read_file",
      "file_path": "src/poetry/data/file_helper.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "get_file_size",
      "file_path": "src/poetry/data/file_helper.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "is_regular_file",
      "file_path": "src/poetry/data/file_helper.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "extract_field",
      "file_path": "src/poetry/data/json_parser.ml",
      "start_line": 15,
      "end_line": 45,
      "length": 31,
      "cyclomatic_complexity": 14,
      "cognitive_complexity": 27,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 1,
      "nesting_depth": 8
    },
    {
      "name": "parse_rhyme_entry",
      "file_path": "src/poetry/data/json_parser.ml",
      "start_line": 75,
      "end_line": 83,
      "length": 9,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 5
    },
    {
      "name": "split_json_array",
      "file_path": "src/poetry/data/json_parser.ml",
      "start_line": 85,
      "end_line": 120,
      "length": 36,
      "cyclomatic_complexity": 10,
      "cognitive_complexity": 9,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 6
    },
    {
      "name": "an_yun_basic_chars",
      "file_path": "src/poetry/data/an_yun_data.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "an_yun_ban_group",
      "file_path": "src/poetry/data/an_yun_data.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "an_yun_tan_group",
      "file_path": "src/poetry/data/an_yun_data.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "an_yun_wan_group",
      "file_path": "src/poetry/data/an_yun_data.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "an_yun_nan_group",
      "file_path": "src/poetry/data/an_yun_data.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "an_yun_lan_group",
      "file_path": "src/poetry/data/an_yun_data.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "an_yun_tuan_group",
      "file_path": "src/poetry/data/an_yun_data.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "an_yun_han_group",
      "file_path": "src/poetry/data/an_yun_data.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "an_yun_gang_group",
      "file_path": "src/poetry/data/an_yun_data.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "an_yun_tang_group",
      "file_path": "src/poetry/data/an_yun_data.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "an_yun_bang_group",
      "file_path": "src/poetry/data/an_yun_data.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "an_yun_pao_group",
      "file_path": "src/poetry/data/an_yun_data.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "an_yun_bao_group",
      "file_path": "src/poetry/data/an_yun_data.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "an_yun_ping_sheng",
      "file_path": "src/poetry/data/an_yun_data.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "an_yun_char_count",
      "file_path": "src/poetry/data/an_yun_data.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "an_yun_rhyme_type",
      "file_path": "src/poetry/data/an_yun_data.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "get_all_chars",
      "file_path": "src/poetry/data/an_yun_data.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "is_an_yun_char",
      "file_path": "src/poetry/data/an_yun_data.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "get_char_list",
      "file_path": "src/poetry/data/an_yun_data.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "register_data_source",
      "file_path": "src/poetry/data/poetry_data_loader.ml",
      "start_line": 21,
      "end_line": 24,
      "length": 4,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 3,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "remove_data_source",
      "file_path": "src/poetry/data/poetry_data_loader.ml",
      "start_line": 104,
      "end_line": 108,
      "length": 5,
      "cyclomatic_complexity": 2,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 2
    },
    {
      "name": "register_yu_rhyme",
      "file_path": "src/poetry/data/data_source_registry.ml",
      "start_line": 22,
      "end_line": 25,
      "length": 4,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 1
    },
    {
      "name": "register_hua_rhyme",
      "file_path": "src/poetry/data/data_source_registry.ml",
      "start_line": 27,
      "end_line": 37,
      "length": 11,
      "cyclomatic_complexity": 3,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 1
    },
    {
      "name": "register_other_rhymes",
      "file_path": "src/poetry/data/data_source_registry.ml",
      "start_line": 39,
      "end_line": 53,
      "length": 15,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "register_backup_data",
      "file_path": "src/poetry/data/data_source_registry.ml",
      "start_line": 55,
      "end_line": 60,
      "length": 6,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "register_all_data_sources",
      "file_path": "src/poetry/data/data_source_registry.ml",
      "start_line": 62,
      "end_line": 72,
      "length": 11,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "get_registration_stats",
      "file_path": "src/poetry/data/data_source_registry.ml",
      "start_line": 74,
      "end_line": 93,
      "length": 20,
      "cyclomatic_complexity": 3,
      "cognitive_complexity": 3,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 5
    },
    {
      "name": "convert_feng_data",
      "file_path": "src/poetry/data/rhyme_groups/unified_rhyme_database.ml",
      "start_line": 115,
      "end_line": 116,
      "length": 2,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 3,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "convert_yue_data",
      "file_path": "src/poetry/data/rhyme_groups/unified_rhyme_database.ml",
      "start_line": 118,
      "end_line": 119,
      "length": 2,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 3,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "convert_jiang_data",
      "file_path": "src/poetry/data/rhyme_groups/unified_rhyme_database.ml",
      "start_line": 121,
      "end_line": 122,
      "length": 2,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 3,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "convert_hui_data",
      "file_path": "src/poetry/data/rhyme_groups/unified_rhyme_database.ml",
      "start_line": 124,
      "end_line": 129,
      "length": 6,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 3,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "expanded_rhyme_database",
      "file_path": "src/poetry/data/rhyme_groups/unified_rhyme_database.ml",
      "start_line": 131,
      "end_line": 158,
      "length": 28,
      "cyclomatic_complexity": 3,
      "cognitive_complexity": 2,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 2
    },
    {
      "name": "is_in_expanded_rhyme_database",
      "file_path": "src/poetry/data/rhyme_groups/unified_rhyme_database.ml",
      "start_line": 175,
      "end_line": 181,
      "length": 7,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "get_rhyme_data_by_category",
      "file_path": "src/poetry/data/rhyme_groups/unified_rhyme_database.ml",
      "start_line": 201,
      "end_line": 207,
      "length": 7,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "get_all_rhyme_groups",
      "file_path": "src/poetry/data/rhyme_groups/unified_rhyme_database.ml",
      "start_line": 209,
      "end_line": 216,
      "length": 8,
      "cyclomatic_complexity": 3,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "get_database_stats",
      "file_path": "src/poetry/data/rhyme_groups/unified_rhyme_database.ml",
      "start_line": 235,
      "end_line": 248,
      "length": 14,
      "cyclomatic_complexity": 5,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 2
    },
    {
      "name": "validate_database",
      "file_path": "src/poetry/data/rhyme_groups/unified_rhyme_database.ml",
      "start_line": 250,
      "end_line": 260,
      "length": 11,
      "cyclomatic_complexity": 5,
      "cognitive_complexity": 3,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 1,
      "nesting_depth": 4
    },
    {
      "name": "get_data_file_path",
      "file_path": "src/poetry/data/rhyme_groups/yu_rhyme_data.ml",
      "start_line": 22,
      "end_line": 35,
      "length": 14,
      "cyclomatic_complexity": 3,
      "cognitive_complexity": 3,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 4
    },
    {
      "name": "parse_character_group",
      "file_path": "src/poetry/data/rhyme_groups/yu_rhyme_data.ml",
      "start_line": 42,
      "end_line": 53,
      "length": 12,
      "cyclomatic_complexity": 10,
      "cognitive_complexity": 4,
      "is_recursive": false,
      "parameters_count": 2,
      "match_expressions_count": 0,
      "nesting_depth": 3
    },
    {
      "name": "get_json_data",
      "file_path": "src/poetry/data/rhyme_groups/yu_rhyme_data.ml",
      "start_line": 58,
      "end_line": 72,
      "length": 15,
      "cyclomatic_complexity": 8,
      "cognitive_complexity": 7,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 1,
      "nesting_depth": 3
    },
    {
      "name": "yu_yun_core_chars",
      "file_path": "src/poetry/data/rhyme_groups/yu_rhyme_data.ml",
      "start_line": 74,
      "end_line": 78,
      "length": 5,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 1
    },
    {
      "name": "yu_yun_jia_chars",
      "file_path": "src/poetry/data/rhyme_groups/yu_rhyme_data.ml",
      "start_line": 80,
      "end_line": 84,
      "length": 5,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 1
    },
    {
      "name": "yu_yun_qi_chars",
      "file_path": "src/poetry/data/rhyme_groups/yu_rhyme_data.ml",
      "start_line": 86,
      "end_line": 90,
      "length": 5,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 1
    },
    {
      "name": "yu_yun_fish_chars",
      "file_path": "src/poetry/data/rhyme_groups/yu_rhyme_data.ml",
      "start_line": 92,
      "end_line": 98,
      "length": 7,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 1
    },
    {
      "name": "yu_yun_ping_sheng",
      "file_path": "src/poetry/data/rhyme_groups/yu_rhyme_data.ml",
      "start_line": 100,
      "end_line": 111,
      "length": 12,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "hua_yun_basic_chars",
      "file_path": "src/poetry/data/rhyme_groups/hua_rhyme_data.ml",
      "start_line": 16,
      "end_line": 31,
      "length": 16,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "hua_yun_che_group",
      "file_path": "src/poetry/data/rhyme_groups/hua_rhyme_data.ml",
      "start_line": 33,
      "end_line": 52,
      "length": 20,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "hua_yun_xie_group",
      "file_path": "src/poetry/data/rhyme_groups/hua_rhyme_data.ml",
      "start_line": 54,
      "end_line": 70,
      "length": 17,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "hua_yun_ya_group",
      "file_path": "src/poetry/data/rhyme_groups/hua_rhyme_data.ml",
      "start_line": 72,
      "end_line": 86,
      "length": 15,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "hua_yun_yan_group",
      "file_path": "src/poetry/data/rhyme_groups/hua_rhyme_data.ml",
      "start_line": 88,
      "end_line": 116,
      "length": 29,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "hua_yun_yan_second_group",
      "file_path": "src/poetry/data/rhyme_groups/hua_rhyme_data.ml",
      "start_line": 118,
      "end_line": 149,
      "length": 32,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "hua_yun_cha_group",
      "file_path": "src/poetry/data/rhyme_groups/hua_rhyme_data.ml",
      "start_line": 151,
      "end_line": 186,
      "length": 36,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "hua_yun_ping_sheng",
      "file_path": "src/poetry/data/rhyme_groups/hua_rhyme_data.ml",
      "start_line": 188,
      "end_line": 201,
      "length": 14,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "create_rhyme_data",
      "file_path": "src/poetry/data/rhyme_groups/rhyme_group_types.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "string_of_rhyme_category",
      "file_path": "src/poetry/data/rhyme_groups/rhyme_group_types.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "string_of_rhyme_group",
      "file_path": "src/poetry/data/rhyme_groups/rhyme_group_types.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "is_ping_sheng",
      "file_path": "src/poetry/data/rhyme_groups/rhyme_group_types.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "is_ze_sheng",
      "file_path": "src/poetry/data/rhyme_groups/rhyme_group_types.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "basic_qu_sheng_chars",
      "file_path": "src/poetry/data/tone_data/qu_sheng_data.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "existence_qu_sheng_chars",
      "file_path": "src/poetry/data/tone_data/qu_sheng_data.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "transaction_qu_sheng_chars",
      "file_path": "src/poetry/data/tone_data/qu_sheng_data.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "authority_qu_sheng_chars",
      "file_path": "src/poetry/data/tone_data/qu_sheng_data.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "law_qu_sheng_chars",
      "file_path": "src/poetry/data/tone_data/qu_sheng_data.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "sensory_qu_sheng_chars",
      "file_path": "src/poetry/data/tone_data/qu_sheng_data.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "qu_sheng_chars",
      "file_path": "src/poetry/data/tone_data/qu_sheng_data.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "get_qu_sheng_chars",
      "file_path": "src/poetry/data/tone_data/qu_sheng_data.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "is_qu_sheng",
      "file_path": "src/poetry/data/tone_data/qu_sheng_data.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "parse_string_list",
      "file_path": "src/poetry/data/tone_data/tone_data_json_loader.ml",
      "start_line": 25,
      "end_line": 33,
      "length": 9,
      "cyclomatic_complexity": 6,
      "cognitive_complexity": 3,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 1
    },
    {
      "name": "parse_tone_data",
      "file_path": "src/poetry/data/tone_data/tone_data_json_loader.ml",
      "start_line": 35,
      "end_line": 46,
      "length": 12,
      "cyclomatic_complexity": 17,
      "cognitive_complexity": 6,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 6
    },
    {
      "name": "load_tone_data_from_json",
      "file_path": "src/poetry/data/tone_data/tone_data_json_loader.ml",
      "start_line": 48,
      "end_line": 58,
      "length": 11,
      "cyclomatic_complexity": 7,
      "cognitive_complexity": 8,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 3
    },
    {
      "name": "get_cached_tone_data",
      "file_path": "src/poetry/data/tone_data/tone_data_json_loader.ml",
      "start_line": 62,
      "end_line": 69,
      "length": 8,
      "cyclomatic_complexity": 4,
      "cognitive_complexity": 3,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 1,
      "nesting_depth": 2
    },
    {
      "name": "safe_load_tone_data",
      "file_path": "src/poetry/data/tone_data/tone_data_json_loader.ml",
      "start_line": 78,
      "end_line": 85,
      "length": 8,
      "cyclomatic_complexity": 3,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 1
    },
    {
      "name": "get_ping_sheng_chars",
      "file_path": "src/poetry/data/tone_data/tone_data_json_loader.ml",
      "start_line": 87,
      "end_line": 90,
      "length": 4,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 1
    },
    {
      "name": "get_shang_sheng_chars",
      "file_path": "src/poetry/data/tone_data/tone_data_json_loader.ml",
      "start_line": 92,
      "end_line": 95,
      "length": 4,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 1
    },
    {
      "name": "get_qu_sheng_chars",
      "file_path": "src/poetry/data/tone_data/tone_data_json_loader.ml",
      "start_line": 97,
      "end_line": 100,
      "length": 4,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 1
    },
    {
      "name": "get_ru_sheng_chars",
      "file_path": "src/poetry/data/tone_data/tone_data_json_loader.ml",
      "start_line": 102,
      "end_line": 105,
      "length": 4,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 1
    },
    {
      "name": "reload_tone_data",
      "file_path": "src/poetry/data/tone_data/tone_data_json_loader.ml",
      "start_line": 110,
      "end_line": 113,
      "length": 4,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "validate_data",
      "file_path": "src/poetry/data/tone_data/tone_data_json_loader.ml",
      "start_line": 115,
      "end_line": 125,
      "length": 11,
      "cyclomatic_complexity": 3,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 3
    },
    {
      "name": "get_data_file_path",
      "file_path": "src/poetry/data/tone_data/ru_sheng_data.ml",
      "start_line": 21,
      "end_line": 34,
      "length": 14,
      "cyclomatic_complexity": 3,
      "cognitive_complexity": 3,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 4
    },
    {
      "name": "get_json_data",
      "file_path": "src/poetry/data/tone_data/ru_sheng_data.ml",
      "start_line": 44,
      "end_line": 57,
      "length": 14,
      "cyclomatic_complexity": 8,
      "cognitive_complexity": 7,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 1,
      "nesting_depth": 3
    },
    {
      "name": "parse_ru_sheng_chars",
      "file_path": "src/poetry/data/tone_data/ru_sheng_data.ml",
      "start_line": 59,
      "end_line": 65,
      "length": 7,
      "cyclomatic_complexity": 7,
      "cognitive_complexity": 3,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 0,
      "nesting_depth": 1
    },
    {
      "name": "ru_sheng_chars",
      "file_path": "src/poetry/data/tone_data/ru_sheng_data.ml",
      "start_line": 67,
      "end_line": 73,
      "length": 7,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 1
    },
    {
      "name": "get_metadata",
      "file_path": "src/poetry/data/tone_data/ru_sheng_data.ml",
      "start_line": 86,
      "end_line": 99,
      "length": 14,
      "cyclomatic_complexity": 13,
      "cognitive_complexity": 6,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 6
    },
    {
      "name": "validate_data",
      "file_path": "src/poetry/data/tone_data/ru_sheng_data.ml",
      "start_line": 101,
      "end_line": 114,
      "length": 14,
      "cyclomatic_complexity": 7,
      "cognitive_complexity": 7,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 5
    },
    {
      "name": "find_data_file",
      "file_path": "src/poetry/data/rhyme_groups/ping_sheng/feng_rhyme_data.ml",
      "start_line": 37,
      "end_line": 52,
      "length": 16,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "parse_character",
      "file_path": "src/poetry/data/rhyme_groups/ping_sheng/feng_rhyme_data.ml",
      "start_line": 54,
      "end_line": 88,
      "length": 35,
      "cyclomatic_complexity": 25,
      "cognitive_complexity": 19,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 2,
      "nesting_depth": 11
    },
    {
      "name": "load_all_groups",
      "file_path": "src/poetry/data/rhyme_groups/ping_sheng/feng_rhyme_data.ml",
      "start_line": 90,
      "end_line": 113,
      "length": 24,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 1
    },
    {
      "name": "yue_yun_basic_chars",
      "file_path": "src/poetry/data/rhyme_groups/ze_sheng/yue_rhyme_data.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "yue_yun_lie_group",
      "file_path": "src/poetry/data/rhyme_groups/ze_sheng/yue_rhyme_data.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "yue_yun_que_group",
      "file_path": "src/poetry/data/rhyme_groups/ze_sheng/yue_rhyme_data.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "yue_yun_qu_group",
      "file_path": "src/poetry/data/rhyme_groups/ze_sheng/yue_rhyme_data.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "yue_yun_ru_group",
      "file_path": "src/poetry/data/rhyme_groups/ze_sheng/yue_rhyme_data.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "yue_yun_rui_group",
      "file_path": "src/poetry/data/rhyme_groups/ze_sheng/yue_rhyme_data.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "yue_yun_shui_group",
      "file_path": "src/poetry/data/rhyme_groups/ze_sheng/yue_rhyme_data.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "yue_yun_she_group",
      "file_path": "src/poetry/data/rhyme_groups/ze_sheng/yue_rhyme_data.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "yue_yun_ya_group",
      "file_path": "src/poetry/data/rhyme_groups/ze_sheng/yue_rhyme_data.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "yue_yun_ze_sheng",
      "file_path": "src/poetry/data/rhyme_groups/ze_sheng/yue_rhyme_data.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "get_all_data",
      "file_path": "src/poetry/data/rhyme_groups/ze_sheng/yue_rhyme_data.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "get_char_count",
      "file_path": "src/poetry/data/rhyme_groups/ze_sheng/yue_rhyme_data.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "hui_yun_core_chars",
      "file_path": "src/poetry/data/rhyme_groups/ze_sheng/hui_rhyme_data.ml",
      "start_line": 35,
      "end_line": 48,
      "length": 14,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "hui_yun_dai_series",
      "file_path": "src/poetry/data/rhyme_groups/ze_sheng/hui_rhyme_data.ml",
      "start_line": 50,
      "end_line": 63,
      "length": 14,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "hui_yun_mai_series",
      "file_path": "src/poetry/data/rhyme_groups/ze_sheng/hui_rhyme_data.ml",
      "start_line": 65,
      "end_line": 74,
      "length": 10,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "hui_yun_pai_series",
      "file_path": "src/poetry/data/rhyme_groups/ze_sheng/hui_rhyme_data.ml",
      "start_line": 76,
      "end_line": 84,
      "length": 9,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "hui_yun_chai_series",
      "file_path": "src/poetry/data/rhyme_groups/ze_sheng/hui_rhyme_data.ml",
      "start_line": 86,
      "end_line": 93,
      "length": 8,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "hui_yun_cai_series",
      "file_path": "src/poetry/data/rhyme_groups/ze_sheng/hui_rhyme_data.ml",
      "start_line": 95,
      "end_line": 107,
      "length": 13,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "hui_yun_lai_series",
      "file_path": "src/poetry/data/rhyme_groups/ze_sheng/hui_rhyme_data.ml",
      "start_line": 109,
      "end_line": 118,
      "length": 10,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "hui_yun_hai_series",
      "file_path": "src/poetry/data/rhyme_groups/ze_sheng/hui_rhyme_data.ml",
      "start_line": 120,
      "end_line": 127,
      "length": 8,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "hui_yun_sui_series",
      "file_path": "src/poetry/data/rhyme_groups/ze_sheng/hui_rhyme_data.ml",
      "start_line": 129,
      "end_line": 141,
      "length": 13,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "hui_yun_zong_series",
      "file_path": "src/poetry/data/rhyme_groups/ze_sheng/hui_rhyme_data.ml",
      "start_line": 143,
      "end_line": 153,
      "length": 11,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "hui_yun_song_series",
      "file_path": "src/poetry/data/rhyme_groups/ze_sheng/hui_rhyme_data.ml",
      "start_line": 155,
      "end_line": 166,
      "length": 12,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "hui_yun_cong_series",
      "file_path": "src/poetry/data/rhyme_groups/ze_sheng/hui_rhyme_data.ml",
      "start_line": 168,
      "end_line": 176,
      "length": 9,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "hui_yun_chong_series",
      "file_path": "src/poetry/data/rhyme_groups/ze_sheng/hui_rhyme_data.ml",
      "start_line": 178,
      "end_line": 188,
      "length": 11,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "hui_yun_dong_series",
      "file_path": "src/poetry/data/rhyme_groups/ze_sheng/hui_rhyme_data.ml",
      "start_line": 190,
      "end_line": 192,
      "length": 3,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "hui_yun_feng_series",
      "file_path": "src/poetry/data/rhyme_groups/ze_sheng/hui_rhyme_data.ml",
      "start_line": 194,
      "end_line": 206,
      "length": 13,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "hui_yun_traditional_series",
      "file_path": "src/poetry/data/rhyme_groups/ze_sheng/hui_rhyme_data.ml",
      "start_line": 208,
      "end_line": 220,
      "length": 13,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "find_data_file",
      "file_path": "src/poetry/data/rhyme_groups/ze_sheng/hui_rhyme_data.ml",
      "start_line": 223,
      "end_line": 238,
      "length": 16,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "parse_character",
      "file_path": "src/poetry/data/rhyme_groups/ze_sheng/hui_rhyme_data.ml",
      "start_line": 240,
      "end_line": 276,
      "length": 37,
      "cyclomatic_complexity": 25,
      "cognitive_complexity": 19,
      "is_recursive": false,
      "parameters_count": 1,
      "match_expressions_count": 2,
      "nesting_depth": 11
    },
    {
      "name": "hui_yun_ze_sheng",
      "file_path": "src/poetry/data/rhyme_groups/ze_sheng/hui_rhyme_data.ml",
      "start_line": 283,
      "end_line": 291,
      "length": 9,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 0,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "create_jiang_rhyme_entry",
      "file_path": "src/poetry/data/rhyme_groups/ze_sheng/jiang_rhyme_data.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "create_entries",
      "file_path": "src/poetry/data/rhyme_groups/ze_sheng/jiang_rhyme_data.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "jiang_core_chars",
      "file_path": "src/poetry/data/rhyme_groups/ze_sheng/jiang_rhyme_data.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "zhuang_group_chars",
      "file_path": "src/poetry/data/rhyme_groups/ze_sheng/jiang_rhyme_data.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "qiang_group_chars",
      "file_path": "src/poetry/data/rhyme_groups/ze_sheng/jiang_rhyme_data.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "cang_group_chars",
      "file_path": "src/poetry/data/rhyme_groups/ze_sheng/jiang_rhyme_data.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "gang_group_chars",
      "file_path": "src/poetry/data/rhyme_groups/ze_sheng/jiang_rhyme_data.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "tang_group_chars",
      "file_path": "src/poetry/data/rhyme_groups/ze_sheng/jiang_rhyme_data.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "bang_group_chars",
      "file_path": "src/poetry/data/rhyme_groups/ze_sheng/jiang_rhyme_data.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "bao_group_chars",
      "file_path": "src/poetry/data/rhyme_groups/ze_sheng/jiang_rhyme_data.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "all_jiang_chars",
      "file_path": "src/poetry/data/rhyme_groups/ze_sheng/jiang_rhyme_data.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "jiang_yun_ze_sheng",
      "file_path": "src/poetry/data/rhyme_groups/ze_sheng/jiang_rhyme_data.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "get_all_data",
      "file_path": "src/poetry/data/rhyme_groups/ze_sheng/jiang_rhyme_data.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    },
    {
      "name": "get_char_count",
      "file_path": "src/poetry/data/rhyme_groups/ze_sheng/jiang_rhyme_data.ml",
      "start_line": 0,
      "end_line": 0,
      "length": 0,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1,
      "is_recursive": false,
      "parameters_count": 0,
      "match_expressions_count": 0,
      "nesting_depth": 0
    }
  ],
  "validation_score": 0.8566666666666666,
  "analysis_timestamp": "Sat Jul 26 13:01:17 EDT 2025",
  "tool_version": "2.0.0-ast-based"
}