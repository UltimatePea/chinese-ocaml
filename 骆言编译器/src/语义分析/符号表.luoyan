(*
 * 符号表 - 符号表管理和作用域处理
 * 管理变量绑定、类型定义和函数签名
 *)

(* 引入基础模块 *)
使用 基础工具.工具库
使用 基础工具.位置信息
使用 基础工具.错误处理

(* 符号类型 *)
类型 符号类型 =
  | 变量符号 的 字符串 * 位置范围
  | 函数符号 的 字符串 * 字符串 列表 * 位置范围
  | 类型符号 的 字符串 * 位置范围
  | 构造器符号 的 字符串 * 字符串 * 位置范围

(* 符号绑定 *)
类型 符号绑定 = {
  名称: 字符串;
  符号类型: 符号类型;
  定义位置: 位置范围;
  可变: 布尔值;
}

(* 作用域类型 *)
类型 作用域 = {
  父作用域: 作用域 选项;
  绑定表: (字符串, 符号绑定) 字典;
  mutable 作用域级别: 整数;
}

(* 符号表类型 *)
类型 符号表 = {
  mutable 当前作用域: 作用域;
  mutable 全局作用域: 作用域;
  错误收集器: 错误收集器;
}

(* 创建新作用域 *)
让 创建作用域 = 函数 父作用域 级别 ->
  {
    父作用域 = 父作用域;
    绑定表 = 创建字典 ();
    作用域级别 = 级别;
  }

(* 创建符号表 *)
让 创建符号表 = 函数 错误收集器 ->
  let 全局作用域 = 创建作用域 无 0 在
  {
    当前作用域 = 全局作用域;
    全局作用域 = 全局作用域;
    错误收集器 = 错误收集器;
  }

(* 进入新作用域 *)
让 进入作用域 = 函数 符号表 ->
  let 新级别 = 符号表.当前作用域.作用域级别 + 1 在
  let 新作用域 = 创建作用域 (有 符号表.当前作用域) 新级别 在
  符号表.当前作用域 := 新作用域

(* 退出当前作用域 *)
让 退出作用域 = 函数 符号表 ->
  匹配 符号表.当前作用域.父作用域 的
  | 无 -> 
      添加编译错误 符号表.错误收集器
        (语义错误 ("无法退出全局作用域", 创建初始位置 ""))
  | 有 父作用域 ->
      符号表.当前作用域 := 父作用域

(* 创建符号绑定 *)
让 创建符号绑定 = 函数 名称 符号类型 位置 可变 ->
  {
    名称 = 名称;
    符号类型 = 符号类型;
    定义位置 = 位置;
    可变 = 可变;
  }

(* 在当前作用域中绑定符号 *)
让 绑定符号 = 函数 符号表 名称 符号类型 位置 可变 ->
  if 字典包含键 符号表.当前作用域.绑定表 名称 then (
    添加编译错误 符号表.错误收集器
      (语义错误 ("符号 '" ^ 名称 ^ "' 已在当前作用域中定义", 位置));
    false
  ) else (
    let 绑定 = 创建符号绑定 名称 符号类型 位置 可变 在
    字典添加 符号表.当前作用域.绑定表 名称 绑定;
    true
  )

(* 在当前作用域中查找符号 *)
让 在作用域中查找符号 = 函数 作用域 名称 ->
  if 字典包含键 作用域.绑定表 名称 then
    有 (字典获取 作用域.绑定表 名称)
  else
    无

(* 递归查找符号（向上查找作用域链） *)
让 递归 查找符号 = 函数 符号表 名称 ->
  let 递归 查找 = 函数 作用域 ->
    匹配 在作用域中查找符号 作用域 名称 的
    | 有 绑定 -> 有 绑定
    | 无 ->
        匹配 作用域.父作用域 的
        | 无 -> 无
        | 有 父作用域 -> 查找 父作用域
  在
  查找 符号表.当前作用域

(* 查找符号，如果不存在则报错 *)
让 查找符号或报错 = 函数 符号表 名称 位置 ->
  匹配 查找符号 符号表 名称 的
  | 有 绑定 -> 有 绑定
  | 无 ->
      添加编译错误 符号表.错误收集器
        (语义错误 ("未定义的符号 '" ^ 名称 ^ "'", 位置));
      无

(* 检查符号是否可变 *)
让 符号是否可变 = 函数 绑定 ->
  绑定.可变

(* 获取符号类型 *)
让 获取符号类型 = 函数 绑定 ->
  绑定.符号类型

(* 获取符号定义位置 *)
让 获取符号位置 = 函数 绑定 ->
  绑定.定义位置

(* 列出当前作用域中的所有符号 *)
让 列出当前作用域符号 = 函数 符号表 ->
  字典键列表 符号表.当前作用域.绑定表

(* 获取当前作用域级别 *)
让 获取作用域级别 = 函数 符号表 ->
  符号表.当前作用域.作用域级别

(* 是否在全局作用域 *)
让 在全局作用域 = 函数 符号表 ->
  符号表.当前作用域.作用域级别 = 0

(* 初始化全局符号表（预定义符号） *)
让 初始化全局符号 = 函数 符号表 ->
  let 位置 = 创建初始位置 "<内置>" 在
  
  (* 添加内置类型 *)
  忽略 (绑定符号 符号表 "整数" (类型符号 ("整数", 位置)) 位置 false);
  忽略 (绑定符号 符号表 "浮点数" (类型符号 ("浮点数", 位置)) 位置 false);
  忽略 (绑定符号 符号表 "字符串" (类型符号 ("字符串", 位置)) 位置 false);
  忽略 (绑定符号 符号表 "布尔值" (类型符号 ("布尔值", 位置)) 位置 false);
  忽略 (绑定符号 符号表 "单元" (类型符号 ("单元", 位置)) 位置 false);
  
  (* 添加内置函数 *)
  忽略 (绑定符号 符号表 "打印" (函数符号 ("打印", ["字符串"], 位置)) 位置 false);
  忽略 (绑定符号 符号表 "打印整数" (函数符号 ("打印整数", ["整数"], 位置)) 位置 false);
  忽略 (绑定符号 符号表 "长度" (函数符号 ("长度", ["列表"], 位置)) 位置 false);
  
  (* 添加内置值 *)
  忽略 (绑定符号 符号表 "真" (变量符号 ("真", 位置)) 位置 false);
  忽略 (绑定符号 符号表 "假" (变量符号 ("假", 位置)) 位置 false)

(* 调试：打印作用域信息 *)
让 调试打印作用域 = 函数 符号表 ->
  let 递归 打印作用域 = 函数 作用域 缩进 ->
    打印字符串 (缩进 ^ "作用域级别: " ^ (字符串化整数 作用域.作用域级别));
    打印换行 ();
    let 符号列表 = 字典键列表 作用域.绑定表 在
    List.iter (函数 名称 ->
      let 绑定 = 字典获取 作用域.绑定表 名称 在
      打印字符串 (缩进 ^ "  " ^ 名称 ^ ": ");
      匹配 绑定.符号类型 的
      | 变量符号 (类型, _) -> 打印字符串 ("变量 " ^ 类型)
      | 函数符号 (返回类型, 参数类型, _) -> 
          打印字符串 ("函数 (" ^ (字符串连接 ", " 参数类型) ^ " -> " ^ 返回类型 ^ ")")
      | 类型符号 (类型名, _) -> 打印字符串 ("类型 " ^ 类型名)
      | 构造器符号 (构造器名, 类型名, _) -> 
          打印字符串 ("构造器 " ^ 构造器名 ^ " : " ^ 类型名);
      打印换行 ();
    ) 符号列表;
    匹配 作用域.父作用域 的
    | 无 -> ()
    | 有 父作用域 -> 打印作用域 父作用域 ("  " ^ 缩进)
  在
  打印字符串 "符号表内容:";
  打印换行 ();
  打印作用域 符号表.当前作用域 ""