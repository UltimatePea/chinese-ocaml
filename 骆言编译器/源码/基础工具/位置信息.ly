（*
 * 位置信息模块
 * 用于跟踪源代码位置，提供精确的错误报告
 *）

「：位置信息类型：」
类型 位置={
  文件名: 字符串;
  行号: 整数;
  列号: 整数;
  偏移量: 整数;
}

「：位置范围类型：」
类型 位置范围={
  开始位置: 位置;
  结束位置: 位置;
}

「：创建初始位置：」
夫「创建初始位置」者受 文件名 焉算法乃 {
  文件名=文件名;
  行号=1;
  列号=1;
  偏移量=0;
} 是谓

「：前进一个字符的位置：」
夫「前进位置」者受 位置 字符 焉算法乃
  观「字符」之性
  | '\n' -> {
      文件名=位置.文件名;
      行号=位置.行号 + 1;
      列号=1;
      偏移量=位置.偏移量 + 1;
    }
  | _ -> {
      文件名=位置.文件名;
      行号=位置.行号;
      列号=位置.列号 + 1;
      偏移量=位置.偏移量 + 1;
    }
  观毕
是谓

「：创建位置范围：」
夫「创建位置范围」者受 开始 结束 焉算法乃 {
  开始位置=开始;
  结束位置=结束;
} 是谓

「：格式化位置信息：」
夫「格式化位置」者受 位置 焉算法乃
  位置.文件名 ^ 『:』 ^ 
  （整数转字符串 位置.行号） ^ 『:』 ^ 
  （整数转字符串 位置.列号）
是谓

「：格式化位置范围：」
夫「格式化位置范围」者受 范围 焉算法乃
  如果 范围.开始位置.文件名=范围.结束位置.文件名 那么
    如果 范围.开始位置.行号=范围.结束位置.行号 那么
      「：同一行：」
      范围.开始位置.文件名 ^ 『:』 ^ 
      （整数转字符串 范围.开始位置.行号） ^ 『:』 ^
      （整数转字符串 范围.开始位置.列号） ^ 『-』 ^
      （整数转字符串 范围.结束位置.列号）
    否则
      「：多行：」
      范围.开始位置.文件名 ^ 『:』 ^ 
      （整数转字符串 范围.开始位置.行号） ^ 『:』 ^
      （整数转字符串 范围.开始位置.列号） ^ 『-』 ^
      （整数转字符串 范围.结束位置.行号） ^ 『:』 ^
      （整数转字符串 范围.结束位置.列号）
  否则
    「：不同文件：」
    （格式化位置 范围.开始位置） ^ 『 to 』 ^ （格式化位置 范围.结束位置）
是谓

「：比较位置：」
夫「位置比较」者受 位置1 位置2 焉算法乃
  设「文件比较」为字符串比较 位置1.文件名 位置2.文件名 在
  如果 文件比较 !=0 那么 文件比较
  否则 
    设「行比较」为整数比较 位置1.行号 位置2.行号 在
    如果 行比较 !=0 那么 行比较
    否则 整数比较 位置1.列号 位置2.列号
是谓

「：检查位置是否在范围内：」
夫「位置在范围内」者受 位置 范围 焉算法乃
  （位置比较 范围.开始位置 位置） <=0 &&
  （位置比较 位置 范围.结束位置） <=0
是谓

「：合并两个位置范围：」
夫「合并位置范围」者受 范围1 范围2 焉算法乃
  设「开始」为如果 （位置比较 范围1.开始位置 范围2.开始位置） <=0 
            那么 范围1.开始位置 
            否则 范围2.开始位置 在
  设「结束」为如果 （位置比较 范围1.结束位置 范围2.结束位置） >=0 
            那么 范围1.结束位置 
            否则 范围2.结束位置 在
  创建位置范围 开始 结束
是谓

「：扩展位置范围：」
夫「扩展位置范围」者受 范围 位置 焉算法乃
  设「开始」为如果 （位置比较 范围.开始位置 位置） <=0 
            那么 范围.开始位置 
            否则 位置 在
  设「结束」为如果 （位置比较 范围.结束位置 位置） >=0 
            那么 范围.结束位置 
            否则 位置 在
  创建位置范围 开始 结束
是谓