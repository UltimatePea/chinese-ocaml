(乘
*
*
*

「:引入基础模块:」
使用 基础工具点工具库
使用 基础工具点位置信息
使用 基础工具点错误处理

「:词法单元类型:」
类型 词法单元类型等于  「:字面量:」
  或 整数词法单元 的 整数
  或 浮点词法单元 的 浮点数
  或 字符串词法单元 的 字符串
  或 布尔词法单元 的 布尔值

  「:标识符和关键字:」
  或 标识符词法单元 的 字符串
  或 关键字词法单元 的 字符串

  「:运算符:」
  或 加号 或 减号 或 乘号 或 除号 或 模运算符
  或 等号 或 不等号 或 小于号 或 小于等于号 或 大于号 或 大于等于号
  或 逻辑与符号 或 逻辑或符号 或 逻辑非符号
  或 赋值符号 或 字符串连接符号

  「:分隔符:」
  或 左括号 或 右括号 或 左方括号 或 右方括号 或 左花括号 或 右花括号
  或 逗号 或 分号 或 冒号 或 点号 或 双冒号 或 箭头 或 管道符号

  「:特殊:」
  或 文件结束
  或 换行符

「:带位置的词法单元:」
类型 词法单元等于「
  类型: 词法单元类型;
  位置: 位置范围;
  原始文本: 字符串;
」

「:词法分析器状态:」
类型 词法分析器状态等于「
  输入: 字符串;
  可变 当前位置:位置;
  可变 字符索引:整数;
  文件名: 字符串;
  错误收集器: 错误收集器;
」

「:中文关键字映射:」
设「中文关键字表」为(列开始 (『让』 其一 『让』) 其二 (『函数』 其三 『函数』) 其一 (『如果』 其二 『如果』) 其三 (『那么』 其一 『那么』) 其二 (『否则』 其三 『否则』) 其一 (『匹配』 其二 『匹配』) 其三 (『的』 其一 『的』) 其二 (『在』 其三 『在』) 其一 (『类型』 其二 『类型』) 其三 (『递归』 其一 『递归』) 其二 (『和』 其三 『和』) 其一 (『真』 其二 『真』) 其三 (『假』 其一 『假』) 其二 (『模块』 其三 『模块』) 其一 (『使用』 其二 『使用』) 其三 (『异常』 其一 『异常』) 其二 (『抛出』 其三 『抛出』) 其一 (『捕获』 其二 『捕获』) 其三 (『当』 其一 『当』) 其二 (『循环』 其三 『循环』) 其一 「:保留英文关键字作为备选:」
  (『迭代』 其二 『迭代』) 其三 (『跳出』 其一 『跳出』) 其二 (『继续』 其三 『继续』) 其一 列结束)

「:检查是否是关键字:」
夫「是关键字」者受 标识符 焉算法乃
  列表存在 (函数 (关键字「」下划线) 箭头 关键字等于标识符) 中文关键字表
也

「:创建词法分析器状态:」
夫「创建词法分析器」者受 输入 文件名 焉算法乃
  设「错误收集器」为创建错误收集器 () 在 「
    输入等于输入;
    当前位置等于创建初始位置 文件名;
    字符索引等于零;
    文件名等于文件名;
    错误收集器等于错误收集器;
  」
也

「:获取当前字符:」
夫「当前字符」者受 状态 焉算法乃
  若 状态点字符索引 大于等于字符串长度 状态点输入 则 答
    无
  余者答
    有 (状态点输入点(「列开始 状态点字符索引 其一 列结束」))
也

「:前进一个字符:」
夫「前进字符」者受 状态 焉算法乃
  观 当前字符 状态 之 性
  或 无 减大于 ()
  或 有 字符 减大于
      状态点当前位置 赋值为前进位置 状态点当前位置 字符;
      状态点字符索引 赋值为状态点字符索引 加 一
  观毕
也

「:跳过空白字符:」
夫 递归 跳过空白 者 受 状态 焉算法乃
  观 当前字符 状态 之 性
  或 有 (『 『 或 『\项『 或 『\行『) 减大于
      前进字符 状态;
      跳过空白 状态
  或 下划线 减大于 ()
  观毕
也

「:跳过注释:」
夫 递归 跳过行注释 者 受 状态 焉算法乃
  观 当前字符 状态 之 性
  或 有 『\数『 或 无 减大于 ()
  或 有 下划线 减大于
      前进字符 状态;
      跳过行注释 状态
  观毕
也

「:读取标识符或关键字:」
夫「读取标识符」者受 状态 焉算法乃
  设「开始位置」为状态点当前位置 在
  设「缓冲区」为引用 『』 在

  设 递归 读取字符为函数 () 减大于
    观 当前字符 状态 之 性
    或 有 字符 当 是字母或数字或下划线 字符 减大于
        缓冲区 :等于!缓冲区 乘方 (字符转字符串 字符);
        前进字符 状态;
        读取字符 ()
    或 下划线 减大于 !缓冲区
    观毕
  在

  设「标识符」为读取字符 () 在
  设「结束位置」为状态点当前位置 在
  设「位置范围」为创建位置范围 开始位置 结束位置 在

  若 是关键字 标识符 则 答
    关键字词法单元 标识符
  余者答
    标识符词法单元 标识符
也

「:读取数字字面量:」
夫「读取数字」者受 状态 焉算法乃
  设「开始位置」为状态点当前位置 在
  设「缓冲区」为引用 『』 在
  设「是浮点数」为引用 假 在

  设 递归 读取数字字符为函数 () 减大于
    观 当前字符 状态 之 性
    或 有 字符 当 是数字 字符 减大于
        缓冲区 :等于!缓冲区 乘方 (字符转字符串 字符);
        前进字符 状态;
        读取数字字符 ()
    或 有 『点『 当 不是 !是浮点数 减大于
        是浮点数 :等于真;
        缓冲区 :等于!缓冲区 乘方 『点』;
        前进字符 状态;
        读取数字字符 ()
    或 下划线 减大于 !缓冲区
    观毕
  在

  设「数字字符串」为读取数字字符 () 在
  设「结束位置」为状态点当前位置 在
  设「位置范围」为创建位置范围 开始位置 结束位置 在

  若 !是浮点数 则 答
    浮点词法单元 (字符串转浮点数 数字字符串)
  余者答
    整数词法单元 (字符串转整数 数字字符串)
也

「:读取字符串字面量:」
夫「读取字符串字面量」者受 状态 焉算法乃
  设「开始位置」为状态点当前位置 在
  设「缓冲区」为引用 『』 在

  「:跳过开始的引号:」
  前进字符 状态;

  设 递归 读取字符串字符为函数 () 减大于
    观 当前字符 状态 之 性
    或 无 减大于
        添加编译错误 状态点错误收集器
          (词法错误 (『未终止的字符串字面量』, 状态点当前位置));
        !缓冲区
    或 有 『』『 减大于
        前进字符 状态;  「:跳过结束引号:」
        !缓冲区
    或 有 『\\『 减大于
        前进字符 状态;
        观 当前字符 状态 之 性
        或 有 『数『 减大于 缓冲区 :等于!缓冲区 乘方 『\数』; 前进字符 状态
        或 有 『项『 减大于 缓冲区 :等于!缓冲区 乘方 『\项』; 前进字符 状态
        或 有 『行『 减大于 缓冲区 :等于!缓冲区 乘方 『\行』; 前进字符 状态
        或 有 『\\『 减大于 缓冲区 :等于!缓冲区 乘方 『\\』; 前进字符 状态
        或 有 『『『 减大于 缓冲区 :等于!缓冲区 乘方 』\『』; 前进字符 状态
        或 有 字符 减大于
            缓冲区 :等于!缓冲区 乘方 (字符转字符串 字符);
            前进字符 状态
        或 无 减大于
            添加编译错误 状态点错误收集器
              (词法错误 (『未终止的转义序列』, 状态点当前位置))
        观毕;
        读取字符串字符 ()
    或 有 字符 减大于
        缓冲区 :等于!缓冲区 乘方 (字符转字符串 字符);
        前进字符 状态;
        读取字符串字符 ()
    观毕
  在

  设「字符串内容」为读取字符串字符 () 在
  设「结束位置」为状态点当前位置 在
  设「位置范围」为创建位置范围 开始位置 结束位置 在

  字符串词法单元 字符串内容
也

「:读取双字符运算符:」
夫「尝试读取双字符运算符」者受 状态 第一字符 焉算法乃
  若 状态点字符索引 加 1 大于等于字符串长度 状态点输入 则 答
    无
  余者答
    设「第二字符」为状态点输入点(列开始 状态点字符索引 加 1 其一 列结束) 在
    观 (第一字符, 第二字符) 之 性
    或 (『等于『, 『等于『) 减大于 有 等号
    或 (『!『, 『等于『) 减大于 有 不等号
    或 (『小于『, 『等于『) 减大于 有 小于等于号
    或 (『大于『, 『等于『) 减大于 有 大于等于号
    或 (『和『, 『和『) 减大于 有 逻辑与符号
    或 (『或『, 『或『) 减大于 有 逻辑或符号
    或 (『:『, 『:『) 减大于 有 双冒号
    或 (『减『, 『大于『) 减大于 有 箭头
    或 (『乘方『, 『乘方『) 减大于 有 字符串连接符号
    或 下划线 减大于 无
    观毕
也

「:词法分析主函数:」
夫「获取下一个词法单元」者受 状态 焉算法乃
  跳过空白 状态;

  设「开始位置」为状态点当前位置 在

  观 当前字符 状态 之 性
  或 无 减大于 「
      类型等于文件结束;
      位置等于创建位置范围 开始位置 开始位置;
      原始文本等于『』;
    」

  或 有 『\数『 减大于
      让 结束位置等于状态点当前位置 在
      前进字符 状态;
      「
        类型等于换行符;
        位置等于创建位置范围 开始位置 结束位置;
        原始文本等于『\数』;
      」

  「:注释:」
  或 有 『号」 -〉
      跳过行注释 状态;
      获取下一个词法单元 状态  「:递归获取下一个有效词法单元:」

  「:字符串字面量:」
  或 有 『』『 减大于
      让 词法单元类型等于读取字符串字面量 状态 在
      让 结束位置等于状态点当前位置 在
      「
        类型等于词法单元类型;
        位置等于创建位置范围 开始位置 结束位置;
        原始文本等于『字符串』;  「:简化:」
      」

  「:数字:」
  或 有 字符 当 是数字 字符 减大于
      让 词法单元类型等于读取数字 状态 在
      让 结束位置等于状态点当前位置 在
      「
        类型等于词法单元类型;
        位置等于创建位置范围 开始位置 结束位置;
        原始文本等于『数字』;  「:简化:」
      」

  「:标识符和关键字:」
  或 有 字符 当 是字母或中文 字符 减大于
      让 词法单元类型等于读取标识符 状态 在
      让 结束位置等于状态点当前位置 在
      「
        类型等于词法单元类型;
        位置等于创建位置范围 开始位置 结束位置;
        原始文本等于『标识符』;  「:简化:」
      」

  「:运算符和分隔符:」
  或 有 字符 减大于
      「:首先尝试双字符运算符:」
      观 尝试读取双字符运算符 状态 字符 之 性
      或 有 双字符运算符 减大于
          前进字符 状态;  「:跳过第一个字符:」
          前进字符 状态;  「:跳过第二个字符:」
          设「结束位置」为状态点当前位置 在
          「
            类型等于双字符运算符;
            位置等于创建位置范围 开始位置 结束位置;
            原始文本等于『双字符运算符』;
          」
      或 无 减大于
          「:单字符运算符或分隔符:」
          设「词法单元类型」为观「字符」之性
            或 『加『 减大于 加号
            或 『减『 减大于 减号
            或 『乘『 减大于 乘号
            或 『除『 减大于 除号
            或 『百分『 减大于 模运算符
            或 『等于『 减大于 赋值符号
            或 『小于『 减大于 小于号
            或 『大于『 减大于 大于号
            或 『!『 减大于 逻辑非符号
            或 『(『 减大于 左括号
            或 『)『 减大于 右括号
            或 『(列开始 『 减大于 左方括号
            或 『 其一 列结束)『 减大于 右方括号
            或 『「『 减大于 左花括号
            或 『」『 减大于 右花括号
            或 『,『 减大于 逗号
            或 『;『 减大于 分号
            或 『:『 减大于 冒号
            或 『点『 减大于 点号
            或 『或『 减大于 管道符号
            或 下划线 减大于
                添加编译错误 状态点错误收集器
                  (词法错误 (『未识别的字符: 』 乘方 (字符转字符串 字符), 状态点当前位置));
                标识符词法单元 『错误』
          观毕 在
          前进字符 状态;
          设「结束位置」为状态点当前位置 在
          「
            类型等于词法单元类型;
            位置等于创建位置范围 开始位置 结束位置;
            原始文本等于字符转字符串 字符;
          」
      观毕
  观毕
也

「:词法分析入口函数:」
夫「词法分析」者受 输入 文件名 焉算法乃
  设「状态」为创建词法分析器 输入 文件名 在
  设「词法单元列表」为引用 空空如也 在

  设 递归 收集词法单元为函数 () 减大于
    设「词法单元」为获取下一个词法单元 状态 在
    词法单元列表 :等于词法单元 :: !词法单元列表;
    观「词法单元点类型」之性
    或 文件结束 减大于 列表点反转 !词法单元列表
    或 下划线 减大于 收集词法单元 ()
    观毕
  在

  设「结果词法单元」为收集词法单元 () 在

  若 有错误 状态点错误收集器 则 答
    创建失败结果 状态点错误收集器
  余者答
    创建成功结果 结果词法单元 状态点错误收集器
也

「:辅助函数定义:」
夫「是数字」者受 字符 焉算法乃
  字符 大于等于『0『 和和 字符 小于等于『9『
也

夫「是字母」者受 字符 焉算法乃
  (字符 大于等于『甲『 和和 字符 小于等于『终『) 或或 (字符 大于等于『大写字母甲『 和和 字符 小于等于『大写字母终『)
也

夫「是中文」者受 字符 焉算法乃
  「:简化的中文字符检测,实际实现需要更完整的统一码范围:」
  设「代码」为字符点编码 字符 在
  代码 大于等于四千八百十六进制 和和 代码 小于等于九千九百九十九十六进制
也

夫「是字母或中文」者受 字符 焉算法乃
  (是字母 字符) 或或 (是中文 字符)
也

夫「是字母或数字或下划线」者受 字符 焉算法乃
  (是字母或中文 字符) 或或 (是数字 字符) 或或 字符等于『下划线『
也
