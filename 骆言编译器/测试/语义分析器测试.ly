(乘
*
*
*

「:引入测试框架和相关模块:」
使用 基础工具点工具库
使用 基础工具点位置信息
使用 基础工具点错误处理
使用 基础工具点抽象语法树
使用 词法分析点词法分析器
使用 语法分析点语法分析器
使用 语义分析点语义分析器

「:测试辅助函数:」
夫「创建测试位置」者受 () 焉算法乃
  创建位置范围 (创建位置 『测试』 1 1) (创建位置 『测试』 1 10)
也

「:解析并分析代码字符串:」
夫「解析并分析」者受 代码 焉算法乃
  设「词法结果」为词法分析 代码 『测试』 在
  观「词法结果」之性
  或 编译失败 错误列表 焉算法乃
      打印字符串 『词法分析失败:』;
      打印换行 ();
      列表点迭代 (夫「参数函数」者受 错误 减大于
        打印字符串 (『  』 乘方 (格式化编译错误 错误));
        打印换行 ()
      ) 错误列表;
      编译失败 错误列表
  或 编译成功 词法单元列表 焉算法乃
      设「语法结果」为语法分析 词法单元列表 『测试』 在
      观「语法结果」之性
      或 编译失败 错误列表 减大于
          打印字符串 『语法分析失败:』;
          打印换行 ();
          列表点迭代 (夫「参数函数」者受 错误 减大于
            打印字符串 (『  』 乘方 (格式化编译错误 错误));
            打印换行 ()
          ) 错误列表;
          编译失败 错误列表
      或 编译成功 程序 减大于
          语义分析 程序 『测试』
观毕
也

「:测试用例:基础类型检查:」
夫「测试基础类型检查」者受 () 焉算法乃
  打印字符串 『测试基础类型检查点点点』;
  打印换行 ();

  设「测试用例」为(列开始 「:测试基础字面量:」
    (『夫 x为42』 其一 『整数字面量应该通过类型检查』) 其二 (『夫 y为三点一四』 其三 『浮点数字面量应该通过类型检查』) 其一 (『夫 s为\』你好\『』 其二 『字符串字面量应该通过类型检查』) 其三 (『夫 b为真』 其一 『布尔字面量应该通过类型检查』) 其二 「:测试算术运算:」
    (『夫 加法为1 加 2』 其三 『整数加法应该通过类型检查』) 其一 (『夫 乘法为3点0 乘 4点0』 其二 『浮点数乘法应该通过类型检查』) 其三 「:测试逻辑运算:」
    (『夫 逻辑为真 和和 假』 其一 『布尔逻辑运算应该通过类型检查』) 其二 (『夫 比较为5 大于 3』 其三 『数值比较应该通过类型检查』) 其一 列结束) 在

  列表点迭代索引 (夫「参数函数」者受 索引 (代码, 描述) 焉算法乃
    打印字符串 (『  测试 』 乘方 (字符串化整数 (索引 加 1)) 乘方 『: 』 乘方 描述);
    打印换行 ();
    观 解析并分析 代码 之 性
    或 编译成功 () 减大于
        打印字符串 『    ✓ 通过』;
        打印换行 ()
    或 编译失败 错误列表 减大于
        打印字符串 『    ✗ 失败: 』;
        如果 错误列表 小于大于 空空如也 则
          打印字符串 (格式化编译错误 (列表点头部 错误列表))
        余者
          打印字符串 『未知错误』;
        打印换行 ()
  ) 测试用例
也

「:测试用例:类型错误检测:」
夫「测试类型错误检测」者受 () 焉算法乃
  打印字符串 『测试类型错误检测点点点』;
  打印换行 ();

  设「错误测试用例」为(列开始 「:类型不匹配错误:」
    (『夫 错误1为1 加 \』字符串\『』 其一 『整数和字符串相加应该报错』) 其二 (『夫 错误2为真 乘 假』 其三 『布尔值相乘应该报错』) 其一 (『夫 错误3为\』文本\『 和和 真』 其二 『字符串和布尔值逻辑运算应该报错』) 其三 「:条件表达式类型错误:」
    (『夫 错误4为如果 5 那么 1 否则 2』 其一 『非布尔条件应该报错』) 其二 (『夫 错误5为如果 真 那么 1 否则 \』不匹配\『』 其三 『分支类型不匹配应该报错』) 其一 「:函数调用类型错误:」
    (『夫「函」者受 甲 减大于 甲 加 1 在 函 \』错误\『』 其二 『参数类型错误应该报错』) 其三 列结束) 在

  列表点迭代索引 (夫「参数函数」者受 索引 (代码, 描述) 焉算法乃
    打印字符串 (『  测试 』 乘方 (字符串化整数 (索引 加 1)) 乘方 『: 』 乘方 描述);
    打印换行 ();
    观 解析并分析 代码 之 性
    或 编译失败 错误列表 减大于
        如果 列表点存在 (夫「参数函数」者受 错误 减大于
          观「错误」之性
          或 类型错误 (下划线, 下划线) 减大于 真
          或 下划线 减大于 假
        ) 错误列表 则 (
          打印字符串 『    ✓ 正确检测到类型错误』;
          打印换行 ()
        ) 余者 (
          打印字符串 『    ✗ 检测到错误但不是类型错误』;
          打印换行 ()
        )
    或 编译成功 () 减大于
        打印字符串 『    ✗ 应该检测到类型错误但没有』;
        打印换行 ()
  ) 错误测试用例
也

「:测试用例:变量作用域:」
夫「测试变量作用域」者受 () 焉算法乃
  打印字符串 『测试变量作用域点点点』;
  打印换行 ();

  设「作用域测试用例」为(列开始 「:正确的作用域使用:」
    (『夫 x为1 在 夫 y为x 加 2 在 乙』 其一 『内层作用域访问外层变量应该成功』) 其二 (『夫「函」者受 甲 减大于 夫 y为x 乘 2 在 乙 在 函 5』 其三 『函数参数和局部变量应该正确』) 其一 「:作用域遮蔽:」
    (『夫 x为1 在 夫 x为2 在 甲』 其二 『变量遮蔽应该使用内层定义』) 其三 「:递归函数:」
    (『夫 递归 阶乘 者 受 数 减大于 如果 数 小于等于1 那么 1 否则 数 乘 阶乘 (数 减 1) 在 阶乘 5』 其一 『递归函数应该能够引用自身』) 其二 列结束) 在

  列表点迭代索引 (夫「参数函数」者受 索引 (代码, 描述) 焉算法乃
    打印字符串 (『  测试 』 乘方 (字符串化整数 (索引 加 1)) 乘方 『: 』 乘方 描述);
    打印换行 ();
    观 解析并分析 代码 之 性
    或 编译成功 () 减大于
        打印字符串 『    ✓ 通过』;
        打印换行 ()
    或 编译失败 错误列表 减大于
        打印字符串 『    ✗ 失败: 』;
        如果 错误列表 小于大于 空空如也 则
          打印字符串 (格式化编译错误 (列表点头部 错误列表))
        余者
          打印字符串 『未知错误』;
        打印换行 ()
  ) 作用域测试用例
也

「:测试用例:未定义变量检测:」
夫「测试未定义变量检测」者受 () 焉算法乃
  打印字符串 『测试未定义变量检测点点点』;
  打印换行 ();

  设「未定义变量测试」为(列开始 (『未定义变量』 其一 『直接使用未定义变量应该报错』) 其二 (『夫 x为y』 其三 『使用未定义变量y应该报错』) 其一 (『夫「函」者受 甲 减大于 乙 在 函 1』 其二 『函数体中使用未定义变量应该报错』) 其三 列结束) 在

  列表点迭代索引 (夫「参数函数」者受 索引 (代码, 描述) 焉算法乃
    打印字符串 (『  测试 』 乘方 (字符串化整数 (索引 加 1)) 乘方 『: 』 乘方 描述);
    打印换行 ();
    观 解析并分析 代码 之 性
    或 编译失败 错误列表 减大于
        如果 列表点存在 (夫「参数函数」者受 错误 减大于
          观「错误」之性
          或 语义错误 (信息, 下划线) 减大于 字符串包含 信息 『未定义』
          或 下划线 减大于 假
        ) 错误列表 则 (
          打印字符串 『    ✓ 正确检测到未定义变量』;
          打印换行 ()
        ) 余者 (
          打印字符串 『    ✗ 检测到错误但不是未定义变量错误』;
          打印换行 ()
        )
    或 编译成功 () 减大于
        打印字符串 『    ✗ 应该检测到未定义变量但没有』;
        打印换行 ()
  ) 未定义变量测试
也

「:测试用例:函数类型推导:」
夫「测试函数类型推导」者受 () 焉算法乃
  打印字符串 『测试函数类型推导点点点』;
  打印换行 ();

  设「函数测试用例」为(列开始 「:简单函数:」
    (『夫「身份函数」者受 甲 减大于 甲』 其一 『身份函数应该通过类型检查』) 其二 (『夫「常量函数」者受 甲 减大于 42』 其三 『常量函数应该通过类型检查』) 其一 (『夫「加一」者受 甲 减大于 甲 加 1』 其一 『整数函数应该通过类型检查』) 其一 「:高阶函数:」
    (『夫「应用」者受 函 减大于 函数 甲 减大于 函 甲』 其一 『高阶函数应该通过类型检查』) 其一 (『夫「组合」者受 函 减大于 函数 辅 减大于 函数 甲 减大于 函 (辅 甲)』 其一 『函数组合应该通过类型检查』) 其一 「:递归函数:」
    (『夫 递归 长度 者 受 列表 减大于 观「列表」之性 或 空空如也 减大于 0 或 下划线 :: 尾部 减大于 1 加 长度 尾部』 其一 『递归列表函数应该通过类型检查』) 其一 列结束) 在

  列表点迭代索引 (夫「参数函数」者受 索引 (代码, 描述) 焉算法乃
    打印字符串 (『  测试 』 乘方 (字符串化整数 (索引 加 1)) 乘方 『: 』 乘方 描述);
    打印换行 ();
    观 解析并分析 代码 之 性
    或 编译成功 () 减大于
        打印字符串 『    ✓ 通过』;
        打印换行 ()
    或 编译失败 错误列表 减大于
        打印字符串 『    ✗ 失败: 』;
        如果 错误列表 小于大于 空空如也 则
          打印字符串 (格式化编译错误 (列表点头部 错误列表))
        余者
          打印字符串 『未知错误』;
        打印换行 ()
  ) 函数测试用例
也

「:测试用例:复合数据类型:」
夫「测试复合数据类型」者受 () 焉算法乃
  打印字符串 『测试复合数据类型点点点』;
  打印换行 ();

  设「复合类型测试」为(列开始 「:列表类型:」
    (『夫 整数列表为(列开始 1 其一 2 其二 3 其三 列结束)』 其一 『整数列表应该通过类型检查』) 其二 (『夫 字符串列表为(列开始 \』你好\『 其一 \』世界\『 其二 列结束)』 其三 『字符串列表应该通过类型检查』) 其一 (『夫 空列表为空空如也』 其一 『空列表应该通过类型检查』) 其一 「:元组类型:」
    (『夫 整数对为(1 其一 2)』 其一 『整数对应该通过类型检查』) 其一 (『夫 混合元组为(1 其一 \』文本\『 其一 真)』 其一 『混合类型元组应该通过类型检查』) 其一 「:引用类型:」
    (『夫 整数引用为引用 42』 其一 『整数引用应该通过类型检查』) 其一 (『夫 引用值为!整数引用』 其一 『解引用应该通过类型检查』) 其一 「:数组类型:」
    (『夫 整数数组为(列开始 或1 其一 2 其二 3或 其三 列结束)』 其一 『整数数组应该通过类型检查』) 其一 (『夫 数组元素为整数数组点(0)』 其一 『数组访问应该通过类型检查』) 其一 列结束) 在

  列表点迭代索引 (夫「参数函数」者受 索引 (代码, 描述) 焉算法乃
    打印字符串 (『  测试 』 乘方 (字符串化整数 (索引 加 1)) 乘方 『: 』 乘方 描述);
    打印换行 ();
    观 解析并分析 代码 之 性
    或 编译成功 () 减大于
        打印字符串 『    ✓ 通过』;
        打印换行 ()
    或 编译失败 错误列表 减大于
        打印字符串 『    ✗ 失败: 』;
        如果 错误列表 小于大于 空空如也 则
          打印字符串 (格式化编译错误 (列表点头部 错误列表))
        余者
          打印字符串 『未知错误』;
        打印换行 ()
  ) 复合类型测试
也

「:主测试函数:」
夫「运行语义分析器测试」者受 () 焉算法乃
  打印字符串 『等于等于等于等于等于等于等于等于等于等于等于等于等于等于等于等于等于等于等于等于等于等于等于等于等于等于等于等于等于等于等于等于等于等于等于等于等于等于等于等于』;
  打印换行 ();
  打印字符串 『       语义分析器测试套件』;
  打印换行 ();
  打印字符串 『等于等于等于等于等于等于等于等于等于等于等于等于等于等于等于等于等于等于等于等于等于等于等于等于等于等于等于等于等于等于等于等于等于等于等于等于等于等于等于等于』;
  打印换行 ();
  打印换行 ();

  测试基础类型检查 ();
  打印换行 ();

  测试类型错误检测 ();
  打印换行 ();

  测试变量作用域 ();
  打印换行 ();

  测试未定义变量检测 ();
  打印换行 ();

  测试函数类型推导 ();
  打印换行 ();

  测试复合数据类型 ();
  打印换行 ();

  打印字符串 『等于等于等于等于等于等于等于等于等于等于等于等于等于等于等于等于等于等于等于等于等于等于等于等于等于等于等于等于等于等于等于等于等于等于等于等于等于等于等于等于』;
  打印换行 ();
  打印字符串 『       语义分析器测试完成』;
  打印换行 ();
  打印字符串 『等于等于等于等于等于等于等于等于等于等于等于等于等于等于等于等于等于等于等于等于等于等于等于等于等于等于等于等于等于等于等于等于等于等于等于等于等于等于等于等于』;
  打印换行 ()
也

「:导出测试函数:」
设「()」为运行语义分析器测试 ()
