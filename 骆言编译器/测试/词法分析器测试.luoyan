(*
 * 词法分析器测试
 * 验证词法分析器的基本功能
 *)

使用 基础工具.工具库
使用 词法分析.词法分析器

(* 测试用例结构 *)
类型 测试用例 = {
  名称: 字符串;
  输入: 字符串;
  期望词法单元数量: 整数;
}

(* 基础测试用例 *)
让 基础测试用例列表 = [
  {
    名称 = "简单整数";
    输入 = "42";
    期望词法单元数量 = 2;  (* 数字 + EOF *)
  };
  
  {
    名称 = "简单字符串";
    输入 = "\"你好世界\"";
    期望词法单元数量 = 2;  (* 字符串 + EOF *)
  };
  
  {
    名称 = "中文关键字";
    输入 = "让 x = 42";
    期望词法单元数量 = 5;  (* 让 + 标识符 + = + 数字 + EOF *)
  };
  
  {
    名称 = "算术表达式";
    输入 = "1 + 2 * 3";
    期望词法单元数量 = 6;  (* 1 + + + 2 + * + 3 + EOF *)
  };
  
  {
    名称 = "函数定义";
    输入 = "函数 x -> x + 1";
    期望词法单元数量 = 7;  (* 函数 + x + -> + x + + + 1 + EOF *)
  };
]

(* 运行单个测试用例 *)
让 运行测试用例 = 函数 测试用例 ->
  打印调试信息 ("运行测试: " ^ 测试用例.名称);
  
  匹配 词法分析 测试用例.输入 "测试文件" 的
  | 失败 错误信息 ->
      打印调试信息 ("测试失败: " ^ 测试用例.名称 ^ " - 词法分析错误");
      false
  | 成功 (词法单元列表, _) ->
      let 实际数量 = List.length 词法单元列表 在
      if 实际数量 = 测试用例.期望词法单元数量 then (
        打印调试信息 ("测试通过: " ^ 测试用例.名称);
        true
      ) else (
        打印调试信息 ("测试失败: " ^ 测试用例.名称 ^ 
                      " - 期望 " ^ (整数转字符串 测试用例.期望词法单元数量) ^
                      " 个词法单元，实际得到 " ^ (整数转字符串 实际数量));
        false
      )

(* 运行所有测试 *)
让 运行所有测试 = 函数 () ->
  打印调试信息 "开始词法分析器测试...";
  
  let 通过数量 = ref 0 在
  let 总数量 = List.length 基础测试用例列表 在
  
  List.iter (函数 测试用例 ->
    if 运行测试用例 测试用例 then
      通过数量 := !通过数量 + 1
  ) 基础测试用例列表;
  
  打印调试信息 ("测试完成: " ^ 
                (整数转字符串 !通过数量) ^ "/" ^ 
                (整数转字符串 总数量) ^ " 测试通过");
  
  !通过数量 = 总数量

(* 主测试函数 *)
让 主函数 = 函数 () ->
  if 运行所有测试 () then
    打印调试信息 "所有词法分析器测试通过！"
  else
    打印调试信息 "部分词法分析器测试失败！"