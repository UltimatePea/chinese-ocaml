（乘
 * 测试运行器 - 统一运行所有测试
 * 集成测试框架，验证编译器各组件功能
 *）

使用 基础工具点工具库

「：测试结果统计：」
类型 测试统计为「
  可变 总测试数： 整数；
  可变 通过测试数： 整数；
  可变 失败测试数： 整数；
」

「：创建测试统计：」
夫「创建测试统计」者受 （） 焉算法乃 「
  总测试数为0；
  通过测试数为0；
  失败测试数为0；
」
也

「：更新测试统计：」
夫「更新测试统计」者受 统计 通过 焉算法乃
  统计点总测试数 ：等于统计点总测试数 加 1；
  如果 通过 则
    统计点通过测试数 ：等于统计点通过测试数 加 1
  余者
    统计点失败测试数 ：等于统计点失败测试数 加 1
也

「：打印测试统计：」
夫「打印测试统计」者受 统计 焉算法乃
  打印调试信息 （『等于』 乘 50）；
  打印调试信息 『测试统计报告』；
  打印调试信息 （『等于』 乘 50）；
  打印调试信息 （『总测试数： 』 乘方 （整数转字符串 统计点总测试数））；
  打印调试信息 （『通过测试数： 』 乘方 （整数转字符串 统计点通过测试数））；
  打印调试信息 （『失败测试数： 』 乘方 （整数转字符串 统计点失败测试数））；

  设「通过率」为    如果 统计点总测试数 大于 0 则
      （浮点数转字符串 （（浮点下划线of整数 统计点通过测试数） 除点 （浮点下划线of整数 统计点总测试数） 乘点 100点0）） 乘方 『百分』
    余者
      『N除A』
  在
  打印调试信息 （『通过率： 』 乘方 通过率）；
  打印调试信息 （『等于』 乘 50）
也

「：运行测试模块：」
夫「运行测试模块」者受 模块名 测试函数 统计 焉算法乃
  打印调试信息 （『』）；
  打印调试信息 （『运行 』 乘方 模块名 乘方 『 测试点点点』）；
  打印调试信息 （『减』 乘 30）；

  设「开始时间」为Unix点gettimeofday （） 在
  设「结果」为测试函数 （） 在
  设「结束时间」为Unix点gettimeofday （） 在
  设「耗时」为结束时间 减点 开始时间 在

  更新测试统计 统计 结果；

  打印调试信息 （『减』 乘 30）；
  如果 结果 则
    打印调试信息 （模块名 乘方 『 测试通过 ✓ （耗时： 』 乘方 （浮点数转字符串 耗时） 乘方 『串）』）
  余者
    打印调试信息 （模块名 乘方 『 测试失败 ✗ （耗时： 』 乘方 （浮点数转字符串 耗时） 乘方 『串）』）
也

「：集成测试 减 端到端验证：」
夫「运行集成测试」者受 （） 焉算法乃
  打印调试信息 『运行集成测试点点点』；

  设「测试程序」为『夫「阶乘」者受 数 减大于 若 数 小于等于1 则 答 1 余者答 数 乘 阶乘 （数 减 1） 在 阶乘 5』 在

  「：测试完整的编译流程：词法分析 减大于 语法分析：」
  观 词法分析点词法分析 测试程序 『集成测试』 之 性
  或 失败 下划线 焉算法乃
      打印调试信息 『集成测试失败：词法分析阶段』；
      假
  或 成功 （词法单元列表， 下划线） 焉算法乃
      观 语法分析点语法分析 词法单元列表 『集成测试』 之 性
      或 失败 下划线 减大于
          打印调试信息 『集成测试失败：语法分析阶段』；
          假
      或 成功 （程序， 下划线） 减大于
          打印调试信息 『集成测试通过：完整编译流程成功』；
          真
观毕
也

「：性能测试：」
夫「运行性能测试」者受 （） 焉算法乃
  打印调试信息 『运行性能测试点点点』；

  设「大型程序」为String点concat 『\数』 （列开始 『夫 x1为1 在』 其一 『夫 x2为2 在』 其二 『夫 x3为3 在』 其三 『夫 x4为4 在』 其一 『夫 x5为5 在』 其二 『x1 加 x2 加 x3 加 x4 加 x5』 其三 列结束） 在

  设「开始时间」为Unix点gettimeofday （） 在

  设「词法分析结果」为词法分析点词法分析 大型程序 『性能测试』 在

  观「词法分析结果」之性
  或 失败 下划线 减大于
      打印调试信息 『性能测试失败：词法分析阶段』；
      假
  或 成功 （词法单元列表， 下划线） 焉算法乃
      设「语法分析结果」为语法分析点语法分析 词法单元列表 『性能测试』 在

      观「语法分析结果」之性
      或 失败 下划线 减大于
          打印调试信息 『性能测试失败：语法分析阶段』；
          假
      或 成功 （程序， 下划线） 减大于
          设「结束时间」为Unix点gettimeofday （） 在
          设「总耗时」为结束时间 减点 开始时间 在

          打印调试信息 （『性能测试通过：编译耗时 』 乘方 （浮点数转字符串 总耗时） 乘方 『串』）；

          「：简单的性能基准：应该在1秒内完成：」
          总耗时 小于 1点0
观毕
也

「：错误处理测试：」
夫「运行错误处理测试」者受 （） 焉算法乃
  打印调试信息 『运行错误处理测试点点点』；

  设「错误程序列表」为（列开始 （『语法错误1』 其一 『夫 甲等于』） 其二 「：缺少值表达式：」
    （『语法错误2』 其三 『若 真 则 答 1』） 其一 「：缺少否则分支：」
    （『语法错误3』 其二 『（1 加 2』） 其三 「：不匹配的括号：」
    （『词法错误』 其一 『\』未终止字符串』） 其二 「：未终止的字符串：」 其三 列结束） 在

  设「通过数量」为引用 0 在
  设「总数量」为List点长度 错误程序列表 在

  List点迭代 （夫「参数函数」者受 （错误名， 错误程序） 焉算法乃
    观 词法分析点词法分析 错误程序 『错误测试』 之 性
    或 失败 下划线 焉算法乃
        打印调试信息 （错误名 乘方 『： 词法分析正确报告错误 ✓』）；
        通过数量 ：等于！通过数量 加 1
    或 成功 （词法单元列表， 下划线） 焉算法乃
        观 语法分析点语法分析 词法单元列表 『错误测试』 之 性
        或 失败 下划线 减大于
            打印调试信息 （错误名 乘方 『： 语法分析正确报告错误 ✓』）；
            通过数量 ：等于！通过数量 加 1
        或 成功 下划线 减大于
            打印调试信息 （错误名 乘方 『： 未能检测到错误 ✗』）
  ） 错误程序列表；

  设「成功」为！通过数量为总数量 在
  打印调试信息 （『错误处理测试： 』 乘方 （整数转字符串 ！通过数量） 乘方 『除』 乘方 （整数转字符串 总数量） 乘方 『 通过』）；
  成功
也

「：主测试运行器：」
夫「主函数」者受 （） 焉算法乃
  设「统计」为创建测试统计 （） 在

  打印调试信息 『骆言编译器测试套件』；
  打印调试信息 （『开始时间： 』 乘方 （Unix点gettimeofday （） 或大于 浮点数转字符串））；

  「：运行各个模块的测试：」
  运行测试模块 『词法分析器』 词法分析器测试点主函数 统计；
  运行测试模块 『语法分析器』 语法分析器测试点主函数 统计；
  运行测试模块 『集成测试』 运行集成测试 统计；
  运行测试模块 『性能测试』 运行性能测试 统计；
  运行测试模块 『错误处理』 运行错误处理测试 统计；

  「：打印最终统计：」
  打印测试统计 统计；

  「：输出测试结果：」
  如果 统计点失败测试数为0 则 （
    打印调试信息 『🎉 所有测试通过！编译器组件工作正常。』；
    打印调试信息 『✅ 骆言编译器已准备就绪进入下一开发阶段。』
  ） 余者 （
    打印调试信息 （『⚠️  有 』 乘方 （整数转字符串 统计点失败测试数） 乘方 『 个测试失败，需要修复。』）；
    打印调试信息 『❌ 请检查错误日志并修复问题。』
  ）；

  统计点失败测试数为0
也