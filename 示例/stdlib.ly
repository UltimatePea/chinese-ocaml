(* 骆言标准库模块示例 *)

(* 数学模块 *)
模块 数学 = {
  导出: [
    ("阶乘", 函数类型 (整数类型, 整数类型));
    ("斐波那契", 函数类型 (整数类型, 整数类型));
    ("最大值", 函数类型 (整数类型, 函数类型 (整数类型, 整数类型)));
    ("最小值", 函数类型 (整数类型, 函数类型 (整数类型, 整数类型)));
  ];
  
  语句: [
    递归 让 阶乘 = 函数 n ->
      如果 n <= 1 那么 1 否则 n * 阶乘 (n - 1);
    
    递归 让 斐波那契 = 函数 n ->
      匹配 n 与
      | 0 -> 0
      | 1 -> 1
      | _ -> 斐波那契 (n - 1) + 斐波那契 (n - 2);
    
    让 最大值 = 函数 x y ->
      如果 x > y 那么 x 否则 y;
    
    让 最小值 = 函数 x y ->
      如果 x < y 那么 x 否则 y;
  ];
}

(* 列表模块 *)
模块 列表 = {
  导出: [
    ("长度", 函数类型 (列表类型 (类型变量 "a"), 整数类型));
    ("映射", 函数类型 (函数类型 (类型变量 "a", 类型变量 "b"), 函数类型 (列表类型 (类型变量 "a"), 列表类型 (类型变量 "b"))));
    ("过滤", 函数类型 (函数类型 (类型变量 "a", 布尔类型), 函数类型 (列表类型 (类型变量 "a"), 列表类型 (类型变量 "a"))));
  ];
  
  语句: [
    递归 让 长度 = 函数 lst ->
      匹配 lst 与
      | [] -> 0
      | [head; ...tail] -> 1 + 长度 tail;
    
    递归 让 映射 = 函数 f lst ->
      匹配 lst 与
      | [] -> []
      | [head; ...tail] -> [f head; ...映射 f tail];
    
    递归 让 过滤 = 函数 pred lst ->
      匹配 lst 与
      | [] -> []
      | [head; ...tail] ->
        如果 pred head 那么
          [head; ...过滤 pred tail]
        否则
          过滤 pred tail;
  ];
}

(* 使用标准库 *)
导入 数学: [阶乘, 斐波那契, 最大值];
导入 列表: [长度, 映射];

(* 测试标准库功能 *)
让 阶乘结果 = 阶乘 5;
让 斐波那契结果 = 斐波那契 6;
让 最大数 = 最大值 10 20;
让 列表长度 = 长度 [1; 2; 3; 4; 5];
让 平方列表 = 映射 (函数 x -> x * x) [1; 2; 3; 4; 5];

(* 打印结果 *)
打印 "阶乘(5) =";
打印 阶乘结果;
打印 "斐波那契(6) =";
打印 斐波那契结果;
打印 "最大值(10, 20) =";
打印 最大数;
打印 "列表长度 =";
打印 列表长度;
打印 "平方列表 =";
打印 平方列表; 