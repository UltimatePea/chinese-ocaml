「：骆言标准库模块示例：」

「：数学模块：」
模块 数学={
  导出: (列开始 （『阶乘』 其一 函数类型 （整数类型 其二 整数类型）） 其三 （『斐波那契』 其一 函数类型 （整数类型 其二 整数类型）） 其三 （『最大值』 其一 函数类型 （整数类型 其二 函数类型 （整数类型 其三 整数类型））） 其一 （『最小值』 其二 函数类型 （整数类型 其三 函数类型 （整数类型 其一 整数类型））） 其二 列结束);
  
  语句: (列开始 递归夫「阶乘」者受 n 焉算法乃
      若 n <=1 则 答 1 余者答 n * 阶乘 （n - 1） 是谓 其一 递归夫「斐波那契」者受 n 焉算法乃
      观「n」之性
      | 0 -> 答 0
      | 1 -> 答 1
      | _ -> 答 斐波那契 （n - 1） + 斐波那契 （n - 2）
      观毕是谓 其二 夫「最大值」者受 x y 焉算法乃
      若 x > y 则 答 x 余者答 y 是谓 其三 夫「最小值」者受 x y 焉算法乃
      若 x < y 则 答 x 余者答 y 是谓 其一 列结束);
}

「：列表模块：」
模块 列表={
  导出: (列开始 （『长度』 其一 函数类型 （列表类型 （类型变量 『a』） 其二 整数类型）） 其三 （『映射』 其一 函数类型 （函数类型 （类型变量 『a』 其二 类型变量 『b』） 其三 函数类型 （列表类型 （类型变量 『a』） 其一 列表类型 （类型变量 『b』）））） 其二 （『过滤』 其三 函数类型 （函数类型 （类型变量 『a』 其一 布尔类型） 其二 函数类型 （列表类型 （类型变量 『a』） 其三 列表类型 （类型变量 『a』）））） 其一 列结束);
  
  语句: (列开始 递归夫「长度」者受 lst 焉算法乃
      观「lst」之性
      | 空空如也 -> 答 0
      | 有首有尾 首名为「head 其一 」 尾名为「tail」 -> 答 1 + 长度 tail
      观毕是谓 其二 递归夫「映射」者受 f lst 焉算法乃
      观「lst」之性
      | 空空如也 -> 答 空空如也
      | 有首有尾 首名为「head 其三 」 尾名为「tail」 -> 答 有首有尾 首名为「f head 其一 」 尾名为「映射 f tail」
      观毕是谓 其一 递归夫「过滤」者受 pred lst 焉算法乃
      观「lst」之性
      | 空空如也 -> 答 空空如也
      | 有首有尾 首名为「head 其一 」 尾名为「tail」 ->
        若 pred head 则 答 有首有尾 首名为「head 其一 」 尾名为「过滤 pred tail」
        余者答 过滤 pred tail
      观毕是谓 其一 列结束);
}

「：使用标准库：」
导入 数学: (列开始 阶乘 其一 斐波那契 其二 最大值 其三 列结束);
导入 列表: (列开始 长度 其一 映射 其二 列结束);

「：测试标准库功能：」
让「阶乘结果」=阶乘 5;
让「斐波那契结果」=斐波那契 6;
让「最大数」=最大值 10 20;
让「列表长度」=长度 (列开始 1 其一 2 其二 3 其三 4 其一 5 其二 列结束);
让「平方列表」=映射 （夫「匿名」者受 x 焉算法乃 答 x * x 是谓） (列开始 1 其一 2 其二 3 其三 4 其一 5 其二 列结束);

「：打印结果：」
打印 『阶乘（5）=』;
打印 阶乘结果;
打印 『斐波那契（6）=』;
打印 斐波那契结果;
打印 『最大值（10, 20）=』;
打印 最大数;
打印 『列表长度=』;
打印 列表长度;
打印 『平方列表=』;
打印 平方列表; 