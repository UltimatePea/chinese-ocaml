「：骆言高级特性示例：」

「：类型定义：」
类型 选项=  | 无
  | 有 of int

类型 二叉树=  | 空
  | 节点 of int * 二叉树 * 二叉树

「：高阶函数：」
递归夫「映射」者受 f lst 焉算法乃
  观「lst」之性
  | [] -> 答 []
  | [head; ...tail] -> 答 [f head; ...映射 f tail]
  观毕是谓

递归夫「过滤」者受 pred lst 焉算法乃
  观「lst」之性
  | [] -> 答 []
  | [head; ...tail] ->
    若 pred head 则 答 [head; ...过滤 pred tail]
    余者答 过滤 pred tail
  观毕是谓

递归夫「折叠」者受 f acc lst 焉算法乃
  观「lst」之性
  | [] -> 答 acc
  | [head; ...tail] -> 答 折叠 f （f acc head） tail
  观毕是谓

「：二叉树操作：」
递归夫「插入」者受 value tree 焉算法乃
  观「tree」之性
  | 空 -> 答 节点 （value, 空, 空）
  | 节点 （v, left, right） ->
    若 value < v 则 答 节点 （v, 插入 value left, right）
    余者答 节点 （v, left, 插入 value right）
  观毕是谓

递归夫「中序遍历」者受 tree 焉算法乃
  观「tree」之性
  | 空 -> 答 []
  | 节点 （v, left, right） -> 
    答 中序遍历 left @ [v] @ 中序遍历 right
  观毕是谓

「：测试数据：」
让「数字列表」=[3; 1; 4; 1; 5; 9; 2; 6]
设「平方列表」为映射 （夫「匿名」者受 x 焉算法乃 答 x * x 是谓） 数字列表
设「偶数列表」为过滤 （夫「匿名」者受 x 焉算法乃 答 x % 2==0 是谓） 数字列表
设「总和」为折叠 （夫「匿名」者受 acc x 焉算法乃 答 acc + x 是谓） 0 数字列表

「：构建二叉树：」
让「树」=插入 5 （插入 3 （插入 7 （插入 1 空）））
让「排序结果」=中序遍历 树

「：打印结果：」
打印 『原始列表:』
打印 数字列表
打印 『平方列表:』
打印 平方列表
打印 『偶数列表:』
打印 偶数列表
打印 『总和:』
打印 总和
打印 『排序结果:』
打印 排序结果 