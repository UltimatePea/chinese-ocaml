「：骆言高级特性示例：」

「：类型定义：」
类型 选项=  | 无
  | 有 之 整数

类型 二叉树=  | 空
  | 节点 之 整数 乘 二叉树 乘 二叉树

「：高阶函数：」
递归夫「映射」者受 函 列 焉算法乃
  观「列」之性
  | 空空如也 -> 答 空空如也
  | 有首有尾 首名为「首;」 尾名为「尾」 -> 答 有首有尾 首名为「函 首;」 尾名为「映射 函 尾」
  观毕也

递归夫「过滤」者受 条件 列 焉算法乃
  观「列」之性
  | 空空如也 -> 答 空空如也
  | 有首有尾 首名为「首;」 尾名为「尾」 ->
    若 条件 首 则 答 有首有尾 首名为「首;」 尾名为「过滤 条件 尾」
    余者答 过滤 条件 尾
  观毕也

递归夫「折叠」者受 函 累 列 焉算法乃
  观「列」之性
  | 空空如也 -> 答 累
  | 有首有尾 首名为「首;」 尾名为「尾」 -> 答 折叠 函 （函 累 首） 尾
  观毕也

「：二叉树操作：」
递归夫「插入」者受 value tree 焉算法乃
  观「tree」之性
  | 空 -> 答 节点 （value, 空, 空）
  | 节点 （值, left, right） ->
    若 value 小于 值 则 答 节点 （值, 插入 value left, right）
    余者答 节点 （值, left, 插入 value right）
  观毕也

递归夫「中序遍历」者受 tree 焉算法乃
  观「tree」之性
  | 空 -> 答 空空如也
  | 节点 （值, left, right） ->
    答 中序遍历 left @ (列开始 值 其一 列结束) @ 中序遍历 right
  观毕也

「：测试数据：」
让「数字列表」=(列开始 3 其一 1 其二 4 其三 1 其一 5 其二 9 其三 2 其一 6 其二 列结束)
设「平方列表」为映射 （夫「匿名」者受 甲 焉算法乃 答 甲 乘 甲 也） 数字列表
设「偶数列表」为过滤 （夫「匿名」者受 甲 焉算法乃 答 甲 除余 2==0 也） 数字列表
设「总和」为折叠 （夫「匿名」者受 累 甲 焉算法乃 答 累 加 甲 也） 0 数字列表

「：构建二叉树：」
让「树」=插入 5 （插入 3 （插入 7 （插入 1 空）））
让「排序结果」=中序遍历 树

「：打印结果：」
打印 『原始列表:』
打印 数字列表
打印 『平方列表:』
打印 平方列表
打印 『偶数列表:』
打印 偶数列表
打印 『总和:』
打印 总和
打印 『排序结果:』
打印 排序结果