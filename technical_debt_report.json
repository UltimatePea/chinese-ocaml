{
  "long_functions": [
    {
      "file": "semantic_builtins.ml",
      "function": "add_io_functions",
      "start_line": 7,
      "end_line": 76,
      "length": 70
    },
    {
      "file": "semantic_builtins.ml",
      "function": "add_list_functions",
      "start_line": 13,
      "end_line": 76,
      "length": 64
    },
    {
      "file": "refactoring_analyzer_core.ml",
      "function": "generate_quality_assessment",
      "start_line": 257,
      "end_line": 307,
      "length": 51
    },
    {
      "file": "main.ml",
      "function": "input",
      "start_line": 20,
      "end_line": 94,
      "length": 75
    },
    {
      "file": "main.ml",
      "function": "_",
      "start_line": 32,
      "end_line": 94,
      "length": 63
    },
    {
      "file": "main.ml",
      "function": "show_help",
      "start_line": 44,
      "end_line": 94,
      "length": 51
    },
    {
      "file": "interpreter_utils.ml",
      "function": "sorted_distances",
      "start_line": 15,
      "end_line": 114,
      "length": 100
    },
    {
      "file": "interpreter_utils.ml",
      "function": "lookup_var",
      "start_line": 22,
      "end_line": 117,
      "length": 96
    },
    {
      "file": "interpreter_utils.ml",
      "function": "member_name",
      "start_line": 47,
      "end_line": 117,
      "length": 71
    },
    {
      "file": "interpreter_utils.ml",
      "function": "bind_var",
      "start_line": 53,
      "end_line": 117,
      "length": 65
    },
    {
      "file": "interpreter_utils.ml",
      "function": "eval_literal",
      "start_line": 56,
      "end_line": 117,
      "length": 62
    },
    {
      "file": "interpreter_utils.ml",
      "function": "expand_macro",
      "start_line": 65,
      "end_line": 117,
      "length": 53
    },
    {
      "file": "interpreter_utils.ml",
      "function": "param_map",
      "start_line": 67,
      "end_line": 117,
      "length": 51
    },
    {
      "file": "c_codegen_control.ml",
      "function": "with_error_handling",
      "start_line": 10,
      "end_line": 87,
      "length": 78
    },
    {
      "file": "c_codegen_control.ml",
      "function": "safe_sprintf",
      "start_line": 16,
      "end_line": 87,
      "length": 72
    },
    {
      "file": "c_codegen_control.ml",
      "function": "gen_func_call_expr",
      "start_line": 19,
      "end_line": 87,
      "length": 69
    },
    {
      "file": "c_codegen_control.ml",
      "function": "gen_func_def_expr",
      "start_line": 28,
      "end_line": 87,
      "length": 60
    },
    {
      "file": "function_caller.ml",
      "function": "config",
      "start_line": 26,
      "end_line": 109,
      "length": 84
    },
    {
      "file": "interpreter_state.ml",
      "function": "create_state",
      "start_line": 15,
      "end_line": 72,
      "length": 58
    },
    {
      "file": "expression_evaluator.ml",
      "function": "eval_expr",
      "start_line": 13,
      "end_line": 72,
      "length": 60
    },
    {
      "file": "token_string_converter.ml",
      "function": "create_token_type_error",
      "start_line": 14,
      "end_line": 294,
      "length": 281
    },
    {
      "file": "token_string_converter.ml",
      "function": "string_of_literal_token",
      "start_line": 18,
      "end_line": 294,
      "length": 277
    },
    {
      "file": "token_string_converter.ml",
      "function": "string_of_identifier_token",
      "start_line": 28,
      "end_line": 294,
      "length": 267
    },
    {
      "file": "token_string_converter.ml",
      "function": "string_of_basic_keyword_token",
      "start_line": 39,
      "end_line": 294,
      "length": 256
    },
    {
      "file": "token_string_converter.ml",
      "function": "string_of_number_keyword_token",
      "start_line": 97,
      "end_line": 294,
      "length": 198
    },
    {
      "file": "token_string_converter.ml",
      "function": "string_of_type_keyword_token",
      "start_line": 115,
      "end_line": 294,
      "length": 180
    },
    {
      "file": "token_string_converter.ml",
      "function": "string_of_wenyan_keyword_token",
      "start_line": 133,
      "end_line": 294,
      "length": 162
    },
    {
      "file": "token_string_converter.ml",
      "function": "string_of_classical_keyword_token",
      "start_line": 147,
      "end_line": 294,
      "length": 148
    },
    {
      "file": "token_string_converter.ml",
      "function": "string_of_operator_token",
      "start_line": 161,
      "end_line": 294,
      "length": 134
    },
    {
      "file": "token_string_converter.ml",
      "function": "string_of_delimiter_token",
      "start_line": 198,
      "end_line": 294,
      "length": 97
    },
    {
      "file": "token_string_converter.ml",
      "function": "string_of_special_token",
      "start_line": 230,
      "end_line": 294,
      "length": 65
    },
    {
      "file": "token_string_converter.ml",
      "function": "classify_and_convert_token",
      "start_line": 242,
      "end_line": 294,
      "length": 53
    },
    {
      "file": "parser_expressions_main.ml",
      "function": "parse_expression",
      "start_line": 4,
      "end_line": 103,
      "length": 100
    },
    {
      "file": "error_conversion.ml",
      "function": "add_position_to_error_msg",
      "start_line": 6,
      "end_line": 75,
      "length": 70
    },
    {
      "file": "error_conversion.ml",
      "function": "unified_error_to_string",
      "start_line": 12,
      "end_line": 75,
      "length": 64
    },
    {
      "file": "unified_token_registry.ml",
      "function": "register_core_mappings",
      "start_line": 115,
      "end_line": 166,
      "length": 52
    },
    {
      "file": "unified_token_registry.ml",
      "function": "basic_mappings",
      "start_line": 116,
      "end_line": 166,
      "length": 51
    },
    {
      "file": "error_recovery.ml",
      "function": "distances",
      "start_line": 83,
      "end_line": 154,
      "length": 72
    },
    {
      "file": "error_recovery.ml",
      "function": "sorted",
      "start_line": 84,
      "end_line": 154,
      "length": 71
    },
    {
      "file": "error_recovery.ml",
      "function": "log_recovery",
      "start_line": 92,
      "end_line": 154,
      "length": 63
    },
    {
      "file": "unified_error_utils.ml",
      "function": "log_error",
      "start_line": 43,
      "end_line": 94,
      "length": 52
    },
    {
      "file": "unified_error_utils.ml",
      "function": "current_level",
      "start_line": 44,
      "end_line": 94,
      "length": 51
    },
    {
      "file": "keyword_converter_main.ml",
      "function": "convert_core_keywords",
      "start_line": 7,
      "end_line": 101,
      "length": 95
    },
    {
      "file": "keyword_converter_main.ml",
      "function": "convert_system_keywords",
      "start_line": 21,
      "end_line": 101,
      "length": 81
    },
    {
      "file": "keyword_converter_main.ml",
      "function": "convert_chinese_style_keywords",
      "start_line": 36,
      "end_line": 101,
      "length": 66
    },
    {
      "file": "string_formatter.ml",
      "function": "format_function_call",
      "start_line": 6,
      "end_line": 105,
      "length": 100
    },
    {
      "file": "string_formatter.ml",
      "function": "format_binary_op",
      "start_line": 10,
      "end_line": 109,
      "length": 100
    },
    {
      "file": "string_formatter.ml",
      "function": "format_unary_op",
      "start_line": 14,
      "end_line": 113,
      "length": 100
    },
    {
      "file": "string_formatter.ml",
      "function": "format_var_binding",
      "start_line": 17,
      "end_line": 116,
      "length": 100
    },
    {
      "file": "string_formatter.ml",
      "function": "format_string_literal",
      "start_line": 21,
      "end_line": 120,
      "length": 100
    },
    {
      "file": "string_formatter.ml",
      "function": "format_int_literal",
      "start_line": 25,
      "end_line": 124,
      "length": 100
    },
    {
      "file": "string_formatter.ml",
      "function": "format_float_literal",
      "start_line": 28,
      "end_line": 127,
      "length": 100
    },
    {
      "file": "string_formatter.ml",
      "function": "format_bool_literal",
      "start_line": 31,
      "end_line": 127,
      "length": 97
    },
    {
      "file": "string_formatter.ml",
      "function": "format_unit_literal",
      "start_line": 35,
      "end_line": 127,
      "length": 93
    },
    {
      "file": "string_formatter.ml",
      "function": "format_equality_check",
      "start_line": 38,
      "end_line": 127,
      "length": 90
    },
    {
      "file": "string_formatter.ml",
      "function": "format_let_expr",
      "start_line": 42,
      "end_line": 127,
      "length": 86
    },
    {
      "file": "string_formatter.ml",
      "function": "format_function_def",
      "start_line": 46,
      "end_line": 127,
      "length": 82
    },
    {
      "file": "string_formatter.ml",
      "function": "format_pattern_match",
      "start_line": 51,
      "end_line": 127,
      "length": 77
    },
    {
      "file": "string_formatter.ml",
      "function": "format_var_expr",
      "start_line": 55,
      "end_line": 127,
      "length": 73
    },
    {
      "file": "string_formatter.ml",
      "function": "format_param_count_mismatch",
      "start_line": 63,
      "end_line": 127,
      "length": 65
    },
    {
      "file": "string_formatter.ml",
      "function": "format_missing_params_filled",
      "start_line": 67,
      "end_line": 127,
      "length": 61
    },
    {
      "file": "string_formatter.ml",
      "function": "format_extra_params_ignored",
      "start_line": 71,
      "end_line": 127,
      "length": 57
    },
    {
      "file": "string_formatter.ml",
      "function": "format_unexpected_token",
      "start_line": 75,
      "end_line": 127,
      "length": 53
    },
    {
      "file": "semantic_errors.ml",
      "function": "log_info",
      "start_line": 8,
      "end_line": 66,
      "length": 59
    },
    {
      "file": "parser.ml",
      "function": "_parse_macro_params",
      "start_line": 48,
      "end_line": 103,
      "length": 56
    },
    {
      "file": "parser.ml",
      "function": "token",
      "start_line": 49,
      "end_line": 103,
      "length": 55
    },
    {
      "file": "chinese_best_practices_backup.ml",
      "function": "comprehensive_practice_check",
      "start_line": 32,
      "end_line": 102,
      "length": 71
    },
    {
      "file": "chinese_best_practices_backup.ml",
      "function": "all_violations",
      "start_line": 34,
      "end_line": 102,
      "length": 69
    },
    {
      "file": "chinese_best_practices_backup.ml",
      "function": "filtered_violations",
      "start_line": 37,
      "end_line": 102,
      "length": 66
    },
    {
      "file": "chinese_best_practices_backup.ml",
      "function": "generate_practice_report",
      "start_line": 43,
      "end_line": 102,
      "length": 60
    },
    {
      "file": "chinese_best_practices_backup.ml",
      "function": "detect_mixed_language_patterns",
      "start_line": 46,
      "end_line": 102,
      "length": 57
    },
    {
      "file": "chinese_best_practices_backup.ml",
      "function": "check_chinese_word_order",
      "start_line": 49,
      "end_line": 102,
      "length": 54
    },
    {
      "file": "chinese_best_practices_backup.ml",
      "function": "check_idiomatic_chinese",
      "start_line": 52,
      "end_line": 102,
      "length": 51
    },
    {
      "file": "logger.ml",
      "function": "level_str",
      "start_line": 140,
      "end_line": 191,
      "length": 52
    },
    {
      "file": "logger.ml",
      "function": "level",
      "start_line": 141,
      "end_line": 191,
      "length": 51
    },
    {
      "file": "types_convert.ml",
      "function": "converted_variants",
      "start_line": 175,
      "end_line": 267,
      "length": 93
    },
    {
      "file": "types_convert.ml",
      "function": "basic_type_to_chinese",
      "start_line": 184,
      "end_line": 267,
      "length": 84
    },
    {
      "file": "types_convert.ml",
      "function": "container_type_to_chinese",
      "start_line": 193,
      "end_line": 267,
      "length": 75
    },
    {
      "file": "types_convert.ml",
      "function": "construct_type_to_chinese",
      "start_line": 201,
      "end_line": 267,
      "length": 67
    },
    {
      "file": "types_convert.ml",
      "function": "function_type_to_chinese",
      "start_line": 209,
      "end_line": 267,
      "length": 59
    },
    {
      "file": "types_convert.ml",
      "function": "record_type_to_chinese",
      "start_line": 214,
      "end_line": 267,
      "length": 54
    },
    {
      "file": "compiler.ml",
      "function": "log_info",
      "start_line": 7,
      "end_line": 59,
      "length": 53
    },
    {
      "file": "parser_expressions_token_reducer.ml",
      "function": "add_unique_to_ref",
      "start_line": 7,
      "end_line": 186,
      "length": 180
    },
    {
      "file": "parser_expressions_token_reducer.ml",
      "function": "classify_keyword_token",
      "start_line": 45,
      "end_line": 186,
      "length": 142
    },
    {
      "file": "parser_expressions_token_reducer.ml",
      "function": "classify_operator_token",
      "start_line": 70,
      "end_line": 186,
      "length": 117
    },
    {
      "file": "parser_expressions_token_reducer.ml",
      "function": "classify_delimiter_token",
      "start_line": 84,
      "end_line": 186,
      "length": 103
    },
    {
      "file": "parser_expressions_token_reducer.ml",
      "function": "classify_literal_token",
      "start_line": 98,
      "end_line": 186,
      "length": 89
    },
    {
      "file": "parser_expressions_token_reducer.ml",
      "function": "default_processor",
      "start_line": 118,
      "end_line": 186,
      "length": 69
    },
    {
      "file": "lexer_punctuation_recognition.ml",
      "function": "final_state",
      "start_line": 28,
      "end_line": 127,
      "length": 100
    },
    {
      "file": "lexer_punctuation_recognition.ml",
      "function": "handle_fullwidth_symbols",
      "start_line": 33,
      "end_line": 132,
      "length": 100
    },
    {
      "file": "lexer_punctuation_recognition.ml",
      "function": "check_chinese_punctuation",
      "start_line": 54,
      "end_line": 135,
      "length": 82
    },
    {
      "file": "lexer_punctuation_recognition.ml",
      "function": "handle_chinese_punctuation",
      "start_line": 58,
      "end_line": 135,
      "length": 78
    },
    {
      "file": "pattern_matcher.ml",
      "function": "evaluate_guard",
      "start_line": 56,
      "end_line": 129,
      "length": 74
    },
    {
      "file": "pattern_matcher.ml",
      "function": "guard_result",
      "start_line": 57,
      "end_line": 129,
      "length": 73
    },
    {
      "file": "pattern_matcher.ml",
      "function": "execute_single_branch",
      "start_line": 61,
      "end_line": 129,
      "length": 69
    },
    {
      "file": "pattern_matcher.ml",
      "function": "execute_match",
      "start_line": 73,
      "end_line": 129,
      "length": 57
    },
    {
      "file": "token_compatibility_reports.ml",
      "function": "get_supported_legacy_tokens",
      "start_line": 10,
      "end_line": 103,
      "length": 94
    },
    {
      "file": "types_builtin.ml",
      "function": "env",
      "start_line": 202,
      "end_line": 268,
      "length": 67
    },
    {
      "file": "types_builtin.ml",
      "function": "env",
      "start_line": 203,
      "end_line": 268,
      "length": 66
    },
    {
      "file": "types_builtin.ml",
      "function": "builtin_env",
      "start_line": 207,
      "end_line": 268,
      "length": 62
    },
    {
      "file": "types_builtin.ml",
      "function": "builtin_overload_env",
      "start_line": 214,
      "end_line": 268,
      "length": 55
    },
    {
      "file": "types_builtin.ml",
      "function": "get_builtin_functions",
      "start_line": 217,
      "end_line": 268,
      "length": 52
    },
    {
      "file": "c_codegen_context.ml",
      "function": "c",
      "start_line": 52,
      "end_line": 112,
      "length": 61
    },
    {
      "file": "c_codegen_context.ml",
      "function": "char_escape_table",
      "start_line": 60,
      "end_line": 112,
      "length": 53
    },
    {
      "file": "codegen.ml",
      "function": "try_to_string",
      "start_line": 70,
      "end_line": 217,
      "length": 148
    },
    {
      "file": "codegen.ml",
      "function": "value_to_bool",
      "start_line": 71,
      "end_line": 217,
      "length": 147
    },
    {
      "file": "codegen.ml",
      "function": "execute_stmt",
      "start_line": 74,
      "end_line": 217,
      "length": 144
    },
    {
      "file": "codegen.ml",
      "function": "eval_literal",
      "start_line": 77,
      "end_line": 217,
      "length": 141
    },
    {
      "file": "codegen.ml",
      "function": "execute_int_arithmetic",
      "start_line": 90,
      "end_line": 217,
      "length": 128
    },
    {
      "file": "codegen.ml",
      "function": "execute_mixed_arithmetic",
      "start_line": 100,
      "end_line": 217,
      "length": 118
    },
    {
      "file": "codegen.ml",
      "function": "execute_comparison",
      "start_line": 121,
      "end_line": 217,
      "length": 97
    },
    {
      "file": "codegen.ml",
      "function": "execute_logical",
      "start_line": 138,
      "end_line": 217,
      "length": 80
    },
    {
      "file": "codegen.ml",
      "function": "execute_string_concat",
      "start_line": 145,
      "end_line": 217,
      "length": 73
    },
    {
      "file": "codegen.ml",
      "function": "execute_binary_op",
      "start_line": 153,
      "end_line": 217,
      "length": 65
    },
    {
      "file": "codegen.ml",
      "function": "attempt_operations",
      "start_line": 155,
      "end_line": 217,
      "length": 63
    },
    {
      "file": "refactoring_analyzer.ml",
      "function": "max_nesting_level",
      "start_line": 26,
      "end_line": 88,
      "length": 63
    },
    {
      "file": "refactoring_analyzer.ml",
      "function": "min_duplication_threshold",
      "start_line": 27,
      "end_line": 88,
      "length": 62
    },
    {
      "file": "refactoring_analyzer.ml",
      "function": "analyze_expression",
      "start_line": 32,
      "end_line": 88,
      "length": 57
    },
    {
      "file": "refactoring_analyzer.ml",
      "function": "analyze_statement",
      "start_line": 35,
      "end_line": 88,
      "length": 54
    },
    {
      "file": "refactoring_analyzer.ml",
      "function": "analyze_program",
      "start_line": 38,
      "end_line": 88,
      "length": 51
    },
    {
      "file": "utf8_utils.ml",
      "function": "s",
      "start_line": 77,
      "end_line": 137,
      "length": 61
    },
    {
      "file": "utf8_utils.ml",
      "function": "len",
      "start_line": 78,
      "end_line": 137,
      "length": 60
    },
    {
      "file": "utf8_utils.ml",
      "function": "is_chinese_digit_char",
      "start_line": 84,
      "end_line": 137,
      "length": 54
    },
    {
      "file": "core_types.ml",
      "function": "variant_strs",
      "start_line": 96,
      "end_line": 157,
      "length": 62
    },
    {
      "file": "core_types.ml",
      "function": "free_vars",
      "start_line": 107,
      "end_line": 157,
      "length": 51
    },
    {
      "file": "keyword_matcher_tables_basic.ml",
      "function": "basic_keywords",
      "start_line": 7,
      "end_line": 70,
      "length": 64
    },
    {
      "file": "value_operations.ml",
      "function": "empty_env",
      "start_line": 44,
      "end_line": 185,
      "length": 142
    },
    {
      "file": "value_operations.ml",
      "function": "bind_var",
      "start_line": 47,
      "end_line": 185,
      "length": 139
    },
    {
      "file": "value_operations.ml",
      "function": "lookup_var",
      "start_line": 50,
      "end_line": 185,
      "length": 136
    },
    {
      "file": "value_operations.ml",
      "function": "available_vars",
      "start_line": 60,
      "end_line": 180,
      "length": 121
    },
    {
      "file": "value_operations.ml",
      "function": "basic_value_to_string",
      "start_line": 93,
      "end_line": 185,
      "length": 93
    },
    {
      "file": "value_operations.ml",
      "function": "container_value_to_string",
      "start_line": 103,
      "end_line": 185,
      "length": 83
    },
    {
      "file": "value_operations.ml",
      "function": "function_value_to_string",
      "start_line": 118,
      "end_line": 185,
      "length": 68
    },
    {
      "file": "value_operations.ml",
      "function": "constructor_value_to_string",
      "start_line": 126,
      "end_line": 185,
      "length": 60
    },
    {
      "file": "refactoring_analyzer_naming.ml",
      "function": "analyze_naming_quality",
      "start_line": 32,
      "end_line": 90,
      "length": 59
    },
    {
      "file": "refactoring_analyzer_naming.ml",
      "function": "suggestions",
      "start_line": 33,
      "end_line": 90,
      "length": 58
    },
    {
      "file": "lexer_token_converter.ml",
      "function": "convert_token",
      "start_line": 4,
      "end_line": 68,
      "length": 65
    },
    {
      "file": "c_codegen_expressions.ml",
      "function": "log_info",
      "start_line": 10,
      "end_line": 67,
      "length": 58
    },
    {
      "file": "c_codegen_expressions.ml",
      "function": "get_expr_description",
      "start_line": 13,
      "end_line": 67,
      "length": 55
    },
    {
      "file": "keyword_converter_special.ml",
      "function": "type_keyword_mapping",
      "start_line": 7,
      "end_line": 69,
      "length": 63
    },
    {
      "file": "keyword_converter_chinese.ml",
      "function": "wenyan_keyword_mapping",
      "start_line": 7,
      "end_line": 106,
      "length": 100
    },
    {
      "file": "keyword_converter_chinese.ml",
      "function": "convert_wenyan_keywords",
      "start_line": 37,
      "end_line": 136,
      "length": 100
    },
    {
      "file": "keyword_converter_chinese.ml",
      "function": "ancient_keyword_mapping",
      "start_line": 42,
      "end_line": 141,
      "length": 100
    },
    {
      "file": "chinese_best_practices.ml",
      "function": "comprehensive_practice_check",
      "start_line": 31,
      "end_line": 88,
      "length": 58
    },
    {
      "file": "chinese_best_practices.ml",
      "function": "all_violations",
      "start_line": 33,
      "end_line": 88,
      "length": 56
    },
    {
      "file": "chinese_best_practices.ml",
      "function": "filtered_violations",
      "start_line": 36,
      "end_line": 88,
      "length": 53
    },
    {
      "file": "chinese_best_practices.ml",
      "function": "test_items",
      "start_line": 111,
      "end_line": 177,
      "length": 67
    },
    {
      "file": "chinese_best_practices.ml",
      "function": "test_chinese_best_practices",
      "start_line": 115,
      "end_line": 177,
      "length": 63
    },
    {
      "file": "chinese_best_practices.ml",
      "function": "test_configs",
      "start_line": 119,
      "end_line": 177,
      "length": 59
    },
    {
      "file": "parser_expressions.ml",
      "function": "parse_expression",
      "start_line": 19,
      "end_line": 99,
      "length": 81
    },
    {
      "file": "parser_expressions.ml",
      "function": "token",
      "start_line": 21,
      "end_line": 99,
      "length": 79
    },
    {
      "file": "parser_expressions.ml",
      "function": "token",
      "start_line": 100,
      "end_line": 199,
      "length": 100
    },
    {
      "file": "constants.ml",
      "function": "red",
      "start_line": 48,
      "end_line": 147,
      "length": 100
    },
    {
      "file": "constants.ml",
      "function": "green",
      "start_line": 49,
      "end_line": 148,
      "length": 100
    },
    {
      "file": "constants.ml",
      "function": "yellow",
      "start_line": 50,
      "end_line": 149,
      "length": 100
    },
    {
      "file": "constants.ml",
      "function": "blue",
      "start_line": 51,
      "end_line": 150,
      "length": 100
    },
    {
      "file": "constants.ml",
      "function": "magenta",
      "start_line": 52,
      "end_line": 151,
      "length": 100
    },
    {
      "file": "constants.ml",
      "function": "cyan",
      "start_line": 53,
      "end_line": 152,
      "length": 100
    },
    {
      "file": "constants.ml",
      "function": "white",
      "start_line": 54,
      "end_line": 153,
      "length": 100
    },
    {
      "file": "constants.ml",
      "function": "bright_red",
      "start_line": 55,
      "end_line": 154,
      "length": 100
    },
    {
      "file": "constants.ml",
      "function": "bright_green",
      "start_line": 56,
      "end_line": 155,
      "length": 100
    },
    {
      "file": "constants.ml",
      "function": "bright_yellow",
      "start_line": 57,
      "end_line": 156,
      "length": 100
    },
    {
      "file": "constants.ml",
      "function": "bright_blue",
      "start_line": 58,
      "end_line": 157,
      "length": 100
    },
    {
      "file": "constants.ml",
      "function": "bright_magenta",
      "start_line": 59,
      "end_line": 158,
      "length": 100
    },
    {
      "file": "constants.ml",
      "function": "bright_cyan",
      "start_line": 60,
      "end_line": 159,
      "length": 100
    },
    {
      "file": "constants.ml",
      "function": "bright_white",
      "start_line": 61,
      "end_line": 160,
      "length": 100
    },
    {
      "file": "constants.ml",
      "function": "bold",
      "start_line": 62,
      "end_line": 161,
      "length": 100
    },
    {
      "file": "constants.ml",
      "function": "dim",
      "start_line": 63,
      "end_line": 162,
      "length": 100
    },
    {
      "file": "constants.ml",
      "function": "italic",
      "start_line": 64,
      "end_line": 163,
      "length": 100
    },
    {
      "file": "constants.ml",
      "function": "underline",
      "start_line": 65,
      "end_line": 164,
      "length": 100
    },
    {
      "file": "constants.ml",
      "function": "blink",
      "start_line": 66,
      "end_line": 165,
      "length": 100
    },
    {
      "file": "constants.ml",
      "function": "reverse",
      "start_line": 67,
      "end_line": 166,
      "length": 100
    },
    {
      "file": "constants.ml",
      "function": "strikethrough",
      "start_line": 68,
      "end_line": 167,
      "length": 100
    },
    {
      "file": "constants.ml",
      "function": "reset",
      "start_line": 69,
      "end_line": 168,
      "length": 100
    },
    {
      "file": "token_category_checker.ml",
      "function": "is_literal_token",
      "start_line": 9,
      "end_line": 104,
      "length": 96
    },
    {
      "file": "token_category_checker.ml",
      "function": "is_identifier_token",
      "start_line": 14,
      "end_line": 104,
      "length": 91
    },
    {
      "file": "token_category_checker.ml",
      "function": "is_basic_keyword_token",
      "start_line": 20,
      "end_line": 104,
      "length": 85
    },
    {
      "file": "token_category_checker.ml",
      "function": "is_number_keyword_token",
      "start_line": 33,
      "end_line": 104,
      "length": 72
    },
    {
      "file": "token_category_checker.ml",
      "function": "is_type_keyword_token",
      "start_line": 40,
      "end_line": 104,
      "length": 65
    },
    {
      "file": "token_category_checker.ml",
      "function": "is_wenyan_keyword_token",
      "start_line": 47,
      "end_line": 104,
      "length": 58
    },
    {
      "file": "token_category_checker.ml",
      "function": "is_classical_keyword_token",
      "start_line": 54,
      "end_line": 104,
      "length": 51
    },
    {
      "file": "types_cache.ml",
      "function": "get_cache_hit_rate",
      "start_line": 84,
      "end_line": 151,
      "length": 68
    },
    {
      "file": "types_cache.ml",
      "function": "hits",
      "start_line": 85,
      "end_line": 151,
      "length": 67
    },
    {
      "file": "types_cache.ml",
      "function": "print_stats",
      "start_line": 89,
      "end_line": 151,
      "length": 63
    },
    {
      "file": "types_cache.ml",
      "function": "infer_calls",
      "start_line": 91,
      "end_line": 151,
      "length": 61
    },
    {
      "file": "types_cache.ml",
      "function": "hit_rate",
      "start_line": 92,
      "end_line": 151,
      "length": 60
    },
    {
      "file": "binary_operations.ml",
      "function": "execute_typed_comparison",
      "start_line": 44,
      "end_line": 116,
      "length": 73
    },
    {
      "file": "binary_operations.ml",
      "function": "compare_values",
      "start_line": 45,
      "end_line": 116,
      "length": 72
    },
    {
      "file": "binary_operations.ml",
      "function": "execute_comparison_op",
      "start_line": 64,
      "end_line": 116,
      "length": 53
    },
    {
      "file": "binary_operations.ml",
      "function": "try_with_conversion",
      "start_line": 116,
      "end_line": 168,
      "length": 53
    },
    {
      "file": "binary_operations.ml",
      "function": "config",
      "start_line": 117,
      "end_line": 168,
      "length": 52
    },
    {
      "file": "token_compatibility_keywords.ml",
      "function": "map_basic_keywords",
      "start_line": 12,
      "end_line": 111,
      "length": 100
    },
    {
      "file": "token_compatibility_keywords.ml",
      "function": "map_wenyan_keywords",
      "start_line": 35,
      "end_line": 134,
      "length": 100
    },
    {
      "file": "token_compatibility_keywords.ml",
      "function": "map_classical_keywords",
      "start_line": 51,
      "end_line": 134,
      "length": 84
    },
    {
      "file": "token_compatibility_keywords.ml",
      "function": "map_natural_language_keywords",
      "start_line": 63,
      "end_line": 134,
      "length": 72
    },
    {
      "file": "token_compatibility_keywords.ml",
      "function": "map_type_keywords",
      "start_line": 76,
      "end_line": 134,
      "length": 59
    },
    {
      "file": "refactoring_analyzer_complexity.ml",
      "function": "nesting_depth",
      "start_line": 171,
      "end_line": 226,
      "length": 56
    },
    {
      "file": "refactoring_analyzer_complexity.ml",
      "function": "cognitive_complexity",
      "start_line": 172,
      "end_line": 226,
      "length": 55
    },
    {
      "file": "unicode/unicode_types.ml",
      "function": "arrow_symbol",
      "start_line": 26,
      "end_line": 125,
      "length": 100
    },
    {
      "file": "unicode/unicode_types.ml",
      "function": "fullwidth",
      "start_line": 27,
      "end_line": 126,
      "length": 100
    },
    {
      "file": "unicode/unicode_types.ml",
      "function": "char_definitions",
      "start_line": 31,
      "end_line": 130,
      "length": 100
    },
    {
      "file": "poetry/artistic_evaluators.ml",
      "function": "char_count",
      "start_line": 91,
      "end_line": 141,
      "length": 51
    },
    {
      "file": "poetry/artistic_evaluators.ml",
      "function": "tone_changes",
      "start_line": 155,
      "end_line": 225,
      "length": 71
    },
    {
      "file": "poetry/artistic_evaluators.ml",
      "function": "count_changes",
      "start_line": 156,
      "end_line": 225,
      "length": 70
    },
    {
      "file": "poetry/artistic_evaluators.ml",
      "function": "change_score",
      "start_line": 164,
      "end_line": 225,
      "length": 62
    },
    {
      "file": "poetry/artistic_evaluators.ml",
      "function": "evaluate_elegance",
      "start_line": 169,
      "end_line": 225,
      "length": 57
    },
    {
      "file": "poetry/artistic_evaluators.ml",
      "function": "_char_count",
      "start_line": 171,
      "end_line": 225,
      "length": 55
    },
    {
      "file": "poetry/artistic_evaluators.ml",
      "function": "elegant_words",
      "start_line": 174,
      "end_line": 225,
      "length": 52
    },
    {
      "file": "poetry/poetry_forms_evaluation.ml",
      "function": "calculate_overall_grade",
      "start_line": 49,
      "end_line": 100,
      "length": 52
    },
    {
      "file": "poetry/poetry_forms_evaluation.ml",
      "function": "total_score",
      "start_line": 50,
      "end_line": 100,
      "length": 51
    },
    {
      "file": "poetry/poetry_standards.ml",
      "function": "siyan_standards",
      "start_line": 6,
      "end_line": 77,
      "length": 72
    },
    {
      "file": "poetry/poetry_standards.ml",
      "function": "wuyan_lushi_standards",
      "start_line": 15,
      "end_line": 77,
      "length": 63
    },
    {
      "file": "poetry/poetry_standards.ml",
      "function": "validate_siyan_format",
      "start_line": 77,
      "end_line": 159,
      "length": 83
    },
    {
      "file": "poetry/poetry_standards.ml",
      "function": "verse_lengths",
      "start_line": 78,
      "end_line": 159,
      "length": 82
    },
    {
      "file": "poetry/poetry_standards.ml",
      "function": "validate_wuyan_lushi_format",
      "start_line": 82,
      "end_line": 159,
      "length": 78
    },
    {
      "file": "poetry/poetry_standards.ml",
      "function": "validate_qiyan_jueju_format",
      "start_line": 86,
      "end_line": 159,
      "length": 74
    },
    {
      "file": "poetry/poetry_standards.ml",
      "function": "validate_format",
      "start_line": 90,
      "end_line": 159,
      "length": 70
    },
    {
      "file": "poetry/poetry_standards.ml",
      "function": "get_default_rhythm_weight",
      "start_line": 103,
      "end_line": 159,
      "length": 57
    },
    {
      "file": "poetry/rhyme_lookup.ml",
      "function": "rhyme_lookup_table",
      "start_line": 15,
      "end_line": 107,
      "length": 93
    },
    {
      "file": "poetry/rhyme_lookup.ml",
      "function": "expanded_rhyme_lookup_table",
      "start_line": 18,
      "end_line": 107,
      "length": 90
    },
    {
      "file": "poetry/rhyme_lookup.ml",
      "function": "rhyme_group_lookup_table",
      "start_line": 21,
      "end_line": 107,
      "length": 87
    },
    {
      "file": "poetry/rhyme_lookup.ml",
      "function": "rhyme_category_lookup_table",
      "start_line": 24,
      "end_line": 107,
      "length": 84
    },
    {
      "file": "poetry/rhyme_lookup.ml",
      "function": "initialize_rhyme_lookup",
      "start_line": 29,
      "end_line": 107,
      "length": 79
    },
    {
      "file": "poetry/rhyme_lookup.ml",
      "function": "ensure_initialized",
      "start_line": 47,
      "end_line": 107,
      "length": 61
    },
    {
      "file": "poetry/rhyme_lookup.ml",
      "function": "lookup_rhyme_fast",
      "start_line": 52,
      "end_line": 107,
      "length": 56
    },
    {
      "file": "poetry/rhyme_lookup.ml",
      "function": "lookup_rhyme_expanded_fast",
      "start_line": 57,
      "end_line": 107,
      "length": 51
    },
    {
      "file": "poetry/word_class_data.ml",
      "function": "noun_data",
      "start_line": 16,
      "end_line": 115,
      "length": 100
    },
    {
      "file": "poetry/word_class_data.ml",
      "function": "verb_data",
      "start_line": 63,
      "end_line": 162,
      "length": 100
    },
    {
      "file": "poetry/word_class_data.ml",
      "function": "adjective_data",
      "start_line": 99,
      "end_line": 182,
      "length": 84
    },
    {
      "file": "poetry/word_class_data.ml",
      "function": "other_data",
      "start_line": 125,
      "end_line": 182,
      "length": 58
    },
    {
      "file": "poetry/rhyme_detection.ml",
      "function": "extract_rhyme_ending_string",
      "start_line": 64,
      "end_line": 114,
      "length": 51
    },
    {
      "file": "poetry/rhyme_data.ml",
      "function": "an_yun_ping_sheng",
      "start_line": 25,
      "end_line": 264,
      "length": 240
    },
    {
      "file": "poetry/rhyme_data.ml",
      "function": "poetry_core_chars",
      "start_line": 33,
      "end_line": 264,
      "length": 232
    },
    {
      "file": "poetry/rhyme_data.ml",
      "function": "dong_rhyme_group",
      "start_line": 36,
      "end_line": 264,
      "length": 229
    },
    {
      "file": "poetry/rhyme_data.ml",
      "function": "chong_rhyme_group",
      "start_line": 39,
      "end_line": 264,
      "length": 226
    },
    {
      "file": "poetry/rhyme_data.ml",
      "function": "song_rhyme_group",
      "start_line": 43,
      "end_line": 264,
      "length": 222
    },
    {
      "file": "poetry/rhyme_data.ml",
      "function": "su_rhyme_group",
      "start_line": 47,
      "end_line": 264,
      "length": 218
    },
    {
      "file": "poetry/rhyme_data.ml",
      "function": "gu_rhyme_group",
      "start_line": 51,
      "end_line": 264,
      "length": 214
    },
    {
      "file": "poetry/rhyme_data.ml",
      "function": "ku_rhyme_group",
      "start_line": 56,
      "end_line": 264,
      "length": 209
    },
    {
      "file": "poetry/rhyme_data.ml",
      "function": "du_rhyme_group",
      "start_line": 59,
      "end_line": 264,
      "length": 206
    },
    {
      "file": "poetry/rhyme_data.ml",
      "function": "dou_rhyme_group",
      "start_line": 62,
      "end_line": 264,
      "length": 203
    },
    {
      "file": "poetry/rhyme_data.ml",
      "function": "du_variant_group",
      "start_line": 76,
      "end_line": 264,
      "length": 189
    },
    {
      "file": "poetry/rhyme_data.ml",
      "function": "zhuo_rhyme_group",
      "start_line": 86,
      "end_line": 264,
      "length": 179
    },
    {
      "file": "poetry/rhyme_data.ml",
      "function": "si_yun_ping_sheng",
      "start_line": 90,
      "end_line": 264,
      "length": 175
    },
    {
      "file": "poetry/rhyme_data.ml",
      "function": "tian_yun_ping_sheng",
      "start_line": 97,
      "end_line": 264,
      "length": 168
    },
    {
      "file": "poetry/rhyme_data.ml",
      "function": "wang_yun_ze_sheng",
      "start_line": 152,
      "end_line": 264,
      "length": 113
    },
    {
      "file": "poetry/rhyme_data.ml",
      "function": "qu_yun_ze_sheng",
      "start_line": 157,
      "end_line": 264,
      "length": 108
    },
    {
      "file": "poetry/rhyme_data.ml",
      "function": "ru_sheng_yun_zu",
      "start_line": 198,
      "end_line": 264,
      "length": 67
    },
    {
      "file": "poetry/rhyme_json_data_loader.ml",
      "function": "parse_all",
      "start_line": 136,
      "end_line": 202,
      "length": 67
    },
    {
      "file": "poetry/rhyme_json_data_loader.ml",
      "function": "all_characters",
      "start_line": 152,
      "end_line": 202,
      "length": 51
    },
    {
      "file": "poetry/unified_rhyme_api.ml",
      "function": "find_rhyme_info",
      "start_line": 22,
      "end_line": 109,
      "length": 88
    },
    {
      "file": "poetry/unified_rhyme_api.ml",
      "function": "detect_rhyme_category",
      "start_line": 25,
      "end_line": 109,
      "length": 85
    },
    {
      "file": "poetry/unified_rhyme_api.ml",
      "function": "detect_rhyme_group",
      "start_line": 28,
      "end_line": 109,
      "length": 82
    },
    {
      "file": "poetry/unified_rhyme_api.ml",
      "function": "get_rhyme_characters",
      "start_line": 31,
      "end_line": 109,
      "length": 79
    },
    {
      "file": "poetry/unified_rhyme_api.ml",
      "function": "validate_rhyme_consistency",
      "start_line": 34,
      "end_line": 109,
      "length": 76
    },
    {
      "file": "poetry/unified_rhyme_api.ml",
      "function": "check_rhyme",
      "start_line": 37,
      "end_line": 109,
      "length": 73
    },
    {
      "file": "poetry/unified_rhyme_api.ml",
      "function": "find_rhyming_characters",
      "start_line": 40,
      "end_line": 109,
      "length": 70
    },
    {
      "file": "poetry/unified_rhyme_api.ml",
      "function": "is_known_rhyme_char",
      "start_line": 43,
      "end_line": 109,
      "length": 67
    },
    {
      "file": "poetry/unified_rhyme_api.ml",
      "function": "get_rhyme_description",
      "start_line": 46,
      "end_line": 109,
      "length": 64
    },
    {
      "file": "poetry/unified_rhyme_api.ml",
      "function": "analyze_rhyme_pattern",
      "start_line": 51,
      "end_line": 109,
      "length": 59
    },
    {
      "file": "poetry/unified_rhyme_api.ml",
      "function": "get_rhyme_stats",
      "start_line": 54,
      "end_line": 109,
      "length": 56
    },
    {
      "file": "poetry/unified_rhyme_api.ml",
      "function": "analyze_poem_line_structure",
      "start_line": 57,
      "end_line": 109,
      "length": 53
    },
    {
      "file": "logging/log_core.ml",
      "function": "global_config",
      "start_line": 25,
      "end_line": 124,
      "length": 100
    },
    {
      "file": "logging/log_core.ml",
      "function": "level_to_int",
      "start_line": 38,
      "end_line": 137,
      "length": 100
    },
    {
      "file": "logging/log_core.ml",
      "function": "level_to_string",
      "start_line": 41,
      "end_line": 140,
      "length": 100
    },
    {
      "file": "logging/log_core.ml",
      "function": "level_to_color",
      "start_line": 49,
      "end_line": 148,
      "length": 100
    },
    {
      "file": "logging/log_core.ml",
      "function": "color",
      "start_line": 96,
      "end_line": 195,
      "length": 100
    },
    {
      "file": "logging/log_core.ml",
      "function": "reset",
      "start_line": 97,
      "end_line": 196,
      "length": 100
    },
    {
      "file": "logging/log_core.ml",
      "function": "log_internal",
      "start_line": 103,
      "end_line": 160,
      "length": 58
    },
    {
      "file": "logging/log_core.ml",
      "function": "formatted",
      "start_line": 105,
      "end_line": 160,
      "length": 56
    },
    {
      "file": "logging/log_core.ml",
      "function": "output_ch",
      "start_line": 106,
      "end_line": 160,
      "length": 55
    },
    {
      "file": "config/env_var_config.ml",
      "function": "value",
      "start_line": 60,
      "end_line": 213,
      "length": 154
    },
    {
      "file": "config/env_var_config.ml",
      "function": "create_positive_int_handler",
      "start_line": 65,
      "end_line": 213,
      "length": 149
    },
    {
      "file": "config/env_var_config.ml",
      "function": "create_runtime_positive_int_handler",
      "start_line": 74,
      "end_line": 213,
      "length": 140
    },
    {
      "file": "config/env_var_config.ml",
      "function": "create_positive_float_handler",
      "start_line": 83,
      "end_line": 213,
      "length": 131
    },
    {
      "file": "config/env_var_config.ml",
      "function": "create_string_handler",
      "start_line": 92,
      "end_line": 213,
      "length": 122
    },
    {
      "file": "config/env_var_config.ml",
      "function": "create_int_range_handler",
      "start_line": 101,
      "end_line": 213,
      "length": 113
    },
    {
      "file": "config/env_var_config.ml",
      "function": "create_enum_handler",
      "start_line": 110,
      "end_line": 213,
      "length": 104
    },
    {
      "file": "constants/color_constants.ml",
      "function": "red",
      "start_line": 4,
      "end_line": 56,
      "length": 53
    },
    {
      "file": "constants/color_constants.ml",
      "function": "green",
      "start_line": 6,
      "end_line": 56,
      "length": 51
    },
    {
      "file": "lexer/token_mapping/token_registry_keywords.ml",
      "function": "register_type_keywords",
      "start_line": 40,
      "end_line": 97,
      "length": 58
    },
    {
      "file": "lexer/token_mapping/token_registry_keywords.ml",
      "function": "type_keywords",
      "start_line": 41,
      "end_line": 97,
      "length": 57
    },
    {
      "file": "lexer/token_mapping/basic_token_mapping.ml",
      "function": "map_basic_programming_keywords",
      "start_line": 12,
      "end_line": 195,
      "length": 184
    },
    {
      "file": "lexer/token_mapping/basic_token_mapping.ml",
      "function": "map_semantic_keywords",
      "start_line": 34,
      "end_line": 195,
      "length": 162
    },
    {
      "file": "lexer/token_mapping/basic_token_mapping.ml",
      "function": "map_error_recovery_keywords",
      "start_line": 42,
      "end_line": 195,
      "length": 154
    },
    {
      "file": "lexer/token_mapping/basic_token_mapping.ml",
      "function": "map_module_keywords",
      "start_line": 52,
      "end_line": 195,
      "length": 144
    },
    {
      "file": "lexer/token_mapping/basic_token_mapping.ml",
      "function": "map_macro_keywords",
      "start_line": 63,
      "end_line": 195,
      "length": 133
    },
    {
      "file": "lexer/token_mapping/basic_token_mapping.ml",
      "function": "map_type_annotation_keywords",
      "start_line": 69,
      "end_line": 195,
      "length": 127
    },
    {
      "file": "lexer/token_mapping/basic_token_mapping.ml",
      "function": "map_wenyan_keywords",
      "start_line": 82,
      "end_line": 195,
      "length": 114
    },
    {
      "file": "lexer/token_mapping/basic_token_mapping.ml",
      "function": "map_natural_language_keywords",
      "start_line": 105,
      "end_line": 195,
      "length": 91
    },
    {
      "file": "lexer/token_mapping/basic_token_mapping.ml",
      "function": "map_ancient_keywords",
      "start_line": 131,
      "end_line": 195,
      "length": 65
    },
    {
      "file": "lexer/token_mapping/classical_token_mapping.ml",
      "function": "map_wenyan_variant",
      "start_line": 6,
      "end_line": 100,
      "length": 95
    },
    {
      "file": "lexer/token_mapping/classical_token_mapping.ml",
      "function": "map_ancient_variant",
      "start_line": 31,
      "end_line": 100,
      "length": 70
    },
    {
      "file": "lexer/token_mapping/unified_token_mapper.ml",
      "function": "show_token",
      "start_line": 57,
      "end_line": 109,
      "length": 53
    },
    {
      "file": "lexer/token_mapping/unified_token_mapper.ml",
      "function": "result_token",
      "start_line": 110,
      "end_line": 203,
      "length": 94
    },
    {
      "file": "lexer/data/reserved_words_data.ml",
      "function": "reserved_words_list",
      "start_line": 4,
      "end_line": 90,
      "length": 87
    },
    {
      "file": "lexer/data/basic_keywords_data.ml",
      "function": "basic_keywords",
      "start_line": 4,
      "end_line": 103,
      "length": 100
    },
    {
      "file": "lexer/data/basic_keywords_data.ml",
      "function": "semantic_keywords",
      "start_line": 26,
      "end_line": 125,
      "length": 100
    },
    {
      "file": "lexer/data/basic_keywords_data.ml",
      "function": "error_recovery_keywords",
      "start_line": 30,
      "end_line": 129,
      "length": 100
    },
    {
      "file": "lexer/data/basic_keywords_data.ml",
      "function": "type_keywords",
      "start_line": 41,
      "end_line": 140,
      "length": 100
    },
    {
      "file": "lexer/data/basic_keywords_data.ml",
      "function": "module_keywords",
      "start_line": 44,
      "end_line": 143,
      "length": 100
    },
    {
      "file": "lexer/data/basic_keywords_data.ml",
      "function": "macro_keywords",
      "start_line": 56,
      "end_line": 155,
      "length": 100
    },
    {
      "file": "lexer/data/basic_keywords_data.ml",
      "function": "wenyan_keywords",
      "start_line": 59,
      "end_line": 158,
      "length": 100
    },
    {
      "file": "lexer/data/basic_keywords_data.ml",
      "function": "wenyan_extended_keywords",
      "start_line": 74,
      "end_line": 173,
      "length": 100
    },
    {
      "file": "lexer/data/basic_keywords_data.ml",
      "function": "natural_language_keywords",
      "start_line": 89,
      "end_line": 188,
      "length": 100
    },
    {
      "file": "lexer/data/basic_keywords_data.ml",
      "function": "type_annotation_keywords",
      "start_line": 116,
      "end_line": 198,
      "length": 83
    },
    {
      "file": "lexer/data/basic_keywords_data.ml",
      "function": "variant_keywords",
      "start_line": 128,
      "end_line": 198,
      "length": 71
    },
    {
      "file": "lexer/data/basic_keywords_data.ml",
      "function": "ancient_keywords",
      "start_line": 131,
      "end_line": 198,
      "length": 68
    },
    {
      "file": "chinese_best_practices/rules/idiomatic_rules.ml",
      "function": "idiomatic_rules",
      "start_line": 15,
      "end_line": 87,
      "length": 73
    },
    {
      "file": "chinese_best_practices/rules/mixed_language_rules.ml",
      "function": "mixed_language_rules",
      "start_line": 15,
      "end_line": 87,
      "length": 73
    },
    {
      "file": "chinese_best_practices/rules/word_order_rules.ml",
      "function": "word_order_rules",
      "start_line": 15,
      "end_line": 73,
      "length": 59
    },
    {
      "file": "poetry/data/expanded_word_class_data.ml",
      "function": "get_data_by_category",
      "start_line": 44,
      "end_line": 107,
      "length": 64
    },
    {
      "file": "poetry/data/expanded_word_class_data.ml",
      "function": "nouns",
      "start_line": 45,
      "end_line": 107,
      "length": 63
    },
    {
      "file": "poetry/data/expanded_data_loader.ml",
      "function": "format_error",
      "start_line": 20,
      "end_line": 76,
      "length": 57
    },
    {
      "file": "poetry/data/an_yun_data.ml",
      "function": "an_yun_basic_chars",
      "start_line": 30,
      "end_line": 129,
      "length": 100
    },
    {
      "file": "poetry/data/an_yun_data.ml",
      "function": "an_yun_ban_group",
      "start_line": 46,
      "end_line": 145,
      "length": 100
    },
    {
      "file": "poetry/data/an_yun_data.ml",
      "function": "an_yun_tan_group",
      "start_line": 64,
      "end_line": 163,
      "length": 100
    },
    {
      "file": "poetry/data/an_yun_data.ml",
      "function": "an_yun_wan_group",
      "start_line": 76,
      "end_line": 175,
      "length": 100
    },
    {
      "file": "poetry/data/an_yun_data.ml",
      "function": "an_yun_nan_group",
      "start_line": 93,
      "end_line": 192,
      "length": 100
    },
    {
      "file": "poetry/data/an_yun_data.ml",
      "function": "an_yun_lan_group",
      "start_line": 111,
      "end_line": 210,
      "length": 100
    },
    {
      "file": "poetry/data/an_yun_data.ml",
      "function": "an_yun_tuan_group",
      "start_line": 128,
      "end_line": 227,
      "length": 100
    },
    {
      "file": "poetry/data/an_yun_data.ml",
      "function": "an_yun_han_group",
      "start_line": 140,
      "end_line": 239,
      "length": 100
    },
    {
      "file": "poetry/data/an_yun_data.ml",
      "function": "an_yun_gang_group",
      "start_line": 156,
      "end_line": 255,
      "length": 100
    },
    {
      "file": "poetry/data/an_yun_data.ml",
      "function": "an_yun_tang_group",
      "start_line": 173,
      "end_line": 269,
      "length": 97
    },
    {
      "file": "poetry/data/an_yun_data.ml",
      "function": "an_yun_bang_group",
      "start_line": 187,
      "end_line": 269,
      "length": 83
    },
    {
      "file": "poetry/data/an_yun_data.ml",
      "function": "an_yun_pao_group",
      "start_line": 206,
      "end_line": 269,
      "length": 64
    },
    {
      "file": "poetry/data/data_source_registry.ml",
      "function": "register_yu_rhyme",
      "start_line": 22,
      "end_line": 74,
      "length": 53
    },
    {
      "file": "poetry/data/data_source_registry.ml",
      "function": "data",
      "start_line": 23,
      "end_line": 74,
      "length": 52
    },
    {
      "file": "poetry/data/rhyme_groups/yu_rhyme_data.ml",
      "function": "yu_yun_core_chars",
      "start_line": 16,
      "end_line": 78,
      "length": 63
    },
    {
      "file": "poetry/data/rhyme_groups/rhyme_database.ml",
      "function": "convert_rhyme_category",
      "start_line": 21,
      "end_line": 129,
      "length": 109
    },
    {
      "file": "poetry/data/rhyme_groups/rhyme_database.ml",
      "function": "convert_rhyme_group",
      "start_line": 29,
      "end_line": 129,
      "length": 101
    },
    {
      "file": "poetry/data/rhyme_groups/rhyme_database.ml",
      "function": "convert_ze_rhyme_category",
      "start_line": 45,
      "end_line": 129,
      "length": 85
    },
    {
      "file": "poetry/data/rhyme_groups/rhyme_database.ml",
      "function": "convert_ze_rhyme_group",
      "start_line": 53,
      "end_line": 129,
      "length": 77
    },
    {
      "file": "poetry/data/rhyme_groups/rhyme_database.ml",
      "function": "convert_jiang_rhyme_category",
      "start_line": 69,
      "end_line": 129,
      "length": 61
    },
    {
      "file": "poetry/data/rhyme_groups/rhyme_database.ml",
      "function": "convert_jiang_rhyme_group",
      "start_line": 76,
      "end_line": 129,
      "length": 54
    },
    {
      "file": "poetry/data/tone_data/qu_sheng_data.ml",
      "function": "qu_sheng_chars",
      "start_line": 10,
      "end_line": 71,
      "length": 62
    },
    {
      "file": "poetry/data/tone_data/ru_sheng_data.ml",
      "function": "ru_sheng_chars",
      "start_line": 10,
      "end_line": 76,
      "length": 67
    },
    {
      "file": "poetry/data/rhyme_groups/ping_sheng/feng_rhyme_data.ml",
      "function": "feng_yun_basic_chars",
      "start_line": 35,
      "end_line": 320,
      "length": 286
    },
    {
      "file": "poetry/data/rhyme_groups/ping_sheng/feng_rhyme_data.ml",
      "function": "feng_yun_chong_group",
      "start_line": 49,
      "end_line": 320,
      "length": 272
    },
    {
      "file": "poetry/data/rhyme_groups/ping_sheng/feng_rhyme_data.ml",
      "function": "feng_yun_song_group",
      "start_line": 64,
      "end_line": 320,
      "length": 257
    },
    {
      "file": "poetry/data/rhyme_groups/ping_sheng/feng_rhyme_data.ml",
      "function": "feng_yun_tong_group",
      "start_line": 77,
      "end_line": 320,
      "length": 244
    },
    {
      "file": "poetry/data/rhyme_groups/ping_sheng/feng_rhyme_data.ml",
      "function": "feng_yun_die_group",
      "start_line": 103,
      "end_line": 320,
      "length": 218
    },
    {
      "file": "poetry/data/rhyme_groups/ping_sheng/feng_rhyme_data.ml",
      "function": "feng_yun_nian_group",
      "start_line": 127,
      "end_line": 320,
      "length": 194
    },
    {
      "file": "poetry/data/rhyme_groups/ping_sheng/feng_rhyme_data.ml",
      "function": "feng_yun_lian_group",
      "start_line": 143,
      "end_line": 320,
      "length": 178
    },
    {
      "file": "poetry/data/rhyme_groups/ping_sheng/feng_rhyme_data.ml",
      "function": "feng_yun_lie_group",
      "start_line": 167,
      "end_line": 320,
      "length": 154
    },
    {
      "file": "poetry/data/rhyme_groups/ping_sheng/feng_rhyme_data.ml",
      "function": "feng_yun_li_group",
      "start_line": 189,
      "end_line": 320,
      "length": 132
    },
    {
      "file": "poetry/data/rhyme_groups/ping_sheng/feng_rhyme_data.ml",
      "function": "feng_yun_fish_group",
      "start_line": 237,
      "end_line": 320,
      "length": 84
    },
    {
      "file": "poetry/data/rhyme_groups/ze_sheng/yue_rhyme_data.ml",
      "function": "yue_yun_basic_chars",
      "start_line": 35,
      "end_line": 221,
      "length": 187
    },
    {
      "file": "poetry/data/rhyme_groups/ze_sheng/yue_rhyme_data.ml",
      "function": "yue_yun_lie_group",
      "start_line": 45,
      "end_line": 221,
      "length": 177
    },
    {
      "file": "poetry/data/rhyme_groups/ze_sheng/yue_rhyme_data.ml",
      "function": "yue_yun_que_group",
      "start_line": 67,
      "end_line": 221,
      "length": 155
    },
    {
      "file": "poetry/data/rhyme_groups/ze_sheng/yue_rhyme_data.ml",
      "function": "yue_yun_qu_group",
      "start_line": 79,
      "end_line": 221,
      "length": 143
    },
    {
      "file": "poetry/data/rhyme_groups/ze_sheng/yue_rhyme_data.ml",
      "function": "yue_yun_ru_group",
      "start_line": 93,
      "end_line": 221,
      "length": 129
    },
    {
      "file": "poetry/data/rhyme_groups/ze_sheng/yue_rhyme_data.ml",
      "function": "yue_yun_rui_group",
      "start_line": 109,
      "end_line": 221,
      "length": 113
    },
    {
      "file": "poetry/data/rhyme_groups/ze_sheng/yue_rhyme_data.ml",
      "function": "yue_yun_shui_group",
      "start_line": 122,
      "end_line": 221,
      "length": 100
    },
    {
      "file": "poetry/data/rhyme_groups/ze_sheng/yue_rhyme_data.ml",
      "function": "yue_yun_she_group",
      "start_line": 146,
      "end_line": 221,
      "length": 76
    },
    {
      "file": "poetry/data/rhyme_groups/ze_sheng/hui_rhyme_data.ml",
      "function": "hui_yun_core_chars",
      "start_line": 35,
      "end_line": 134,
      "length": 100
    },
    {
      "file": "poetry/data/rhyme_groups/ze_sheng/hui_rhyme_data.ml",
      "function": "hui_yun_dai_series",
      "start_line": 50,
      "end_line": 149,
      "length": 100
    },
    {
      "file": "poetry/data/rhyme_groups/ze_sheng/hui_rhyme_data.ml",
      "function": "hui_yun_mai_series",
      "start_line": 65,
      "end_line": 164,
      "length": 100
    },
    {
      "file": "poetry/data/rhyme_groups/ze_sheng/hui_rhyme_data.ml",
      "function": "hui_yun_pai_series",
      "start_line": 76,
      "end_line": 175,
      "length": 100
    },
    {
      "file": "poetry/data/rhyme_groups/ze_sheng/hui_rhyme_data.ml",
      "function": "hui_yun_chai_series",
      "start_line": 86,
      "end_line": 185,
      "length": 100
    },
    {
      "file": "poetry/data/rhyme_groups/ze_sheng/hui_rhyme_data.ml",
      "function": "hui_yun_cai_series",
      "start_line": 95,
      "end_line": 194,
      "length": 100
    },
    {
      "file": "poetry/data/rhyme_groups/ze_sheng/hui_rhyme_data.ml",
      "function": "hui_yun_lai_series",
      "start_line": 109,
      "end_line": 208,
      "length": 100
    },
    {
      "file": "poetry/data/rhyme_groups/ze_sheng/hui_rhyme_data.ml",
      "function": "hui_yun_hai_series",
      "start_line": 120,
      "end_line": 219,
      "length": 100
    },
    {
      "file": "poetry/data/rhyme_groups/ze_sheng/hui_rhyme_data.ml",
      "function": "hui_yun_sui_series",
      "start_line": 129,
      "end_line": 228,
      "length": 100
    },
    {
      "file": "poetry/data/rhyme_groups/ze_sheng/hui_rhyme_data.ml",
      "function": "hui_yun_zong_series",
      "start_line": 143,
      "end_line": 242,
      "length": 100
    },
    {
      "file": "poetry/data/rhyme_groups/ze_sheng/hui_rhyme_data.ml",
      "function": "hui_yun_song_series",
      "start_line": 155,
      "end_line": 254,
      "length": 100
    },
    {
      "file": "poetry/data/rhyme_groups/ze_sheng/hui_rhyme_data.ml",
      "function": "hui_yun_cong_series",
      "start_line": 168,
      "end_line": 267,
      "length": 100
    },
    {
      "file": "poetry/data/rhyme_groups/ze_sheng/hui_rhyme_data.ml",
      "function": "hui_yun_chong_series",
      "start_line": 178,
      "end_line": 277,
      "length": 100
    },
    {
      "file": "poetry/data/rhyme_groups/ze_sheng/hui_rhyme_data.ml",
      "function": "hui_yun_dong_series",
      "start_line": 190,
      "end_line": 289,
      "length": 100
    },
    {
      "file": "poetry/data/rhyme_groups/ze_sheng/hui_rhyme_data.ml",
      "function": "hui_yun_feng_series",
      "start_line": 194,
      "end_line": 293,
      "length": 100
    },
    {
      "file": "poetry/data/rhyme_groups/ze_sheng/hui_rhyme_data.ml",
      "function": "hui_yun_traditional_series",
      "start_line": 208,
      "end_line": 307,
      "length": 100
    },
    {
      "file": "poetry/data/rhyme_groups/ze_sheng/hui_rhyme_data.ml",
      "function": "hui_yun_remaining_chars",
      "start_line": 222,
      "end_line": 321,
      "length": 100
    },
    {
      "file": "poetry/data/rhyme_groups/ze_sheng/jiang_rhyme_data.ml",
      "function": "jiang_yun_ze_sheng",
      "start_line": 37,
      "end_line": 121,
      "length": 85
    }
  ],
  "missing_interfaces": [],
  "code_duplication": [
    {
      "signature": "builtin_symbols",
      "files": [
        "semantic_builtins.ml",
        "semantic_builtins.ml"
      ]
    },
    {
      "signature": "lst",
      "files": [
        "builtin_math.ml",
        "builtin_math.ml"
      ]
    },
    {
      "signature": "aggregator",
      "files": [
        "builtin_math.ml",
        "builtin_math.ml"
      ]
    },
    {
      "signature": "lst",
      "files": [
        "builtin_math.ml",
        "builtin_math.ml"
      ]
    },
    {
      "signature": "aggregator",
      "files": [
        "builtin_math.ml",
        "builtin_math.ml"
      ]
    },
    {
      "signature": "state",
      "files": [
        "parser_poetry.ml",
        "parser_poetry.ml"
      ]
    },
    {
      "signature": "state",
      "files": [
        "parser_poetry.ml",
        "parser_poetry.ml"
      ]
    },
    {
      "signature": "state",
      "files": [
        "parser_poetry.ml",
        "parser_poetry.ml"
      ]
    },
    {
      "signature": "state",
      "files": [
        "parser_poetry.ml",
        "parser_poetry.ml"
      ]
    },
    {
      "signature": "state",
      "files": [
        "parser_poetry.ml",
        "parser_poetry.ml"
      ]
    },
    {
      "signature": "state",
      "files": [
        "parser_poetry.ml",
        "parser_poetry.ml"
      ]
    },
    {
      "signature": "state",
      "files": [
        "parser_poetry.ml",
        "parser_poetry.ml"
      ]
    },
    {
      "signature": "state",
      "files": [
        "parser_poetry.ml",
        "parser_poetry.ml"
      ]
    },
    {
      "signature": "state",
      "files": [
        "parser_poetry.ml",
        "parser_poetry.ml"
      ]
    },
    {
      "signature": "state",
      "files": [
        "parser_poetry.ml",
        "parser_poetry.ml"
      ]
    },
    {
      "signature": "state",
      "files": [
        "parser_poetry.ml",
        "parser_poetry.ml"
      ]
    },
    {
      "signature": "state",
      "files": [
        "parser_poetry.ml",
        "parser_poetry.ml"
      ]
    },
    {
      "signature": "state",
      "files": [
        "parser_poetry.ml",
        "parser_poetry.ml"
      ]
    },
    {
      "signature": "poetry_expr",
      "files": [
        "parser_poetry.ml",
        "parser_poetry.ml"
      ]
    },
    {
      "signature": "token, pos",
      "files": [
        "parser_poetry.ml",
        "parser_patterns.ml"
      ]
    },
    {
      "signature": "state",
      "files": [
        "parser_poetry.ml",
        "parser_patterns.ml"
      ]
    },
    {
      "signature": "state",
      "files": [
        "parser_poetry.ml",
        "parser_patterns.ml"
      ]
    },
    {
      "signature": "state",
      "files": [
        "parser_poetry.ml",
        "parser_patterns.ml"
      ]
    },
    {
      "signature": "state",
      "files": [
        "parser_poetry.ml",
        "parser_patterns.ml"
      ]
    },
    {
      "signature": "state",
      "files": [
        "parser_poetry.ml",
        "parser_patterns.ml"
      ]
    },
    {
      "signature": "state",
      "files": [
        "parser_poetry.ml",
        "parser_patterns.ml"
      ]
    },
    {
      "signature": "state",
      "files": [
        "parser_poetry.ml",
        "parser_patterns.ml"
      ]
    },
    {
      "signature": "state",
      "files": [
        "parser_poetry.ml",
        "parser_patterns.ml"
      ]
    },
    {
      "signature": "state",
      "files": [
        "parser_poetry.ml",
        "parser_patterns.ml"
      ]
    },
    {
      "signature": "state",
      "files": [
        "parser_poetry.ml",
        "parser_patterns.ml"
      ]
    },
    {
      "signature": "state",
      "files": [
        "parser_poetry.ml",
        "parser_patterns.ml"
      ]
    },
    {
      "signature": "state",
      "files": [
        "parser_poetry.ml",
        "parser_patterns.ml"
      ]
    },
    {
      "signature": "expr, state",
      "files": [
        "parser_patterns.ml",
        "parser_patterns.ml"
      ]
    },
    {
      "signature": "state",
      "files": [
        "parser_poetry.ml",
        "parser_patterns.ml"
      ]
    },
    {
      "signature": "loopacc state",
      "files": [
        "parser_patterns.ml",
        "parser_patterns.ml"
      ]
    },
    {
      "signature": "state",
      "files": [
        "parser_poetry.ml",
        "parser_patterns.ml"
      ]
    },
    {
      "signature": "pattern, state",
      "files": [
        "parser_patterns.ml",
        "parser_patterns.ml"
      ]
    },
    {
      "signature": "state",
      "files": [
        "parser_poetry.ml",
        "parser_patterns.ml"
      ]
    },
    {
      "signature": "state",
      "files": [
        "parser_poetry.ml",
        "parser_patterns.ml"
      ]
    },
    {
      "signature": "expr, state",
      "files": [
        "parser_patterns.ml",
        "parser_patterns.ml"
      ]
    },
    {
      "signature": "state",
      "files": [
        "parser_poetry.ml",
        "parser_patterns.ml"
      ]
    },
    {
      "signature": "state",
      "files": [
        "parser_poetry.ml",
        "parser_patterns.ml"
      ]
    },
    {
      "signature": "state",
      "files": [
        "parser_poetry.ml",
        "parser_patterns.ml"
      ]
    },
    {
      "signature": "state",
      "files": [
        "parser_poetry.ml",
        "parser_patterns.ml"
      ]
    },
    {
      "signature": "cases, state",
      "files": [
        "parser_patterns.ml",
        "parser_patterns.ml"
      ]
    },
    {
      "signature": "loopacc state",
      "files": [
        "parser_patterns.ml",
        "parser_patterns.ml"
      ]
    },
    {
      "signature": "token, _pos",
      "files": [
        "parser_poetry.ml",
        "parser_patterns.ml"
      ]
    },
    {
      "signature": "state",
      "files": [
        "parser_poetry.ml",
        "parser_patterns.ml"
      ]
    },
    {
      "signature": "pattern, state",
      "files": [
        "parser_patterns.ml",
        "parser_patterns.ml"
      ]
    },
    {
      "signature": "state",
      "files": [
        "parser_poetry.ml",
        "parser_patterns.ml"
      ]
    },
    {
      "signature": "expr, state",
      "files": [
        "parser_patterns.ml",
        "parser_patterns.ml"
      ]
    },
    {
      "signature": "branch",
      "files": [
        "parser_patterns.ml",
        "parser_patterns.ml"
      ]
    },
    {
      "signature": "state",
      "files": [
        "parser_poetry.ml",
        "parser_patterns.ml"
      ]
    },
    {
      "signature": "state",
      "files": [
        "parser_poetry.ml",
        "parser_patterns.ml"
      ]
    },
    {
      "signature": "expr, state",
      "files": [
        "parser_patterns.ml",
        "parser_patterns.ml"
      ]
    },
    {
      "signature": "updated_ctx",
      "files": [
        "refactoring_analyzer_core.ml",
        "refactoring_analyzer_core.ml"
      ]
    },
    {
      "signature": "updated_ctx",
      "files": [
        "refactoring_analyzer_core.ml",
        "refactoring_analyzer_core.ml"
      ]
    },
    {
      "signature": "updated_ctx",
      "files": [
        "refactoring_analyzer_core.ml",
        "refactoring_analyzer_core.ml"
      ]
    },
    {
      "signature": "performance_suggestions",
      "files": [
        "refactoring_analyzer_performance.ml",
        "refactoring_analyzer_core.ml"
      ]
    },
    {
      "signature": "naming_suggestions",
      "files": [
        "refactoring_analyzer_core.ml",
        "refactoring_analyzer_core.ml"
      ]
    },
    {
      "signature": "expr_suggestions",
      "files": [
        "refactoring_analyzer_core.ml",
        "refactoring_analyzer_core.ml"
      ]
    },
    {
      "signature": "all_suggestions",
      "files": [
        "refactoring_analyzer_performance.ml",
        "refactoring_analyzer_core.ml"
      ]
    },
    {
      "signature": "suggestions",
      "files": [
        "refactoring_analyzer_core.ml",
        "refactoring_analyzer_core.ml"
      ]
    },
    {
      "signature": "suggestions",
      "files": [
        "refactoring_analyzer_core.ml",
        "refactoring_analyzer_core.ml"
      ]
    },
    {
      "signature": "n, c, d, p",
      "files": [
        "refactoring_analyzer_core.ml",
        "refactoring_analyzer_core.ml"
      ]
    },
    {
      "signature": "n, c, d, p",
      "files": [
        "refactoring_analyzer_core.ml",
        "refactoring_analyzer_core.ml"
      ]
    },
    {
      "signature": "n, c, d, p",
      "files": [
        "refactoring_analyzer_core.ml",
        "refactoring_analyzer_core.ml"
      ]
    },
    {
      "signature": "report",
      "files": [
        "refactoring_analyzer_performance.ml",
        "refactoring_analyzer_core.ml"
      ]
    },
    {
      "signature": "value",
      "files": [
        "expression_evaluator_control.ml",
        "expression_evaluator_control.ml"
      ]
    },
    {
      "signature": "value",
      "files": [
        "expression_evaluator_control.ml",
        "expression_evaluator_control.ml"
      ]
    },
    {
      "signature": "new_env",
      "files": [
        "expression_evaluator_control.ml",
        "expression_evaluator_control.ml"
      ]
    },
    {
      "signature": "token, _pos",
      "files": [
        "parser_poetry.ml",
        "parser_statements.ml"
      ]
    },
    {
      "signature": "token, _",
      "files": [
        "parser_patterns.ml",
        "parser_statements.ml"
      ]
    },
    {
      "signature": "token, _",
      "files": [
        "parser_patterns.ml",
        "parser_statements.ml"
      ]
    },
    {
      "signature": "state3",
      "files": [
        "parser_statements.ml",
        "parser_statements.ml"
      ]
    },
    {
      "signature": "new_param",
      "files": [
        "parser_statements.ml",
        "parser_statements.ml"
      ]
    },
    {
      "signature": "next_token, _",
      "files": [
        "parser_statements.ml",
        "parser_statements.ml"
      ]
    },
    {
      "signature": "state4",
      "files": [
        "parser_statements.ml",
        "parser_statements.ml"
      ]
    },
    {
      "signature": "state3",
      "files": [
        "parser_statements.ml",
        "parser_statements.ml"
      ]
    },
    {
      "signature": "new_param",
      "files": [
        "parser_statements.ml",
        "parser_statements.ml"
      ]
    },
    {
      "signature": "next_token, _",
      "files": [
        "parser_statements.ml",
        "parser_statements.ml"
      ]
    },
    {
      "signature": "state4",
      "files": [
        "parser_statements.ml",
        "parser_statements.ml"
      ]
    },
    {
      "signature": "token, _",
      "files": [
        "parser_patterns.ml",
        "parser_statements.ml"
      ]
    },
    {
      "signature": "state1",
      "files": [
        "parser_statements.ml",
        "parser_statements.ml"
      ]
    },
    {
      "signature": "token, _",
      "files": [
        "parser_patterns.ml",
        "parser_statements.ml"
      ]
    },
    {
      "signature": "state1",
      "files": [
        "parser_statements.ml",
        "parser_statements.ml"
      ]
    },
    {
      "signature": "state1",
      "files": [
        "parser_statements.ml",
        "parser_statements.ml"
      ]
    },
    {
      "signature": "state1",
      "files": [
        "parser_statements.ml",
        "parser_statements.ml"
      ]
    },
    {
      "signature": "state2",
      "files": [
        "parser_statements.ml",
        "parser_statements.ml"
      ]
    },
    {
      "signature": "type_annotation_opt, state4",
      "files": [
        "parser_statements.ml",
        "parser_statements.ml"
      ]
    },
    {
      "signature": "state5",
      "files": [
        "parser_statements.ml",
        "parser_statements.ml"
      ]
    },
    {
      "signature": "expr, state6",
      "files": [
        "parser_statements.ml",
        "parser_statements.ml"
      ]
    },
    {
      "signature": "token, _",
      "files": [
        "parser_patterns.ml",
        "parser_statements.ml"
      ]
    },
    {
      "signature": "token, _",
      "files": [
        "parser_patterns.ml",
        "parser_statements.ml"
      ]
    },
    {
      "signature": "state1",
      "files": [
        "parser_statements.ml",
        "parser_statements.ml"
      ]
    },
    {
      "signature": "name, state2",
      "files": [
        "parser_statements.ml",
        "parser_statements.ml"
      ]
    },
    {
      "signature": "state3",
      "files": [
        "parser_statements.ml",
        "parser_statements.ml"
      ]
    },
    {
      "signature": "token, _",
      "files": [
        "parser_patterns.ml",
        "parser_statements.ml"
      ]
    },
    {
      "signature": "state1",
      "files": [
        "parser_statements.ml",
        "parser_statements.ml"
      ]
    },
    {
      "signature": "name, state2",
      "files": [
        "parser_statements.ml",
        "parser_statements.ml"
      ]
    },
    {
      "signature": "token, _",
      "files": [
        "parser_patterns.ml",
        "parser_statements.ml"
      ]
    },
    {
      "signature": "state3",
      "files": [
        "parser_statements.ml",
        "parser_statements.ml"
      ]
    },
    {
      "signature": "state1",
      "files": [
        "parser_statements.ml",
        "parser_statements.ml"
      ]
    },
    {
      "signature": "name, state2",
      "files": [
        "parser_statements.ml",
        "parser_statements.ml"
      ]
    },
    {
      "signature": "state3",
      "files": [
        "parser_statements.ml",
        "parser_statements.ml"
      ]
    },
    {
      "signature": "state1",
      "files": [
        "parser_statements.ml",
        "parser_statements.ml"
      ]
    },
    {
      "signature": "name, state2",
      "files": [
        "parser_statements.ml",
        "parser_statements.ml"
      ]
    },
    {
      "signature": "state3",
      "files": [
        "parser_statements.ml",
        "parser_statements.ml"
      ]
    },
    {
      "signature": "token, _",
      "files": [
        "parser_patterns.ml",
        "parser_statements.ml"
      ]
    },
    {
      "signature": "state1",
      "files": [
        "parser_statements.ml",
        "parser_statements.ml"
      ]
    },
    {
      "signature": "state3",
      "files": [
        "parser_statements.ml",
        "parser_statements.ml"
      ]
    },
    {
      "signature": "state5",
      "files": [
        "parser_statements.ml",
        "parser_statements.ml"
      ]
    },
    {
      "signature": "expr, state1",
      "files": [
        "parser_statements.ml",
        "parser_statements.ml"
      ]
    },
    {
      "signature": "token, _pos",
      "files": [
        "parser_poetry.ml",
        "parser_statements.ml"
      ]
    },
    {
      "signature": "token, _",
      "files": [
        "parser_patterns.ml",
        "parser_statements.ml"
      ]
    },
    {
      "signature": "state",
      "files": [
        "parser_poetry.ml",
        "parser_statements.ml"
      ]
    },
    {
      "signature": "token, _",
      "files": [
        "parser_patterns.ml",
        "parser_statements.ml"
      ]
    },
    {
      "signature": "state2",
      "files": [
        "parser_statements.ml",
        "parser_statements.ml"
      ]
    },
    {
      "signature": "state3",
      "files": [
        "parser_statements.ml",
        "parser_statements.ml"
      ]
    },
    {
      "signature": "s",
      "files": [
        "builtin_types.ml",
        "builtin_types.ml"
      ]
    },
    {
      "signature": "n",
      "files": [
        "builtin_types.ml",
        "builtin_types.ml"
      ]
    },
    {
      "signature": "f",
      "files": [
        "builtin_types.ml",
        "builtin_types.ml"
      ]
    },
    {
      "signature": "state1",
      "files": [
        "parser_statements.ml",
        "parser_expressions_match.ml"
      ]
    },
    {
      "signature": "state3",
      "files": [
        "parser_statements.ml",
        "parser_expressions_match.ml"
      ]
    },
    {
      "signature": "state",
      "files": [
        "parser_poetry.ml",
        "parser_expressions_match.ml"
      ]
    },
    {
      "signature": "state1",
      "files": [
        "parser_statements.ml",
        "parser_expressions_match.ml"
      ]
    },
    {
      "signature": "state4",
      "files": [
        "parser_statements.ml",
        "parser_expressions_match.ml"
      ]
    },
    {
      "signature": "branch",
      "files": [
        "parser_patterns.ml",
        "parser_expressions_match.ml"
      ]
    },
    {
      "signature": "state1",
      "files": [
        "parser_statements.ml",
        "parser_expressions_compound_primary.ml"
      ]
    },
    {
      "signature": "expr, state2",
      "files": [
        "parser_expressions_match.ml",
        "parser_expressions_compound_primary.ml"
      ]
    },
    {
      "signature": "token, _",
      "files": [
        "parser_patterns.ml",
        "parser_expressions_compound_primary.ml"
      ]
    },
    {
      "signature": "state3",
      "files": [
        "parser_statements.ml",
        "parser_expressions_compound_primary.ml"
      ]
    },
    {
      "signature": "type_expr, state4",
      "files": [
        "parser_statements.ml",
        "parser_expressions_compound_primary.ml"
      ]
    },
    {
      "signature": "state5",
      "files": [
        "parser_statements.ml",
        "parser_expressions_compound_primary.ml"
      ]
    },
    {
      "signature": "state3",
      "files": [
        "parser_statements.ml",
        "parser_expressions_compound_primary.ml"
      ]
    },
    {
      "signature": "record_expr, state1",
      "files": [
        "parser_expressions_compound_primary.ml",
        "parser_expressions_compound_primary.ml"
      ]
    },
    {
      "signature": "token, _",
      "files": [
        "parser_patterns.ml",
        "parser_expressions_compound_primary.ml"
      ]
    },
    {
      "signature": "token, _",
      "files": [
        "parser_patterns.ml",
        "parser_expressions_compound_primary.ml"
      ]
    },
    {
      "signature": "token, pos",
      "files": [
        "parser_poetry.ml",
        "parser_expressions_logical.ml"
      ]
    },
    {
      "signature": "state1",
      "files": [
        "parser_statements.ml",
        "parser_expressions_logical.ml"
      ]
    },
    {
      "signature": "state1",
      "files": [
        "parser_statements.ml",
        "parser_expressions_logical.ml"
      ]
    },
    {
      "signature": "expr, state2",
      "files": [
        "parser_expressions_match.ml",
        "parser_expressions_logical.ml"
      ]
    },
    {
      "signature": "state3",
      "files": [
        "parser_statements.ml",
        "parser_expressions_logical.ml"
      ]
    },
    {
      "signature": "state1",
      "files": [
        "parser_statements.ml",
        "parser_expressions_logical.ml"
      ]
    },
    {
      "signature": "content",
      "files": [
        "token_compatibility_literals.ml",
        "token_compatibility_literals.ml"
      ]
    },
    {
      "signature": "line",
      "files": [
        "builtin_utils.ml",
        "builtin_utils.ml"
      ]
    },
    {
      "signature": "line",
      "files": [
        "builtin_utils.ml",
        "builtin_utils.ml"
      ]
    },
    {
      "signature": "line",
      "files": [
        "builtin_utils.ml",
        "builtin_utils.ml"
      ]
    },
    {
      "signature": "line",
      "files": [
        "builtin_utils.ml",
        "builtin_utils.ml"
      ]
    },
    {
      "signature": "arg_count",
      "files": [
        "c_codegen_control.ml",
        "function_caller.ml"
      ]
    },
    {
      "signature": "new_env",
      "files": [
        "expression_evaluator_control.ml",
        "function_caller.ml"
      ]
    },
    {
      "signature": "config",
      "files": [
        "interpreter_utils.ml",
        "function_caller.ml"
      ]
    },
    {
      "signature": "new_env",
      "files": [
        "expression_evaluator_control.ml",
        "function_caller.ml"
      ]
    },
    {
      "signature": "new_env",
      "files": [
        "expression_evaluator_control.ml",
        "function_caller.ml"
      ]
    },
    {
      "signature": "func_val",
      "files": [
        "expression_evaluator_control.ml",
        "function_caller.ml"
      ]
    },
    {
      "signature": "func_value",
      "files": [
        "function_caller.ml",
        "function_caller.ml"
      ]
    },
    {
      "signature": "func_value",
      "files": [
        "function_caller.ml",
        "function_caller.ml"
      ]
    },
    {
      "signature": "new_env",
      "files": [
        "expression_evaluator_control.ml",
        "function_caller.ml"
      ]
    },
    {
      "signature": "param_typ",
      "files": [
        "semantic_types.ml",
        "semantic_types.ml"
      ]
    },
    {
      "signature": "token, _",
      "files": [
        "parser_patterns.ml",
        "parser_expressions_calls.ml"
      ]
    },
    {
      "signature": "token, _",
      "files": [
        "parser_patterns.ml",
        "parser_expressions_calls.ml"
      ]
    },
    {
      "signature": "state_after_paren",
      "files": [
        "parser_expressions_calls.ml",
        "parser_expressions_calls.ml"
      ]
    },
    {
      "signature": "state1",
      "files": [
        "parser_statements.ml",
        "parser_expressions_calls.ml"
      ]
    },
    {
      "signature": "expr",
      "files": [
        "parser_expressions_calls.ml",
        "parser_expressions_calls.ml"
      ]
    },
    {
      "signature": "token, _",
      "files": [
        "parser_patterns.ml",
        "parser_expressions_calls.ml"
      ]
    },
    {
      "signature": "expr",
      "files": [
        "parser_expressions_calls.ml",
        "parser_expressions_calls.ml"
      ]
    },
    {
      "signature": "token, _",
      "files": [
        "parser_patterns.ml",
        "parser_expressions_calls.ml"
      ]
    },
    {
      "signature": "token, _",
      "files": [
        "parser_patterns.ml",
        "parser_expressions_calls.ml"
      ]
    },
    {
      "signature": "state1",
      "files": [
        "parser_statements.ml",
        "parser_expressions_calls.ml"
      ]
    },
    {
      "signature": "state2",
      "files": [
        "parser_statements.ml",
        "parser_expressions_calls.ml"
      ]
    },
    {
      "signature": "config",
      "files": [
        "interpreter_utils.ml",
        "interpreter.ml"
      ]
    },
    {
      "signature": "result",
      "files": [
        "interpreter.ml",
        "expression_evaluator.ml"
      ]
    },
    {
      "signature": "value",
      "files": [
        "expression_evaluator_control.ml",
        "expression_evaluator.ml"
      ]
    },
    {
      "signature": "arg_vals",
      "files": [
        "expression_evaluator_control.ml",
        "expression_evaluator.ml"
      ]
    },
    {
      "signature": "param_names",
      "files": [
        "function_caller.ml",
        "expression_evaluator.ml"
      ]
    },
    {
      "signature": "value",
      "files": [
        "expression_evaluator_control.ml",
        "expression_evaluator.ml"
      ]
    },
    {
      "signature": "new_env",
      "files": [
        "expression_evaluator_control.ml",
        "expression_evaluator.ml"
      ]
    },
    {
      "signature": "module_value",
      "files": [
        "expression_evaluator.ml",
        "expression_evaluator.ml"
      ]
    },
    {
      "signature": "func_val",
      "files": [
        "expression_evaluator_control.ml",
        "expression_evaluator.ml"
      ]
    },
    {
      "signature": "result",
      "files": [
        "interpreter.ml",
        "expression_evaluator.ml"
      ]
    },
    {
      "signature": "state1",
      "files": [
        "parser_statements.ml",
        "parser_expressions_conditional.ml"
      ]
    },
    {
      "signature": "state3",
      "files": [
        "parser_statements.ml",
        "parser_expressions_conditional.ml"
      ]
    },
    {
      "signature": "state3_clean",
      "files": [
        "parser_expressions_match.ml",
        "parser_expressions_conditional.ml"
      ]
    },
    {
      "signature": "state4_clean",
      "files": [
        "parser_expressions_match.ml",
        "parser_expressions_conditional.ml"
      ]
    },
    {
      "signature": "state5",
      "files": [
        "parser_statements.ml",
        "parser_expressions_conditional.ml"
      ]
    },
    {
      "signature": "state5_clean",
      "files": [
        "parser_expressions_match.ml",
        "parser_expressions_conditional.ml"
      ]
    },
    {
      "signature": "analyze_exprexpr",
      "files": [
        "performance_analyzer_data_structures.ml",
        "performance_analyzer_matching.ml"
      ]
    },
    {
      "signature": "branch_suggestions",
      "files": [
        "performance_analyzer_matching.ml",
        "performance_analyzer_matching.ml"
      ]
    },
    {
      "signature": "matched_suggestions",
      "files": [
        "performance_analyzer_data_structures.ml",
        "performance_analyzer_matching.ml"
      ]
    },
    {
      "signature": "branch_suggestions",
      "files": [
        "performance_analyzer_matching.ml",
        "performance_analyzer_matching.ml"
      ]
    },
    {
      "signature": "func_suggestions",
      "files": [
        "performance_analyzer_data_structures.ml",
        "performance_analyzer_matching.ml"
      ]
    },
    {
      "signature": "args_suggestions",
      "files": [
        "performance_analyzer_data_structures.ml",
        "performance_analyzer_matching.ml"
      ]
    },
    {
      "signature": "_",
      "files": [
        "main.ml",
        "semantic_statements.ml"
      ]
    },
    {
      "signature": "context1",
      "files": [
        "semantic_statements.ml",
        "semantic_statements.ml"
      ]
    },
    {
      "signature": "resolved_type",
      "files": [
        "semantic_statements.ml",
        "semantic_statements.ml"
      ]
    },
    {
      "signature": "context1",
      "files": [
        "semantic_statements.ml",
        "semantic_statements.ml"
      ]
    },
    {
      "signature": "context1",
      "files": [
        "semantic_statements.ml",
        "semantic_statements.ml"
      ]
    },
    {
      "signature": "context1",
      "files": [
        "semantic_statements.ml",
        "semantic_statements.ml"
      ]
    },
    {
      "signature": "resolved_variants",
      "files": [
        "semantic_types.ml",
        "semantic_statements.ml"
      ]
    },
    {
      "signature": "context1",
      "files": [
        "semantic_statements.ml",
        "semantic_statements.ml"
      ]
    },
    {
      "signature": "char_count",
      "files": [
        "parser_poetry.ml",
        "lexer_chars.ml"
      ]
    },
    {
      "signature": "new_state",
      "files": [
        "parser_patterns.ml",
        "lexer_chars.ml"
      ]
    },
    {
      "signature": "char_count",
      "files": [
        "parser_poetry.ml",
        "lexer_chars.ml"
      ]
    },
    {
      "signature": "new_state",
      "files": [
        "parser_patterns.ml",
        "lexer_chars.ml"
      ]
    },
    {
      "signature": "token",
      "files": [
        "lexer_chars.ml",
        "lexer_chars.ml"
      ]
    },
    {
      "signature": "token, pos",
      "files": [
        "parser_poetry.ml",
        "parser_expressions_arithmetic.ml"
      ]
    },
    {
      "signature": "literal, state1",
      "files": [
        "parser_expressions_logical.ml",
        "parser_expressions_arithmetic.ml"
      ]
    },
    {
      "signature": "state1",
      "files": [
        "parser_statements.ml",
        "parser_expressions_arithmetic.ml"
      ]
    },
    {
      "signature": "collect_argsarg_list state",
      "files": [
        "parser_expressions_calls.ml",
        "parser_expressions_arithmetic.ml"
      ]
    },
    {
      "signature": "token, _",
      "files": [
        "parser_patterns.ml",
        "parser_expressions_arithmetic.ml"
      ]
    },
    {
      "signature": "arg, state1",
      "files": [
        "parser_expressions_calls.ml",
        "parser_expressions_arithmetic.ml"
      ]
    },
    {
      "signature": "expr",
      "files": [
        "parser_expressions_calls.ml",
        "parser_expressions_arithmetic.ml"
      ]
    },
    {
      "signature": "state1",
      "files": [
        "parser_statements.ml",
        "parser_expressions_arithmetic.ml"
      ]
    },
    {
      "signature": "expr, state2",
      "files": [
        "parser_expressions_match.ml",
        "parser_expressions_arithmetic.ml"
      ]
    },
    {
      "signature": "state3",
      "files": [
        "parser_statements.ml",
        "parser_expressions_arithmetic.ml"
      ]
    },
    {
      "signature": "state1",
      "files": [
        "parser_statements.ml",
        "parser_expressions_arithmetic.ml"
      ]
    },
    {
      "signature": "token, _",
      "files": [
        "parser_patterns.ml",
        "parser_expressions_keywords_primary.ml"
      ]
    },
    {
      "signature": "state1",
      "files": [
        "parser_statements.ml",
        "parser_expressions_keywords_primary.ml"
      ]
    },
    {
      "signature": "name, state1",
      "files": [
        "parser_expressions_keywords_primary.ml",
        "parser_expressions_keywords_primary.ml"
      ]
    },
    {
      "signature": "token, _",
      "files": [
        "parser_patterns.ml",
        "parser_expressions_keywords_primary.ml"
      ]
    },
    {
      "signature": "state1",
      "files": [
        "parser_statements.ml",
        "parser_expressions_keywords_primary.ml"
      ]
    },
    {
      "signature": "state1",
      "files": [
        "parser_statements.ml",
        "parser_expressions_keywords_primary.ml"
      ]
    },
    {
      "signature": "state1",
      "files": [
        "parser_statements.ml",
        "parser_expressions_keywords_primary.ml"
      ]
    },
    {
      "signature": "state1",
      "files": [
        "parser_statements.ml",
        "parser_expressions_keywords_primary.ml"
      ]
    },
    {
      "signature": "state1",
      "files": [
        "parser_statements.ml",
        "parser_expressions_keywords_primary.ml"
      ]
    },
    {
      "signature": "state1",
      "files": [
        "parser_statements.ml",
        "parser_expressions_keywords_primary.ml"
      ]
    },
    {
      "signature": "state1",
      "files": [
        "parser_statements.ml",
        "parser_expressions_keywords_primary.ml"
      ]
    },
    {
      "signature": "token, pos",
      "files": [
        "parser_poetry.ml",
        "parser_expressions_keywords_primary.ml"
      ]
    },
    {
      "signature": "state1",
      "files": [
        "parser_statements.ml",
        "parser_expressions_keywords_primary.ml"
      ]
    },
    {
      "signature": "token, _",
      "files": [
        "parser_patterns.ml",
        "parser_expressions_keywords_primary.ml"
      ]
    },
    {
      "signature": "token, _",
      "files": [
        "parser_patterns.ml",
        "parser_expressions_keywords_primary.ml"
      ]
    },
    {
      "signature": "token, _",
      "files": [
        "parser_patterns.ml",
        "parser_expressions_keywords_primary.ml"
      ]
    },
    {
      "signature": "left_val",
      "files": [
        "expression_evaluator.ml",
        "expression_evaluator_basic.ml"
      ]
    },
    {
      "signature": "right_val",
      "files": [
        "expression_evaluator.ml",
        "expression_evaluator_basic.ml"
      ]
    },
    {
      "signature": "value",
      "files": [
        "expression_evaluator_control.ml",
        "expression_evaluator_basic.ml"
      ]
    },
    {
      "signature": "config",
      "files": [
        "interpreter_utils.ml",
        "compiler_phases.ml"
      ]
    },
    {
      "signature": "error_msg",
      "files": [
        "semantic_statements.ml",
        "error_conversion.ml"
      ]
    },
    {
      "signature": "error_msg",
      "files": [
        "semantic_statements.ml",
        "error_conversion.ml"
      ]
    },
    {
      "signature": "error_msg",
      "files": [
        "semantic_statements.ml",
        "error_conversion.ml"
      ]
    },
    {
      "signature": "error_msg",
      "files": [
        "semantic_statements.ml",
        "error_conversion.ml"
      ]
    },
    {
      "signature": "error_msg",
      "files": [
        "semantic_statements.ml",
        "error_conversion.ml"
      ]
    },
    {
      "signature": "pos",
      "files": [
        "error_conversion.ml",
        "error_conversion.ml"
      ]
    },
    {
      "signature": "msg",
      "files": [
        "error_conversion.ml",
        "error_conversion.ml"
      ]
    },
    {
      "signature": "pos",
      "files": [
        "error_conversion.ml",
        "error_conversion.ml"
      ]
    },
    {
      "signature": "msg",
      "files": [
        "error_conversion.ml",
        "error_conversion.ml"
      ]
    },
    {
      "signature": "msg",
      "files": [
        "error_conversion.ml",
        "error_conversion.ml"
      ]
    },
    {
      "signature": "msg",
      "files": [
        "error_conversion.ml",
        "error_conversion.ml"
      ]
    },
    {
      "signature": "state1",
      "files": [
        "parser_statements.ml",
        "parser_types.ml"
      ]
    },
    {
      "signature": "name, state2",
      "files": [
        "parser_statements.ml",
        "parser_types.ml"
      ]
    },
    {
      "signature": "token, pos",
      "files": [
        "parser_poetry.ml",
        "parser_types.ml"
      ]
    },
    {
      "signature": "state1",
      "files": [
        "parser_statements.ml",
        "parser_types.ml"
      ]
    },
    {
      "signature": "token, _",
      "files": [
        "parser_patterns.ml",
        "parser_types.ml"
      ]
    },
    {
      "signature": "state2",
      "files": [
        "parser_statements.ml",
        "parser_types.ml"
      ]
    },
    {
      "signature": "token, _",
      "files": [
        "parser_patterns.ml",
        "parser_types.ml"
      ]
    },
    {
      "signature": "state4",
      "files": [
        "parser_statements.ml",
        "parser_types.ml"
      ]
    },
    {
      "signature": "variant",
      "files": [
        "parser_types.ml",
        "parser_types.ml"
      ]
    },
    {
      "signature": "token, _",
      "files": [
        "parser_patterns.ml",
        "parser_types.ml"
      ]
    },
    {
      "signature": "state2",
      "files": [
        "parser_statements.ml",
        "parser_types.ml"
      ]
    },
    {
      "signature": "token, pos",
      "files": [
        "parser_poetry.ml",
        "parser_types.ml"
      ]
    },
    {
      "signature": "state1",
      "files": [
        "parser_statements.ml",
        "parser_types.ml"
      ]
    },
    {
      "signature": "state1",
      "files": [
        "parser_statements.ml",
        "parser_types.ml"
      ]
    },
    {
      "signature": "state1",
      "files": [
        "parser_statements.ml",
        "parser_types.ml"
      ]
    },
    {
      "signature": "state3",
      "files": [
        "parser_statements.ml",
        "parser_types.ml"
      ]
    },
    {
      "signature": "token, pos",
      "files": [
        "parser_poetry.ml",
        "parser_types.ml"
      ]
    },
    {
      "signature": "token, _",
      "files": [
        "parser_patterns.ml",
        "parser_types.ml"
      ]
    },
    {
      "signature": "state1",
      "files": [
        "parser_statements.ml",
        "parser_types.ml"
      ]
    },
    {
      "signature": "token, _",
      "files": [
        "parser_patterns.ml",
        "parser_types.ml"
      ]
    },
    {
      "signature": "state1",
      "files": [
        "parser_statements.ml",
        "parser_types.ml"
      ]
    },
    {
      "signature": "type_expr, state2",
      "files": [
        "parser_statements.ml",
        "parser_types.ml"
      ]
    },
    {
      "signature": "state1",
      "files": [
        "parser_statements.ml",
        "parser_types.ml"
      ]
    },
    {
      "signature": "variants, state2",
      "files": [
        "parser_types.ml",
        "parser_types.ml"
      ]
    },
    {
      "signature": "token, _",
      "files": [
        "parser_patterns.ml",
        "parser_types.ml"
      ]
    },
    {
      "signature": "state1",
      "files": [
        "parser_statements.ml",
        "parser_types.ml"
      ]
    },
    {
      "signature": "token, _",
      "files": [
        "parser_patterns.ml",
        "parser_types.ml"
      ]
    },
    {
      "signature": "state3",
      "files": [
        "parser_statements.ml",
        "parser_types.ml"
      ]
    },
    {
      "signature": "type_expr, state4",
      "files": [
        "parser_statements.ml",
        "parser_types.ml"
      ]
    },
    {
      "signature": "new_constructor",
      "files": [
        "parser_types.ml",
        "parser_types.ml"
      ]
    },
    {
      "signature": "token, _pos",
      "files": [
        "parser_poetry.ml",
        "parser_types.ml"
      ]
    },
    {
      "signature": "state1",
      "files": [
        "parser_statements.ml",
        "parser_types.ml"
      ]
    },
    {
      "signature": "state3",
      "files": [
        "parser_statements.ml",
        "parser_types.ml"
      ]
    },
    {
      "signature": "state1",
      "files": [
        "parser_statements.ml",
        "parser_types.ml"
      ]
    },
    {
      "signature": "token, pos",
      "files": [
        "parser_poetry.ml",
        "parser_types.ml"
      ]
    },
    {
      "signature": "state",
      "files": [
        "parser_poetry.ml",
        "parser_types.ml"
      ]
    },
    {
      "signature": "token, _pos",
      "files": [
        "parser_poetry.ml",
        "parser_types.ml"
      ]
    },
    {
      "signature": "state2",
      "files": [
        "parser_statements.ml",
        "parser_types.ml"
      ]
    },
    {
      "signature": "token, _pos",
      "files": [
        "parser_poetry.ml",
        "parser_types.ml"
      ]
    },
    {
      "signature": "state1",
      "files": [
        "parser_statements.ml",
        "parser_types.ml"
      ]
    },
    {
      "signature": "name, state2",
      "files": [
        "parser_statements.ml",
        "parser_types.ml"
      ]
    },
    {
      "signature": "state3",
      "files": [
        "parser_statements.ml",
        "parser_types.ml"
      ]
    },
    {
      "signature": "type_expr, state4",
      "files": [
        "parser_statements.ml",
        "parser_types.ml"
      ]
    },
    {
      "signature": "name, state2",
      "files": [
        "parser_statements.ml",
        "parser_types.ml"
      ]
    },
    {
      "signature": "token, _",
      "files": [
        "parser_patterns.ml",
        "parser_types.ml"
      ]
    },
    {
      "signature": "state3",
      "files": [
        "parser_statements.ml",
        "parser_types.ml"
      ]
    },
    {
      "signature": "type_def, state4",
      "files": [
        "parser_statements.ml",
        "parser_types.ml"
      ]
    },
    {
      "signature": "state1",
      "files": [
        "parser_statements.ml",
        "parser_types.ml"
      ]
    },
    {
      "signature": "name, state2",
      "files": [
        "parser_statements.ml",
        "parser_types.ml"
      ]
    },
    {
      "signature": "state3",
      "files": [
        "parser_statements.ml",
        "parser_types.ml"
      ]
    },
    {
      "signature": "module_type, state4",
      "files": [
        "parser_statements.ml",
        "parser_types.ml"
      ]
    },
    {
      "signature": "name, state2",
      "files": [
        "parser_statements.ml",
        "parser_types.ml"
      ]
    },
    {
      "signature": "token, _",
      "files": [
        "parser_patterns.ml",
        "parser_types.ml"
      ]
    },
    {
      "signature": "state3",
      "files": [
        "parser_statements.ml",
        "parser_types.ml"
      ]
    },
    {
      "signature": "type_expr, state4",
      "files": [
        "parser_statements.ml",
        "parser_types.ml"
      ]
    },
    {
      "signature": "token, pos",
      "files": [
        "parser_poetry.ml",
        "parser_types.ml"
      ]
    },
    {
      "signature": "pos",
      "files": [
        "error_conversion.ml",
        "semantic_context.ml"
      ]
    },
    {
      "signature": "pos",
      "files": [
        "error_conversion.ml",
        "semantic_context.ml"
      ]
    },
    {
      "signature": "symbol_table_to_envsymbol_table",
      "files": [
        "semantic_types.ml",
        "semantic_context.ml"
      ]
    },
    {
      "signature": "token, _",
      "files": [
        "parser_patterns.ml",
        "parser_expressions_basic.ml"
      ]
    },
    {
      "signature": "state2",
      "files": [
        "parser_statements.ml",
        "parser_expressions_basic.ml"
      ]
    },
    {
      "signature": "token, _pos",
      "files": [
        "parser_poetry.ml",
        "parser_expressions_basic.ml"
      ]
    },
    {
      "signature": "state1",
      "files": [
        "parser_statements.ml",
        "parser_expressions_basic.ml"
      ]
    },
    {
      "signature": "expr, state2",
      "files": [
        "parser_expressions_match.ml",
        "parser_expressions_basic.ml"
      ]
    },
    {
      "signature": "state1",
      "files": [
        "parser_statements.ml",
        "parser_expressions_basic.ml"
      ]
    },
    {
      "signature": "expr, state2",
      "files": [
        "parser_expressions_match.ml",
        "parser_expressions_basic.ml"
      ]
    },
    {
      "signature": "state1",
      "files": [
        "parser_statements.ml",
        "parser_expressions_basic.ml"
      ]
    },
    {
      "signature": "expr, state2",
      "files": [
        "parser_expressions_match.ml",
        "parser_expressions_basic.ml"
      ]
    },
    {
      "signature": "token, _",
      "files": [
        "parser_patterns.ml",
        "parser_expressions_basic.ml"
      ]
    },
    {
      "signature": "literal, state1",
      "files": [
        "parser_expressions_logical.ml",
        "parser_expressions_basic.ml"
      ]
    },
    {
      "signature": "name, state1",
      "files": [
        "parser_expressions_keywords_primary.ml",
        "parser_expressions_basic.ml"
      ]
    },
    {
      "signature": "literal, state1",
      "files": [
        "parser_expressions_logical.ml",
        "parser_expressions_basic.ml"
      ]
    },
    {
      "signature": "token, _pos",
      "files": [
        "parser_poetry.ml",
        "parser_expressions_basic.ml"
      ]
    },
    {
      "signature": "state1",
      "files": [
        "parser_statements.ml",
        "parser_expressions_basic.ml"
      ]
    },
    {
      "signature": "state1",
      "files": [
        "parser_statements.ml",
        "parser_expressions_basic.ml"
      ]
    },
    {
      "signature": "expr, state2",
      "files": [
        "parser_expressions_match.ml",
        "parser_expressions_basic.ml"
      ]
    },
    {
      "signature": "state3",
      "files": [
        "parser_statements.ml",
        "parser_expressions_basic.ml"
      ]
    },
    {
      "signature": "record_expr, state1",
      "files": [
        "parser_expressions_compound_primary.ml",
        "parser_expressions_basic.ml"
      ]
    },
    {
      "signature": "ancient_list_error_msg",
      "files": [
        "parser_expressions_keywords_primary.ml",
        "parser_expressions_basic.ml"
      ]
    },
    {
      "signature": "token, _",
      "files": [
        "parser_patterns.ml",
        "parser_expressions_basic.ml"
      ]
    },
    {
      "signature": "state1",
      "files": [
        "parser_statements.ml",
        "parser_expressions_basic.ml"
      ]
    },
    {
      "signature": "tag_name, state2",
      "files": [
        "parser_expressions_keywords_primary.ml",
        "parser_expressions_basic.ml"
      ]
    },
    {
      "signature": "token, _",
      "files": [
        "parser_patterns.ml",
        "parser_expressions_basic.ml"
      ]
    },
    {
      "signature": "value_expr, state3",
      "files": [
        "parser_expressions_keywords_primary.ml",
        "parser_expressions_basic.ml"
      ]
    },
    {
      "signature": "name, state1",
      "files": [
        "parser_expressions_keywords_primary.ml",
        "parser_expressions_basic.ml"
      ]
    },
    {
      "signature": "state1",
      "files": [
        "parser_statements.ml",
        "parser_expressions_basic.ml"
      ]
    },
    {
      "signature": "name, state1",
      "files": [
        "parser_expressions_keywords_primary.ml",
        "parser_expressions_basic.ml"
      ]
    },
    {
      "signature": "token, _",
      "files": [
        "parser_patterns.ml",
        "parser_expressions_basic.ml"
      ]
    },
    {
      "signature": "pos_str",
      "files": [
        "compiler_errors_formatter.ml",
        "compiler_errors_formatter.ml"
      ]
    },
    {
      "signature": "pos_str",
      "files": [
        "compiler_errors_formatter.ml",
        "compiler_errors_formatter.ml"
      ]
    },
    {
      "signature": "pos_str",
      "files": [
        "compiler_errors_formatter.ml",
        "compiler_errors_formatter.ml"
      ]
    },
    {
      "signature": "pos_str",
      "files": [
        "compiler_errors_formatter.ml",
        "compiler_errors_formatter.ml"
      ]
    },
    {
      "signature": "enabled_entries",
      "files": [
        "unified_token_registry.ml",
        "unified_token_registry.ml"
      ]
    },
    {
      "signature": "high_priority",
      "files": [
        "refactoring_analyzer_core.ml",
        "unified_token_registry.ml"
      ]
    },
    {
      "signature": "get_stats()",
      "files": [
        "data_loader_stats.ml",
        "unified_token_registry.ml"
      ]
    },
    {
      "signature": "is_chinese_char",
      "files": [
        "lexer_utils_refactored.ml",
        "lexer_char_processing.ml"
      ]
    },
    {
      "signature": "is_letter_or_chinese",
      "files": [
        "lexer_utils_refactored.ml",
        "lexer_char_processing.ml"
      ]
    },
    {
      "signature": "is_digit",
      "files": [
        "lexer_utils_refactored.ml",
        "lexer_char_processing.ml"
      ]
    },
    {
      "signature": "is_whitespace",
      "files": [
        "lexer_utils_refactored.ml",
        "lexer_char_processing.ml"
      ]
    },
    {
      "signature": "is_separator_char",
      "files": [
        "lexer_utils_refactored.ml",
        "lexer_char_processing.ml"
      ]
    },
    {
      "signature": "is_chinese_utf8",
      "files": [
        "lexer_utils_refactored.ml",
        "lexer_char_processing.ml"
      ]
    },
    {
      "signature": "next_utf8_char",
      "files": [
        "lexer_utils_refactored.ml",
        "lexer_char_processing.ml"
      ]
    },
    {
      "signature": "is_chinese_digit_char",
      "files": [
        "lexer_utils_refactored.ml",
        "lexer_char_processing.ml"
      ]
    },
    {
      "signature": "is_all_digits",
      "files": [
        "lexer_utils_refactored.ml",
        "lexer_char_processing.ml"
      ]
    },
    {
      "signature": "is_valid_identifier",
      "files": [
        "lexer_utils_refactored.ml",
        "lexer_char_processing.ml"
      ]
    },
    {
      "signature": "check_utf8_charstate _byte1 byte2 byte3",
      "files": [
        "lexer_chars.ml",
        "lexer_char_processing.ml"
      ]
    },
    {
      "signature": "token, _",
      "files": [
        "parser_patterns.ml",
        "parser_expressions_postfix.ml"
      ]
    },
    {
      "signature": "state1",
      "files": [
        "parser_statements.ml",
        "parser_expressions_postfix.ml"
      ]
    },
    {
      "signature": "state2",
      "files": [
        "parser_statements.ml",
        "parser_expressions_postfix.ml"
      ]
    },
    {
      "signature": "state4",
      "files": [
        "parser_statements.ml",
        "parser_expressions_postfix.ml"
      ]
    },
    {
      "signature": "state5",
      "files": [
        "parser_statements.ml",
        "parser_expressions_postfix.ml"
      ]
    },
    {
      "signature": "state2",
      "files": [
        "parser_statements.ml",
        "parser_expressions_postfix.ml"
      ]
    },
    {
      "signature": "new_expr",
      "files": [
        "parser_expressions_postfix.ml",
        "parser_expressions_postfix.ml"
      ]
    },
    {
      "signature": "state1",
      "files": [
        "parser_statements.ml",
        "parser_expressions_postfix.ml"
      ]
    },
    {
      "signature": "state3",
      "files": [
        "parser_statements.ml",
        "parser_expressions_postfix.ml"
      ]
    },
    {
      "signature": "new_expr",
      "files": [
        "parser_expressions_postfix.ml",
        "parser_expressions_postfix.ml"
      ]
    },
    {
      "signature": "subst1",
      "files": [
        "types_unify.ml",
        "types_unify.ml"
      ]
    },
    {
      "signature": "subst2",
      "files": [
        "types_unify.ml",
        "types_unify.ml"
      ]
    },
    {
      "signature": "subst1",
      "files": [
        "types_unify.ml",
        "types_unify.ml"
      ]
    },
    {
      "signature": "subst2",
      "files": [
        "types_unify.ml",
        "types_unify.ml"
      ]
    },
    {
      "signature": "state1",
      "files": [
        "parser_statements.ml",
        "parser_natural_functions.ml"
      ]
    },
    {
      "signature": "state3",
      "files": [
        "parser_statements.ml",
        "parser_natural_functions.ml"
      ]
    },
    {
      "signature": "state5",
      "files": [
        "parser_statements.ml",
        "parser_natural_functions.ml"
      ]
    },
    {
      "signature": "state5_clean",
      "files": [
        "parser_expressions_match.ml",
        "parser_natural_functions.ml"
      ]
    },
    {
      "signature": "token, _",
      "files": [
        "parser_patterns.ml",
        "parser_natural_functions.ml"
      ]
    },
    {
      "signature": "state_next",
      "files": [
        "parser_natural_functions.ml",
        "parser_natural_functions.ml"
      ]
    },
    {
      "signature": "state_next",
      "files": [
        "parser_natural_functions.ml",
        "parser_natural_functions.ml"
      ]
    },
    {
      "signature": "state_next",
      "files": [
        "parser_natural_functions.ml",
        "parser_natural_functions.ml"
      ]
    },
    {
      "signature": "state_next",
      "files": [
        "parser_natural_functions.ml",
        "parser_natural_functions.ml"
      ]
    },
    {
      "signature": "pos",
      "files": [
        "error_conversion.ml",
        "parser_natural_functions.ml"
      ]
    },
    {
      "signature": "state1",
      "files": [
        "parser_statements.ml",
        "parser_natural_functions.ml"
      ]
    },
    {
      "signature": "state5",
      "files": [
        "parser_statements.ml",
        "parser_natural_functions.ml"
      ]
    },
    {
      "signature": "token, _",
      "files": [
        "parser_patterns.ml",
        "parser_natural_functions.ml"
      ]
    },
    {
      "signature": "state1",
      "files": [
        "parser_statements.ml",
        "parser_natural_functions.ml"
      ]
    },
    {
      "signature": "new_expr",
      "files": [
        "parser_expressions_postfix.ml",
        "parser_natural_functions.ml"
      ]
    },
    {
      "signature": "state1",
      "files": [
        "parser_statements.ml",
        "parser_natural_functions.ml"
      ]
    },
    {
      "signature": "right_expr, state2",
      "files": [
        "parser_natural_functions.ml",
        "parser_natural_functions.ml"
      ]
    },
    {
      "signature": "new_expr",
      "files": [
        "parser_expressions_postfix.ml",
        "parser_natural_functions.ml"
      ]
    },
    {
      "signature": "state1",
      "files": [
        "parser_statements.ml",
        "parser_natural_functions.ml"
      ]
    },
    {
      "signature": "right_expr, state2",
      "files": [
        "parser_natural_functions.ml",
        "parser_natural_functions.ml"
      ]
    },
    {
      "signature": "new_expr",
      "files": [
        "parser_expressions_postfix.ml",
        "parser_natural_functions.ml"
      ]
    },
    {
      "signature": "state1",
      "files": [
        "parser_statements.ml",
        "parser_natural_functions.ml"
      ]
    },
    {
      "signature": "right_expr, state2",
      "files": [
        "parser_natural_functions.ml",
        "parser_natural_functions.ml"
      ]
    },
    {
      "signature": "new_expr",
      "files": [
        "parser_expressions_postfix.ml",
        "parser_natural_functions.ml"
      ]
    },
    {
      "signature": "token_after, _",
      "files": [
        "parser_expressions_basic.ml",
        "parser_natural_functions.ml"
      ]
    },
    {
      "signature": "state1",
      "files": [
        "parser_statements.ml",
        "parser_natural_functions.ml"
      ]
    },
    {
      "signature": "right_expr, state2",
      "files": [
        "parser_natural_functions.ml",
        "parser_natural_functions.ml"
      ]
    },
    {
      "signature": "token, _",
      "files": [
        "parser_patterns.ml",
        "parser_natural_functions.ml"
      ]
    },
    {
      "signature": "state1",
      "files": [
        "parser_statements.ml",
        "parser_natural_functions.ml"
      ]
    },
    {
      "signature": "next_token, _",
      "files": [
        "parser_statements.ml",
        "parser_natural_functions.ml"
      ]
    },
    {
      "signature": "state2",
      "files": [
        "parser_statements.ml",
        "parser_natural_functions.ml"
      ]
    },
    {
      "signature": "right_expr, state3",
      "files": [
        "parser_expressions_basic.ml",
        "parser_natural_functions.ml"
      ]
    },
    {
      "signature": "state2",
      "files": [
        "parser_statements.ml",
        "parser_natural_functions.ml"
      ]
    },
    {
      "signature": "right_expr, state3",
      "files": [
        "parser_expressions_basic.ml",
        "parser_natural_functions.ml"
      ]
    },
    {
      "signature": "state2",
      "files": [
        "parser_statements.ml",
        "parser_natural_functions.ml"
      ]
    },
    {
      "signature": "right_expr, state3",
      "files": [
        "parser_expressions_basic.ml",
        "parser_natural_functions.ml"
      ]
    },
    {
      "signature": "state2",
      "files": [
        "parser_statements.ml",
        "parser_natural_functions.ml"
      ]
    },
    {
      "signature": "right_expr, state3",
      "files": [
        "parser_expressions_basic.ml",
        "parser_natural_functions.ml"
      ]
    },
    {
      "signature": "state1",
      "files": [
        "parser_statements.ml",
        "parser_natural_functions.ml"
      ]
    },
    {
      "signature": "state1",
      "files": [
        "parser_statements.ml",
        "parser_natural_functions.ml"
      ]
    },
    {
      "signature": "token, _",
      "files": [
        "parser_patterns.ml",
        "parser_natural_functions.ml"
      ]
    },
    {
      "signature": "token_after, _",
      "files": [
        "parser_expressions_basic.ml",
        "parser_natural_functions.ml"
      ]
    },
    {
      "signature": "condition_expr",
      "files": [
        "parser_natural_functions.ml",
        "parser_natural_functions.ml"
      ]
    },
    {
      "signature": "state1",
      "files": [
        "parser_statements.ml",
        "parser_natural_functions.ml"
      ]
    },
    {
      "signature": "get_available_varsenv",
      "files": [
        "interpreter_state.ml",
        "error_recovery.ml"
      ]
    },
    {
      "signature": "find_closest_vartarget_var available_vars",
      "files": [
        "interpreter_utils.ml",
        "error_recovery.ml"
      ]
    },
    {
      "signature": "distances",
      "files": [
        "interpreter_utils.ml",
        "error_recovery.ml"
      ]
    },
    {
      "signature": "set_log_levellevel",
      "files": [
        "unified_logger.ml",
        "error_recovery.ml"
      ]
    },
    {
      "signature": "context",
      "files": [
        "refactoring_analyzer_core.ml",
        "semantic.ml"
      ]
    },
    {
      "signature": "content",
      "files": [
        "token_compatibility_literals.ml",
        "builtin_io.ml"
      ]
    },
    {
      "signature": "filename",
      "files": [
        "builtin_io.ml",
        "builtin_io.ml"
      ]
    },
    {
      "signature": "content",
      "files": [
        "token_compatibility_literals.ml",
        "builtin_io.ml"
      ]
    },
    {
      "signature": "filename",
      "files": [
        "builtin_io.ml",
        "builtin_io.ml"
      ]
    },
    {
      "signature": "files",
      "files": [
        "builtin_utils.ml",
        "builtin_io.ml"
      ]
    },
    {
      "signature": "ic",
      "files": [
        "builtin_io.ml",
        "data_loader_file.ml"
      ]
    },
    {
      "signature": "content",
      "files": [
        "token_compatibility_literals.ml",
        "data_loader_file.ml"
      ]
    },
    {
      "signature": "i",
      "files": [
        "parser_patterns.ml",
        "config.ml"
      ]
    },
    {
      "signature": "f",
      "files": [
        "builtin_types.ml",
        "config.ml"
      ]
    },
    {
      "signature": "i",
      "files": [
        "parser_patterns.ml",
        "config.ml"
      ]
    },
    {
      "signature": "runtime_cfg",
      "files": [
        "compiler_errors_formatter.ml",
        "config.ml"
      ]
    },
    {
      "signature": "state1",
      "files": [
        "parser_statements.ml",
        "parser_expressions_arrays.ml"
      ]
    },
    {
      "signature": "name, state2",
      "files": [
        "parser_statements.ml",
        "parser_expressions_arrays.ml"
      ]
    },
    {
      "signature": "token, _",
      "files": [
        "parser_patterns.ml",
        "parser_expressions_arrays.ml"
      ]
    },
    {
      "signature": "state3",
      "files": [
        "parser_statements.ml",
        "parser_expressions_arrays.ml"
      ]
    },
    {
      "signature": "token, _",
      "files": [
        "parser_patterns.ml",
        "parser_expressions_arrays.ml"
      ]
    },
    {
      "signature": "state3",
      "files": [
        "parser_statements.ml",
        "parser_expressions_arrays.ml"
      ]
    },
    {
      "signature": "state4_clean",
      "files": [
        "parser_expressions_match.ml",
        "parser_expressions_arrays.ml"
      ]
    },
    {
      "signature": "token, _",
      "files": [
        "parser_patterns.ml",
        "parser_expressions_arrays.ml"
      ]
    },
    {
      "signature": "state5",
      "files": [
        "parser_statements.ml",
        "parser_expressions_arrays.ml"
      ]
    },
    {
      "signature": "state5_clean",
      "files": [
        "parser_expressions_match.ml",
        "parser_expressions_arrays.ml"
      ]
    },
    {
      "signature": "state1",
      "files": [
        "parser_statements.ml",
        "parser_expressions_arrays.ml"
      ]
    },
    {
      "signature": "state",
      "files": [
        "parser_poetry.ml",
        "parser_expressions_arrays.ml"
      ]
    },
    {
      "signature": "token, _",
      "files": [
        "parser_patterns.ml",
        "parser_expressions_arrays.ml"
      ]
    },
    {
      "signature": "expr, state1",
      "files": [
        "parser_statements.ml",
        "parser_expressions_arrays.ml"
      ]
    },
    {
      "signature": "token, _",
      "files": [
        "parser_patterns.ml",
        "parser_expressions_arrays.ml"
      ]
    },
    {
      "signature": "state2",
      "files": [
        "parser_statements.ml",
        "parser_expressions_arrays.ml"
      ]
    },
    {
      "signature": "state1",
      "files": [
        "parser_statements.ml",
        "parser_expressions_arrays.ml"
      ]
    },
    {
      "signature": "token, _",
      "files": [
        "parser_patterns.ml",
        "parser_expressions_arrays.ml"
      ]
    },
    {
      "signature": "state1",
      "files": [
        "parser_statements.ml",
        "parser_expressions_arrays.ml"
      ]
    },
    {
      "signature": "expr, state2",
      "files": [
        "parser_expressions_match.ml",
        "parser_expressions_arrays.ml"
      ]
    },
    {
      "signature": "s",
      "files": [
        "builtin_types.ml",
        "lexer.ml"
      ]
    },
    {
      "signature": "equal_token",
      "files": [
        "unified_token_core.ml",
        "lexer.ml"
      ]
    },
    {
      "signature": "skip_state",
      "files": [
        "lexer.ml",
        "lexer.ml"
      ]
    },
    {
      "signature": "token, new_state",
      "files": [
        "lexer.ml",
        "lexer.ml"
      ]
    },
    {
      "signature": "token",
      "files": [
        "lexer_chars.ml",
        "lexer.ml"
      ]
    },
    {
      "signature": "state",
      "files": [
        "parser_poetry.ml",
        "lexer.ml"
      ]
    },
    {
      "signature": "pos",
      "files": [
        "error_conversion.ml",
        "lexer.ml"
      ]
    },
    {
      "signature": "initial_state",
      "files": [
        "parser_statements.ml",
        "lexer.ml"
      ]
    },
    {
      "signature": "log_info, log_error",
      "files": [
        "main.ml",
        "semantic_errors.ml"
      ]
    },
    {
      "signature": "expr_codes",
      "files": [
        "c_codegen_collections.ml",
        "c_codegen_structured.ml"
      ]
    },
    {
      "signature": "expr_code",
      "files": [
        "c_codegen_control.ml",
        "c_codegen_structured.ml"
      ]
    },
    {
      "signature": "record_code",
      "files": [
        "c_codegen_structured.ml",
        "c_codegen_structured.ml"
      ]
    },
    {
      "signature": "expr_code",
      "files": [
        "c_codegen_control.ml",
        "c_codegen_structured.ml"
      ]
    },
    {
      "signature": "arg_codes",
      "files": [
        "c_codegen_control.ml",
        "c_codegen_structured.ml"
      ]
    },
    {
      "signature": "lexer_pos_to_compiler_pos(pos : Lexer.position) : Compiler_errors.position",
      "files": [
        "parser_natural_functions.ml",
        "parser.ml"
      ]
    },
    {
      "signature": "skip_newlinesstate",
      "files": [
        "parser_statements.ml",
        "parser.ml"
      ]
    },
    {
      "signature": "token, _pos",
      "files": [
        "parser_poetry.ml",
        "parser.ml"
      ]
    },
    {
      "signature": "token, _",
      "files": [
        "parser_patterns.ml",
        "parser.ml"
      ]
    },
    {
      "signature": "token, _",
      "files": [
        "parser_patterns.ml",
        "parser.ml"
      ]
    },
    {
      "signature": "state1",
      "files": [
        "parser_statements.ml",
        "parser.ml"
      ]
    },
    {
      "signature": "state2",
      "files": [
        "parser_statements.ml",
        "parser.ml"
      ]
    },
    {
      "signature": "token, _",
      "files": [
        "parser_patterns.ml",
        "parser.ml"
      ]
    },
    {
      "signature": "state3",
      "files": [
        "parser_statements.ml",
        "parser.ml"
      ]
    },
    {
      "signature": "new_param",
      "files": [
        "parser_statements.ml",
        "parser.ml"
      ]
    },
    {
      "signature": "next_token, _",
      "files": [
        "parser_statements.ml",
        "parser.ml"
      ]
    },
    {
      "signature": "state4",
      "files": [
        "parser_statements.ml",
        "parser.ml"
      ]
    },
    {
      "signature": "state3",
      "files": [
        "parser_statements.ml",
        "parser.ml"
      ]
    },
    {
      "signature": "new_param",
      "files": [
        "parser_statements.ml",
        "parser.ml"
      ]
    },
    {
      "signature": "next_token, _",
      "files": [
        "parser_statements.ml",
        "parser.ml"
      ]
    },
    {
      "signature": "state4",
      "files": [
        "parser_statements.ml",
        "parser.ml"
      ]
    },
    {
      "signature": "state3",
      "files": [
        "parser_statements.ml",
        "parser.ml"
      ]
    },
    {
      "signature": "new_param",
      "files": [
        "parser_statements.ml",
        "parser.ml"
      ]
    },
    {
      "signature": "next_token, _",
      "files": [
        "parser_statements.ml",
        "parser.ml"
      ]
    },
    {
      "signature": "state4",
      "files": [
        "parser_statements.ml",
        "parser.ml"
      ]
    },
    {
      "signature": "pos",
      "files": [
        "error_conversion.ml",
        "parser.ml"
      ]
    },
    {
      "signature": "pos",
      "files": [
        "error_conversion.ml",
        "parser.ml"
      ]
    },
    {
      "signature": "context1",
      "files": [
        "semantic_statements.ml",
        "semantic_expressions.ml"
      ]
    },
    {
      "signature": "error_msg",
      "files": [
        "semantic_statements.ml",
        "semantic_expressions.ml"
      ]
    },
    {
      "signature": "context1",
      "files": [
        "semantic_statements.ml",
        "semantic_expressions.ml"
      ]
    },
    {
      "signature": "context1",
      "files": [
        "semantic_statements.ml",
        "semantic_expressions.ml"
      ]
    },
    {
      "signature": "context1",
      "files": [
        "semantic_statements.ml",
        "semantic_expressions.ml"
      ]
    },
    {
      "signature": "context2",
      "files": [
        "semantic_expressions.ml",
        "semantic_expressions.ml"
      ]
    },
    {
      "signature": "_",
      "files": [
        "main.ml",
        "semantic_expressions.ml"
      ]
    },
    {
      "signature": "context1",
      "files": [
        "semantic_statements.ml",
        "semantic_expressions.ml"
      ]
    },
    {
      "signature": "context2",
      "files": [
        "semantic_expressions.ml",
        "semantic_expressions.ml"
      ]
    },
    {
      "signature": "context3",
      "files": [
        "semantic_expressions.ml",
        "semantic_expressions.ml"
      ]
    },
    {
      "signature": "context1",
      "files": [
        "semantic_statements.ml",
        "semantic_expressions.ml"
      ]
    },
    {
      "signature": "context1",
      "files": [
        "semantic_statements.ml",
        "semantic_expressions.ml"
      ]
    },
    {
      "signature": "context2",
      "files": [
        "semantic_expressions.ml",
        "semantic_expressions.ml"
      ]
    },
    {
      "signature": "context3",
      "files": [
        "semantic_expressions.ml",
        "semantic_expressions.ml"
      ]
    },
    {
      "signature": "context1",
      "files": [
        "semantic_statements.ml",
        "semantic_expressions.ml"
      ]
    },
    {
      "signature": "context1",
      "files": [
        "semantic_statements.ml",
        "semantic_expressions.ml"
      ]
    },
    {
      "signature": "context1",
      "files": [
        "semantic_statements.ml",
        "semantic_expressions.ml"
      ]
    },
    {
      "signature": "context1",
      "files": [
        "semantic_statements.ml",
        "semantic_expressions.ml"
      ]
    },
    {
      "signature": "context1",
      "files": [
        "semantic_statements.ml",
        "semantic_expressions.ml"
      ]
    },
    {
      "signature": "violations",
      "files": [
        "chinese_best_practices_backup.ml",
        "chinese_best_practices_backup.ml"
      ]
    },
    {
      "signature": "report",
      "files": [
        "refactoring_analyzer_performance.ml",
        "chinese_best_practices_backup.ml"
      ]
    },
    {
      "signature": "test_cases",
      "files": [
        "chinese_best_practices_backup.ml",
        "chinese_best_practices_backup.ml"
      ]
    },
    {
      "signature": "test_cases",
      "files": [
        "chinese_best_practices_backup.ml",
        "chinese_best_practices_backup.ml"
      ]
    },
    {
      "signature": "test_cases",
      "files": [
        "chinese_best_practices_backup.ml",
        "chinese_best_practices_backup.ml"
      ]
    },
    {
      "signature": "test_cases",
      "files": [
        "chinese_best_practices_backup.ml",
        "chinese_best_practices_backup.ml"
      ]
    },
    {
      "signature": "test_cases",
      "files": [
        "chinese_best_practices_backup.ml",
        "chinese_best_practices_backup.ml"
      ]
    },
    {
      "signature": "test_cases",
      "files": [
        "chinese_best_practices_backup.ml",
        "chinese_best_practices_backup.ml"
      ]
    },
    {
      "signature": "test_cases",
      "files": [
        "chinese_best_practices_backup.ml",
        "chinese_best_practices_backup.ml"
      ]
    },
    {
      "signature": "report",
      "files": [
        "refactoring_analyzer_performance.ml",
        "chinese_best_practices_backup.ml"
      ]
    },
    {
      "signature": "token, _",
      "files": [
        "parser_patterns.ml",
        "parser_expressions_primary.ml"
      ]
    },
    {
      "signature": "state1",
      "files": [
        "parser_statements.ml",
        "parser_expressions_primary.ml"
      ]
    },
    {
      "signature": "token2, _",
      "files": [
        "parser_expressions_postfix.ml",
        "parser_expressions_primary.ml"
      ]
    },
    {
      "signature": "state2",
      "files": [
        "parser_statements.ml",
        "parser_expressions_primary.ml"
      ]
    },
    {
      "signature": "new_expr",
      "files": [
        "parser_expressions_postfix.ml",
        "parser_expressions_primary.ml"
      ]
    },
    {
      "signature": "state1",
      "files": [
        "parser_statements.ml",
        "parser_expressions_primary.ml"
      ]
    },
    {
      "signature": "index_expr, state2",
      "files": [
        "parser_expressions_postfix.ml",
        "parser_expressions_primary.ml"
      ]
    },
    {
      "signature": "state3",
      "files": [
        "parser_statements.ml",
        "parser_expressions_primary.ml"
      ]
    },
    {
      "signature": "new_expr",
      "files": [
        "parser_expressions_postfix.ml",
        "parser_expressions_primary.ml"
      ]
    },
    {
      "signature": "token, pos",
      "files": [
        "parser_poetry.ml",
        "parser_expressions_primary.ml"
      ]
    },
    {
      "signature": "taken lst",
      "files": [
        "function_caller.ml",
        "error_messages_generation.ml"
      ]
    },
    {
      "signature": "str",
      "files": [
        "builtin_string.ml",
        "builtin_string.ml"
      ]
    },
    {
      "signature": "s",
      "files": [
        "builtin_types.ml",
        "builtin_string.ml"
      ]
    },
    {
      "signature": "s",
      "files": [
        "builtin_types.ml",
        "builtin_string.ml"
      ]
    },
    {
      "signature": "report",
      "files": [
        "refactoring_analyzer_performance.ml",
        "refactoring_analyzer_types.ml"
      ]
    },
    {
      "signature": "error_msg",
      "files": [
        "semantic_statements.ml",
        "lexer_token_conversion_classical.ml"
      ]
    },
    {
      "signature": "error_msg",
      "files": [
        "semantic_statements.ml",
        "lexer_token_conversion_classical.ml"
      ]
    },
    {
      "signature": "error_msg",
      "files": [
        "semantic_statements.ml",
        "lexer_token_conversion_classical.ml"
      ]
    },
    {
      "signature": "error_msg",
      "files": [
        "semantic_statements.ml",
        "lexer_token_conversion_classical.ml"
      ]
    },
    {
      "signature": "tm",
      "files": [
        "unified_logger.ml",
        "logger.ml"
      ]
    },
    {
      "signature": "timestamp",
      "files": [
        "unified_logger.ml",
        "logger.ml"
      ]
    },
    {
      "signature": "level_str",
      "files": [
        "unified_logger.ml",
        "logger.ml"
      ]
    },
    {
      "signature": "formatted",
      "files": [
        "unified_logger.ml",
        "logger.ml"
      ]
    },
    {
      "signature": "debugfmodule_name fmt",
      "files": [
        "unified_logger.ml",
        "logger.ml"
      ]
    },
    {
      "signature": "infofmodule_name fmt",
      "files": [
        "unified_logger.ml",
        "logger.ml"
      ]
    },
    {
      "signature": "errorfmodule_name fmt",
      "files": [
        "unified_logger.ml",
        "logger.ml"
      ]
    },
    {
      "signature": "result",
      "files": [
        "interpreter.ml",
        "logger.ml"
      ]
    },
    {
      "signature": "end_time",
      "files": [
        "logger.ml",
        "logger.ml"
      ]
    },
    {
      "signature": "duration",
      "files": [
        "logger.ml",
        "logger.ml"
      ]
    },
    {
      "signature": "level_str",
      "files": [
        "unified_logger.ml",
        "logger.ml"
      ]
    },
    {
      "signature": "arr",
      "files": [
        "builtin_array.ml",
        "builtin_array.ml"
      ]
    },
    {
      "signature": "arr",
      "files": [
        "builtin_array.ml",
        "builtin_array.ml"
      ]
    },
    {
      "signature": "arr",
      "files": [
        "builtin_array.ml",
        "builtin_array.ml"
      ]
    },
    {
      "signature": "index",
      "files": [
        "builtin_array.ml",
        "builtin_array.ml"
      ]
    },
    {
      "signature": "arr",
      "files": [
        "builtin_array.ml",
        "builtin_array.ml"
      ]
    },
    {
      "signature": "lst",
      "files": [
        "builtin_math.ml",
        "builtin_array.ml"
      ]
    },
    {
      "signature": "skip_newlinesstate",
      "files": [
        "parser_statements.ml",
        "parser_expressions_utils.ml"
      ]
    },
    {
      "signature": "token, _pos",
      "files": [
        "parser_poetry.ml",
        "parser_expressions_utils.ml"
      ]
    },
    {
      "signature": "token, _",
      "files": [
        "parser_patterns.ml",
        "parser_expressions_utils.ml"
      ]
    },
    {
      "signature": "state1",
      "files": [
        "parser_statements.ml",
        "parser_expressions_utils.ml"
      ]
    },
    {
      "signature": "right_expr, state2",
      "files": [
        "parser_natural_functions.ml",
        "parser_expressions_utils.ml"
      ]
    },
    {
      "signature": "new_expr",
      "files": [
        "parser_expressions_postfix.ml",
        "parser_expressions_utils.ml"
      ]
    },
    {
      "signature": "expr, state1",
      "files": [
        "parser_statements.ml",
        "parser_expressions_utils.ml"
      ]
    },
    {
      "signature": "token, _pos",
      "files": [
        "parser_poetry.ml",
        "parser_expressions_utils.ml"
      ]
    },
    {
      "signature": "state1",
      "files": [
        "parser_statements.ml",
        "parser_expressions_utils.ml"
      ]
    },
    {
      "signature": "expr, state2",
      "files": [
        "parser_expressions_match.ml",
        "parser_expressions_utils.ml"
      ]
    },
    {
      "signature": "state1",
      "files": [
        "parser_statements.ml",
        "parser_expressions_utils.ml"
      ]
    },
    {
      "signature": "expr, state2",
      "files": [
        "parser_expressions_match.ml",
        "parser_expressions_utils.ml"
      ]
    },
    {
      "signature": "state1",
      "files": [
        "parser_statements.ml",
        "parser_expressions_utils.ml"
      ]
    },
    {
      "signature": "expr, state2",
      "files": [
        "parser_expressions_match.ml",
        "parser_expressions_utils.ml"
      ]
    },
    {
      "signature": "token_after, _",
      "files": [
        "parser_expressions_basic.ml",
        "parser_expressions_utils.ml"
      ]
    },
    {
      "signature": "state1",
      "files": [
        "parser_statements.ml",
        "parser_expressions_utils.ml"
      ]
    },
    {
      "signature": "error_info",
      "files": [
        "compiler_errors_creation.ml",
        "compiler_errors_creation.ml"
      ]
    },
    {
      "signature": "error_info",
      "files": [
        "compiler_errors_creation.ml",
        "compiler_errors_creation.ml"
      ]
    },
    {
      "signature": "error_info",
      "files": [
        "compiler_errors_creation.ml",
        "compiler_errors_creation.ml"
      ]
    },
    {
      "signature": "error_info",
      "files": [
        "compiler_errors_creation.ml",
        "compiler_errors_creation.ml"
      ]
    },
    {
      "signature": "error_info",
      "files": [
        "compiler_errors_creation.ml",
        "compiler_errors_creation.ml"
      ]
    },
    {
      "signature": "error_info",
      "files": [
        "compiler_errors_creation.ml",
        "compiler_errors_creation.ml"
      ]
    },
    {
      "signature": "all_suggestions",
      "files": [
        "refactoring_analyzer_performance.ml",
        "compiler_errors_creation.ml"
      ]
    },
    {
      "signature": "error_info",
      "files": [
        "compiler_errors_creation.ml",
        "compiler_errors_creation.ml"
      ]
    },
    {
      "signature": "default_suggestions",
      "files": [
        "compiler_errors_creation.ml",
        "compiler_errors_creation.ml"
      ]
    },
    {
      "signature": "all_suggestions",
      "files": [
        "refactoring_analyzer_performance.ml",
        "compiler_errors_creation.ml"
      ]
    },
    {
      "signature": "error_info",
      "files": [
        "compiler_errors_creation.ml",
        "compiler_errors_creation.ml"
      ]
    },
    {
      "signature": "error_info",
      "files": [
        "compiler_errors_creation.ml",
        "compiler_errors_creation.ml"
      ]
    },
    {
      "signature": "error_info",
      "files": [
        "compiler_errors_creation.ml",
        "compiler_errors_creation.ml"
      ]
    },
    {
      "signature": "error_info",
      "files": [
        "compiler_errors_creation.ml",
        "compiler_errors_creation.ml"
      ]
    },
    {
      "signature": "msg",
      "files": [
        "error_conversion.ml",
        "compiler_errors_creation.ml"
      ]
    },
    {
      "signature": "default_suggestions",
      "files": [
        "compiler_errors_creation.ml",
        "compiler_errors_creation.ml"
      ]
    },
    {
      "signature": "all_suggestions",
      "files": [
        "refactoring_analyzer_performance.ml",
        "compiler_errors_creation.ml"
      ]
    },
    {
      "signature": "error_info",
      "files": [
        "compiler_errors_creation.ml",
        "compiler_errors_creation.ml"
      ]
    },
    {
      "signature": "msg",
      "files": [
        "error_conversion.ml",
        "compiler_errors_creation.ml"
      ]
    },
    {
      "signature": "default_suggestions",
      "files": [
        "compiler_errors_creation.ml",
        "compiler_errors_creation.ml"
      ]
    },
    {
      "signature": "all_suggestions",
      "files": [
        "refactoring_analyzer_performance.ml",
        "compiler_errors_creation.ml"
      ]
    },
    {
      "signature": "error_info",
      "files": [
        "compiler_errors_creation.ml",
        "compiler_errors_creation.ml"
      ]
    },
    {
      "signature": "msg",
      "files": [
        "error_conversion.ml",
        "compiler_errors_creation.ml"
      ]
    },
    {
      "signature": "default_suggestions",
      "files": [
        "compiler_errors_creation.ml",
        "compiler_errors_creation.ml"
      ]
    },
    {
      "signature": "all_suggestions",
      "files": [
        "refactoring_analyzer_performance.ml",
        "compiler_errors_creation.ml"
      ]
    },
    {
      "signature": "error_info",
      "files": [
        "compiler_errors_creation.ml",
        "compiler_errors_creation.ml"
      ]
    },
    {
      "signature": "msg",
      "files": [
        "error_conversion.ml",
        "compiler_errors_creation.ml"
      ]
    },
    {
      "signature": "default_suggestions",
      "files": [
        "compiler_errors_creation.ml",
        "compiler_errors_creation.ml"
      ]
    },
    {
      "signature": "all_suggestions",
      "files": [
        "refactoring_analyzer_performance.ml",
        "compiler_errors_creation.ml"
      ]
    },
    {
      "signature": "error_info",
      "files": [
        "compiler_errors_creation.ml",
        "compiler_errors_creation.ml"
      ]
    },
    {
      "signature": "error_info",
      "files": [
        "compiler_errors_creation.ml",
        "compiler_errors_creation.ml"
      ]
    },
    {
      "signature": "msg",
      "files": [
        "error_conversion.ml",
        "compiler_errors_creation.ml"
      ]
    },
    {
      "signature": "default_suggestions",
      "files": [
        "compiler_errors_creation.ml",
        "compiler_errors_creation.ml"
      ]
    },
    {
      "signature": "all_suggestions",
      "files": [
        "refactoring_analyzer_performance.ml",
        "compiler_errors_creation.ml"
      ]
    },
    {
      "signature": "error_info",
      "files": [
        "compiler_errors_creation.ml",
        "compiler_errors_creation.ml"
      ]
    },
    {
      "signature": "check_utf8_charstate _byte1 byte2 byte3",
      "files": [
        "lexer_chars.ml",
        "lexer_parsers.ml"
      ]
    },
    {
      "signature": "new_state",
      "files": [
        "parser_patterns.ml",
        "lexer_parsers.ml"
      ]
    },
    {
      "signature": "state1",
      "files": [
        "parser_statements.ml",
        "lexer_parsers.ml"
      ]
    },
    {
      "signature": "token",
      "files": [
        "lexer_chars.ml",
        "lexer_parsers.ml"
      ]
    },
    {
      "signature": "state1",
      "files": [
        "parser_statements.ml",
        "parser_expressions_record.ml"
      ]
    },
    {
      "signature": "state",
      "files": [
        "parser_poetry.ml",
        "parser_expressions_record.ml"
      ]
    },
    {
      "signature": "token, pos",
      "files": [
        "parser_poetry.ml",
        "parser_expressions_record.ml"
      ]
    },
    {
      "signature": "state1",
      "files": [
        "parser_statements.ml",
        "parser_expressions_record.ml"
      ]
    },
    {
      "signature": "expr",
      "files": [
        "parser_expressions_calls.ml",
        "parser_expressions_record.ml"
      ]
    },
    {
      "signature": "state2",
      "files": [
        "parser_statements.ml",
        "parser_expressions_record.ml"
      ]
    },
    {
      "signature": "state2",
      "files": [
        "parser_statements.ml",
        "parser_expressions_record.ml"
      ]
    },
    {
      "signature": "state4",
      "files": [
        "parser_statements.ml",
        "parser_expressions_record.ml"
      ]
    },
    {
      "signature": "token, _",
      "files": [
        "parser_patterns.ml",
        "parser_expressions_record.ml"
      ]
    },
    {
      "signature": "expr, state1",
      "files": [
        "parser_statements.ml",
        "parser_expressions_record.ml"
      ]
    },
    {
      "signature": "state2",
      "files": [
        "parser_statements.ml",
        "parser_expressions_record.ml"
      ]
    },
    {
      "signature": "updates, state3",
      "files": [
        "parser_expressions_record.ml",
        "parser_expressions_record.ml"
      ]
    },
    {
      "signature": "state",
      "files": [
        "parser_poetry.ml",
        "parser_expressions_record.ml"
      ]
    },
    {
      "signature": "token, _",
      "files": [
        "parser_patterns.ml",
        "parser_expressions_record.ml"
      ]
    },
    {
      "signature": "state1",
      "files": [
        "parser_statements.ml",
        "parser_expressions_record.ml"
      ]
    },
    {
      "signature": "state2",
      "files": [
        "parser_statements.ml",
        "parser_expressions_record.ml"
      ]
    },
    {
      "signature": "value, state3",
      "files": [
        "parser_expressions_record.ml",
        "parser_expressions_record.ml"
      ]
    },
    {
      "signature": "state4",
      "files": [
        "parser_statements.ml",
        "parser_expressions_record.ml"
      ]
    },
    {
      "signature": "token, _",
      "files": [
        "parser_patterns.ml",
        "parser_expressions_record.ml"
      ]
    },
    {
      "signature": "token, _",
      "files": [
        "parser_patterns.ml",
        "parser_expressions_record.ml"
      ]
    },
    {
      "signature": "state2",
      "files": [
        "parser_statements.ml",
        "parser_expressions_record.ml"
      ]
    },
    {
      "signature": "value, state3",
      "files": [
        "parser_expressions_record.ml",
        "parser_expressions_record.ml"
      ]
    },
    {
      "signature": "state4",
      "files": [
        "parser_statements.ml",
        "parser_expressions_record.ml"
      ]
    },
    {
      "signature": "parse_fieldsfields state",
      "files": [
        "parser_expressions_record.ml",
        "parser_expressions_record.ml"
      ]
    },
    {
      "signature": "state",
      "files": [
        "parser_poetry.ml",
        "parser_expressions_record.ml"
      ]
    },
    {
      "signature": "token, pos",
      "files": [
        "parser_poetry.ml",
        "parser_expressions_record.ml"
      ]
    },
    {
      "signature": "state1",
      "files": [
        "parser_statements.ml",
        "parser_expressions_record.ml"
      ]
    },
    {
      "signature": "state1",
      "files": [
        "parser_statements.ml",
        "parser_expressions_record.ml"
      ]
    },
    {
      "signature": "token, _",
      "files": [
        "parser_patterns.ml",
        "parser_expressions_record.ml"
      ]
    },
    {
      "signature": "expr, state2",
      "files": [
        "parser_expressions_match.ml",
        "parser_expressions_record.ml"
      ]
    },
    {
      "signature": "parse_updatesupdates state",
      "files": [
        "parser_expressions_record.ml",
        "parser_expressions_record.ml"
      ]
    },
    {
      "signature": "state",
      "files": [
        "parser_poetry.ml",
        "parser_expressions_record.ml"
      ]
    },
    {
      "signature": "token, pos",
      "files": [
        "parser_poetry.ml",
        "parser_expressions_record.ml"
      ]
    },
    {
      "signature": "state1",
      "files": [
        "parser_statements.ml",
        "parser_expressions_record.ml"
      ]
    },
    {
      "signature": "state1",
      "files": [
        "parser_statements.ml",
        "parser_expressions_record.ml"
      ]
    },
    {
      "signature": "token, pos",
      "files": [
        "parser_poetry.ml",
        "parser_expressions_record.ml"
      ]
    },
    {
      "signature": "state1",
      "files": [
        "parser_statements.ml",
        "parser_expressions_record.ml"
      ]
    },
    {
      "signature": "state1",
      "files": [
        "parser_statements.ml",
        "parser_expressions_record.ml"
      ]
    },
    {
      "signature": "state1",
      "files": [
        "parser_statements.ml",
        "parser_expressions_record.ml"
      ]
    },
    {
      "signature": "runtime_cfg",
      "files": [
        "compiler_errors_formatter.ml",
        "error_handler_recovery.ml"
      ]
    },
    {
      "signature": "runtime_cfg",
      "files": [
        "compiler_errors_formatter.ml",
        "error_handler_recovery.ml"
      ]
    },
    {
      "signature": "runtime_cfg",
      "files": [
        "compiler_errors_formatter.ml",
        "error_handler_recovery.ml"
      ]
    },
    {
      "signature": "state1",
      "files": [
        "parser_statements.ml",
        "parser_expressions_exception.ml"
      ]
    },
    {
      "signature": "state1",
      "files": [
        "parser_statements.ml",
        "parser_expressions_exception.ml"
      ]
    },
    {
      "signature": "state2",
      "files": [
        "parser_statements.ml",
        "parser_expressions_exception.ml"
      ]
    },
    {
      "signature": "state3",
      "files": [
        "parser_statements.ml",
        "parser_expressions_exception.ml"
      ]
    },
    {
      "signature": "state3",
      "files": [
        "parser_statements.ml",
        "parser_expressions_exception.ml"
      ]
    },
    {
      "signature": "state",
      "files": [
        "parser_poetry.ml",
        "parser_expressions_exception.ml"
      ]
    },
    {
      "signature": "token, _",
      "files": [
        "parser_patterns.ml",
        "parser_expressions_exception.ml"
      ]
    },
    {
      "signature": "state1",
      "files": [
        "parser_statements.ml",
        "parser_expressions_exception.ml"
      ]
    },
    {
      "signature": "pattern, state2",
      "files": [
        "parser_expressions_match.ml",
        "parser_expressions_exception.ml"
      ]
    },
    {
      "signature": "guard, state3",
      "files": [
        "parser_expressions_match.ml",
        "parser_expressions_exception.ml"
      ]
    },
    {
      "signature": "state2_1",
      "files": [
        "parser_expressions_match.ml",
        "parser_expressions_exception.ml"
      ]
    },
    {
      "signature": "guard_expr, state2_2",
      "files": [
        "parser_expressions_match.ml",
        "parser_expressions_exception.ml"
      ]
    },
    {
      "signature": "state4",
      "files": [
        "parser_statements.ml",
        "parser_expressions_exception.ml"
      ]
    },
    {
      "signature": "state4",
      "files": [
        "parser_statements.ml",
        "parser_expressions_exception.ml"
      ]
    },
    {
      "signature": "expr, state5",
      "files": [
        "parser_expressions_match.ml",
        "parser_expressions_exception.ml"
      ]
    },
    {
      "signature": "state5",
      "files": [
        "parser_statements.ml",
        "parser_expressions_exception.ml"
      ]
    },
    {
      "signature": "branch",
      "files": [
        "parser_patterns.ml",
        "parser_expressions_exception.ml"
      ]
    },
    {
      "signature": "state4",
      "files": [
        "parser_statements.ml",
        "parser_expressions_exception.ml"
      ]
    },
    {
      "signature": "token, _",
      "files": [
        "parser_patterns.ml",
        "parser_expressions_exception.ml"
      ]
    },
    {
      "signature": "state5",
      "files": [
        "parser_statements.ml",
        "parser_expressions_exception.ml"
      ]
    },
    {
      "signature": "state5",
      "files": [
        "parser_statements.ml",
        "parser_expressions_exception.ml"
      ]
    },
    {
      "signature": "state1",
      "files": [
        "parser_statements.ml",
        "parser_expressions_exception.ml"
      ]
    },
    {
      "signature": "expr, state2",
      "files": [
        "parser_expressions_match.ml",
        "parser_expressions_exception.ml"
      ]
    },
    {
      "signature": "state1",
      "files": [
        "parser_statements.ml",
        "parser_expressions_exception.ml"
      ]
    },
    {
      "signature": "expr, state2",
      "files": [
        "parser_expressions_match.ml",
        "parser_expressions_exception.ml"
      ]
    },
    {
      "signature": "acc1",
      "files": [
        "types_convert.ml",
        "types_convert.ml"
      ]
    },
    {
      "signature": "convert_module_type_to_typ",
      "files": [
        "types.ml",
        "types_convert.ml"
      ]
    },
    {
      "signature": "typ",
      "files": [
        "types_convert.ml",
        "types_convert.ml"
      ]
    },
    {
      "signature": "param_typ",
      "files": [
        "semantic_types.ml",
        "types_convert.ml"
      ]
    },
    {
      "signature": "return_typ",
      "files": [
        "semantic_types.ml",
        "types_convert.ml"
      ]
    },
    {
      "signature": "param_typ",
      "files": [
        "semantic_types.ml",
        "types_convert.ml"
      ]
    },
    {
      "signature": "return_typ",
      "files": [
        "semantic_types.ml",
        "types_convert.ml"
      ]
    },
    {
      "signature": "typ_list",
      "files": [
        "semantic_types.ml",
        "types_convert.ml"
      ]
    },
    {
      "signature": "elem_typ",
      "files": [
        "semantic_types.ml",
        "types_convert.ml"
      ]
    },
    {
      "signature": "typ_args",
      "files": [
        "semantic_types.ml",
        "types_convert.ml"
      ]
    },
    {
      "signature": "inner_typ",
      "files": [
        "semantic_types.ml",
        "types_convert.ml"
      ]
    },
    {
      "signature": "analyze_exprexpr",
      "files": [
        "performance_analyzer_data_structures.ml",
        "nlf_semantic.ml"
      ]
    },
    {
      "signature": "buffer",
      "files": [
        "error_messages_reporting.ml",
        "nlf_semantic.ml"
      ]
    },
    {
      "signature": "token_list",
      "files": [
        "compiler_phases.ml",
        "compiler.ml"
      ]
    },
    {
      "signature": "program_ast",
      "files": [
        "compiler_phases.ml",
        "compiler.ml"
      ]
    },
    {
      "signature": "result",
      "files": [
        "interpreter.ml",
        "compiler.ml"
      ]
    },
    {
      "signature": "ic",
      "files": [
        "builtin_io.ml",
        "compiler.ml"
      ]
    },
    {
      "signature": "content",
      "files": [
        "token_compatibility_literals.ml",
        "compiler.ml"
      ]
    },
    {
      "signature": "left_expr, state1",
      "files": [
        "parser_expressions_basic.ml",
        "parser_expressions_assignment.ml"
      ]
    },
    {
      "signature": "token, _",
      "files": [
        "parser_patterns.ml",
        "parser_expressions_assignment.ml"
      ]
    },
    {
      "signature": "state2",
      "files": [
        "parser_statements.ml",
        "parser_expressions_assignment.ml"
      ]
    },
    {
      "signature": "right_expr, state3",
      "files": [
        "parser_expressions_basic.ml",
        "parser_expressions_assignment.ml"
      ]
    },
    {
      "signature": "parse_tailleft_expr state",
      "files": [
        "parser_expressions_utils.ml",
        "parser_expressions_assignment.ml"
      ]
    },
    {
      "signature": "token, _",
      "files": [
        "parser_patterns.ml",
        "parser_expressions_assignment.ml"
      ]
    },
    {
      "signature": "state1",
      "files": [
        "parser_statements.ml",
        "parser_expressions_assignment.ml"
      ]
    },
    {
      "signature": "right_expr, state2",
      "files": [
        "parser_natural_functions.ml",
        "parser_expressions_assignment.ml"
      ]
    },
    {
      "signature": "new_expr",
      "files": [
        "parser_expressions_postfix.ml",
        "parser_expressions_assignment.ml"
      ]
    },
    {
      "signature": "expr, state1",
      "files": [
        "parser_statements.ml",
        "parser_expressions_assignment.ml"
      ]
    },
    {
      "signature": "parse_tailleft_expr state",
      "files": [
        "parser_expressions_utils.ml",
        "parser_expressions_assignment.ml"
      ]
    },
    {
      "signature": "token, _",
      "files": [
        "parser_patterns.ml",
        "parser_expressions_assignment.ml"
      ]
    },
    {
      "signature": "state1",
      "files": [
        "parser_statements.ml",
        "parser_expressions_assignment.ml"
      ]
    },
    {
      "signature": "right_expr, state2",
      "files": [
        "parser_natural_functions.ml",
        "parser_expressions_assignment.ml"
      ]
    },
    {
      "signature": "new_expr",
      "files": [
        "parser_expressions_postfix.ml",
        "parser_expressions_assignment.ml"
      ]
    },
    {
      "signature": "expr, state1",
      "files": [
        "parser_statements.ml",
        "parser_expressions_assignment.ml"
      ]
    },
    {
      "signature": "parse_tailleft_expr state",
      "files": [
        "parser_expressions_utils.ml",
        "parser_expressions_assignment.ml"
      ]
    },
    {
      "signature": "token, _",
      "files": [
        "parser_patterns.ml",
        "parser_expressions_assignment.ml"
      ]
    },
    {
      "signature": "state1",
      "files": [
        "parser_statements.ml",
        "parser_expressions_assignment.ml"
      ]
    },
    {
      "signature": "right_expr, state2",
      "files": [
        "parser_natural_functions.ml",
        "parser_expressions_assignment.ml"
      ]
    },
    {
      "signature": "new_expr",
      "files": [
        "parser_expressions_postfix.ml",
        "parser_expressions_assignment.ml"
      ]
    },
    {
      "signature": "expr, state1",
      "files": [
        "parser_statements.ml",
        "parser_expressions_assignment.ml"
      ]
    },
    {
      "signature": "parse_tailleft_expr state",
      "files": [
        "parser_expressions_utils.ml",
        "parser_expressions_assignment.ml"
      ]
    },
    {
      "signature": "token, _",
      "files": [
        "parser_patterns.ml",
        "parser_expressions_assignment.ml"
      ]
    },
    {
      "signature": "state1",
      "files": [
        "parser_statements.ml",
        "parser_expressions_assignment.ml"
      ]
    },
    {
      "signature": "right_expr, state2",
      "files": [
        "parser_natural_functions.ml",
        "parser_expressions_assignment.ml"
      ]
    },
    {
      "signature": "new_expr",
      "files": [
        "parser_expressions_postfix.ml",
        "parser_expressions_assignment.ml"
      ]
    },
    {
      "signature": "expr, state1",
      "files": [
        "parser_statements.ml",
        "parser_expressions_assignment.ml"
      ]
    },
    {
      "signature": "parse_tailleft_expr state",
      "files": [
        "parser_expressions_utils.ml",
        "parser_expressions_assignment.ml"
      ]
    },
    {
      "signature": "token, _",
      "files": [
        "parser_patterns.ml",
        "parser_expressions_assignment.ml"
      ]
    },
    {
      "signature": "state1",
      "files": [
        "parser_statements.ml",
        "parser_expressions_assignment.ml"
      ]
    },
    {
      "signature": "right_expr, state2",
      "files": [
        "parser_natural_functions.ml",
        "parser_expressions_assignment.ml"
      ]
    },
    {
      "signature": "new_expr",
      "files": [
        "parser_expressions_postfix.ml",
        "parser_expressions_assignment.ml"
      ]
    },
    {
      "signature": "expr, state1",
      "files": [
        "parser_statements.ml",
        "parser_expressions_assignment.ml"
      ]
    },
    {
      "signature": "parse_tailleft_expr state",
      "files": [
        "parser_expressions_utils.ml",
        "parser_expressions_assignment.ml"
      ]
    },
    {
      "signature": "token, _",
      "files": [
        "parser_patterns.ml",
        "parser_expressions_assignment.ml"
      ]
    },
    {
      "signature": "state1",
      "files": [
        "parser_statements.ml",
        "parser_expressions_assignment.ml"
      ]
    },
    {
      "signature": "right_expr, state2",
      "files": [
        "parser_natural_functions.ml",
        "parser_expressions_assignment.ml"
      ]
    },
    {
      "signature": "new_expr",
      "files": [
        "parser_expressions_postfix.ml",
        "parser_expressions_assignment.ml"
      ]
    },
    {
      "signature": "expr, state1",
      "files": [
        "parser_statements.ml",
        "parser_expressions_assignment.ml"
      ]
    },
    {
      "signature": "token, _pos",
      "files": [
        "parser_poetry.ml",
        "parser_expressions_assignment.ml"
      ]
    },
    {
      "signature": "state1",
      "files": [
        "parser_statements.ml",
        "parser_expressions_assignment.ml"
      ]
    },
    {
      "signature": "expr, state2",
      "files": [
        "parser_expressions_match.ml",
        "parser_expressions_assignment.ml"
      ]
    },
    {
      "signature": "state1",
      "files": [
        "parser_statements.ml",
        "parser_expressions_assignment.ml"
      ]
    },
    {
      "signature": "expr, state2",
      "files": [
        "parser_expressions_match.ml",
        "parser_expressions_assignment.ml"
      ]
    },
    {
      "signature": "state1",
      "files": [
        "parser_statements.ml",
        "parser_expressions_assignment.ml"
      ]
    },
    {
      "signature": "expr, state2",
      "files": [
        "parser_expressions_match.ml",
        "parser_expressions_assignment.ml"
      ]
    },
    {
      "signature": "token, _pos",
      "files": [
        "parser_poetry.ml",
        "parser_expressions_assignment.ml"
      ]
    },
    {
      "signature": "literal, state1",
      "files": [
        "parser_expressions_logical.ml",
        "parser_expressions_assignment.ml"
      ]
    },
    {
      "signature": "state1",
      "files": [
        "parser_statements.ml",
        "parser_expressions_assignment.ml"
      ]
    },
    {
      "signature": "state1",
      "files": [
        "parser_statements.ml",
        "parser_expressions_assignment.ml"
      ]
    },
    {
      "signature": "expr, state2",
      "files": [
        "parser_expressions_match.ml",
        "parser_expressions_assignment.ml"
      ]
    },
    {
      "signature": "state3",
      "files": [
        "parser_statements.ml",
        "parser_expressions_assignment.ml"
      ]
    },
    {
      "signature": "state1",
      "files": [
        "parser_statements.ml",
        "parser_expressions_assignment.ml"
      ]
    },
    {
      "signature": "try_match_keywordstate",
      "files": [
        "lexer_chars.ml",
        "keyword_matcher.ml"
      ]
    },
    {
      "signature": "try_keywordskeywords best_match",
      "files": [
        "lexer_chars.ml",
        "keyword_matcher.ml"
      ]
    },
    {
      "signature": "keyword_len",
      "files": [
        "lexer_chars.ml",
        "keyword_matcher.ml"
      ]
    },
    {
      "signature": "substring",
      "files": [
        "lexer_chars.ml",
        "keyword_matcher.ml"
      ]
    },
    {
      "signature": "try_keywordskeywords best_match",
      "files": [
        "lexer_chars.ml",
        "keyword_matcher.ml"
      ]
    },
    {
      "signature": "keyword_len",
      "files": [
        "lexer_chars.ml",
        "keyword_matcher.ml"
      ]
    },
    {
      "signature": "new_match",
      "files": [
        "keyword_matcher.ml",
        "keyword_matcher.ml"
      ]
    },
    {
      "signature": "c",
      "files": [
        "lexer.ml",
        "keyword_matcher.ml"
      ]
    },
    {
      "signature": "match_keywordstate",
      "files": [
        "keyword_matcher_modular.ml",
        "keyword_matcher.ml"
      ]
    },
    {
      "signature": "lookup_keywordkeyword_string",
      "files": [
        "keyword_matcher_modular.ml",
        "keyword_matcher.ml"
      ]
    },
    {
      "signature": "is_keywordkeyword_string",
      "files": [
        "keyword_matcher_modular.ml",
        "keyword_matcher.ml"
      ]
    },
    {
      "signature": "runtime_cfg",
      "files": [
        "compiler_errors_formatter.ml",
        "error_handler_core.ml"
      ]
    },
    {
      "signature": "base_error",
      "files": [
        "error_handler_core.ml",
        "error_handler_core.ml"
      ]
    },
    {
      "signature": "ctx",
      "files": [
        "error_handler_core.ml",
        "error_handler_core.ml"
      ]
    },
    {
      "signature": "base_error",
      "files": [
        "error_handler_core.ml",
        "error_handler_core.ml"
      ]
    },
    {
      "signature": "ctx",
      "files": [
        "error_handler_core.ml",
        "error_handler_core.ml"
      ]
    },
    {
      "signature": "base_error",
      "files": [
        "error_handler_core.ml",
        "error_handler_core.ml"
      ]
    },
    {
      "signature": "ctx",
      "files": [
        "error_handler_core.ml",
        "error_handler_core.ml"
      ]
    },
    {
      "signature": "token, _",
      "files": [
        "parser_patterns.ml",
        "parser_expressions_literals_primary.ml"
      ]
    },
    {
      "signature": "literal, state1",
      "files": [
        "parser_expressions_logical.ml",
        "parser_expressions_literals_primary.ml"
      ]
    },
    {
      "signature": "token_after, _",
      "files": [
        "parser_expressions_basic.ml",
        "parser_expressions_literals_primary.ml"
      ]
    },
    {
      "signature": "name, state1",
      "files": [
        "parser_expressions_keywords_primary.ml",
        "parser_expressions_literals_primary.ml"
      ]
    },
    {
      "signature": "literal, state1",
      "files": [
        "parser_expressions_logical.ml",
        "parser_expressions_literals_primary.ml"
      ]
    },
    {
      "signature": "state1",
      "files": [
        "parser_statements.ml",
        "parser_expressions_literals_primary.ml"
      ]
    },
    {
      "signature": "token, _",
      "files": [
        "parser_patterns.ml",
        "parser_expressions_literals_primary.ml"
      ]
    },
    {
      "signature": "total_count",
      "files": [
        "refactoring_analyzer_types.ml",
        "token_compatibility_reports.ml"
      ]
    },
    {
      "signature": "supported_tokens",
      "files": [
        "token_compatibility_reports.ml",
        "token_compatibility_reports.ml"
      ]
    },
    {
      "signature": "expr_code",
      "files": [
        "c_codegen_control.ml",
        "c_codegen_statements.ml"
      ]
    },
    {
      "signature": "escaped_var",
      "files": [
        "c_codegen_control.ml",
        "c_codegen_statements.ml"
      ]
    },
    {
      "signature": "expr_code",
      "files": [
        "c_codegen_control.ml",
        "c_codegen_statements.ml"
      ]
    },
    {
      "signature": "escaped_var",
      "files": [
        "c_codegen_control.ml",
        "c_codegen_statements.ml"
      ]
    },
    {
      "signature": "expr_code",
      "files": [
        "c_codegen_control.ml",
        "c_codegen_statements.ml"
      ]
    },
    {
      "signature": "expr_code",
      "files": [
        "c_codegen_control.ml",
        "c_codegen_statements.ml"
      ]
    },
    {
      "signature": "escaped_var",
      "files": [
        "c_codegen_control.ml",
        "c_codegen_statements.ml"
      ]
    },
    {
      "signature": "rest_code",
      "files": [
        "c_codegen_collections.ml",
        "c_codegen_statements.ml"
      ]
    },
    {
      "signature": "escaped_name",
      "files": [
        "c_codegen_literals.ml",
        "c_codegen_statements.ml"
      ]
    },
    {
      "signature": "ctx",
      "files": [
        "error_handler_core.ml",
        "c_codegen_statements.ml"
      ]
    },
    {
      "signature": "error_msg",
      "files": [
        "semantic_statements.ml",
        "c_codegen_statements.ml"
      ]
    },
    {
      "signature": "error_msg",
      "files": [
        "semantic_statements.ml",
        "c_codegen_statements.ml"
      ]
    },
    {
      "signature": "token, _",
      "files": [
        "parser_patterns.ml",
        "parser_expressions_type_keywords.ml"
      ]
    },
    {
      "signature": "state1",
      "files": [
        "parser_statements.ml",
        "parser_expressions_type_keywords.ml"
      ]
    },
    {
      "signature": "state1",
      "files": [
        "parser_statements.ml",
        "parser_expressions_type_keywords.ml"
      ]
    },
    {
      "signature": "env",
      "files": [
        "semantic_expressions.ml",
        "types_builtin.ml"
      ]
    },
    {
      "signature": "env",
      "files": [
        "semantic_expressions.ml",
        "types_builtin.ml"
      ]
    },
    {
      "signature": "env",
      "files": [
        "semantic_expressions.ml",
        "types_builtin.ml"
      ]
    },
    {
      "signature": "env",
      "files": [
        "semantic_expressions.ml",
        "types_builtin.ml"
      ]
    },
    {
      "signature": "env",
      "files": [
        "semantic_expressions.ml",
        "types_builtin.ml"
      ]
    },
    {
      "signature": "env",
      "files": [
        "semantic_expressions.ml",
        "types_builtin.ml"
      ]
    },
    {
      "signature": "env",
      "files": [
        "semantic_expressions.ml",
        "types_builtin.ml"
      ]
    },
    {
      "signature": "env",
      "files": [
        "semantic_expressions.ml",
        "types_builtin.ml"
      ]
    },
    {
      "signature": "env",
      "files": [
        "semantic_expressions.ml",
        "types_builtin.ml"
      ]
    },
    {
      "signature": "env",
      "files": [
        "semantic_expressions.ml",
        "types_builtin.ml"
      ]
    },
    {
      "signature": "env",
      "files": [
        "semantic_expressions.ml",
        "types_builtin.ml"
      ]
    },
    {
      "signature": "env",
      "files": [
        "semantic_expressions.ml",
        "types_builtin.ml"
      ]
    },
    {
      "signature": "env",
      "files": [
        "semantic_expressions.ml",
        "types_builtin.ml"
      ]
    },
    {
      "signature": "env",
      "files": [
        "semantic_expressions.ml",
        "types_builtin.ml"
      ]
    },
    {
      "signature": "env",
      "files": [
        "semantic_expressions.ml",
        "types_builtin.ml"
      ]
    },
    {
      "signature": "env",
      "files": [
        "semantic_expressions.ml",
        "types_builtin.ml"
      ]
    },
    {
      "signature": "env",
      "files": [
        "semantic_expressions.ml",
        "types_builtin.ml"
      ]
    },
    {
      "signature": "env",
      "files": [
        "semantic_expressions.ml",
        "types_builtin.ml"
      ]
    },
    {
      "signature": "env",
      "files": [
        "semantic_expressions.ml",
        "types_builtin.ml"
      ]
    },
    {
      "signature": "env",
      "files": [
        "semantic_expressions.ml",
        "types_builtin.ml"
      ]
    },
    {
      "signature": "env",
      "files": [
        "semantic_expressions.ml",
        "types_builtin.ml"
      ]
    },
    {
      "signature": "env",
      "files": [
        "semantic_expressions.ml",
        "types_builtin.ml"
      ]
    },
    {
      "signature": "env",
      "files": [
        "semantic_expressions.ml",
        "types_builtin.ml"
      ]
    },
    {
      "signature": "env",
      "files": [
        "semantic_expressions.ml",
        "types_builtin.ml"
      ]
    },
    {
      "signature": "env",
      "files": [
        "semantic_expressions.ml",
        "types_builtin.ml"
      ]
    },
    {
      "signature": "env",
      "files": [
        "semantic_expressions.ml",
        "types_builtin.ml"
      ]
    },
    {
      "signature": "env",
      "files": [
        "semantic_expressions.ml",
        "types_builtin.ml"
      ]
    },
    {
      "signature": "env",
      "files": [
        "semantic_expressions.ml",
        "types_builtin.ml"
      ]
    },
    {
      "signature": "env",
      "files": [
        "semantic_expressions.ml",
        "types_builtin.ml"
      ]
    },
    {
      "signature": "env",
      "files": [
        "semantic_expressions.ml",
        "types_builtin.ml"
      ]
    },
    {
      "signature": "env",
      "files": [
        "semantic_expressions.ml",
        "types_builtin.ml"
      ]
    },
    {
      "signature": "env",
      "files": [
        "semantic_expressions.ml",
        "types_builtin.ml"
      ]
    },
    {
      "signature": "env",
      "files": [
        "semantic_expressions.ml",
        "types_builtin.ml"
      ]
    },
    {
      "signature": "env",
      "files": [
        "semantic_expressions.ml",
        "types_builtin.ml"
      ]
    },
    {
      "signature": "env",
      "files": [
        "semantic_expressions.ml",
        "types_builtin.ml"
      ]
    },
    {
      "signature": "env",
      "files": [
        "semantic_expressions.ml",
        "types_builtin.ml"
      ]
    },
    {
      "signature": "env",
      "files": [
        "semantic_expressions.ml",
        "types_builtin.ml"
      ]
    },
    {
      "signature": "env",
      "files": [
        "semantic_expressions.ml",
        "types_builtin.ml"
      ]
    },
    {
      "signature": "env",
      "files": [
        "semantic_expressions.ml",
        "types_builtin.ml"
      ]
    },
    {
      "signature": "env",
      "files": [
        "semantic_expressions.ml",
        "types_builtin.ml"
      ]
    },
    {
      "signature": "env",
      "files": [
        "semantic_expressions.ml",
        "types_builtin.ml"
      ]
    },
    {
      "signature": "env",
      "files": [
        "semantic_expressions.ml",
        "types_builtin.ml"
      ]
    },
    {
      "signature": "env",
      "files": [
        "semantic_expressions.ml",
        "types_builtin.ml"
      ]
    },
    {
      "signature": "env",
      "files": [
        "semantic_expressions.ml",
        "types_builtin.ml"
      ]
    },
    {
      "signature": "env",
      "files": [
        "semantic_expressions.ml",
        "types_builtin.ml"
      ]
    },
    {
      "signature": "env",
      "files": [
        "semantic_expressions.ml",
        "types_builtin.ml"
      ]
    },
    {
      "signature": "env",
      "files": [
        "semantic_expressions.ml",
        "types_builtin.ml"
      ]
    },
    {
      "signature": "env",
      "files": [
        "semantic_expressions.ml",
        "types_builtin.ml"
      ]
    },
    {
      "signature": "env",
      "files": [
        "semantic_expressions.ml",
        "types_builtin.ml"
      ]
    },
    {
      "signature": "env",
      "files": [
        "semantic_expressions.ml",
        "types_builtin.ml"
      ]
    },
    {
      "signature": "env",
      "files": [
        "semantic_expressions.ml",
        "types_builtin.ml"
      ]
    },
    {
      "signature": "env",
      "files": [
        "semantic_expressions.ml",
        "types_builtin.ml"
      ]
    },
    {
      "signature": "env",
      "files": [
        "semantic_expressions.ml",
        "types_builtin.ml"
      ]
    },
    {
      "signature": "env",
      "files": [
        "semantic_expressions.ml",
        "types_builtin.ml"
      ]
    },
    {
      "signature": "env",
      "files": [
        "semantic_expressions.ml",
        "types_builtin.ml"
      ]
    },
    {
      "signature": "env",
      "files": [
        "semantic_expressions.ml",
        "types_builtin.ml"
      ]
    },
    {
      "signature": "env",
      "files": [
        "semantic_expressions.ml",
        "types_builtin.ml"
      ]
    },
    {
      "signature": "builtin_env",
      "files": [
        "types.ml",
        "types_builtin.ml"
      ]
    },
    {
      "signature": "is_builtin_functionname",
      "files": [
        "builtin_functions.ml",
        "types_builtin.ml"
      ]
    },
    {
      "signature": "map_legacy_operator_to_unified",
      "files": [
        "token_compatibility_operators.ml",
        "token_compatibility.ml"
      ]
    },
    {
      "signature": "map_legacy_delimiter_to_unified",
      "files": [
        "token_compatibility_delimiters.ml",
        "token_compatibility.ml"
      ]
    },
    {
      "signature": "map_legacy_literal_to_unified",
      "files": [
        "token_compatibility_literals.ml",
        "token_compatibility.ml"
      ]
    },
    {
      "signature": "map_legacy_identifier_to_unified",
      "files": [
        "token_compatibility_literals.ml",
        "token_compatibility.ml"
      ]
    },
    {
      "signature": "map_legacy_special_to_unified",
      "files": [
        "token_compatibility_literals.ml",
        "token_compatibility.ml"
      ]
    },
    {
      "signature": "value",
      "files": [
        "expression_evaluator_control.ml",
        "statement_executor.ml"
      ]
    },
    {
      "signature": "value",
      "files": [
        "expression_evaluator_control.ml",
        "statement_executor.ml"
      ]
    },
    {
      "signature": "new_env",
      "files": [
        "expression_evaluator_control.ml",
        "statement_executor.ml"
      ]
    },
    {
      "signature": "value",
      "files": [
        "expression_evaluator_control.ml",
        "statement_executor.ml"
      ]
    },
    {
      "signature": "new_env",
      "files": [
        "expression_evaluator_control.ml",
        "statement_executor.ml"
      ]
    },
    {
      "signature": "new_env",
      "files": [
        "expression_evaluator_control.ml",
        "statement_executor.ml"
      ]
    },
    {
      "signature": "value",
      "files": [
        "expression_evaluator_control.ml",
        "statement_executor.ml"
      ]
    },
    {
      "signature": "new_env",
      "files": [
        "expression_evaluator_control.ml",
        "statement_executor.ml"
      ]
    },
    {
      "signature": "module_value",
      "files": [
        "expression_evaluator.ml",
        "statement_executor.ml"
      ]
    },
    {
      "signature": "new_env",
      "files": [
        "expression_evaluator_control.ml",
        "statement_executor.ml"
      ]
    },
    {
      "signature": "initial_env",
      "files": [
        "main.ml",
        "statement_executor.ml"
      ]
    },
    {
      "signature": "result",
      "files": [
        "interpreter.ml",
        "statement_executor.ml"
      ]
    },
    {
      "signature": "skip_newlinesstate",
      "files": [
        "parser_statements.ml",
        "parser_ancient.ml"
      ]
    },
    {
      "signature": "token, _pos",
      "files": [
        "parser_poetry.ml",
        "parser_ancient.ml"
      ]
    },
    {
      "signature": "parse_natural_arithmetic_continuationexpr _param_name state",
      "files": [
        "parser_expressions_utils.ml",
        "parser_ancient.ml"
      ]
    },
    {
      "signature": "token_after, _",
      "files": [
        "parser_expressions_basic.ml",
        "parser_ancient.ml"
      ]
    },
    {
      "signature": "state1",
      "files": [
        "parser_statements.ml",
        "parser_ancient.ml"
      ]
    },
    {
      "signature": "func_name, state2",
      "files": [
        "parser_expressions_utils.ml",
        "parser_ancient.ml"
      ]
    },
    {
      "signature": "state1",
      "files": [
        "parser_statements.ml",
        "parser_ancient.ml"
      ]
    },
    {
      "signature": "function_name, state2",
      "files": [
        "parser_natural_functions.ml",
        "parser_ancient.ml"
      ]
    },
    {
      "signature": "state3",
      "files": [
        "parser_statements.ml",
        "parser_ancient.ml"
      ]
    },
    {
      "signature": "state4",
      "files": [
        "parser_statements.ml",
        "parser_ancient.ml"
      ]
    },
    {
      "signature": "state6",
      "files": [
        "parser_statements.ml",
        "parser_ancient.ml"
      ]
    },
    {
      "signature": "fun_expr",
      "files": [
        "parser_natural_functions.ml",
        "parser_ancient.ml"
      ]
    },
    {
      "signature": "state1",
      "files": [
        "parser_statements.ml",
        "parser_ancient.ml"
      ]
    },
    {
      "signature": "state3",
      "files": [
        "parser_statements.ml",
        "parser_ancient.ml"
      ]
    },
    {
      "signature": "state4",
      "files": [
        "parser_statements.ml",
        "parser_ancient.ml"
      ]
    },
    {
      "signature": "expr",
      "files": [
        "parser_expressions_calls.ml",
        "parser_ancient.ml"
      ]
    },
    {
      "signature": "state4_clean",
      "files": [
        "parser_expressions_match.ml",
        "parser_ancient.ml"
      ]
    },
    {
      "signature": "token, _",
      "files": [
        "parser_patterns.ml",
        "parser_ancient.ml"
      ]
    },
    {
      "signature": "state1",
      "files": [
        "parser_statements.ml",
        "parser_ancient.ml"
      ]
    },
    {
      "signature": "pattern, state2",
      "files": [
        "parser_expressions_match.ml",
        "parser_ancient.ml"
      ]
    },
    {
      "signature": "state3",
      "files": [
        "parser_statements.ml",
        "parser_ancient.ml"
      ]
    },
    {
      "signature": "state4",
      "files": [
        "parser_statements.ml",
        "parser_ancient.ml"
      ]
    },
    {
      "signature": "state5_clean",
      "files": [
        "parser_expressions_match.ml",
        "parser_ancient.ml"
      ]
    },
    {
      "signature": "branch",
      "files": [
        "parser_patterns.ml",
        "parser_ancient.ml"
      ]
    },
    {
      "signature": "state1",
      "files": [
        "parser_statements.ml",
        "parser_ancient.ml"
      ]
    },
    {
      "signature": "state2",
      "files": [
        "parser_statements.ml",
        "parser_ancient.ml"
      ]
    },
    {
      "signature": "state3",
      "files": [
        "parser_statements.ml",
        "parser_ancient.ml"
      ]
    },
    {
      "signature": "state4_clean",
      "files": [
        "parser_expressions_match.ml",
        "parser_ancient.ml"
      ]
    },
    {
      "signature": "token2, _",
      "files": [
        "parser_expressions_postfix.ml",
        "parser_ancient.ml"
      ]
    },
    {
      "signature": "state5",
      "files": [
        "parser_statements.ml",
        "parser_ancient.ml"
      ]
    },
    {
      "signature": "state1",
      "files": [
        "parser_statements.ml",
        "parser_ancient.ml"
      ]
    },
    {
      "signature": "token, _",
      "files": [
        "parser_patterns.ml",
        "parser_ancient.ml"
      ]
    },
    {
      "signature": "expr, state1",
      "files": [
        "parser_statements.ml",
        "parser_ancient.ml"
      ]
    },
    {
      "signature": "state2",
      "files": [
        "parser_statements.ml",
        "parser_ancient.ml"
      ]
    },
    {
      "signature": "next_token, _",
      "files": [
        "parser_statements.ml",
        "parser_ancient.ml"
      ]
    },
    {
      "signature": "error_msg",
      "files": [
        "semantic_statements.ml",
        "parser_ancient.ml"
      ]
    },
    {
      "signature": "state1",
      "files": [
        "parser_statements.ml",
        "parser_ancient.ml"
      ]
    },
    {
      "signature": "cond, state2",
      "files": [
        "parser_expressions_conditional.ml",
        "parser_ancient.ml"
      ]
    },
    {
      "signature": "state3",
      "files": [
        "parser_statements.ml",
        "parser_ancient.ml"
      ]
    },
    {
      "signature": "then_branch, state4",
      "files": [
        "parser_expressions_conditional.ml",
        "parser_ancient.ml"
      ]
    },
    {
      "signature": "token, _",
      "files": [
        "parser_patterns.ml",
        "parser_ancient.ml"
      ]
    },
    {
      "signature": "state1",
      "files": [
        "parser_statements.ml",
        "parser_ancient.ml"
      ]
    },
    {
      "signature": "state2",
      "files": [
        "parser_statements.ml",
        "parser_ancient.ml"
      ]
    },
    {
      "signature": "token, _",
      "files": [
        "parser_patterns.ml",
        "parser_ancient.ml"
      ]
    },
    {
      "signature": "token, _",
      "files": [
        "parser_patterns.ml",
        "parser_ancient.ml"
      ]
    },
    {
      "signature": "token, _",
      "files": [
        "parser_patterns.ml",
        "parser_ancient.ml"
      ]
    },
    {
      "signature": "token, _",
      "files": [
        "parser_patterns.ml",
        "parser_ancient.ml"
      ]
    },
    {
      "signature": "state4",
      "files": [
        "parser_statements.ml",
        "parser_ancient.ml"
      ]
    },
    {
      "signature": "state6",
      "files": [
        "parser_statements.ml",
        "parser_ancient.ml"
      ]
    },
    {
      "signature": "state7",
      "files": [
        "parser_ancient.ml",
        "parser_ancient.ml"
      ]
    },
    {
      "signature": "state10",
      "files": [
        "parser_ancient.ml",
        "parser_ancient.ml"
      ]
    },
    {
      "signature": "state1",
      "files": [
        "parser_statements.ml",
        "parser_ancient.ml"
      ]
    },
    {
      "signature": "name, state2",
      "files": [
        "parser_statements.ml",
        "parser_ancient.ml"
      ]
    },
    {
      "signature": "state3",
      "files": [
        "parser_statements.ml",
        "parser_ancient.ml"
      ]
    },
    {
      "signature": "val_expr, state4",
      "files": [
        "parser_expressions_arrays.ml",
        "parser_ancient.ml"
      ]
    },
    {
      "signature": "state5",
      "files": [
        "parser_statements.ml",
        "parser_ancient.ml"
      ]
    },
    {
      "signature": "token, _",
      "files": [
        "parser_patterns.ml",
        "parser_ancient.ml"
      ]
    },
    {
      "signature": "state5_clean",
      "files": [
        "parser_expressions_match.ml",
        "parser_ancient.ml"
      ]
    },
    {
      "signature": "body_expr, state6",
      "files": [
        "parser_expressions_arrays.ml",
        "parser_ancient.ml"
      ]
    },
    {
      "signature": "id",
      "files": [
        "c_codegen_context.ml",
        "c_codegen_context.ml"
      ]
    },
    {
      "signature": "i",
      "files": [
        "parser_patterns.ml",
        "c_codegen_context.ml"
      ]
    },
    {
      "signature": "c",
      "files": [
        "lexer.ml",
        "c_codegen_context.ml"
      ]
    },
    {
      "signature": "buf",
      "files": [
        "c_codegen_literals.ml",
        "c_codegen_context.ml"
      ]
    },
    {
      "signature": "c_type_of_luoyan_type",
      "files": [
        "c_codegen.ml",
        "c_codegen_context.ml"
      ]
    },
    {
      "signature": "default_recovery_config",
      "files": [
        "error_recovery.ml",
        "codegen.ml"
      ]
    },
    {
      "signature": "builtin_functions",
      "files": [
        "builtin_functions.ml",
        "codegen.ml"
      ]
    },
    {
      "signature": "execute_programprogram",
      "files": [
        "statement_executor.ml",
        "codegen.ml"
      ]
    },
    {
      "signature": "result",
      "files": [
        "interpreter.ml",
        "codegen.ml"
      ]
    },
    {
      "signature": "eval_exprenv expr",
      "files": [
        "expression_evaluator.ml",
        "codegen.ml"
      ]
    },
    {
      "signature": "execute_stmt",
      "files": [
        "interpreter.ml",
        "codegen.ml"
      ]
    },
    {
      "signature": "eval_literalliteral",
      "files": [
        "interpreter_utils.ml",
        "codegen.ml"
      ]
    },
    {
      "signature": "context_desc",
      "files": [
        "error_utils.ml",
        "error_utils.ml"
      ]
    },
    {
      "signature": "context_desc",
      "files": [
        "error_utils.ml",
        "error_utils.ml"
      ]
    },
    {
      "signature": "error_msg",
      "files": [
        "semantic_statements.ml",
        "error_utils.ml"
      ]
    },
    {
      "signature": "error_msg",
      "files": [
        "semantic_statements.ml",
        "error_utils.ml"
      ]
    },
    {
      "signature": "error_msg",
      "files": [
        "semantic_statements.ml",
        "error_utils.ml"
      ]
    },
    {
      "signature": "context_desc",
      "files": [
        "error_utils.ml",
        "error_utils.ml"
      ]
    },
    {
      "signature": "error_msg",
      "files": [
        "semantic_statements.ml",
        "error_utils.ml"
      ]
    },
    {
      "signature": "empty_context",
      "files": [
        "refactoring_analyzer_types.ml",
        "refactoring_analyzer.ml"
      ]
    },
    {
      "signature": "max_function_complexity",
      "files": [
        "refactoring_analyzer_types.ml",
        "refactoring_analyzer.ml"
      ]
    },
    {
      "signature": "max_nesting_level",
      "files": [
        "refactoring_analyzer_types.ml",
        "refactoring_analyzer.ml"
      ]
    },
    {
      "signature": "min_duplication_threshold",
      "files": [
        "refactoring_analyzer_types.ml",
        "refactoring_analyzer.ml"
      ]
    },
    {
      "signature": "analyze_expression",
      "files": [
        "semantic.ml",
        "refactoring_analyzer.ml"
      ]
    },
    {
      "signature": "analyze_statement",
      "files": [
        "semantic.ml",
        "refactoring_analyzer.ml"
      ]
    },
    {
      "signature": "is_chinese_char",
      "files": [
        "lexer_utils_refactored.ml",
        "lexer_utils.ml"
      ]
    },
    {
      "signature": "is_letter_or_chinese",
      "files": [
        "lexer_utils_refactored.ml",
        "lexer_utils.ml"
      ]
    },
    {
      "signature": "is_digit",
      "files": [
        "lexer_utils_refactored.ml",
        "lexer_utils.ml"
      ]
    },
    {
      "signature": "is_whitespace",
      "files": [
        "lexer_utils_refactored.ml",
        "lexer_utils.ml"
      ]
    },
    {
      "signature": "is_separator_char",
      "files": [
        "lexer_utils_refactored.ml",
        "lexer_utils.ml"
      ]
    },
    {
      "signature": "is_chinese_utf8",
      "files": [
        "lexer_utils_refactored.ml",
        "lexer_utils.ml"
      ]
    },
    {
      "signature": "next_utf8_char",
      "files": [
        "lexer_utils_refactored.ml",
        "lexer_utils.ml"
      ]
    },
    {
      "signature": "is_chinese_digit_char",
      "files": [
        "lexer_utils_refactored.ml",
        "lexer_utils.ml"
      ]
    },
    {
      "signature": "is_all_digits",
      "files": [
        "lexer_utils_refactored.ml",
        "lexer_utils.ml"
      ]
    },
    {
      "signature": "is_valid_identifier",
      "files": [
        "lexer_utils_refactored.ml",
        "lexer_utils.ml"
      ]
    },
    {
      "signature": "looppos acc",
      "files": [
        "lexer_parsers.ml",
        "lexer_utils.ml"
      ]
    },
    {
      "signature": "ch, next_pos",
      "files": [
        "lexer_parsers.ml",
        "lexer_utils.ml"
      ]
    },
    {
      "signature": "len",
      "files": [
        "c_codegen_context.ml",
        "lexer_utils.ml"
      ]
    },
    {
      "signature": "buf",
      "files": [
        "c_codegen_literals.ml",
        "lexer_utils.ml"
      ]
    },
    {
      "signature": "read_chinese_number_sequence",
      "files": [
        "lexer_utils_refactored.ml",
        "lexer_utils.ml"
      ]
    },
    {
      "signature": "convert_chinese_number_sequence",
      "files": [
        "lexer_utils_refactored.ml",
        "lexer_utils.ml"
      ]
    },
    {
      "signature": "input",
      "files": [
        "main.ml",
        "lexer_utils.ml"
      ]
    },
    {
      "signature": "looppos acc",
      "files": [
        "lexer_parsers.ml",
        "lexer_utils.ml"
      ]
    },
    {
      "signature": "ch, next_pos",
      "files": [
        "lexer_parsers.ml",
        "lexer_utils.ml"
      ]
    },
    {
      "signature": "new_col",
      "files": [
        "lexer_parsers.ml",
        "lexer_utils.ml"
      ]
    },
    {
      "signature": "looppos acc",
      "files": [
        "lexer_parsers.ml",
        "lexer_utils.ml"
      ]
    },
    {
      "signature": "recognize_chinese_punctuation",
      "files": [
        "lexer_utils_refactored.ml",
        "lexer_utils.ml"
      ]
    },
    {
      "signature": "recognize_pipe_right_bracket",
      "files": [
        "lexer_utils_refactored.ml",
        "lexer_utils.ml"
      ]
    },
    {
      "signature": "composed_subst2",
      "files": [
        "types_unify.ml",
        "types_subst.ml"
      ]
    },
    {
      "signature": "env_free_vars",
      "files": [
        "types.ml",
        "types_subst.ml"
      ]
    },
    {
      "signature": "pos",
      "files": [
        "error_conversion.ml",
        "compiler_errors.ml"
      ]
    },
    {
      "signature": "compiler_pos",
      "files": [
        "compiler_errors.ml",
        "compiler_errors.ml"
      ]
    },
    {
      "signature": "safe_executef",
      "files": [
        "unified_error_utils.ml",
        "compiler_errors.ml"
      ]
    },
    {
      "signature": "result",
      "files": [
        "interpreter.ml",
        "compiler_errors.ml"
      ]
    },
    {
      "signature": "pos",
      "files": [
        "error_conversion.ml",
        "compiler_errors.ml"
      ]
    },
    {
      "signature": "compiler_pos",
      "files": [
        "compiler_errors.ml",
        "compiler_errors.ml"
      ]
    },
    {
      "signature": "compiler_pos",
      "files": [
        "compiler_errors.ml",
        "compiler_errors.ml"
      ]
    },
    {
      "signature": "map_errorf",
      "files": [
        "unified_error_utils.ml",
        "compiler_errors.ml"
      ]
    },
    {
      "signature": "runtime_cfg",
      "files": [
        "compiler_errors_formatter.ml",
        "compiler_errors.ml"
      ]
    },
    {
      "signature": "config",
      "files": [
        "interpreter_utils.ml",
        "compiler_errors.ml"
      ]
    },
    {
      "signature": "value",
      "files": [
        "expression_evaluator_control.ml",
        "builtin_collections.ml"
      ]
    },
    {
      "signature": "lst",
      "files": [
        "builtin_math.ml",
        "builtin_collections.ml"
      ]
    },
    {
      "signature": "filtered",
      "files": [
        "builtin_utils.ml",
        "builtin_collections.ml"
      ]
    },
    {
      "signature": "lst",
      "files": [
        "builtin_math.ml",
        "builtin_collections.ml"
      ]
    },
    {
      "signature": "lst",
      "files": [
        "builtin_math.ml",
        "builtin_collections.ml"
      ]
    },
    {
      "signature": "lst",
      "files": [
        "builtin_math.ml",
        "builtin_collections.ml"
      ]
    },
    {
      "signature": "sorted",
      "files": [
        "error_recovery.ml",
        "builtin_collections.ml"
      ]
    },
    {
      "signature": "value",
      "files": [
        "expression_evaluator_control.ml",
        "builtin_collections.ml"
      ]
    },
    {
      "signature": "runtime_errormsg",
      "files": [
        "builtin_error.ml",
        "param_validator.ml"
      ]
    },
    {
      "signature": "arg1, arg2",
      "files": [
        "builtin_shared_utils.ml",
        "param_validator.ml"
      ]
    },
    {
      "signature": "wrapped_v1",
      "files": [
        "param_validator.ml",
        "param_validator.ml"
      ]
    },
    {
      "signature": "wrapped_v2",
      "files": [
        "param_validator.ml",
        "param_validator.ml"
      ]
    },
    {
      "signature": "code",
      "files": [
        "token_compatibility_literals.ml",
        "utf8_utils.ml"
      ]
    },
    {
      "signature": "c",
      "files": [
        "lexer.ml",
        "utf8_utils.ml"
      ]
    },
    {
      "signature": "code",
      "files": [
        "token_compatibility_literals.ml",
        "utf8_utils.ml"
      ]
    },
    {
      "signature": "buf",
      "files": [
        "c_codegen_literals.ml",
        "utf8_utils.ml"
      ]
    },
    {
      "signature": "s",
      "files": [
        "builtin_types.ml",
        "utf8_utils.ml"
      ]
    },
    {
      "signature": "len",
      "files": [
        "c_codegen_context.ml",
        "utf8_utils.ml"
      ]
    },
    {
      "signature": "code",
      "files": [
        "token_compatibility_literals.ml",
        "utf8_utils.ml"
      ]
    },
    {
      "signature": "code",
      "files": [
        "token_compatibility_literals.ml",
        "utf8_utils.ml"
      ]
    },
    {
      "signature": "third_byte",
      "files": [
        "lexer_punctuation_recognition.ml",
        "utf8_utils.ml"
      ]
    },
    {
      "signature": "len",
      "files": [
        "c_codegen_context.ml",
        "utf8_utils.ml"
      ]
    },
    {
      "signature": "len",
      "files": [
        "c_codegen_context.ml",
        "utf8_utils.ml"
      ]
    },
    {
      "signature": "checki",
      "files": [
        "utf8_utils.ml",
        "utf8_utils.ml"
      ]
    },
    {
      "signature": "c",
      "files": [
        "lexer.ml",
        "utf8_utils.ml"
      ]
    },
    {
      "signature": "buf",
      "files": [
        "c_codegen_literals.ml",
        "utf8_utils.ml"
      ]
    },
    {
      "signature": "chars",
      "files": [
        "builtin_shared_utils.ml",
        "utf8_utils.ml"
      ]
    },
    {
      "signature": "chinese_lengths",
      "files": [
        "keyword_matcher.ml",
        "utf8_utils.ml"
      ]
    },
    {
      "signature": "chars",
      "files": [
        "builtin_shared_utils.ml",
        "utf8_utils.ml"
      ]
    },
    {
      "signature": "keyword_len",
      "files": [
        "lexer_chars.ml",
        "utf8_utils.ml"
      ]
    },
    {
      "signature": "next_pos",
      "files": [
        "lexer_chars.ml",
        "utf8_utils.ml"
      ]
    },
    {
      "signature": "next_char",
      "files": [
        "lexer_chars.ml",
        "utf8_utils.ml"
      ]
    },
    {
      "signature": "c",
      "files": [
        "lexer.ml",
        "utf8_utils.ml"
      ]
    },
    {
      "signature": "empty_subst",
      "files": [
        "types.ml",
        "core_types.ml"
      ]
    },
    {
      "signature": "method_strs",
      "files": [
        "core_types.ml",
        "core_types.ml"
      ]
    },
    {
      "signature": "free_vars",
      "files": [
        "types.ml",
        "core_types.ml"
      ]
    },
    {
      "signature": "branch_code",
      "files": [
        "c_codegen_control.ml",
        "c_codegen_exceptions.ml"
      ]
    },
    {
      "signature": "expr_code",
      "files": [
        "c_codegen_control.ml",
        "c_codegen_exceptions.ml"
      ]
    },
    {
      "signature": "expr_codes",
      "files": [
        "c_codegen_collections.ml",
        "c_codegen_exceptions.ml"
      ]
    },
    {
      "signature": "parse_poetry_expressionsstate",
      "files": [
        "parser_expressions_basic.ml",
        "parser_expressions_poetry_primary.ml"
      ]
    },
    {
      "signature": "token, _",
      "files": [
        "parser_patterns.ml",
        "parser_expressions_poetry_primary.ml"
      ]
    },
    {
      "signature": "msg",
      "files": [
        "error_conversion.ml",
        "types_errors.ml"
      ]
    },
    {
      "signature": "msg",
      "files": [
        "error_conversion.ml",
        "types_errors.ml"
      ]
    },
    {
      "signature": "msg",
      "files": [
        "error_conversion.ml",
        "types_errors.ml"
      ]
    },
    {
      "signature": "msg",
      "files": [
        "error_conversion.ml",
        "types_errors.ml"
      ]
    },
    {
      "signature": "msg",
      "files": [
        "error_conversion.ml",
        "types_errors.ml"
      ]
    },
    {
      "signature": "msg",
      "files": [
        "error_conversion.ml",
        "types_errors.ml"
      ]
    },
    {
      "signature": "msg",
      "files": [
        "error_conversion.ml",
        "types_errors.ml"
      ]
    },
    {
      "signature": "msg",
      "files": [
        "error_conversion.ml",
        "types_errors.ml"
      ]
    },
    {
      "signature": "msg",
      "files": [
        "error_conversion.ml",
        "types_errors.ml"
      ]
    },
    {
      "signature": "msg",
      "files": [
        "error_conversion.ml",
        "types_errors.ml"
      ]
    },
    {
      "signature": "empty_env",
      "files": [
        "codegen.ml",
        "value_operations.ml"
      ]
    },
    {
      "signature": "bind_varenv var_name value",
      "files": [
        "interpreter_utils.ml",
        "value_operations.ml"
      ]
    },
    {
      "signature": "lookup_varenv name",
      "files": [
        "interpreter_utils.ml",
        "value_operations.ml"
      ]
    },
    {
      "signature": "available_vars",
      "files": [
        "interpreter_utils.ml",
        "value_operations.ml"
      ]
    },
    {
      "signature": "n",
      "files": [
        "builtin_types.ml",
        "value_operations.ml"
      ]
    },
    {
      "signature": "n",
      "files": [
        "builtin_types.ml",
        "value_operations.ml"
      ]
    },
    {
      "signature": "f",
      "files": [
        "builtin_types.ml",
        "value_operations.ml"
      ]
    },
    {
      "signature": "f",
      "files": [
        "builtin_types.ml",
        "value_operations.ml"
      ]
    },
    {
      "signature": "s",
      "files": [
        "builtin_types.ml",
        "value_operations.ml"
      ]
    },
    {
      "signature": "register_constructorsenv type_def",
      "files": [
        "pattern_matcher.ml",
        "value_operations.ml"
      ]
    },
    {
      "signature": "constructor_func",
      "files": [
        "pattern_matcher.ml",
        "value_operations.ml"
      ]
    },
    {
      "signature": "ch, next_pos",
      "files": [
        "lexer_parsers.ml",
        "lexer_chinese_numbers.ml"
      ]
    },
    {
      "signature": "digit",
      "files": [
        "lexer_chinese_numbers.ml",
        "lexer_chinese_numbers.ml"
      ]
    },
    {
      "signature": "input",
      "files": [
        "main.ml",
        "lexer_chinese_numbers.ml"
      ]
    },
    {
      "signature": "length",
      "files": [
        "lexer_utils.ml",
        "lexer_chinese_numbers.ml"
      ]
    },
    {
      "signature": "looppos acc",
      "files": [
        "lexer_parsers.ml",
        "lexer_chinese_numbers.ml"
      ]
    },
    {
      "signature": "ch, next_pos",
      "files": [
        "lexer_parsers.ml",
        "lexer_chinese_numbers.ml"
      ]
    },
    {
      "signature": "sequence, new_pos",
      "files": [
        "lexer_utils.ml",
        "lexer_chinese_numbers.ml"
      ]
    },
    {
      "signature": "new_col",
      "files": [
        "lexer_parsers.ml",
        "lexer_chinese_numbers.ml"
      ]
    },
    {
      "signature": "parts",
      "files": [
        "builtin_string.ml",
        "lexer_chinese_numbers.ml"
      ]
    },
    {
      "signature": "chars",
      "files": [
        "builtin_shared_utils.ml",
        "lexer_chinese_numbers.ml"
      ]
    },
    {
      "signature": "int_val",
      "files": [
        "lexer_utils.ml",
        "lexer_chinese_numbers.ml"
      ]
    },
    {
      "signature": "is_negative",
      "files": [
        "lexer_chinese_numbers.ml",
        "lexer_chinese_numbers.ml"
      ]
    },
    {
      "signature": "int_val",
      "files": [
        "lexer_utils.ml",
        "lexer_chinese_numbers.ml"
      ]
    },
    {
      "signature": "final_val",
      "files": [
        "lexer_chinese_numbers.ml",
        "lexer_chinese_numbers.ml"
      ]
    },
    {
      "signature": "entry",
      "files": [
        "data_loader_cache.ml",
        "data_loader_cache.ml"
      ]
    },
    {
      "signature": "default_options",
      "files": [
        "compiler.ml",
        "compiler_config.ml"
      ]
    },
    {
      "signature": "quiet_options",
      "files": [
        "compiler.ml",
        "compiler_config.ml"
      ]
    },
    {
      "signature": "convert_level",
      "files": [
        "logging_migration.ml",
        "logging_migration.ml"
      ]
    },
    {
      "signature": "error",
      "files": [
        "parser_ancient.ml",
        "logging_migration.ml"
      ]
    },
    {
      "signature": "log_with_contextlevel module_name message context",
      "files": [
        "unified_logger.ml",
        "logging_migration.ml"
      ]
    },
    {
      "signature": "context_str",
      "files": [
        "unified_logger.ml",
        "logging_migration.ml"
      ]
    },
    {
      "signature": "pairs",
      "files": [
        "unified_logger.ml",
        "logging_migration.ml"
      ]
    },
    {
      "signature": "full_message",
      "files": [
        "unified_logger.ml",
        "logging_migration.ml"
      ]
    },
    {
      "signature": "debugf_ctxmodule_name context fmt",
      "files": [
        "unified_logger.ml",
        "logging_migration.ml"
      ]
    },
    {
      "signature": "infof_ctxmodule_name context fmt",
      "files": [
        "unified_logger.ml",
        "logging_migration.ml"
      ]
    },
    {
      "signature": "warningf_ctxmodule_name context fmt",
      "files": [
        "unified_logger.ml",
        "logging_migration.ml"
      ]
    },
    {
      "signature": "errorf_ctxmodule_name context fmt",
      "files": [
        "unified_logger.ml",
        "logging_migration.ml"
      ]
    },
    {
      "signature": "compilation_stats~files_compiled ~total_time ~memory_used",
      "files": [
        "unified_logger.ml",
        "logging_migration.ml"
      ]
    },
    {
      "signature": "cache_stats~hits ~misses ~hit_rate",
      "files": [
        "unified_logger.ml",
        "logging_migration.ml"
      ]
    },
    {
      "signature": "parsing_timefilename time_ms",
      "files": [
        "unified_logger.ml",
        "logging_migration.ml"
      ]
    },
    {
      "signature": "_",
      "files": [
        "main.ml",
        "logging_migration.ml"
      ]
    },
    {
      "signature": "len",
      "files": [
        "c_codegen_context.ml",
        "logging_migration.ml"
      ]
    },
    {
      "signature": "buffer",
      "files": [
        "error_messages_reporting.ml",
        "logging_migration.ml"
      ]
    },
    {
      "signature": "c",
      "files": [
        "lexer.ml",
        "logging_migration.ml"
      ]
    },
    {
      "signature": "c",
      "files": [
        "lexer.ml",
        "refactoring_analyzer_naming.ml"
      ]
    },
    {
      "signature": "suggestions",
      "files": [
        "refactoring_analyzer_core.ml",
        "refactoring_analyzer_naming.ml"
      ]
    },
    {
      "signature": "naming_suggestions",
      "files": [
        "refactoring_analyzer_core.ml",
        "refactoring_analyzer_naming.ml"
      ]
    },
    {
      "signature": "report",
      "files": [
        "refactoring_analyzer_performance.ml",
        "refactoring_analyzer_naming.ml"
      ]
    },
    {
      "signature": "token, _",
      "files": [
        "parser_patterns.ml",
        "parser_expressions_binary.ml"
      ]
    },
    {
      "signature": "state1",
      "files": [
        "parser_statements.ml",
        "parser_expressions_binary.ml"
      ]
    },
    {
      "signature": "expr, state2",
      "files": [
        "parser_expressions_match.ml",
        "parser_expressions_binary.ml"
      ]
    },
    {
      "signature": "state1",
      "files": [
        "parser_statements.ml",
        "parser_expressions_binary.ml"
      ]
    },
    {
      "signature": "expr, state2",
      "files": [
        "parser_expressions_match.ml",
        "parser_expressions_binary.ml"
      ]
    },
    {
      "signature": "token, _",
      "files": [
        "parser_patterns.ml",
        "parser_expressions_binary.ml"
      ]
    },
    {
      "signature": "state1",
      "files": [
        "parser_statements.ml",
        "parser_expressions_binary.ml"
      ]
    },
    {
      "signature": "index_expr, state2",
      "files": [
        "parser_expressions_postfix.ml",
        "parser_expressions_binary.ml"
      ]
    },
    {
      "signature": "state3",
      "files": [
        "parser_statements.ml",
        "parser_expressions_binary.ml"
      ]
    },
    {
      "signature": "compiler_pos",
      "files": [
        "compiler_errors.ml",
        "parser_expressions_binary.ml"
      ]
    },
    {
      "signature": "error_info",
      "files": [
        "compiler_errors_creation.ml",
        "parser_expressions_binary.ml"
      ]
    },
    {
      "signature": "new_expr",
      "files": [
        "parser_expressions_postfix.ml",
        "parser_expressions_binary.ml"
      ]
    },
    {
      "signature": "state1",
      "files": [
        "parser_statements.ml",
        "parser_expressions_binary.ml"
      ]
    },
    {
      "signature": "new_expr",
      "files": [
        "parser_expressions_postfix.ml",
        "parser_expressions_binary.ml"
      ]
    },
    {
      "signature": "expr, state1",
      "files": [
        "parser_statements.ml",
        "parser_expressions_binary.ml"
      ]
    },
    {
      "signature": "is_chinese_char",
      "files": [
        "lexer_utils_refactored.ml",
        "lexer_utils_modular.ml"
      ]
    },
    {
      "signature": "is_letter_or_chinese",
      "files": [
        "lexer_utils_refactored.ml",
        "lexer_utils_modular.ml"
      ]
    },
    {
      "signature": "is_digit",
      "files": [
        "lexer_utils_refactored.ml",
        "lexer_utils_modular.ml"
      ]
    },
    {
      "signature": "is_whitespace",
      "files": [
        "lexer_utils_refactored.ml",
        "lexer_utils_modular.ml"
      ]
    },
    {
      "signature": "is_separator_char",
      "files": [
        "lexer_utils_refactored.ml",
        "lexer_utils_modular.ml"
      ]
    },
    {
      "signature": "is_chinese_utf8",
      "files": [
        "lexer_utils_refactored.ml",
        "lexer_utils_modular.ml"
      ]
    },
    {
      "signature": "next_utf8_char",
      "files": [
        "lexer_utils_refactored.ml",
        "lexer_utils_modular.ml"
      ]
    },
    {
      "signature": "is_chinese_digit_char",
      "files": [
        "lexer_utils_refactored.ml",
        "lexer_utils_modular.ml"
      ]
    },
    {
      "signature": "is_all_digits",
      "files": [
        "lexer_utils_refactored.ml",
        "lexer_utils_modular.ml"
      ]
    },
    {
      "signature": "is_valid_identifier",
      "files": [
        "lexer_utils_refactored.ml",
        "lexer_utils_modular.ml"
      ]
    },
    {
      "signature": "read_string_untilstate start_pos stop_condition",
      "files": [
        "lexer_utils.ml",
        "lexer_utils_modular.ml"
      ]
    },
    {
      "signature": "looppos acc",
      "files": [
        "lexer_parsers.ml",
        "lexer_utils_modular.ml"
      ]
    },
    {
      "signature": "ch, next_pos",
      "files": [
        "lexer_parsers.ml",
        "lexer_utils_modular.ml"
      ]
    },
    {
      "signature": "parse_integerstr",
      "files": [
        "lexer_utils.ml",
        "lexer_utils_modular.ml"
      ]
    },
    {
      "signature": "parse_floatstr",
      "files": [
        "lexer_utils.ml",
        "lexer_utils_modular.ml"
      ]
    },
    {
      "signature": "parse_hex_intstr",
      "files": [
        "lexer_utils.ml",
        "lexer_utils_modular.ml"
      ]
    },
    {
      "signature": "parse_oct_intstr",
      "files": [
        "lexer_utils.ml",
        "lexer_utils_modular.ml"
      ]
    },
    {
      "signature": "parse_bin_intstr",
      "files": [
        "lexer_utils.ml",
        "lexer_utils_modular.ml"
      ]
    },
    {
      "signature": "process_escape_sequencesstr",
      "files": [
        "lexer_utils.ml",
        "lexer_utils_modular.ml"
      ]
    },
    {
      "signature": "len",
      "files": [
        "c_codegen_context.ml",
        "lexer_utils_modular.ml"
      ]
    },
    {
      "signature": "buf",
      "files": [
        "c_codegen_literals.ml",
        "lexer_utils_modular.ml"
      ]
    },
    {
      "signature": "loopi",
      "files": [
        "lexer_utils.ml",
        "lexer_utils_modular.ml"
      ]
    },
    {
      "signature": "read_chinese_number_sequence",
      "files": [
        "lexer_utils_refactored.ml",
        "lexer_utils_modular.ml"
      ]
    },
    {
      "signature": "convert_chinese_number_sequence",
      "files": [
        "lexer_utils_refactored.ml",
        "lexer_utils_modular.ml"
      ]
    },
    {
      "signature": "read_fullwidth_number_sequencestate",
      "files": [
        "lexer_utils.ml",
        "lexer_utils_modular.ml"
      ]
    },
    {
      "signature": "input",
      "files": [
        "main.ml",
        "lexer_utils_modular.ml"
      ]
    },
    {
      "signature": "length",
      "files": [
        "lexer_utils.ml",
        "lexer_utils_modular.ml"
      ]
    },
    {
      "signature": "looppos acc",
      "files": [
        "lexer_parsers.ml",
        "lexer_utils_modular.ml"
      ]
    },
    {
      "signature": "ch, next_pos",
      "files": [
        "lexer_parsers.ml",
        "lexer_utils_modular.ml"
      ]
    },
    {
      "signature": "sequence, new_pos",
      "files": [
        "lexer_utils.ml",
        "lexer_utils_modular.ml"
      ]
    },
    {
      "signature": "new_col",
      "files": [
        "lexer_parsers.ml",
        "lexer_utils_modular.ml"
      ]
    },
    {
      "signature": "convert_fullwidth_number_sequencesequence",
      "files": [
        "lexer_utils.ml",
        "lexer_utils_modular.ml"
      ]
    },
    {
      "signature": "looppos acc",
      "files": [
        "lexer_parsers.ml",
        "lexer_utils_modular.ml"
      ]
    },
    {
      "signature": "ch",
      "files": [
        "lexer_utils.ml",
        "lexer_utils_modular.ml"
      ]
    },
    {
      "signature": "int_val",
      "files": [
        "lexer_utils.ml",
        "lexer_utils_modular.ml"
      ]
    },
    {
      "signature": "is_fullwidth_digit",
      "files": [
        "unicode_constants_new.ml",
        "lexer_utils_modular.ml"
      ]
    },
    {
      "signature": "recognize_chinese_punctuation",
      "files": [
        "lexer_utils_refactored.ml",
        "lexer_utils_modular.ml"
      ]
    },
    {
      "signature": "recognize_pipe_right_bracket",
      "files": [
        "lexer_utils_refactored.ml",
        "lexer_utils_modular.ml"
      ]
    },
    {
      "signature": "convert_token",
      "files": [
        "lexer_keywords.ml",
        "lexer_token_converter.ml"
      ]
    },
    {
      "signature": "analyze_exprexpr",
      "files": [
        "performance_analyzer_data_structures.ml",
        "performance_analyzer_lists.ml"
      ]
    },
    {
      "signature": "func_suggestions",
      "files": [
        "performance_analyzer_data_structures.ml",
        "performance_analyzer_lists.ml"
      ]
    },
    {
      "signature": "args_suggestions",
      "files": [
        "performance_analyzer_data_structures.ml",
        "performance_analyzer_lists.ml"
      ]
    },
    {
      "signature": "matched_suggestions",
      "files": [
        "performance_analyzer_data_structures.ml",
        "performance_analyzer_lists.ml"
      ]
    },
    {
      "signature": "branches_suggestions",
      "files": [
        "performance_analyzer_data_structures.ml",
        "performance_analyzer_lists.ml"
      ]
    },
    {
      "signature": "len1",
      "files": [
        "error_recovery.ml",
        "error_messages_analysis.ml"
      ]
    },
    {
      "signature": "matrix",
      "files": [
        "error_recovery.ml",
        "error_messages_analysis.ml"
      ]
    },
    {
      "signature": "cost",
      "files": [
        "error_recovery.ml",
        "error_messages_analysis.ml"
      ]
    },
    {
      "signature": "sorted",
      "files": [
        "error_recovery.ml",
        "error_messages_analysis.ml"
      ]
    },
    {
      "signature": "suggestions",
      "files": [
        "refactoring_analyzer_core.ml",
        "error_messages_analysis.ml"
      ]
    },
    {
      "signature": "taken lst",
      "files": [
        "function_caller.ml",
        "error_messages_analysis.ml"
      ]
    },
    {
      "signature": "taken lst",
      "files": [
        "function_caller.ml",
        "error_messages_analysis.ml"
      ]
    },
    {
      "signature": "taken lst",
      "files": [
        "function_caller.ml",
        "error_messages_analysis.ml"
      ]
    },
    {
      "signature": "fix_hints",
      "files": [
        "error_messages_analysis.ml",
        "error_messages_analysis.ml"
      ]
    },
    {
      "signature": "suggestions",
      "files": [
        "refactoring_analyzer_core.ml",
        "error_messages_analysis.ml"
      ]
    },
    {
      "signature": "fix_hints",
      "files": [
        "error_messages_analysis.ml",
        "error_messages_analysis.ml"
      ]
    },
    {
      "signature": "suggestions",
      "files": [
        "refactoring_analyzer_core.ml",
        "error_messages_analysis.ml"
      ]
    },
    {
      "signature": "fix_hints",
      "files": [
        "error_messages_analysis.ml",
        "error_messages_analysis.ml"
      ]
    },
    {
      "signature": "actual_count",
      "files": [
        "parser_poetry.ml",
        "error_messages_analysis.ml"
      ]
    },
    {
      "signature": "c",
      "files": [
        "lexer.ml",
        "lexer_state.ml"
      ]
    },
    {
      "signature": "state1",
      "files": [
        "parser_statements.ml",
        "lexer_state.ml"
      ]
    },
    {
      "signature": "state1",
      "files": [
        "parser_statements.ml",
        "lexer_state.ml"
      ]
    },
    {
      "signature": "check_utf8_charstate _byte1 byte2 byte3",
      "files": [
        "lexer_chars.ml",
        "lexer_state.ml"
      ]
    },
    {
      "signature": "state1",
      "files": [
        "parser_statements.ml",
        "lexer_state.ml"
      ]
    },
    {
      "signature": "is_whitespacec",
      "files": [
        "utf8_utils.ml",
        "lexer_state.ml"
      ]
    },
    {
      "signature": "state1",
      "files": [
        "parser_statements.ml",
        "lexer_state.ml"
      ]
    },
    {
      "signature": "state1",
      "files": [
        "parser_statements.ml",
        "lexer_state.ml"
      ]
    },
    {
      "signature": "state2",
      "files": [
        "parser_statements.ml",
        "lexer_state.ml"
      ]
    },
    {
      "signature": "log_info",
      "files": [
        "c_codegen_statements.ml",
        "c_codegen_expressions.ml"
      ]
    },
    {
      "signature": "values",
      "files": [
        "expression_evaluator.ml",
        "expression_evaluator_data.ml"
      ]
    },
    {
      "signature": "values",
      "files": [
        "expression_evaluator.ml",
        "expression_evaluator_data.ml"
      ]
    },
    {
      "signature": "record_val",
      "files": [
        "expression_evaluator_data.ml",
        "expression_evaluator_data.ml"
      ]
    },
    {
      "signature": "array_val",
      "files": [
        "expression_evaluator_data.ml",
        "expression_evaluator_data.ml"
      ]
    },
    {
      "signature": "index_val",
      "files": [
        "expression_evaluator_data.ml",
        "expression_evaluator_data.ml"
      ]
    },
    {
      "signature": "new_value",
      "files": [
        "expression_evaluator.ml",
        "expression_evaluator_data.ml"
      ]
    },
    {
      "signature": "values",
      "files": [
        "expression_evaluator.ml",
        "expression_evaluator_data.ml"
      ]
    },
    {
      "signature": "parse_tailleft_expr state",
      "files": [
        "parser_expressions_utils.ml",
        "parser_expressions_core.ml"
      ]
    },
    {
      "signature": "token, _",
      "files": [
        "parser_patterns.ml",
        "parser_expressions_core.ml"
      ]
    },
    {
      "signature": "state1",
      "files": [
        "parser_statements.ml",
        "parser_expressions_core.ml"
      ]
    },
    {
      "signature": "right_expr, state2",
      "files": [
        "parser_natural_functions.ml",
        "parser_expressions_core.ml"
      ]
    },
    {
      "signature": "new_expr",
      "files": [
        "parser_expressions_postfix.ml",
        "parser_expressions_core.ml"
      ]
    },
    {
      "signature": "expr, state1",
      "files": [
        "parser_statements.ml",
        "parser_expressions_core.ml"
      ]
    },
    {
      "signature": "parse_tailleft_expr state",
      "files": [
        "parser_expressions_utils.ml",
        "parser_expressions_core.ml"
      ]
    },
    {
      "signature": "token, _",
      "files": [
        "parser_patterns.ml",
        "parser_expressions_core.ml"
      ]
    },
    {
      "signature": "state1",
      "files": [
        "parser_statements.ml",
        "parser_expressions_core.ml"
      ]
    },
    {
      "signature": "right_expr, state2",
      "files": [
        "parser_natural_functions.ml",
        "parser_expressions_core.ml"
      ]
    },
    {
      "signature": "new_expr",
      "files": [
        "parser_expressions_postfix.ml",
        "parser_expressions_core.ml"
      ]
    },
    {
      "signature": "expr, state1",
      "files": [
        "parser_statements.ml",
        "parser_expressions_core.ml"
      ]
    },
    {
      "signature": "parse_tailleft_expr state",
      "files": [
        "parser_expressions_utils.ml",
        "parser_expressions_core.ml"
      ]
    },
    {
      "signature": "token, _",
      "files": [
        "parser_patterns.ml",
        "parser_expressions_core.ml"
      ]
    },
    {
      "signature": "state1",
      "files": [
        "parser_statements.ml",
        "parser_expressions_core.ml"
      ]
    },
    {
      "signature": "right_expr, state2",
      "files": [
        "parser_natural_functions.ml",
        "parser_expressions_core.ml"
      ]
    },
    {
      "signature": "new_expr",
      "files": [
        "parser_expressions_postfix.ml",
        "parser_expressions_core.ml"
      ]
    },
    {
      "signature": "expr, state1",
      "files": [
        "parser_statements.ml",
        "parser_expressions_core.ml"
      ]
    },
    {
      "signature": "parse_tailleft_expr state",
      "files": [
        "parser_expressions_utils.ml",
        "parser_expressions_core.ml"
      ]
    },
    {
      "signature": "token, _",
      "files": [
        "parser_patterns.ml",
        "parser_expressions_core.ml"
      ]
    },
    {
      "signature": "state1",
      "files": [
        "parser_statements.ml",
        "parser_expressions_core.ml"
      ]
    },
    {
      "signature": "right_expr, state2",
      "files": [
        "parser_natural_functions.ml",
        "parser_expressions_core.ml"
      ]
    },
    {
      "signature": "new_expr",
      "files": [
        "parser_expressions_postfix.ml",
        "parser_expressions_core.ml"
      ]
    },
    {
      "signature": "expr, state1",
      "files": [
        "parser_statements.ml",
        "parser_expressions_core.ml"
      ]
    },
    {
      "signature": "args_depth",
      "files": [
        "performance_analyzer_recursion.ml",
        "performance_analyzer_recursion.ml"
      ]
    },
    {
      "signature": "args_suggestions",
      "files": [
        "performance_analyzer_data_structures.ml",
        "performance_analyzer_complexity.ml"
      ]
    },
    {
      "signature": "branches_suggestions",
      "files": [
        "performance_analyzer_data_structures.ml",
        "performance_analyzer_complexity.ml"
      ]
    },
    {
      "signature": "_, suggestions",
      "files": [
        "performance_analyzer_complexity.ml",
        "performance_analyzer_complexity.ml"
      ]
    },
    {
      "signature": "_, suggestions",
      "files": [
        "performance_analyzer_complexity.ml",
        "performance_analyzer_complexity.ml"
      ]
    },
    {
      "signature": "undefined_variablevar_name",
      "files": [
        "unified_logger.ml",
        "unified_formatter.ml"
      ]
    },
    {
      "signature": "type_mismatchexpected actual",
      "files": [
        "unified_logger.ml",
        "unified_formatter.ml"
      ]
    },
    {
      "signature": "file_not_foundfilename",
      "files": [
        "unified_logger.ml",
        "unified_formatter.ml"
      ]
    },
    {
      "signature": "compiling_filefilename",
      "files": [
        "unified_logger.ml",
        "unified_formatter.ml"
      ]
    },
    {
      "signature": "function_callfunc_name args",
      "files": [
        "unified_logger.ml",
        "unified_formatter.ml"
      ]
    },
    {
      "signature": "luoyan_callfunc_code arg_count args_code",
      "files": [
        "unified_logger.ml",
        "unified_formatter.ml"
      ]
    },
    {
      "signature": "luoyan_strings",
      "files": [
        "unified_logger.ml",
        "unified_formatter.ml"
      ]
    },
    {
      "signature": "luoyan_inti",
      "files": [
        "unified_logger.ml",
        "unified_formatter.ml"
      ]
    },
    {
      "signature": "luoyan_floatf",
      "files": [
        "unified_logger.ml",
        "unified_formatter.ml"
      ]
    },
    {
      "signature": "luoyan_boolb",
      "files": [
        "unified_logger.ml",
        "unified_formatter.ml"
      ]
    },
    {
      "signature": "debugmodule_name message",
      "files": [
        "unified_logger.ml",
        "unified_formatter.ml"
      ]
    },
    {
      "signature": "infomodule_name message",
      "files": [
        "unified_logger.ml",
        "unified_formatter.ml"
      ]
    },
    {
      "signature": "warningmodule_name message",
      "files": [
        "unified_logger.ml",
        "unified_formatter.ml"
      ]
    },
    {
      "signature": "errormodule_name message",
      "files": [
        "unified_logger.ml",
        "unified_formatter.ml"
      ]
    },
    {
      "signature": "format_positionfilename line column",
      "files": [
        "unified_logger.ml",
        "unified_formatter.ml"
      ]
    },
    {
      "signature": "format_identifiername",
      "files": [
        "string_formatter.ml",
        "unified_formatter.ml"
      ]
    },
    {
      "signature": "format_function_signaturename params",
      "files": [
        "string_formatter.ml",
        "unified_formatter.ml"
      ]
    },
    {
      "signature": "format_type_signaturename type_params",
      "files": [
        "string_formatter.ml",
        "unified_formatter.ml"
      ]
    },
    {
      "signature": "format_module_pathpath",
      "files": [
        "string_formatter.ml",
        "unified_formatter.ml"
      ]
    },
    {
      "signature": "format_listitems separator",
      "files": [
        "string_formatter.ml",
        "unified_formatter.ml"
      ]
    },
    {
      "signature": "format_key_valuekey value",
      "files": [
        "string_formatter.ml",
        "unified_formatter.ml"
      ]
    },
    {
      "signature": "replacements",
      "files": [
        "error_messages_translation.ml",
        "error_messages_translation.ml"
      ]
    },
    {
      "signature": "apply_replacementsmsg replacements",
      "files": [
        "error_messages_translation.ml",
        "error_messages_translation.ml"
      ]
    },
    {
      "signature": "new_msg",
      "files": [
        "error_messages_translation.ml",
        "error_messages_translation.ml"
      ]
    },
    {
      "signature": "len",
      "files": [
        "c_codegen_context.ml",
        "data_loader_parser.ml"
      ]
    },
    {
      "signature": "items",
      "files": [
        "data_loader_parser.ml",
        "data_loader_parser.ml"
      ]
    },
    {
      "signature": "parts",
      "files": [
        "builtin_string.ml",
        "data_loader_parser.ml"
      ]
    },
    {
      "signature": "trimmed",
      "files": [
        "data_loader_parser.ml",
        "data_loader_parser.ml"
      ]
    },
    {
      "signature": "trimmed_len",
      "files": [
        "data_loader_parser.ml",
        "data_loader_parser.ml"
      ]
    },
    {
      "signature": "items",
      "files": [
        "data_loader_parser.ml",
        "data_loader_parser.ml"
      ]
    },
    {
      "signature": "len",
      "files": [
        "c_codegen_context.ml",
        "data_loader_parser.ml"
      ]
    },
    {
      "signature": "len",
      "files": [
        "c_codegen_context.ml",
        "data_loader_parser.ml"
      ]
    },
    {
      "signature": "position",
      "files": [
        "token_utils_core.ml",
        "token_compatibility_core.ml"
      ]
    },
    {
      "signature": "state1",
      "files": [
        "parser_statements.ml",
        "parser_expressions_function.ml"
      ]
    },
    {
      "signature": "token, _",
      "files": [
        "parser_patterns.ml",
        "parser_expressions_function.ml"
      ]
    },
    {
      "signature": "token, _",
      "files": [
        "parser_patterns.ml",
        "parser_expressions_function.ml"
      ]
    },
    {
      "signature": "state1",
      "files": [
        "parser_statements.ml",
        "parser_expressions_function.ml"
      ]
    },
    {
      "signature": "state1",
      "files": [
        "parser_statements.ml",
        "parser_expressions_function.ml"
      ]
    },
    {
      "signature": "token, pos",
      "files": [
        "parser_poetry.ml",
        "parser_expressions_function.ml"
      ]
    },
    {
      "signature": "state1",
      "files": [
        "parser_statements.ml",
        "parser_expressions_function.ml"
      ]
    },
    {
      "signature": "state1",
      "files": [
        "parser_statements.ml",
        "parser_expressions_function.ml"
      ]
    },
    {
      "signature": "expr, state2",
      "files": [
        "parser_expressions_match.ml",
        "parser_expressions_function.ml"
      ]
    },
    {
      "signature": "label_name, state1",
      "files": [
        "parser_expressions_calls.ml",
        "parser_expressions_function.ml"
      ]
    },
    {
      "signature": "token, _",
      "files": [
        "parser_patterns.ml",
        "parser_expressions_function.ml"
      ]
    },
    {
      "signature": "state2",
      "files": [
        "parser_statements.ml",
        "parser_expressions_function.ml"
      ]
    },
    {
      "signature": "token2, _",
      "files": [
        "parser_expressions_postfix.ml",
        "parser_expressions_function.ml"
      ]
    },
    {
      "signature": "state3",
      "files": [
        "parser_statements.ml",
        "parser_expressions_function.ml"
      ]
    },
    {
      "signature": "default_expr, state4",
      "files": [
        "parser_ancient.ml",
        "parser_expressions_function.ml"
      ]
    },
    {
      "signature": "token, _",
      "files": [
        "parser_patterns.ml",
        "parser_expressions_function.ml"
      ]
    },
    {
      "signature": "state2",
      "files": [
        "parser_statements.ml",
        "parser_expressions_function.ml"
      ]
    },
    {
      "signature": "type_expr, state3",
      "files": [
        "parser_types.ml",
        "parser_expressions_function.ml"
      ]
    },
    {
      "signature": "name, state",
      "files": [
        "parser_expressions_arrays.ml",
        "parser_expressions_function.ml"
      ]
    },
    {
      "signature": "parse_natural_arithmetic_continuationexpr _param_name state",
      "files": [
        "parser_expressions_utils.ml",
        "parser_expressions_natural_language.ml"
      ]
    },
    {
      "signature": "token_after, _",
      "files": [
        "parser_expressions_basic.ml",
        "parser_expressions_natural_language.ml"
      ]
    },
    {
      "signature": "state1",
      "files": [
        "parser_statements.ml",
        "parser_expressions_natural_language.ml"
      ]
    },
    {
      "signature": "func_name, state2",
      "files": [
        "parser_expressions_utils.ml",
        "parser_expressions_natural_language.ml"
      ]
    },
    {
      "signature": "state1",
      "files": [
        "parser_statements.ml",
        "parser_expressions_natural_language.ml"
      ]
    },
    {
      "signature": "function_name, state2",
      "files": [
        "parser_natural_functions.ml",
        "parser_expressions_natural_language.ml"
      ]
    },
    {
      "signature": "state3",
      "files": [
        "parser_statements.ml",
        "parser_expressions_natural_language.ml"
      ]
    },
    {
      "signature": "param_name, state4",
      "files": [
        "parser_natural_functions.ml",
        "parser_expressions_natural_language.ml"
      ]
    },
    {
      "signature": "state5",
      "files": [
        "parser_statements.ml",
        "parser_expressions_natural_language.ml"
      ]
    },
    {
      "signature": "state5_clean",
      "files": [
        "parser_expressions_match.ml",
        "parser_expressions_natural_language.ml"
      ]
    },
    {
      "signature": "body_expr, state6",
      "files": [
        "parser_expressions_arrays.ml",
        "parser_expressions_natural_language.ml"
      ]
    },
    {
      "signature": "fun_expr",
      "files": [
        "parser_natural_functions.ml",
        "parser_expressions_natural_language.ml"
      ]
    },
    {
      "signature": "token, _",
      "files": [
        "parser_patterns.ml",
        "parser_expressions_natural_language.ml"
      ]
    },
    {
      "signature": "state1",
      "files": [
        "parser_statements.ml",
        "parser_expressions_natural_language.ml"
      ]
    },
    {
      "signature": "state1",
      "files": [
        "parser_statements.ml",
        "parser_expressions_natural_language.ml"
      ]
    },
    {
      "signature": "param_ref, state2",
      "files": [
        "parser_natural_functions.ml",
        "parser_expressions_natural_language.ml"
      ]
    },
    {
      "signature": "token, _",
      "files": [
        "parser_patterns.ml",
        "parser_expressions_natural_language.ml"
      ]
    },
    {
      "signature": "comparison_op, state3",
      "files": [
        "parser_natural_functions.ml",
        "parser_expressions_natural_language.ml"
      ]
    },
    {
      "signature": "condition_value, state4",
      "files": [
        "parser_natural_functions.ml",
        "parser_expressions_natural_language.ml"
      ]
    },
    {
      "signature": "state5",
      "files": [
        "parser_statements.ml",
        "parser_expressions_natural_language.ml"
      ]
    },
    {
      "signature": "return_value, state6",
      "files": [
        "parser_natural_functions.ml",
        "parser_expressions_natural_language.ml"
      ]
    },
    {
      "signature": "state6_clean",
      "files": [
        "parser_natural_functions.ml",
        "parser_expressions_natural_language.ml"
      ]
    },
    {
      "signature": "token_after, _",
      "files": [
        "parser_expressions_basic.ml",
        "parser_expressions_natural_language.ml"
      ]
    },
    {
      "signature": "state7",
      "files": [
        "parser_ancient.ml",
        "parser_expressions_natural_language.ml"
      ]
    },
    {
      "signature": "condition_expr",
      "files": [
        "parser_natural_functions.ml",
        "parser_expressions_natural_language.ml"
      ]
    },
    {
      "signature": "condition_expr",
      "files": [
        "parser_natural_functions.ml",
        "parser_expressions_natural_language.ml"
      ]
    },
    {
      "signature": "token, _",
      "files": [
        "parser_patterns.ml",
        "parser_expressions_natural_language.ml"
      ]
    },
    {
      "signature": "expr, state1",
      "files": [
        "parser_statements.ml",
        "parser_expressions_natural_language.ml"
      ]
    },
    {
      "signature": "expr, state1",
      "files": [
        "parser_statements.ml",
        "parser_expressions_natural_language.ml"
      ]
    },
    {
      "signature": "literal, state1",
      "files": [
        "parser_expressions_logical.ml",
        "parser_expressions_natural_language.ml"
      ]
    },
    {
      "signature": "left_expr, state1",
      "files": [
        "parser_expressions_basic.ml",
        "parser_expressions_natural_language.ml"
      ]
    },
    {
      "signature": "token, _",
      "files": [
        "parser_patterns.ml",
        "parser_expressions_natural_language.ml"
      ]
    },
    {
      "signature": "state1",
      "files": [
        "parser_statements.ml",
        "parser_expressions_natural_language.ml"
      ]
    },
    {
      "signature": "right_expr, state2",
      "files": [
        "parser_natural_functions.ml",
        "parser_expressions_natural_language.ml"
      ]
    },
    {
      "signature": "new_expr",
      "files": [
        "parser_expressions_postfix.ml",
        "parser_expressions_natural_language.ml"
      ]
    },
    {
      "signature": "state1",
      "files": [
        "parser_statements.ml",
        "parser_expressions_natural_language.ml"
      ]
    },
    {
      "signature": "right_expr, state2",
      "files": [
        "parser_natural_functions.ml",
        "parser_expressions_natural_language.ml"
      ]
    },
    {
      "signature": "new_expr",
      "files": [
        "parser_expressions_postfix.ml",
        "parser_expressions_natural_language.ml"
      ]
    },
    {
      "signature": "state1",
      "files": [
        "parser_statements.ml",
        "parser_expressions_natural_language.ml"
      ]
    },
    {
      "signature": "right_expr, state2",
      "files": [
        "parser_natural_functions.ml",
        "parser_expressions_natural_language.ml"
      ]
    },
    {
      "signature": "new_expr",
      "files": [
        "parser_expressions_postfix.ml",
        "parser_expressions_natural_language.ml"
      ]
    },
    {
      "signature": "state1",
      "files": [
        "parser_statements.ml",
        "parser_expressions_natural_language.ml"
      ]
    },
    {
      "signature": "right_expr, state2",
      "files": [
        "parser_natural_functions.ml",
        "parser_expressions_natural_language.ml"
      ]
    },
    {
      "signature": "new_expr",
      "files": [
        "parser_expressions_postfix.ml",
        "parser_expressions_natural_language.ml"
      ]
    },
    {
      "signature": "token, _",
      "files": [
        "parser_patterns.ml",
        "parser_expressions_natural_language.ml"
      ]
    },
    {
      "signature": "state1",
      "files": [
        "parser_statements.ml",
        "parser_expressions_natural_language.ml"
      ]
    },
    {
      "signature": "state1",
      "files": [
        "parser_statements.ml",
        "parser_expressions_natural_language.ml"
      ]
    },
    {
      "signature": "literal, state1",
      "files": [
        "parser_expressions_logical.ml",
        "parser_expressions_natural_language.ml"
      ]
    },
    {
      "signature": "state1",
      "files": [
        "parser_statements.ml",
        "parser_expressions_natural_language.ml"
      ]
    },
    {
      "signature": "expr, state2",
      "files": [
        "parser_expressions_match.ml",
        "parser_expressions_natural_language.ml"
      ]
    },
    {
      "signature": "state3",
      "files": [
        "parser_statements.ml",
        "parser_expressions_natural_language.ml"
      ]
    },
    {
      "signature": "token_after, _",
      "files": [
        "parser_expressions_basic.ml",
        "parser_expressions_natural_language.ml"
      ]
    },
    {
      "signature": "state2",
      "files": [
        "parser_statements.ml",
        "parser_expressions_natural_language.ml"
      ]
    },
    {
      "signature": "state2",
      "files": [
        "parser_statements.ml",
        "parser_expressions_natural_language.ml"
      ]
    },
    {
      "signature": "minus_one_expr",
      "files": [
        "parser_natural_functions.ml",
        "parser_expressions_natural_language.ml"
      ]
    },
    {
      "signature": "state1",
      "files": [
        "parser_statements.ml",
        "parser_expressions_natural_language.ml"
      ]
    },
    {
      "signature": "state3",
      "files": [
        "parser_statements.ml",
        "parser_expressions_natural_language.ml"
      ]
    },
    {
      "signature": "token_after, _",
      "files": [
        "parser_expressions_basic.ml",
        "parser_expressions_natural_language.ml"
      ]
    },
    {
      "signature": "state1",
      "files": [
        "parser_statements.ml",
        "parser_expressions_natural_language.ml"
      ]
    },
    {
      "signature": "minus_one_expr",
      "files": [
        "parser_natural_functions.ml",
        "parser_expressions_natural_language.ml"
      ]
    },
    {
      "signature": "state1",
      "files": [
        "parser_statements.ml",
        "parser_expressions_natural_language.ml"
      ]
    },
    {
      "signature": "token_after, _",
      "files": [
        "parser_expressions_basic.ml",
        "parser_expressions_natural_language.ml"
      ]
    },
    {
      "signature": "state1",
      "files": [
        "parser_statements.ml",
        "parser_expressions_natural_language.ml"
      ]
    },
    {
      "signature": "right_expr, state2",
      "files": [
        "parser_natural_functions.ml",
        "parser_expressions_natural_language.ml"
      ]
    },
    {
      "signature": "comprehensive_practice_check?(config",
      "files": [
        "chinese_best_practices_backup.ml",
        "chinese_best_practices.ml"
      ]
    },
    {
      "signature": "all_violations",
      "files": [
        "chinese_best_practices_backup.ml",
        "chinese_best_practices.ml"
      ]
    },
    {
      "signature": "filtered_violations",
      "files": [
        "chinese_best_practices_backup.ml",
        "chinese_best_practices.ml"
      ]
    },
    {
      "signature": "generate_practice_reportviolations",
      "files": [
        "chinese_best_practices_backup.ml",
        "chinese_best_practices.ml"
      ]
    },
    {
      "signature": "detect_mixed_language_patterns",
      "files": [
        "chinese_best_practices_backup.ml",
        "chinese_best_practices.ml"
      ]
    },
    {
      "signature": "check_chinese_word_order",
      "files": [
        "chinese_best_practices_backup.ml",
        "chinese_best_practices.ml"
      ]
    },
    {
      "signature": "check_idiomatic_chinese",
      "files": [
        "chinese_best_practices_backup.ml",
        "chinese_best_practices.ml"
      ]
    },
    {
      "signature": "check_style_consistency",
      "files": [
        "chinese_best_practices_backup.ml",
        "chinese_best_practices.ml"
      ]
    },
    {
      "signature": "check_classical_style_appropriateness",
      "files": [
        "chinese_best_practices_backup.ml",
        "chinese_best_practices.ml"
      ]
    },
    {
      "signature": "check_ai_friendly_patterns",
      "files": [
        "chinese_best_practices_backup.ml",
        "chinese_best_practices.ml"
      ]
    },
    {
      "signature": "run_test_suitetest_config",
      "files": [
        "chinese_best_practices_backup.ml",
        "chinese_best_practices.ml"
      ]
    },
    {
      "signature": "violations",
      "files": [
        "chinese_best_practices_backup.ml",
        "chinese_best_practices.ml"
      ]
    },
    {
      "signature": "run_comprehensive_test()",
      "files": [
        "chinese_best_practices_backup.ml",
        "chinese_best_practices.ml"
      ]
    },
    {
      "signature": "test_cases",
      "files": [
        "chinese_best_practices_backup.ml",
        "chinese_best_practices.ml"
      ]
    },
    {
      "signature": "report",
      "files": [
        "refactoring_analyzer_performance.ml",
        "chinese_best_practices.ml"
      ]
    },
    {
      "signature": "print_test_summary()",
      "files": [
        "chinese_best_practices_backup.ml",
        "chinese_best_practices.ml"
      ]
    },
    {
      "signature": "test_items",
      "files": [
        "chinese_best_practices_backup.ml",
        "chinese_best_practices.ml"
      ]
    },
    {
      "signature": "test_chinese_best_practices()",
      "files": [
        "chinese_best_practices_backup.ml",
        "chinese_best_practices.ml"
      ]
    },
    {
      "signature": "runtime_cfg",
      "files": [
        "compiler_errors_formatter.ml",
        "error_handler_formatting.ml"
      ]
    },
    {
      "signature": "base_msg",
      "files": [
        "error_messages_generation.ml",
        "error_handler_formatting.ml"
      ]
    },
    {
      "signature": "runtime_cfg",
      "files": [
        "compiler_errors_formatter.ml",
        "error_handler_formatting.ml"
      ]
    },
    {
      "signature": "color_code",
      "files": [
        "compiler_errors_formatter.ml",
        "error_handler_formatting.ml"
      ]
    },
    {
      "signature": "runtime_cfg",
      "files": [
        "compiler_errors_formatter.ml",
        "error_handler_formatting.ml"
      ]
    },
    {
      "signature": "timestamp",
      "files": [
        "unified_logger.ml",
        "error_handler_formatting.ml"
      ]
    },
    {
      "signature": "oc",
      "files": [
        "builtin_io.ml",
        "error_handler_formatting.ml"
      ]
    },
    {
      "signature": "parse_expressionstate",
      "files": [
        "parser_expressions_main.ml",
        "parser_expressions.ml"
      ]
    },
    {
      "signature": "token, _",
      "files": [
        "parser_patterns.ml",
        "parser_expressions.ml"
      ]
    },
    {
      "signature": "token, pos",
      "files": [
        "parser_poetry.ml",
        "parser_expressions.ml"
      ]
    },
    {
      "signature": "default_position",
      "files": [
        "unified_token_core.ml",
        "constants.ml"
      ]
    },
    {
      "signature": "output_directory()",
      "files": [
        "config.ml",
        "constants.ml"
      ]
    },
    {
      "signature": "temp_directory()",
      "files": [
        "config.ml",
        "constants.ml"
      ]
    },
    {
      "signature": "undefined_variablevar_name",
      "files": [
        "unified_logger.ml",
        "constants.ml"
      ]
    },
    {
      "signature": "module_not_foundmod_name",
      "files": [
        "unified_formatter.ml",
        "constants.ml"
      ]
    },
    {
      "signature": "member_not_foundmod_name member_name",
      "files": [
        "unified_formatter.ml",
        "constants.ml"
      ]
    },
    {
      "signature": "type_mismatchexpected actual",
      "files": [
        "unified_logger.ml",
        "constants.ml"
      ]
    },
    {
      "signature": "unknown_typetype_name",
      "files": [
        "unified_formatter.ml",
        "constants.ml"
      ]
    },
    {
      "signature": "invalid_type_operationop_name",
      "files": [
        "unified_formatter.ml",
        "constants.ml"
      ]
    },
    {
      "signature": "function_not_foundfunc_name",
      "files": [
        "unified_formatter.ml",
        "constants.ml"
      ]
    },
    {
      "signature": "invalid_argument_typeexpected actual",
      "files": [
        "unified_formatter.ml",
        "constants.ml"
      ]
    },
    {
      "signature": "unexpected_tokentoken",
      "files": [
        "unified_formatter.ml",
        "constants.ml"
      ]
    },
    {
      "signature": "expected_tokenexpected actual",
      "files": [
        "unified_formatter.ml",
        "constants.ml"
      ]
    },
    {
      "signature": "syntax_errormessage",
      "files": [
        "unified_formatter.ml",
        "constants.ml"
      ]
    },
    {
      "signature": "invalid_operationoperation",
      "files": [
        "unified_formatter.ml",
        "constants.ml"
      ]
    },
    {
      "signature": "file_not_foundfilename",
      "files": [
        "unified_logger.ml",
        "constants.ml"
      ]
    },
    {
      "signature": "file_read_errorfilename",
      "files": [
        "unified_formatter.ml",
        "constants.ml"
      ]
    },
    {
      "signature": "file_write_errorfilename",
      "files": [
        "unified_formatter.ml",
        "constants.ml"
      ]
    },
    {
      "signature": "config_parse_errormessage",
      "files": [
        "unified_formatter.ml",
        "constants.ml"
      ]
    },
    {
      "signature": "invalid_config_valuekey value",
      "files": [
        "unified_formatter.ml",
        "constants.ml"
      ]
    },
    {
      "signature": "compiling_filefilename",
      "files": [
        "unified_logger.ml",
        "constants.ml"
      ]
    },
    {
      "signature": "percentage_multiplier",
      "files": [
        "constants.ml",
        "constants.ml"
      ]
    },
    {
      "signature": "suggestion",
      "files": [
        "performance_analyzer_complexity.ml",
        "refactoring_analyzer_duplication.ml"
      ]
    },
    {
      "signature": "args_patterns",
      "files": [
        "refactoring_analyzer_duplication.ml",
        "refactoring_analyzer_duplication.ml"
      ]
    },
    {
      "signature": "args_str",
      "files": [
        "refactoring_analyzer_duplication.ml",
        "refactoring_analyzer_duplication.ml"
      ]
    },
    {
      "signature": "suggestions",
      "files": [
        "refactoring_analyzer_core.ml",
        "refactoring_analyzer_duplication.ml"
      ]
    },
    {
      "signature": "pattern",
      "files": [
        "builtin_string.ml",
        "refactoring_analyzer_duplication.ml"
      ]
    },
    {
      "signature": "suggestions",
      "files": [
        "refactoring_analyzer_core.ml",
        "refactoring_analyzer_duplication.ml"
      ]
    },
    {
      "signature": "pattern",
      "files": [
        "builtin_string.ml",
        "refactoring_analyzer_duplication.ml"
      ]
    },
    {
      "signature": "count",
      "files": [
        "refactoring_analyzer_duplication.ml",
        "refactoring_analyzer_duplication.ml"
      ]
    },
    {
      "signature": "suggestion",
      "files": [
        "performance_analyzer_complexity.ml",
        "refactoring_analyzer_duplication.ml"
      ]
    },
    {
      "signature": "suggestions",
      "files": [
        "refactoring_analyzer_core.ml",
        "refactoring_analyzer_duplication.ml"
      ]
    },
    {
      "signature": "pattern",
      "files": [
        "builtin_string.ml",
        "refactoring_analyzer_duplication.ml"
      ]
    },
    {
      "signature": "existing",
      "files": [
        "refactoring_analyzer_duplication.ml",
        "refactoring_analyzer_duplication.ml"
      ]
    },
    {
      "signature": "count",
      "files": [
        "refactoring_analyzer_duplication.ml",
        "refactoring_analyzer_duplication.ml"
      ]
    },
    {
      "signature": "suggestions",
      "files": [
        "refactoring_analyzer_core.ml",
        "refactoring_analyzer_duplication.ml"
      ]
    },
    {
      "signature": "all_suggestions",
      "files": [
        "refactoring_analyzer_performance.ml",
        "refactoring_analyzer_duplication.ml"
      ]
    },
    {
      "signature": "duplication_suggestions",
      "files": [
        "refactoring_analyzer_core.ml",
        "refactoring_analyzer_duplication.ml"
      ]
    },
    {
      "signature": "report",
      "files": [
        "refactoring_analyzer_performance.ml",
        "refactoring_analyzer_duplication.ml"
      ]
    },
    {
      "signature": "basic_keywords",
      "files": [
        "keyword_matcher_tables_basic.ml",
        "keyword_tables.ml"
      ]
    },
    {
      "signature": "semantic_keywords",
      "files": [
        "keyword_matcher_tables_basic.ml",
        "keyword_tables.ml"
      ]
    },
    {
      "signature": "error_recovery_keywords",
      "files": [
        "keyword_matcher_tables_basic.ml",
        "keyword_tables.ml"
      ]
    },
    {
      "signature": "module_keywords",
      "files": [
        "keyword_matcher_tables_basic.ml",
        "keyword_tables.ml"
      ]
    },
    {
      "signature": "ancient_keywords",
      "files": [
        "keyword_matcher_tables_ancient.ml",
        "keyword_tables.ml"
      ]
    },
    {
      "signature": "find_keywordstr",
      "files": [
        "lexer_keywords.ml",
        "keyword_tables.ml"
      ]
    },
    {
      "signature": "all_keywords_list",
      "files": [
        "keyword_tables.ml",
        "keyword_tables.ml"
      ]
    },
    {
      "signature": "reserved_words_list",
      "files": [
        "keyword_tables.ml",
        "keyword_tables.ml"
      ]
    },
    {
      "signature": "type_mismatch_error",
      "files": [
        "error_messages.ml",
        "string_processing_utils.ml"
      ]
    },
    {
      "signature": "undefined_variable_error",
      "files": [
        "error_messages.ml",
        "string_processing_utils.ml"
      ]
    },
    {
      "signature": "code",
      "files": [
        "token_compatibility_literals.ml",
        "data_loader_validator.ml"
      ]
    },
    {
      "signature": "invalid_pairs",
      "files": [
        "data_loader_validator.ml",
        "data_loader_validator.ml"
      ]
    },
    {
      "signature": "log_info, log_error",
      "files": [
        "main.ml",
        "logger_utils.ml"
      ]
    },
    {
      "signature": "log_debug, log_error",
      "files": [
        "codegen.ml",
        "logger_utils.ml"
      ]
    },
    {
      "signature": "log_info",
      "files": [
        "c_codegen_statements.ml",
        "logger_utils.ml"
      ]
    },
    {
      "signature": "init_all_loggersmodule_name",
      "files": [
        "logging_migration.ml",
        "logger_utils.ml"
      ]
    },
    {
      "signature": "init_info_error_loggersmodule_name",
      "files": [
        "logging_migration.ml",
        "logger_utils.ml"
      ]
    },
    {
      "signature": "_, info, _, error",
      "files": [
        "logging_migration.ml",
        "logger_utils.ml"
      ]
    },
    {
      "signature": "init_debug_error_loggersmodule_name",
      "files": [
        "logging_migration.ml",
        "logger_utils.ml"
      ]
    },
    {
      "signature": "debug, _, _, error",
      "files": [
        "logging_migration.ml",
        "logger_utils.ml"
      ]
    },
    {
      "signature": "init_info_warn_error_loggersmodule_name",
      "files": [
        "logging_migration.ml",
        "logger_utils.ml"
      ]
    },
    {
      "signature": "_, info, warn, error",
      "files": [
        "logging_migration.ml",
        "logger_utils.ml"
      ]
    },
    {
      "signature": "init_debug_info_error_loggersmodule_name",
      "files": [
        "logging_migration.ml",
        "logger_utils.ml"
      ]
    },
    {
      "signature": "debug, info, _, error",
      "files": [
        "logging_migration.ml",
        "logger_utils.ml"
      ]
    },
    {
      "signature": "init_debug_info_loggersmodule_name",
      "files": [
        "logging_migration.ml",
        "logger_utils.ml"
      ]
    },
    {
      "signature": "debug, info, _, _",
      "files": [
        "logging_migration.ml",
        "logger_utils.ml"
      ]
    },
    {
      "signature": "init_info_loggermodule_name",
      "files": [
        "logging_migration.ml",
        "logger_utils.ml"
      ]
    },
    {
      "signature": "_, info, _, _",
      "files": [
        "logging_migration.ml",
        "logger_utils.ml"
      ]
    },
    {
      "signature": "init_error_loggermodule_name",
      "files": [
        "logging_migration.ml",
        "logger_utils.ml"
      ]
    },
    {
      "signature": "_, _, _, error",
      "files": [
        "logging_migration.ml",
        "logger_utils.ml"
      ]
    },
    {
      "signature": "init_debug_loggermodule_name",
      "files": [
        "logging_migration.ml",
        "logger_utils.ml"
      ]
    },
    {
      "signature": "debug, _, _, _",
      "files": [
        "logging_migration.ml",
        "logger_utils.ml"
      ]
    },
    {
      "signature": "init_no_loggermodule_name",
      "files": [
        "logging_migration.ml",
        "logger_utils.ml"
      ]
    },
    {
      "signature": "_",
      "files": [
        "main.ml",
        "logger_utils.ml"
      ]
    },
    {
      "signature": "init_module_logger",
      "files": [
        "logging_migration.ml",
        "logger_utils.ml"
      ]
    },
    {
      "signature": "infer_module_namefilename",
      "files": [
        "logging_migration.ml",
        "logger_utils.ml"
      ]
    },
    {
      "signature": "basename",
      "files": [
        "logging_migration.ml",
        "logger_utils.ml"
      ]
    },
    {
      "signature": "name_without_ext",
      "files": [
        "logging_migration.ml",
        "logger_utils.ml"
      ]
    },
    {
      "signature": "capitalized",
      "files": [
        "logging_migration.ml",
        "logger_utils.ml"
      ]
    },
    {
      "signature": "convert_underscoresstr",
      "files": [
        "logging_migration.ml",
        "logger_utils.ml"
      ]
    },
    {
      "signature": "len",
      "files": [
        "c_codegen_context.ml",
        "logger_utils.ml"
      ]
    },
    {
      "signature": "buffer",
      "files": [
        "error_messages_reporting.ml",
        "logger_utils.ml"
      ]
    },
    {
      "signature": "loopi capitalize_next",
      "files": [
        "logging_migration.ml",
        "logger_utils.ml"
      ]
    },
    {
      "signature": "c",
      "files": [
        "lexer.ml",
        "logger_utils.ml"
      ]
    },
    {
      "signature": "smart_initmodule_name",
      "files": [
        "logging_migration.ml",
        "logger_utils.ml"
      ]
    },
    {
      "signature": "_, info, error",
      "files": [
        "logging_migration.ml",
        "logger_utils.ml"
      ]
    },
    {
      "signature": "unified_error_to_string",
      "files": [
        "error_conversion.ml",
        "unified_errors.ml"
      ]
    },
    {
      "signature": "unified_error_to_exception",
      "files": [
        "error_conversion.ml",
        "unified_errors.ml"
      ]
    },
    {
      "signature": "result_to_value",
      "files": [
        "unified_error_utils.ml",
        "unified_errors.ml"
      ]
    },
    {
      "signature": "result_to_unified_result",
      "files": [
        "unified_error_utils.ml",
        "unified_errors.ml"
      ]
    },
    {
      "signature": "cache_hits",
      "files": [
        "data_loader_stats.ml",
        "types_cache.ml"
      ]
    },
    {
      "signature": "cache_misses",
      "files": [
        "data_loader_stats.ml",
        "types_cache.ml"
      ]
    },
    {
      "signature": "result",
      "files": [
        "interpreter.ml",
        "types_cache.ml"
      ]
    },
    {
      "signature": "hash",
      "files": [
        "types_cache.ml",
        "types_cache.ml"
      ]
    },
    {
      "signature": "cache_size()",
      "files": [
        "data_loader_cache.ml",
        "types_cache.ml"
      ]
    },
    {
      "signature": "clear_cache()",
      "files": [
        "data_loader_cache.ml",
        "types_cache.ml"
      ]
    },
    {
      "signature": "get_stats()",
      "files": [
        "data_loader_stats.ml",
        "types_cache.ml"
      ]
    },
    {
      "signature": "reset_stats()",
      "files": [
        "data_loader_stats.ml",
        "types_cache.ml"
      ]
    },
    {
      "signature": "hits, misses",
      "files": [
        "types_cache.ml",
        "types_cache.ml"
      ]
    },
    {
      "signature": "print_stats()",
      "files": [
        "data_loader_stats.ml",
        "types_cache.ml"
      ]
    },
    {
      "signature": "token, _",
      "files": [
        "parser_patterns.ml",
        "parser_expressions_identifiers.ml"
      ]
    },
    {
      "signature": "state1",
      "files": [
        "parser_statements.ml",
        "parser_expressions_identifiers.ml"
      ]
    },
    {
      "signature": "token2, _",
      "files": [
        "parser_expressions_postfix.ml",
        "parser_expressions_identifiers.ml"
      ]
    },
    {
      "signature": "state2",
      "files": [
        "parser_statements.ml",
        "parser_expressions_identifiers.ml"
      ]
    },
    {
      "signature": "token, pos",
      "files": [
        "parser_poetry.ml",
        "parser_expressions_identifiers.ml"
      ]
    },
    {
      "signature": "literal, state1",
      "files": [
        "parser_expressions_logical.ml",
        "parser_expressions_identifiers.ml"
      ]
    },
    {
      "signature": "literal, state1",
      "files": [
        "parser_expressions_logical.ml",
        "parser_expressions_identifiers.ml"
      ]
    },
    {
      "signature": "state1",
      "files": [
        "parser_statements.ml",
        "parser_expressions_identifiers.ml"
      ]
    },
    {
      "signature": "state1",
      "files": [
        "parser_statements.ml",
        "parser_expressions_identifiers.ml"
      ]
    },
    {
      "signature": "state1",
      "files": [
        "parser_statements.ml",
        "parser_expressions_identifiers.ml"
      ]
    },
    {
      "signature": "expr, state2",
      "files": [
        "parser_expressions_match.ml",
        "parser_expressions_identifiers.ml"
      ]
    },
    {
      "signature": "state3",
      "files": [
        "parser_statements.ml",
        "parser_expressions_identifiers.ml"
      ]
    },
    {
      "signature": "collect_argsarg_list state",
      "files": [
        "parser_expressions_calls.ml",
        "parser_expressions_identifiers.ml"
      ]
    },
    {
      "signature": "token, _",
      "files": [
        "parser_patterns.ml",
        "parser_expressions_identifiers.ml"
      ]
    },
    {
      "signature": "arg, state1",
      "files": [
        "parser_expressions_calls.ml",
        "parser_expressions_identifiers.ml"
      ]
    },
    {
      "signature": "label_args, state1",
      "files": [
        "parser_expressions_calls.ml",
        "parser_expressions_identifiers.ml"
      ]
    },
    {
      "signature": "expr",
      "files": [
        "parser_expressions_calls.ml",
        "parser_expressions_identifiers.ml"
      ]
    },
    {
      "signature": "arg_list, state1",
      "files": [
        "parser_expressions_calls.ml",
        "parser_expressions_identifiers.ml"
      ]
    },
    {
      "signature": "expr",
      "files": [
        "parser_expressions_calls.ml",
        "parser_expressions_identifiers.ml"
      ]
    },
    {
      "signature": "token, _",
      "files": [
        "parser_patterns.ml",
        "parser_expressions_identifiers.ml"
      ]
    },
    {
      "signature": "token, _",
      "files": [
        "parser_patterns.ml",
        "parser_expressions_identifiers.ml"
      ]
    },
    {
      "signature": "state1",
      "files": [
        "parser_statements.ml",
        "parser_expressions_identifiers.ml"
      ]
    },
    {
      "signature": "label_arg, state2",
      "files": [
        "parser_expressions_calls.ml",
        "parser_expressions_identifiers.ml"
      ]
    },
    {
      "signature": "label_name, state1",
      "files": [
        "parser_expressions_calls.ml",
        "parser_expressions_identifiers.ml"
      ]
    },
    {
      "signature": "state2",
      "files": [
        "parser_statements.ml",
        "parser_expressions_identifiers.ml"
      ]
    },
    {
      "signature": "arg_expr, state3",
      "files": [
        "parser_expressions_calls.ml",
        "parser_expressions_identifiers.ml"
      ]
    },
    {
      "signature": "arr",
      "files": [
        "builtin_array.ml",
        "parser_utils.ml"
      ]
    },
    {
      "signature": "next_pos",
      "files": [
        "lexer_chars.ml",
        "parser_utils.ml"
      ]
    },
    {
      "signature": "skip_newlinesstate",
      "files": [
        "parser_statements.ml",
        "parser_utils.ml"
      ]
    },
    {
      "signature": "token, _",
      "files": [
        "parser_patterns.ml",
        "parser_utils.ml"
      ]
    },
    {
      "signature": "token, pos",
      "files": [
        "parser_poetry.ml",
        "parser_utils.ml"
      ]
    },
    {
      "signature": "token, _",
      "files": [
        "parser_patterns.ml",
        "parser_utils.ml"
      ]
    },
    {
      "signature": "token, pos",
      "files": [
        "parser_poetry.ml",
        "parser_utils.ml"
      ]
    },
    {
      "signature": "token, pos",
      "files": [
        "parser_poetry.ml",
        "parser_utils.ml"
      ]
    },
    {
      "signature": "token, pos",
      "files": [
        "parser_poetry.ml",
        "parser_utils.ml"
      ]
    },
    {
      "signature": "token, _",
      "files": [
        "parser_patterns.ml",
        "parser_utils.ml"
      ]
    },
    {
      "signature": "token, pos",
      "files": [
        "parser_poetry.ml",
        "parser_utils.ml"
      ]
    },
    {
      "signature": "token, pos",
      "files": [
        "parser_poetry.ml",
        "parser_utils.ml"
      ]
    },
    {
      "signature": "n",
      "files": [
        "builtin_types.ml",
        "parser_utils.ml"
      ]
    },
    {
      "signature": "token, pos",
      "files": [
        "parser_poetry.ml",
        "parser_utils.ml"
      ]
    },
    {
      "signature": "token, pos",
      "files": [
        "parser_poetry.ml",
        "parser_utils.ml"
      ]
    },
    {
      "signature": "log_info, log_error",
      "files": [
        "main.ml",
        "types_infer.ml"
      ]
    },
    {
      "signature": "result",
      "files": [
        "interpreter.ml",
        "types_infer.ml"
      ]
    },
    {
      "signature": "subst2",
      "files": [
        "types_unify.ml",
        "types_infer.ml"
      ]
    },
    {
      "signature": "final_subst",
      "files": [
        "types_infer.ml",
        "types_infer.ml"
      ]
    },
    {
      "signature": "subst2",
      "files": [
        "types_unify.ml",
        "types_infer.ml"
      ]
    },
    {
      "signature": "final_subst",
      "files": [
        "types_infer.ml",
        "types_infer.ml"
      ]
    },
    {
      "signature": "env1",
      "files": [
        "types_infer.ml",
        "types_infer.ml"
      ]
    },
    {
      "signature": "env2",
      "files": [
        "types_infer.ml",
        "types_infer.ml"
      ]
    },
    {
      "signature": "final_subst",
      "files": [
        "types_infer.ml",
        "types_infer.ml"
      ]
    },
    {
      "signature": "typ",
      "files": [
        "types_convert.ml",
        "types_infer.ml"
      ]
    },
    {
      "signature": "typ",
      "files": [
        "types_convert.ml",
        "types_infer.ml"
      ]
    },
    {
      "signature": "subst2",
      "files": [
        "types_unify.ml",
        "types_infer.ml"
      ]
    },
    {
      "signature": "final_subst",
      "files": [
        "types_infer.ml",
        "types_infer.ml"
      ]
    },
    {
      "signature": "expr_subst, expr_type",
      "files": [
        "types_infer.ml",
        "types_infer.ml"
      ]
    },
    {
      "signature": "combined_subst",
      "files": [
        "types_infer.ml",
        "types_infer.ml"
      ]
    },
    {
      "signature": "env",
      "files": [
        "semantic_expressions.ml",
        "types_infer.ml"
      ]
    },
    {
      "signature": "subst, expr_type",
      "files": [
        "types_infer.ml",
        "types_infer.ml"
      ]
    },
    {
      "signature": "final_type",
      "files": [
        "types_infer.ml",
        "types_infer.ml"
      ]
    },
    {
      "signature": "subst, expr_type",
      "files": [
        "types_infer.ml",
        "types_infer.ml"
      ]
    },
    {
      "signature": "final_type",
      "files": [
        "types_infer.ml",
        "types_infer.ml"
      ]
    },
    {
      "signature": "config",
      "files": [
        "interpreter_utils.ml",
        "binary_operations.ml"
      ]
    },
    {
      "signature": "func_name",
      "files": [
        "c_codegen_control.ml",
        "c_codegen_operations.ml"
      ]
    },
    {
      "signature": "expr_code",
      "files": [
        "c_codegen_control.ml",
        "c_codegen_operations.ml"
      ]
    },
    {
      "signature": "validated_lst",
      "files": [
        "numeric_ops.ml",
        "numeric_ops.ml"
      ]
    },
    {
      "signature": "map_basic_keywords",
      "files": [
        "token_compatibility.ml",
        "token_compatibility_keywords.ml"
      ]
    },
    {
      "signature": "map_wenyan_keywords",
      "files": [
        "token_compatibility.ml",
        "token_compatibility_keywords.ml"
      ]
    },
    {
      "signature": "map_classical_keywords",
      "files": [
        "token_compatibility.ml",
        "token_compatibility_keywords.ml"
      ]
    },
    {
      "signature": "map_natural_language_keywords",
      "files": [
        "token_compatibility.ml",
        "token_compatibility_keywords.ml"
      ]
    },
    {
      "signature": "map_type_keywords",
      "files": [
        "token_compatibility.ml",
        "token_compatibility_keywords.ml"
      ]
    },
    {
      "signature": "map_poetry_keywords",
      "files": [
        "token_compatibility.ml",
        "token_compatibility_keywords.ml"
      ]
    },
    {
      "signature": "map_misc_keywords",
      "files": [
        "token_compatibility.ml",
        "token_compatibility_keywords.ml"
      ]
    },
    {
      "signature": "escaped_var",
      "files": [
        "c_codegen_control.ml",
        "c_codegen_patterns.ml"
      ]
    },
    {
      "signature": "log_errorerror",
      "files": [
        "unified_error_utils.ml",
        "data_loader_error.ml"
      ]
    },
    {
      "signature": "error_msg",
      "files": [
        "semantic_statements.ml",
        "data_loader_error.ml"
      ]
    },
    {
      "signature": "new_context",
      "files": [
        "refactoring_analyzer_core.ml",
        "refactoring_analyzer_complexity.ml"
      ]
    },
    {
      "signature": "new_context",
      "files": [
        "refactoring_analyzer_core.ml",
        "refactoring_analyzer_complexity.ml"
      ]
    },
    {
      "signature": "base_complexity",
      "files": [
        "refactoring_analyzer_complexity.ml",
        "refactoring_analyzer_complexity.ml"
      ]
    },
    {
      "signature": "func_depth",
      "files": [
        "performance_analyzer_recursion.ml",
        "refactoring_analyzer_complexity.ml"
      ]
    },
    {
      "signature": "args_depth",
      "files": [
        "performance_analyzer_recursion.ml",
        "refactoring_analyzer_complexity.ml"
      ]
    },
    {
      "signature": "cond_depth",
      "files": [
        "performance_analyzer_recursion.ml",
        "refactoring_analyzer_complexity.ml"
      ]
    },
    {
      "signature": "then_depth",
      "files": [
        "performance_analyzer_recursion.ml",
        "refactoring_analyzer_complexity.ml"
      ]
    },
    {
      "signature": "else_depth",
      "files": [
        "performance_analyzer_recursion.ml",
        "refactoring_analyzer_complexity.ml"
      ]
    },
    {
      "signature": "matched_depth",
      "files": [
        "performance_analyzer_recursion.ml",
        "refactoring_analyzer_complexity.ml"
      ]
    },
    {
      "signature": "branches_depth",
      "files": [
        "performance_analyzer_recursion.ml",
        "refactoring_analyzer_complexity.ml"
      ]
    },
    {
      "signature": "complexity",
      "files": [
        "refactoring_analyzer_complexity.ml",
        "refactoring_analyzer_complexity.ml"
      ]
    },
    {
      "signature": "complexity",
      "files": [
        "refactoring_analyzer_complexity.ml",
        "refactoring_analyzer_complexity.ml"
      ]
    },
    {
      "signature": "suggestions",
      "files": [
        "refactoring_analyzer_core.ml",
        "refactoring_analyzer_complexity.ml"
      ]
    },
    {
      "signature": "complexity_suggestions",
      "files": [
        "refactoring_analyzer_performance.ml",
        "refactoring_analyzer_complexity.ml"
      ]
    },
    {
      "signature": "report",
      "files": [
        "refactoring_analyzer_performance.ml",
        "refactoring_analyzer_complexity.ml"
      ]
    },
    {
      "signature": "chinese_char_start",
      "files": [
        "unicode_constants_new.ml",
        "unicode/unicode_types.ml"
      ]
    },
    {
      "signature": "chinese_char_mid_start",
      "files": [
        "unicode_constants_new.ml",
        "unicode/unicode_types.ml"
      ]
    },
    {
      "signature": "chinese_char_mid_end",
      "files": [
        "unicode_constants_new.ml",
        "unicode/unicode_types.ml"
      ]
    },
    {
      "signature": "chinese_char_threshold",
      "files": [
        "unicode_constants_new.ml",
        "unicode/unicode_types.ml"
      ]
    },
    {
      "signature": "char_definitions",
      "files": [
        "unicode_constants.ml",
        "unicode/unicode_types.ml"
      ]
    },
    {
      "signature": "chinese_char_start",
      "files": [
        "unicode_constants_new.ml",
        "unicode/unicode_compatibility.ml"
      ]
    },
    {
      "signature": "chinese_char_mid_start",
      "files": [
        "unicode_constants_new.ml",
        "unicode/unicode_compatibility.ml"
      ]
    },
    {
      "signature": "chinese_char_mid_end",
      "files": [
        "unicode_constants_new.ml",
        "unicode/unicode_compatibility.ml"
      ]
    },
    {
      "signature": "chinese_char_threshold",
      "files": [
        "unicode_constants_new.ml",
        "unicode/unicode_compatibility.ml"
      ]
    },
    {
      "signature": "chinese_punctuation_prefix",
      "files": [
        "unicode_constants_new.ml",
        "unicode/unicode_compatibility.ml"
      ]
    },
    {
      "signature": "chinese_operator_prefix",
      "files": [
        "unicode_constants_new.ml",
        "unicode/unicode_compatibility.ml"
      ]
    },
    {
      "signature": "arrow_symbol_prefix",
      "files": [
        "unicode_constants_new.ml",
        "unicode/unicode_compatibility.ml"
      ]
    },
    {
      "signature": "fullwidth_prefix",
      "files": [
        "unicode_constants_new.ml",
        "unicode/unicode_compatibility.ml"
      ]
    },
    {
      "signature": "b1, _, _",
      "files": [
        "unicode/unicode_compatibility.ml",
        "unicode/unicode_compatibility.ml"
      ]
    },
    {
      "signature": "_, b2, _",
      "files": [
        "unicode/unicode_compatibility.ml",
        "unicode/unicode_compatibility.ml"
      ]
    },
    {
      "signature": "_, _, b3",
      "files": [
        "unicode/unicode_compatibility.ml",
        "unicode/unicode_compatibility.ml"
      ]
    },
    {
      "signature": "b1, _, _",
      "files": [
        "unicode/unicode_compatibility.ml",
        "unicode/unicode_compatibility.ml"
      ]
    },
    {
      "signature": "_, b2, _",
      "files": [
        "unicode/unicode_compatibility.ml",
        "unicode/unicode_compatibility.ml"
      ]
    },
    {
      "signature": "_, _, b3",
      "files": [
        "unicode/unicode_compatibility.ml",
        "unicode/unicode_compatibility.ml"
      ]
    },
    {
      "signature": "b1, _, _",
      "files": [
        "unicode/unicode_compatibility.ml",
        "unicode/unicode_compatibility.ml"
      ]
    },
    {
      "signature": "_, b2, _",
      "files": [
        "unicode/unicode_compatibility.ml",
        "unicode/unicode_compatibility.ml"
      ]
    },
    {
      "signature": "_, _, b3",
      "files": [
        "unicode/unicode_compatibility.ml",
        "unicode/unicode_compatibility.ml"
      ]
    },
    {
      "signature": "b1, _, _",
      "files": [
        "unicode/unicode_compatibility.ml",
        "unicode/unicode_compatibility.ml"
      ]
    },
    {
      "signature": "_, b2, _",
      "files": [
        "unicode/unicode_compatibility.ml",
        "unicode/unicode_compatibility.ml"
      ]
    },
    {
      "signature": "_, _, b3",
      "files": [
        "unicode/unicode_compatibility.ml",
        "unicode/unicode_compatibility.ml"
      ]
    },
    {
      "signature": "b1, _, _",
      "files": [
        "unicode/unicode_compatibility.ml",
        "unicode/unicode_compatibility.ml"
      ]
    },
    {
      "signature": "_, b2, _",
      "files": [
        "unicode/unicode_compatibility.ml",
        "unicode/unicode_compatibility.ml"
      ]
    },
    {
      "signature": "_, _, b3",
      "files": [
        "unicode/unicode_compatibility.ml",
        "unicode/unicode_compatibility.ml"
      ]
    },
    {
      "signature": "b1, _, _",
      "files": [
        "unicode/unicode_compatibility.ml",
        "unicode/unicode_compatibility.ml"
      ]
    },
    {
      "signature": "_, b2, _",
      "files": [
        "unicode/unicode_compatibility.ml",
        "unicode/unicode_compatibility.ml"
      ]
    },
    {
      "signature": "_, _, b3",
      "files": [
        "unicode/unicode_compatibility.ml",
        "unicode/unicode_compatibility.ml"
      ]
    },
    {
      "signature": "b1, _, _",
      "files": [
        "unicode/unicode_compatibility.ml",
        "unicode/unicode_compatibility.ml"
      ]
    },
    {
      "signature": "_, b2, _",
      "files": [
        "unicode/unicode_compatibility.ml",
        "unicode/unicode_compatibility.ml"
      ]
    },
    {
      "signature": "_, _, b3",
      "files": [
        "unicode/unicode_compatibility.ml",
        "unicode/unicode_compatibility.ml"
      ]
    },
    {
      "signature": "b1, _, _",
      "files": [
        "unicode/unicode_compatibility.ml",
        "unicode/unicode_compatibility.ml"
      ]
    },
    {
      "signature": "_, b2, _",
      "files": [
        "unicode/unicode_compatibility.ml",
        "unicode/unicode_compatibility.ml"
      ]
    },
    {
      "signature": "_, _, b3",
      "files": [
        "unicode/unicode_compatibility.ml",
        "unicode/unicode_compatibility.ml"
      ]
    },
    {
      "signature": "_, _, b3",
      "files": [
        "unicode/unicode_compatibility.ml",
        "unicode/unicode_compatibility.ml"
      ]
    },
    {
      "signature": "_, _, b3",
      "files": [
        "unicode/unicode_compatibility.ml",
        "unicode/unicode_compatibility.ml"
      ]
    },
    {
      "signature": "_, _, b3",
      "files": [
        "unicode/unicode_compatibility.ml",
        "unicode/unicode_compatibility.ml"
      ]
    },
    {
      "signature": "_, _, b3",
      "files": [
        "unicode/unicode_compatibility.ml",
        "unicode/unicode_compatibility.ml"
      ]
    },
    {
      "signature": "_, _, b3",
      "files": [
        "unicode/unicode_compatibility.ml",
        "unicode/unicode_compatibility.ml"
      ]
    },
    {
      "signature": "b1, _, _",
      "files": [
        "unicode/unicode_compatibility.ml",
        "unicode/unicode_compatibility.ml"
      ]
    },
    {
      "signature": "_, b2, _",
      "files": [
        "unicode/unicode_compatibility.ml",
        "unicode/unicode_compatibility.ml"
      ]
    },
    {
      "signature": "_, _, b3",
      "files": [
        "unicode/unicode_compatibility.ml",
        "unicode/unicode_compatibility.ml"
      ]
    },
    {
      "signature": "_, _, b3",
      "files": [
        "unicode/unicode_compatibility.ml",
        "unicode/unicode_compatibility.ml"
      ]
    },
    {
      "signature": "b1, _, _",
      "files": [
        "unicode/unicode_compatibility.ml",
        "unicode/unicode_compatibility.ml"
      ]
    },
    {
      "signature": "_, b2, _",
      "files": [
        "unicode/unicode_compatibility.ml",
        "unicode/unicode_compatibility.ml"
      ]
    },
    {
      "signature": "_, _, b3",
      "files": [
        "unicode/unicode_compatibility.ml",
        "unicode/unicode_compatibility.ml"
      ]
    },
    {
      "signature": "b1, _, _",
      "files": [
        "unicode/unicode_compatibility.ml",
        "unicode/unicode_compatibility.ml"
      ]
    },
    {
      "signature": "_, b2, _",
      "files": [
        "unicode/unicode_compatibility.ml",
        "unicode/unicode_compatibility.ml"
      ]
    },
    {
      "signature": "_, _, b3",
      "files": [
        "unicode/unicode_compatibility.ml",
        "unicode/unicode_compatibility.ml"
      ]
    },
    {
      "signature": "b1, _, _",
      "files": [
        "unicode/unicode_compatibility.ml",
        "unicode/unicode_compatibility.ml"
      ]
    },
    {
      "signature": "_, b2, _",
      "files": [
        "unicode/unicode_compatibility.ml",
        "unicode/unicode_compatibility.ml"
      ]
    },
    {
      "signature": "_, _, b3",
      "files": [
        "unicode/unicode_compatibility.ml",
        "unicode/unicode_compatibility.ml"
      ]
    },
    {
      "signature": "b1, _, _",
      "files": [
        "unicode/unicode_compatibility.ml",
        "unicode/unicode_compatibility.ml"
      ]
    },
    {
      "signature": "_, b2, _",
      "files": [
        "unicode/unicode_compatibility.ml",
        "unicode/unicode_compatibility.ml"
      ]
    },
    {
      "signature": "_, _, b3",
      "files": [
        "unicode/unicode_compatibility.ml",
        "unicode/unicode_compatibility.ml"
      ]
    },
    {
      "signature": "b1, _, _",
      "files": [
        "unicode/unicode_compatibility.ml",
        "unicode/unicode_compatibility.ml"
      ]
    },
    {
      "signature": "_, b2, _",
      "files": [
        "unicode/unicode_compatibility.ml",
        "unicode/unicode_compatibility.ml"
      ]
    },
    {
      "signature": "_, _, b3",
      "files": [
        "unicode/unicode_compatibility.ml",
        "unicode/unicode_compatibility.ml"
      ]
    },
    {
      "signature": "b1, _, _",
      "files": [
        "unicode/unicode_compatibility.ml",
        "unicode/unicode_compatibility.ml"
      ]
    },
    {
      "signature": "_, b2, _",
      "files": [
        "unicode/unicode_compatibility.ml",
        "unicode/unicode_compatibility.ml"
      ]
    },
    {
      "signature": "_, _, b3",
      "files": [
        "unicode/unicode_compatibility.ml",
        "unicode/unicode_compatibility.ml"
      ]
    },
    {
      "signature": "b1, _, _",
      "files": [
        "unicode/unicode_compatibility.ml",
        "unicode/unicode_compatibility.ml"
      ]
    },
    {
      "signature": "_, b2, _",
      "files": [
        "unicode/unicode_compatibility.ml",
        "unicode/unicode_compatibility.ml"
      ]
    },
    {
      "signature": "_, _, b3",
      "files": [
        "unicode/unicode_compatibility.ml",
        "unicode/unicode_compatibility.ml"
      ]
    },
    {
      "signature": "is_chinese_punctuation_prefix",
      "files": [
        "unicode_constants_new.ml",
        "unicode/unicode_compatibility.ml"
      ]
    },
    {
      "signature": "is_chinese_operator_prefix",
      "files": [
        "unicode_constants_new.ml",
        "unicode/unicode_compatibility.ml"
      ]
    },
    {
      "signature": "is_arrow_symbol_prefix",
      "files": [
        "unicode_constants_new.ml",
        "unicode/unicode_compatibility.ml"
      ]
    },
    {
      "signature": "is_fullwidth_prefix",
      "files": [
        "unicode_constants_new.ml",
        "unicode/unicode_compatibility.ml"
      ]
    },
    {
      "signature": "is_fullwidth_digit",
      "files": [
        "unicode_constants_new.ml",
        "unicode/unicode_compatibility.ml"
      ]
    },
    {
      "signature": "get_char_byteschar_name",
      "files": [
        "unicode/unicode_compatibility.ml",
        "unicode/unicode_mapping.ml"
      ]
    },
    {
      "signature": "char_xe3",
      "files": [
        "unicode/unicode_compatibility.ml",
        "unicode/unicode_chars.ml"
      ]
    },
    {
      "signature": "char_x80",
      "files": [
        "unicode/unicode_compatibility.ml",
        "unicode/unicode_chars.ml"
      ]
    },
    {
      "signature": "char_x8e",
      "files": [
        "unicode/unicode_compatibility.ml",
        "unicode/unicode_chars.ml"
      ]
    },
    {
      "signature": "char_x8f",
      "files": [
        "unicode/unicode_compatibility.ml",
        "unicode/unicode_chars.ml"
      ]
    },
    {
      "signature": "char_xef",
      "files": [
        "unicode/unicode_compatibility.ml",
        "unicode/unicode_chars.ml"
      ]
    },
    {
      "signature": "char_xbc",
      "files": [
        "unicode/unicode_compatibility.ml",
        "unicode/unicode_chars.ml"
      ]
    },
    {
      "signature": "char_xbd",
      "files": [
        "unicode/unicode_compatibility.ml",
        "unicode/unicode_chars.ml"
      ]
    },
    {
      "signature": "char_x9c",
      "files": [
        "unicode/unicode_compatibility.ml",
        "unicode/unicode_chars.ml"
      ]
    },
    {
      "signature": "char_xe8",
      "files": [
        "unicode/unicode_compatibility.ml",
        "unicode/unicode_chars.ml"
      ]
    },
    {
      "signature": "char_xb4",
      "files": [
        "unicode/unicode_compatibility.ml",
        "unicode/unicode_chars.ml"
      ]
    },
    {
      "signature": "char_x9f",
      "files": [
        "unicode/unicode_compatibility.ml",
        "unicode/unicode_chars.ml"
      ]
    },
    {
      "signature": "char_xe2",
      "files": [
        "unicode/unicode_compatibility.ml",
        "unicode/unicode_chars.ml"
      ]
    },
    {
      "signature": "red",
      "files": [
        "constants.ml",
        "string_processing/style_formatting.ml"
      ]
    },
    {
      "signature": "green",
      "files": [
        "constants.ml",
        "string_processing/style_formatting.ml"
      ]
    },
    {
      "signature": "yellow",
      "files": [
        "constants.ml",
        "string_processing/style_formatting.ml"
      ]
    },
    {
      "signature": "blue",
      "files": [
        "constants.ml",
        "string_processing/style_formatting.ml"
      ]
    },
    {
      "signature": "bold",
      "files": [
        "constants.ml",
        "string_processing/style_formatting.ml"
      ]
    },
    {
      "signature": "reset",
      "files": [
        "constants.ml",
        "string_processing/style_formatting.ml"
      ]
    },
    {
      "signature": "with_colorcolor_code message",
      "files": [
        "constants.ml",
        "string_processing/style_formatting.ml"
      ]
    },
    {
      "signature": "red_textmessage",
      "files": [
        "constants.ml",
        "string_processing/style_formatting.ml"
      ]
    },
    {
      "signature": "green_textmessage",
      "files": [
        "constants.ml",
        "string_processing/style_formatting.ml"
      ]
    },
    {
      "signature": "yellow_textmessage",
      "files": [
        "constants.ml",
        "string_processing/style_formatting.ml"
      ]
    },
    {
      "signature": "blue_textmessage",
      "files": [
        "constants.ml",
        "string_processing/style_formatting.ml"
      ]
    },
    {
      "signature": "bold_textmessage",
      "files": [
        "constants.ml",
        "string_processing/style_formatting.ml"
      ]
    },
    {
      "signature": "buffer",
      "files": [
        "error_messages_reporting.ml",
        "string_processing/core_string_ops.ml"
      ]
    },
    {
      "signature": "i",
      "files": [
        "parser_patterns.ml",
        "string_processing/core_string_ops.ml"
      ]
    },
    {
      "signature": "len",
      "files": [
        "c_codegen_context.ml",
        "string_processing/core_string_ops.ml"
      ]
    },
    {
      "signature": "skip_to_endpos",
      "files": [
        "string_processing/core_string_ops.ml",
        "string_processing/core_string_ops.ml"
      ]
    },
    {
      "signature": "end_pos",
      "files": [
        "string_processing/core_string_ops.ml",
        "string_processing/core_string_ops.ml"
      ]
    },
    {
      "signature": "c",
      "files": [
        "lexer.ml",
        "string_processing/core_string_ops.ml"
      ]
    },
    {
      "signature": "skip_to_endpos",
      "files": [
        "string_processing/core_string_ops.ml",
        "string_processing/core_string_ops.ml"
      ]
    },
    {
      "signature": "end_pos",
      "files": [
        "string_processing/core_string_ops.ml",
        "string_processing/core_string_ops.ml"
      ]
    },
    {
      "signature": "index",
      "files": [
        "builtin_array.ml",
        "string_processing/core_string_ops.ml"
      ]
    },
    {
      "signature": "index",
      "files": [
        "builtin_array.ml",
        "string_processing/core_string_ops.ml"
      ]
    },
    {
      "signature": "pos_str",
      "files": [
        "compiler_errors_formatter.ml",
        "string_processing/position_formatting.ml"
      ]
    },
    {
      "signature": "function_callfunc_name args",
      "files": [
        "unified_logger.ml",
        "string_processing/c_codegen_formatting.ml"
      ]
    },
    {
      "signature": "args_str",
      "files": [
        "refactoring_analyzer_duplication.ml",
        "string_processing/c_codegen_formatting.ml"
      ]
    },
    {
      "signature": "type_conversiontarget_type expr",
      "files": [
        "unified_formatter.ml",
        "string_processing/c_codegen_formatting.ml"
      ]
    },
    {
      "signature": "type_mismatch_errorexpected_type actual_type",
      "files": [
        "error_messages_generation.ml",
        "string_processing/error_templates.ml"
      ]
    },
    {
      "signature": "file_operation_erroroperation filename",
      "files": [
        "unified_formatter.ml",
        "string_processing/error_templates.ml"
      ]
    },
    {
      "signature": "pattern",
      "files": [
        "builtin_string.ml",
        "poetry/artistic_evaluators.ml"
      ]
    },
    {
      "signature": "base_score",
      "files": [
        "poetry/artistic_evaluators.ml",
        "poetry/artistic_evaluators.ml"
      ]
    },
    {
      "signature": "total_count",
      "files": [
        "refactoring_analyzer_types.ml",
        "poetry/artistic_evaluators.ml"
      ]
    },
    {
      "signature": "left_pattern",
      "files": [
        "refactoring_analyzer_duplication.ml",
        "poetry/artistic_evaluators.ml"
      ]
    },
    {
      "signature": "right_pattern",
      "files": [
        "refactoring_analyzer_duplication.ml",
        "poetry/artistic_evaluators.ml"
      ]
    },
    {
      "signature": "pairs",
      "files": [
        "unified_logger.ml",
        "poetry/artistic_evaluators.ml"
      ]
    },
    {
      "signature": "char_count",
      "files": [
        "parser_poetry.ml",
        "poetry/artistic_evaluators.ml"
      ]
    },
    {
      "signature": "complexity_score",
      "files": [
        "nlf_semantic.ml",
        "poetry/artistic_evaluators.ml"
      ]
    },
    {
      "signature": "char_count",
      "files": [
        "parser_poetry.ml",
        "poetry/artistic_evaluators.ml"
      ]
    },
    {
      "signature": "scores",
      "files": [
        "poetry/poetry_forms_evaluation.ml",
        "poetry/poetry_forms_evaluation.ml"
      ]
    },
    {
      "signature": "total_score",
      "files": [
        "poetry/artistic_evaluators.ml",
        "poetry/poetry_forms_evaluation.ml"
      ]
    },
    {
      "signature": "imagery_score",
      "files": [
        "poetry/artistic_evaluators.ml",
        "poetry/poetry_forms_evaluation.ml"
      ]
    },
    {
      "signature": "elegance_score",
      "files": [
        "poetry/artistic_evaluators.ml",
        "poetry/poetry_forms_evaluation.ml"
      ]
    },
    {
      "signature": "scores",
      "files": [
        "poetry/poetry_forms_evaluation.ml",
        "poetry/poetry_forms_evaluation.ml"
      ]
    },
    {
      "signature": "suggestions",
      "files": [
        "refactoring_analyzer_core.ml",
        "poetry/poetry_forms_evaluation.ml"
      ]
    },
    {
      "signature": "verse_combined",
      "files": [
        "poetry/poetry_forms_evaluation.ml",
        "poetry/poetry_forms_evaluation.ml"
      ]
    },
    {
      "signature": "rhyme_score",
      "files": [
        "poetry/poetry_forms_evaluation.ml",
        "poetry/poetry_forms_evaluation.ml"
      ]
    },
    {
      "signature": "tone_score",
      "files": [
        "poetry/poetry_forms_evaluation.ml",
        "poetry/poetry_forms_evaluation.ml"
      ]
    },
    {
      "signature": "parallelism_score",
      "files": [
        "poetry/poetry_forms_evaluation.ml",
        "poetry/poetry_forms_evaluation.ml"
      ]
    },
    {
      "signature": "imagery_score",
      "files": [
        "poetry/artistic_evaluators.ml",
        "poetry/poetry_forms_evaluation.ml"
      ]
    },
    {
      "signature": "rhythm_score",
      "files": [
        "poetry/poetry_forms_evaluation.ml",
        "poetry/poetry_forms_evaluation.ml"
      ]
    },
    {
      "signature": "elegance_score",
      "files": [
        "poetry/artistic_evaluators.ml",
        "poetry/poetry_forms_evaluation.ml"
      ]
    },
    {
      "signature": "weights",
      "files": [
        "poetry/poetry_forms_evaluation.ml",
        "poetry/poetry_forms_evaluation.ml"
      ]
    },
    {
      "signature": "scores",
      "files": [
        "poetry/poetry_forms_evaluation.ml",
        "poetry/poetry_forms_evaluation.ml"
      ]
    },
    {
      "signature": "overall_grade",
      "files": [
        "poetry/poetry_forms_evaluation.ml",
        "poetry/poetry_forms_evaluation.ml"
      ]
    },
    {
      "signature": "suggestions",
      "files": [
        "refactoring_analyzer_core.ml",
        "poetry/poetry_forms_evaluation.ml"
      ]
    },
    {
      "signature": "rhyme_score",
      "files": [
        "poetry/poetry_forms_evaluation.ml",
        "poetry/poetry_forms_evaluation.ml"
      ]
    },
    {
      "signature": "tone_score",
      "files": [
        "poetry/poetry_forms_evaluation.ml",
        "poetry/poetry_forms_evaluation.ml"
      ]
    },
    {
      "signature": "imagery_score",
      "files": [
        "poetry/artistic_evaluators.ml",
        "poetry/poetry_forms_evaluation.ml"
      ]
    },
    {
      "signature": "rhythm_score",
      "files": [
        "poetry/poetry_forms_evaluation.ml",
        "poetry/poetry_forms_evaluation.ml"
      ]
    },
    {
      "signature": "elegance_score",
      "files": [
        "poetry/artistic_evaluators.ml",
        "poetry/poetry_forms_evaluation.ml"
      ]
    },
    {
      "signature": "scores",
      "files": [
        "poetry/poetry_forms_evaluation.ml",
        "poetry/poetry_forms_evaluation.ml"
      ]
    },
    {
      "signature": "verse_combined",
      "files": [
        "poetry/poetry_forms_evaluation.ml",
        "poetry/poetry_forms_evaluation.ml"
      ]
    },
    {
      "signature": "imagery_score",
      "files": [
        "poetry/artistic_evaluators.ml",
        "poetry/poetry_forms_evaluation.ml"
      ]
    },
    {
      "signature": "rhythm_score",
      "files": [
        "poetry/poetry_forms_evaluation.ml",
        "poetry/poetry_forms_evaluation.ml"
      ]
    },
    {
      "signature": "elegance_score",
      "files": [
        "poetry/artistic_evaluators.ml",
        "poetry/poetry_forms_evaluation.ml"
      ]
    },
    {
      "signature": "overall_grade",
      "files": [
        "poetry/poetry_forms_evaluation.ml",
        "poetry/poetry_forms_evaluation.ml"
      ]
    },
    {
      "signature": "verse_combined",
      "files": [
        "poetry/poetry_forms_evaluation.ml",
        "poetry/poetry_forms_evaluation.ml"
      ]
    },
    {
      "signature": "rhyme_score",
      "files": [
        "poetry/poetry_forms_evaluation.ml",
        "poetry/poetry_forms_evaluation.ml"
      ]
    },
    {
      "signature": "tone_score",
      "files": [
        "poetry/poetry_forms_evaluation.ml",
        "poetry/poetry_forms_evaluation.ml"
      ]
    },
    {
      "signature": "parallelism_score",
      "files": [
        "poetry/poetry_forms_evaluation.ml",
        "poetry/poetry_forms_evaluation.ml"
      ]
    },
    {
      "signature": "imagery_score",
      "files": [
        "poetry/artistic_evaluators.ml",
        "poetry/poetry_forms_evaluation.ml"
      ]
    },
    {
      "signature": "rhythm_score",
      "files": [
        "poetry/poetry_forms_evaluation.ml",
        "poetry/poetry_forms_evaluation.ml"
      ]
    },
    {
      "signature": "elegance_score",
      "files": [
        "poetry/artistic_evaluators.ml",
        "poetry/poetry_forms_evaluation.ml"
      ]
    },
    {
      "signature": "weights",
      "files": [
        "poetry/poetry_forms_evaluation.ml",
        "poetry/poetry_forms_evaluation.ml"
      ]
    },
    {
      "signature": "scores",
      "files": [
        "poetry/poetry_forms_evaluation.ml",
        "poetry/poetry_forms_evaluation.ml"
      ]
    },
    {
      "signature": "overall_grade",
      "files": [
        "poetry/poetry_forms_evaluation.ml",
        "poetry/poetry_forms_evaluation.ml"
      ]
    },
    {
      "signature": "suggestions",
      "files": [
        "refactoring_analyzer_core.ml",
        "poetry/poetry_forms_evaluation.ml"
      ]
    },
    {
      "signature": "base_score",
      "files": [
        "poetry/artistic_evaluators.ml",
        "poetry/artistic_evaluator_form.ml"
      ]
    },
    {
      "signature": "get_dimension()",
      "files": [
        "poetry/artistic_evaluator_form.ml",
        "poetry/artistic_evaluator_form.ml"
      ]
    },
    {
      "signature": "get_description()",
      "files": [
        "poetry/artistic_evaluator_form.ml",
        "poetry/artistic_evaluator_form.ml"
      ]
    },
    {
      "signature": "evaluatecontext",
      "files": [
        "poetry/artistic_evaluator_form.ml",
        "poetry/artistic_evaluator_form.ml"
      ]
    },
    {
      "signature": "char_count",
      "files": [
        "parser_poetry.ml",
        "poetry/artistic_evaluator_form.ml"
      ]
    },
    {
      "signature": "rhythm_score",
      "files": [
        "poetry/poetry_forms_evaluation.ml",
        "poetry/artistic_evaluator_form.ml"
      ]
    },
    {
      "signature": "verse",
      "files": [
        "poetry/poetry_forms_evaluation.ml",
        "poetry/artistic_evaluator_form.ml"
      ]
    },
    {
      "signature": "final_score",
      "files": [
        "poetry/artistic_evaluator_form.ml",
        "poetry/artistic_evaluator_form.ml"
      ]
    },
    {
      "signature": "get_dimension()",
      "files": [
        "poetry/artistic_evaluator_form.ml",
        "poetry/artistic_evaluator_form.ml"
      ]
    },
    {
      "signature": "get_description()",
      "files": [
        "poetry/artistic_evaluator_form.ml",
        "poetry/artistic_evaluator_form.ml"
      ]
    },
    {
      "signature": "evaluatecontext",
      "files": [
        "poetry/artistic_evaluator_form.ml",
        "poetry/artistic_evaluator_form.ml"
      ]
    },
    {
      "signature": "elegance_score",
      "files": [
        "poetry/artistic_evaluators.ml",
        "poetry/artistic_evaluator_form.ml"
      ]
    },
    {
      "signature": "final_score",
      "files": [
        "poetry/artistic_evaluator_form.ml",
        "poetry/artistic_evaluator_form.ml"
      ]
    },
    {
      "signature": "pattern_match",
      "files": [
        "poetry/artistic_evaluators.ml",
        "poetry/poetry_standards.ml"
      ]
    },
    {
      "signature": "suggestions",
      "files": [
        "refactoring_analyzer_core.ml",
        "poetry/artistic_guidance.ml"
      ]
    },
    {
      "signature": "rhyme_score",
      "files": [
        "poetry/poetry_forms_evaluation.ml",
        "poetry/artistic_guidance.ml"
      ]
    },
    {
      "signature": "tone_score",
      "files": [
        "poetry/poetry_forms_evaluation.ml",
        "poetry/artistic_guidance.ml"
      ]
    },
    {
      "signature": "parallelism_score",
      "files": [
        "poetry/poetry_forms_evaluation.ml",
        "poetry/artistic_guidance.ml"
      ]
    },
    {
      "signature": "imagery_score",
      "files": [
        "poetry/artistic_evaluators.ml",
        "poetry/artistic_guidance.ml"
      ]
    },
    {
      "signature": "rhythm_score",
      "files": [
        "poetry/poetry_forms_evaluation.ml",
        "poetry/artistic_guidance.ml"
      ]
    },
    {
      "signature": "elegance_score",
      "files": [
        "poetry/artistic_evaluators.ml",
        "poetry/artistic_guidance.ml"
      ]
    },
    {
      "signature": "scores",
      "files": [
        "poetry/poetry_forms_evaluation.ml",
        "poetry/artistic_guidance.ml"
      ]
    },
    {
      "signature": "overall_grade",
      "files": [
        "poetry/poetry_forms_evaluation.ml",
        "poetry/artistic_guidance.ml"
      ]
    },
    {
      "signature": "suggestions",
      "files": [
        "refactoring_analyzer_core.ml",
        "poetry/artistic_guidance.ml"
      ]
    },
    {
      "signature": "rhyme_score",
      "files": [
        "poetry/poetry_forms_evaluation.ml",
        "poetry/artistic_guidance.ml"
      ]
    },
    {
      "signature": "tone_score",
      "files": [
        "poetry/poetry_forms_evaluation.ml",
        "poetry/artistic_guidance.ml"
      ]
    },
    {
      "signature": "imagery_score",
      "files": [
        "poetry/artistic_evaluators.ml",
        "poetry/artistic_guidance.ml"
      ]
    },
    {
      "signature": "rhythm_score",
      "files": [
        "poetry/poetry_forms_evaluation.ml",
        "poetry/artistic_guidance.ml"
      ]
    },
    {
      "signature": "elegance_score",
      "files": [
        "poetry/artistic_evaluators.ml",
        "poetry/artistic_guidance.ml"
      ]
    },
    {
      "signature": "scores",
      "files": [
        "poetry/poetry_forms_evaluation.ml",
        "poetry/artistic_guidance.ml"
      ]
    },
    {
      "signature": "overall_grade",
      "files": [
        "poetry/poetry_forms_evaluation.ml",
        "poetry/artistic_guidance.ml"
      ]
    },
    {
      "signature": "utf8_to_char_lists",
      "files": [
        "utf8_utils.ml",
        "poetry/rhyme_utils.ml"
      ]
    },
    {
      "signature": "get_last_chars",
      "files": [
        "poetry/artistic_evaluators.ml",
        "poetry/rhyme_utils.ml"
      ]
    },
    {
      "signature": "trim_whitespaces",
      "files": [
        "data_loader_parser.ml",
        "poetry/rhyme_utils.ml"
      ]
    },
    {
      "signature": "is_chinese_char",
      "files": [
        "lexer_utils_refactored.ml",
        "poetry/rhyme_utils.ml"
      ]
    },
    {
      "signature": "rhyme_endings",
      "files": [
        "poetry/rhyme_scoring.ml",
        "poetry/rhyme_scoring.ml"
      ]
    },
    {
      "signature": "rhyme_groups",
      "files": [
        "poetry/rhyme_scoring.ml",
        "poetry/rhyme_scoring.ml"
      ]
    },
    {
      "signature": "unique_groups",
      "files": [
        "poetry/rhyme_scoring.ml",
        "poetry/rhyme_scoring.ml"
      ]
    },
    {
      "signature": "total_verses",
      "files": [
        "poetry/poetry_forms_evaluation.ml",
        "poetry/rhyme_scoring.ml"
      ]
    },
    {
      "signature": "pattern",
      "files": [
        "builtin_string.ml",
        "poetry/rhyme_scoring.ml"
      ]
    },
    {
      "signature": "rhyme_endings",
      "files": [
        "poetry/rhyme_scoring.ml",
        "poetry/rhyme_scoring.ml"
      ]
    },
    {
      "signature": "rhyme_categories",
      "files": [
        "poetry/rhyme_scoring.ml",
        "poetry/rhyme_scoring.ml"
      ]
    },
    {
      "signature": "total",
      "files": [
        "refactoring_analyzer_core.ml",
        "poetry/rhyme_scoring.ml"
      ]
    },
    {
      "signature": "rhyme_endings",
      "files": [
        "poetry/rhyme_scoring.ml",
        "poetry/rhyme_scoring.ml"
      ]
    },
    {
      "signature": "total_verses",
      "files": [
        "poetry/poetry_forms_evaluation.ml",
        "poetry/rhyme_scoring.ml"
      ]
    },
    {
      "signature": "pattern_type",
      "files": [
        "poetry/rhyme_scoring.ml",
        "poetry/rhyme_scoring.ml"
      ]
    },
    {
      "signature": "weights",
      "files": [
        "poetry/poetry_forms_evaluation.ml",
        "poetry/rhyme_scoring.ml"
      ]
    },
    {
      "signature": "scores",
      "files": [
        "poetry/poetry_forms_evaluation.ml",
        "poetry/rhyme_scoring.ml"
      ]
    },
    {
      "signature": "generate_improvement_suggestionsreport",
      "files": [
        "poetry/artistic_guidance.ml",
        "poetry/rhyme_scoring.ml"
      ]
    },
    {
      "signature": "suggestions",
      "files": [
        "refactoring_analyzer_core.ml",
        "poetry/rhyme_scoring.ml"
      ]
    },
    {
      "signature": "chars",
      "files": [
        "builtin_shared_utils.ml",
        "poetry/rhyme_lookup.ml"
      ]
    },
    {
      "signature": "chars",
      "files": [
        "builtin_shared_utils.ml",
        "poetry/rhyme_lookup.ml"
      ]
    },
    {
      "signature": "chars",
      "files": [
        "builtin_shared_utils.ml",
        "poetry/rhyme_lookup.ml"
      ]
    },
    {
      "signature": "chars",
      "files": [
        "builtin_shared_utils.ml",
        "poetry/rhyme_lookup.ml"
      ]
    },
    {
      "signature": "groups",
      "files": [
        "poetry/rhyme_lookup.ml",
        "poetry/rhyme_lookup.ml"
      ]
    },
    {
      "signature": "chars",
      "files": [
        "builtin_shared_utils.ml",
        "poetry/rhyme_lookup.ml"
      ]
    },
    {
      "signature": "categories",
      "files": [
        "poetry/rhyme_lookup.ml",
        "poetry/rhyme_lookup.ml"
      ]
    },
    {
      "signature": "chars",
      "files": [
        "builtin_shared_utils.ml",
        "poetry/rhyme_lookup.ml"
      ]
    },
    {
      "signature": "start_time",
      "files": [
        "logger.ml",
        "poetry/rhyme_lookup.ml"
      ]
    },
    {
      "signature": "end_time",
      "files": [
        "logger.ml",
        "poetry/rhyme_lookup.ml"
      ]
    },
    {
      "signature": "start_time",
      "files": [
        "logger.ml",
        "poetry/rhyme_lookup.ml"
      ]
    },
    {
      "signature": "end_time",
      "files": [
        "logger.ml",
        "poetry/rhyme_lookup.ml"
      ]
    },
    {
      "signature": "get_cache_stats()",
      "files": [
        "types_cache.ml",
        "poetry/rhyme_lookup.ml"
      ]
    },
    {
      "signature": "existing",
      "files": [
        "refactoring_analyzer_duplication.ml",
        "poetry/rhyme_helpers.ml"
      ]
    },
    {
      "signature": "chars",
      "files": [
        "builtin_shared_utils.ml",
        "poetry/rhyme_helpers.ml"
      ]
    },
    {
      "signature": "get_dimension()",
      "files": [
        "poetry/artistic_evaluator_form.ml",
        "poetry/artistic_evaluator_content.ml"
      ]
    },
    {
      "signature": "get_description()",
      "files": [
        "poetry/artistic_evaluator_form.ml",
        "poetry/artistic_evaluator_content.ml"
      ]
    },
    {
      "signature": "evaluatecontext",
      "files": [
        "poetry/artistic_evaluator_form.ml",
        "poetry/artistic_evaluator_content.ml"
      ]
    },
    {
      "signature": "imagery_score",
      "files": [
        "poetry/artistic_evaluators.ml",
        "poetry/artistic_evaluator_content.ml"
      ]
    },
    {
      "signature": "final_score",
      "files": [
        "poetry/artistic_evaluator_form.ml",
        "poetry/artistic_evaluator_content.ml"
      ]
    },
    {
      "signature": "utf8_to_char_lists",
      "files": [
        "utf8_utils.ml",
        "poetry/parallelism_analysis.ml"
      ]
    },
    {
      "signature": "_, word_class",
      "files": [
        "poetry/parallelism_analysis.ml",
        "poetry/parallelism_analysis.ml"
      ]
    },
    {
      "signature": "chars1",
      "files": [
        "poetry/parallelism_analysis.ml",
        "poetry/parallelism_analysis.ml"
      ]
    },
    {
      "signature": "chars2",
      "files": [
        "poetry/parallelism_analysis.ml",
        "poetry/parallelism_analysis.ml"
      ]
    },
    {
      "signature": "char_pairs",
      "files": [
        "poetry/parallelism_analysis.ml",
        "poetry/parallelism_analysis.ml"
      ]
    },
    {
      "signature": "word_class_pairs",
      "files": [
        "poetry/parallelism_analysis.ml",
        "poetry/parallelism_analysis.ml"
      ]
    },
    {
      "signature": "rhyme_pairs",
      "files": [
        "poetry/parallelism_analysis.ml",
        "poetry/parallelism_analysis.ml"
      ]
    },
    {
      "signature": "total_pairs",
      "files": [
        "poetry/parallelism_analysis.ml",
        "poetry/parallelism_analysis.ml"
      ]
    },
    {
      "signature": "perfect_matches",
      "files": [
        "poetry/parallelism_analysis.ml",
        "poetry/parallelism_analysis.ml"
      ]
    },
    {
      "signature": "good_matches",
      "files": [
        "poetry/parallelism_analysis.ml",
        "poetry/parallelism_analysis.ml"
      ]
    },
    {
      "signature": "rhyme_matches",
      "files": [
        "poetry/parallelism_analysis.ml",
        "poetry/parallelism_analysis.ml"
      ]
    },
    {
      "signature": "overall_score",
      "files": [
        "poetry/poetry_forms_evaluation.ml",
        "poetry/parallelism_analysis.ml"
      ]
    },
    {
      "signature": "lines",
      "files": [
        "poetry/rhyme_utils.ml",
        "poetry/parallelism_analysis.ml"
      ]
    },
    {
      "signature": "suggestions",
      "files": [
        "refactoring_analyzer_core.ml",
        "poetry/parallelism_analysis.ml"
      ]
    },
    {
      "signature": "find_rhyme_infochar",
      "files": [
        "poetry/rhyme_api_core.ml",
        "poetry/rhyme_matching.ml"
      ]
    },
    {
      "signature": "char_str",
      "files": [
        "poetry/parallelism_analysis.ml",
        "poetry/rhyme_matching.ml"
      ]
    },
    {
      "signature": "detect_rhyme_categorychar",
      "files": [
        "poetry/rhyme_api_core.ml",
        "poetry/rhyme_matching.ml"
      ]
    },
    {
      "signature": "detect_rhyme_groupchar",
      "files": [
        "poetry/rhyme_api_core.ml",
        "poetry/rhyme_matching.ml"
      ]
    },
    {
      "signature": "group1",
      "files": [
        "poetry/rhyme_api_core.ml",
        "poetry/rhyme_matching.ml"
      ]
    },
    {
      "signature": "group2",
      "files": [
        "poetry/rhyme_api_core.ml",
        "poetry/rhyme_matching.ml"
      ]
    },
    {
      "signature": "candidates",
      "files": [
        "keyword_matcher.ml",
        "poetry/rhyme_matching.ml"
      ]
    },
    {
      "signature": "rhyme_endings",
      "files": [
        "poetry/rhyme_scoring.ml",
        "poetry/rhyme_validation.ml"
      ]
    },
    {
      "signature": "rhyme_groups",
      "files": [
        "poetry/rhyme_scoring.ml",
        "poetry/rhyme_validation.ml"
      ]
    },
    {
      "signature": "rhyme_endings",
      "files": [
        "poetry/rhyme_scoring.ml",
        "poetry/rhyme_validation.ml"
      ]
    },
    {
      "signature": "chars_rhymechar1 char2",
      "files": [
        "poetry/rhyme_matching.ml",
        "poetry/rhyme_validation.ml"
      ]
    },
    {
      "signature": "group1",
      "files": [
        "poetry/rhyme_api_core.ml",
        "poetry/rhyme_validation.ml"
      ]
    },
    {
      "signature": "group2",
      "files": [
        "poetry/rhyme_api_core.ml",
        "poetry/rhyme_validation.ml"
      ]
    },
    {
      "signature": "group1",
      "files": [
        "poetry/rhyme_api_core.ml",
        "poetry/rhyme_validation.ml"
      ]
    },
    {
      "signature": "group2",
      "files": [
        "poetry/rhyme_api_core.ml",
        "poetry/rhyme_validation.ml"
      ]
    },
    {
      "signature": "rhyme_groups",
      "files": [
        "poetry/rhyme_scoring.ml",
        "poetry/rhyme_validation.ml"
      ]
    },
    {
      "signature": "rhyme_groups",
      "files": [
        "poetry/rhyme_scoring.ml",
        "poetry/rhyme_validation.ml"
      ]
    },
    {
      "signature": "evaluate_rhyme_qualityverses",
      "files": [
        "poetry/rhyme_scoring.ml",
        "poetry/rhyme_validation.ml"
      ]
    },
    {
      "signature": "rhyme_categories",
      "files": [
        "poetry/rhyme_scoring.ml",
        "poetry/rhyme_validation.ml"
      ]
    },
    {
      "signature": "unique_groups",
      "files": [
        "poetry/rhyme_scoring.ml",
        "poetry/rhyme_validation.ml"
      ]
    },
    {
      "signature": "unique_categories",
      "files": [
        "poetry/rhyme_scoring.ml",
        "poetry/rhyme_validation.ml"
      ]
    },
    {
      "signature": "group_consistency",
      "files": [
        "poetry/rhyme_scoring.ml",
        "poetry/rhyme_validation.ml"
      ]
    },
    {
      "signature": "category_consistency",
      "files": [
        "poetry/rhyme_scoring.ml",
        "poetry/rhyme_validation.ml"
      ]
    },
    {
      "signature": "char_analysis",
      "files": [
        "poetry/rhyme_validation.ml",
        "poetry/rhyme_validation.ml"
      ]
    },
    {
      "signature": "ping_ratio",
      "files": [
        "poetry/rhyme_scoring.ml",
        "poetry/rhyme_validation.ml"
      ]
    },
    {
      "signature": "verse_count",
      "files": [
        "poetry/rhyme_scoring.ml",
        "poetry/rhyme_validation.ml"
      ]
    },
    {
      "signature": "errors",
      "files": [
        "nlf_semantic.ml",
        "poetry/rhyme_validation.ml"
      ]
    },
    {
      "signature": "rhyme_endings",
      "files": [
        "poetry/rhyme_scoring.ml",
        "poetry/rhyme_validation.ml"
      ]
    },
    {
      "signature": "rhyme_groups",
      "files": [
        "poetry/rhyme_scoring.ml",
        "poetry/rhyme_validation.ml"
      ]
    },
    {
      "signature": "unique_groups",
      "files": [
        "poetry/rhyme_scoring.ml",
        "poetry/rhyme_validation.ml"
      ]
    },
    {
      "signature": "suggestions",
      "files": [
        "refactoring_analyzer_core.ml",
        "poetry/rhyme_validation.ml"
      ]
    },
    {
      "signature": "rhyme_consistency",
      "files": [
        "poetry/rhyme_validation.ml",
        "poetry/rhyme_validation.ml"
      ]
    },
    {
      "signature": "rhyme_quality",
      "files": [
        "poetry/artistic_evaluators.ml",
        "poetry/rhyme_validation.ml"
      ]
    },
    {
      "signature": "avg_tone_balance",
      "files": [
        "poetry/rhyme_validation.ml",
        "poetry/rhyme_validation.ml"
      ]
    },
    {
      "signature": "ic",
      "files": [
        "builtin_io.ml",
        "poetry/rhyme_json_io.ml"
      ]
    },
    {
      "signature": "content",
      "files": [
        "token_compatibility_literals.ml",
        "poetry/rhyme_json_io.ml"
      ]
    },
    {
      "signature": "content",
      "files": [
        "token_compatibility_literals.ml",
        "poetry/rhyme_json_io.ml"
      ]
    },
    {
      "signature": "rhyme_groups",
      "files": [
        "poetry/rhyme_scoring.ml",
        "poetry/rhyme_json_io.ml"
      ]
    },
    {
      "signature": "get_all_rhyme_groups()",
      "files": [
        "poetry/rhyme_lookup.ml",
        "poetry/rhyme_json_access.ml"
      ]
    },
    {
      "signature": "data",
      "files": [
        "poetry/rhyme_json_io.ml",
        "poetry/rhyme_json_access.ml"
      ]
    },
    {
      "signature": "groups",
      "files": [
        "poetry/rhyme_lookup.ml",
        "poetry/rhyme_json_access.ml"
      ]
    },
    {
      "signature": "groups",
      "files": [
        "poetry/rhyme_lookup.ml",
        "poetry/rhyme_json_access.ml"
      ]
    },
    {
      "signature": "_, group_data",
      "files": [
        "poetry/rhyme_json_access.ml",
        "poetry/rhyme_json_access.ml"
      ]
    },
    {
      "signature": "groups",
      "files": [
        "poetry/rhyme_lookup.ml",
        "poetry/rhyme_json_access.ml"
      ]
    },
    {
      "signature": "rhyme_group",
      "files": [
        "poetry/artistic_evaluators.ml",
        "poetry/rhyme_json_access.ml"
      ]
    },
    {
      "signature": "s",
      "files": [
        "builtin_types.ml",
        "poetry/rhyme_json_parser.ml"
      ]
    },
    {
      "signature": "len",
      "files": [
        "c_codegen_context.ml",
        "poetry/rhyme_json_parser.ml"
      ]
    },
    {
      "signature": "s",
      "files": [
        "builtin_types.ml",
        "poetry/rhyme_json_parser.ml"
      ]
    },
    {
      "signature": "s",
      "files": [
        "builtin_types.ml",
        "poetry/rhyme_json_parser.ml"
      ]
    },
    {
      "signature": "parts",
      "files": [
        "builtin_string.ml",
        "poetry/rhyme_json_parser.ml"
      ]
    },
    {
      "signature": "parts",
      "files": [
        "builtin_string.ml",
        "poetry/rhyme_json_parser.ml"
      ]
    },
    {
      "signature": "value",
      "files": [
        "expression_evaluator_control.ml",
        "poetry/rhyme_json_parser.ml"
      ]
    },
    {
      "signature": "trimmed",
      "files": [
        "data_loader_parser.ml",
        "poetry/rhyme_json_parser.ml"
      ]
    },
    {
      "signature": "lines",
      "files": [
        "poetry/rhyme_utils.ml",
        "poetry/rhyme_json_parser.ml"
      ]
    },
    {
      "signature": "state",
      "files": [
        "parser_poetry.ml",
        "poetry/rhyme_json_parser.ml"
      ]
    },
    {
      "signature": "get_dimension()",
      "files": [
        "poetry/artistic_evaluator_form.ml",
        "poetry/artistic_evaluator_sound.ml"
      ]
    },
    {
      "signature": "get_description()",
      "files": [
        "poetry/artistic_evaluator_form.ml",
        "poetry/artistic_evaluator_sound.ml"
      ]
    },
    {
      "signature": "evaluatecontext",
      "files": [
        "poetry/artistic_evaluator_form.ml",
        "poetry/artistic_evaluator_sound.ml"
      ]
    },
    {
      "signature": "base_score",
      "files": [
        "poetry/artistic_evaluators.ml",
        "poetry/artistic_evaluator_sound.ml"
      ]
    },
    {
      "signature": "rhyme_score",
      "files": [
        "poetry/poetry_forms_evaluation.ml",
        "poetry/artistic_evaluator_sound.ml"
      ]
    },
    {
      "signature": "verse",
      "files": [
        "poetry/poetry_forms_evaluation.ml",
        "poetry/artistic_evaluator_sound.ml"
      ]
    },
    {
      "signature": "final_score",
      "files": [
        "poetry/artistic_evaluator_form.ml",
        "poetry/artistic_evaluator_sound.ml"
      ]
    },
    {
      "signature": "get_dimension()",
      "files": [
        "poetry/artistic_evaluator_form.ml",
        "poetry/artistic_evaluator_sound.ml"
      ]
    },
    {
      "signature": "get_description()",
      "files": [
        "poetry/artistic_evaluator_form.ml",
        "poetry/artistic_evaluator_sound.ml"
      ]
    },
    {
      "signature": "evaluatecontext",
      "files": [
        "poetry/artistic_evaluator_form.ml",
        "poetry/artistic_evaluator_sound.ml"
      ]
    },
    {
      "signature": "total_chars",
      "files": [
        "poetry/rhyme_json_access.ml",
        "poetry/artistic_evaluator_sound.ml"
      ]
    },
    {
      "signature": "final_score",
      "files": [
        "poetry/artistic_evaluator_form.ml",
        "poetry/artistic_evaluator_sound.ml"
      ]
    },
    {
      "signature": "weights",
      "files": [
        "poetry/poetry_forms_evaluation.ml",
        "poetry/artistic_evaluator_comprehensive.ml"
      ]
    },
    {
      "signature": "weighted_sum",
      "files": [
        "poetry/rhyme_scoring.ml",
        "poetry/artistic_evaluator_comprehensive.ml"
      ]
    },
    {
      "signature": "overall_score",
      "files": [
        "poetry/poetry_forms_evaluation.ml",
        "poetry/artistic_evaluator_comprehensive.ml"
      ]
    },
    {
      "signature": "grade",
      "files": [
        "poetry/rhyme_scoring.ml",
        "poetry/artistic_evaluator_comprehensive.ml"
      ]
    },
    {
      "signature": "char_count",
      "files": [
        "parser_poetry.ml",
        "poetry/artistic_evaluator_context.ml"
      ]
    },
    {
      "signature": "grade_to_string",
      "files": [
        "poetry/rhyme_scoring.ml",
        "poetry/artistic_types.ml"
      ]
    },
    {
      "signature": "scores",
      "files": [
        "poetry/poetry_forms_evaluation.ml",
        "poetry/artistic_types.ml"
      ]
    },
    {
      "signature": "total",
      "files": [
        "refactoring_analyzer_core.ml",
        "poetry/artistic_types.ml"
      ]
    },
    {
      "signature": "overall_score",
      "files": [
        "poetry/poetry_forms_evaluation.ml",
        "poetry/artistic_types.ml"
      ]
    },
    {
      "signature": "grade",
      "files": [
        "poetry/rhyme_scoring.ml",
        "poetry/artistic_types.ml"
      ]
    },
    {
      "signature": "weighted_sum",
      "files": [
        "poetry/rhyme_scoring.ml",
        "poetry/artistic_types.ml"
      ]
    },
    {
      "signature": "scores",
      "files": [
        "poetry/poetry_forms_evaluation.ml",
        "poetry/artistic_types.ml"
      ]
    },
    {
      "signature": "suggestions",
      "files": [
        "refactoring_analyzer_core.ml",
        "poetry/artistic_soul_evaluation.ml"
      ]
    },
    {
      "signature": "base_score",
      "files": [
        "poetry/artistic_evaluators.ml",
        "poetry/artistic_soul_evaluation.ml"
      ]
    },
    {
      "signature": "rhythm_score",
      "files": [
        "poetry/poetry_forms_evaluation.ml",
        "poetry/artistic_soul_evaluation.ml"
      ]
    },
    {
      "signature": "elegance_score",
      "files": [
        "poetry/artistic_evaluators.ml",
        "poetry/artistic_soul_evaluation.ml"
      ]
    },
    {
      "signature": "imagery_score",
      "files": [
        "poetry/artistic_evaluators.ml",
        "poetry/artistic_soul_evaluation.ml"
      ]
    },
    {
      "signature": "harmony_score",
      "files": [
        "poetry/rhyme_scoring.ml",
        "poetry/artistic_soul_evaluation.ml"
      ]
    },
    {
      "signature": "total_score",
      "files": [
        "poetry/artistic_evaluators.ml",
        "poetry/artistic_soul_evaluation.ml"
      ]
    },
    {
      "signature": "average_score",
      "files": [
        "poetry/artistic_evaluators.ml",
        "poetry/artistic_soul_evaluation.ml"
      ]
    },
    {
      "signature": "get_cache_stats()",
      "files": [
        "types_cache.ml",
        "poetry/rhyme_cache.ml"
      ]
    },
    {
      "signature": "clear_cache()",
      "files": [
        "data_loader_cache.ml",
        "poetry/rhyme_cache.ml"
      ]
    },
    {
      "signature": "get_all_rhyme_groups()",
      "files": [
        "poetry/rhyme_lookup.ml",
        "poetry/rhyme_cache.ml"
      ]
    },
    {
      "signature": "utf8_to_char_lists",
      "files": [
        "utf8_utils.ml",
        "poetry/rhyme_pattern.ml"
      ]
    },
    {
      "signature": "auxacc i",
      "files": [
        "utf8_utils.ml",
        "poetry/rhyme_pattern.ml"
      ]
    },
    {
      "signature": "chars",
      "files": [
        "builtin_shared_utils.ml",
        "poetry/rhyme_pattern.ml"
      ]
    },
    {
      "signature": "validate_rhyme_consistencyverses",
      "files": [
        "poetry/rhyme_validation.ml",
        "poetry/rhyme_pattern.ml"
      ]
    },
    {
      "signature": "rhyme_endings",
      "files": [
        "poetry/rhyme_scoring.ml",
        "poetry/rhyme_pattern.ml"
      ]
    },
    {
      "signature": "rhyme_groups",
      "files": [
        "poetry/rhyme_scoring.ml",
        "poetry/rhyme_pattern.ml"
      ]
    },
    {
      "signature": "validate_rhyme_schemeverses rhyme_pattern",
      "files": [
        "poetry/rhyme_validation.ml",
        "poetry/rhyme_pattern.ml"
      ]
    },
    {
      "signature": "rhyme_endings",
      "files": [
        "poetry/rhyme_scoring.ml",
        "poetry/rhyme_pattern.ml"
      ]
    },
    {
      "signature": "rhyme_groups",
      "files": [
        "poetry/rhyme_scoring.ml",
        "poetry/rhyme_pattern.ml"
      ]
    },
    {
      "signature": "check_patterngroups pattern",
      "files": [
        "poetry/rhyme_validation.ml",
        "poetry/rhyme_pattern.ml"
      ]
    },
    {
      "signature": "same_rhyme",
      "files": [
        "poetry/rhyme_validation.ml",
        "poetry/rhyme_pattern.ml"
      ]
    },
    {
      "signature": "chars",
      "files": [
        "builtin_shared_utils.ml",
        "poetry/rhyme_pattern.ml"
      ]
    },
    {
      "signature": "char",
      "files": [
        "poetry/rhyme_json_parser.ml",
        "poetry/rhyme_pattern.ml"
      ]
    },
    {
      "signature": "rhyme_group",
      "files": [
        "poetry/artistic_evaluators.ml",
        "poetry/rhyme_pattern.ml"
      ]
    },
    {
      "signature": "rhyme_category",
      "files": [
        "poetry/rhyme_json_access.ml",
        "poetry/rhyme_pattern.ml"
      ]
    },
    {
      "signature": "chars",
      "files": [
        "builtin_shared_utils.ml",
        "poetry/rhyme_pattern.ml"
      ]
    },
    {
      "signature": "char_analysis",
      "files": [
        "poetry/rhyme_validation.ml",
        "poetry/rhyme_pattern.ml"
      ]
    },
    {
      "signature": "char",
      "files": [
        "poetry/rhyme_json_parser.ml",
        "poetry/rhyme_pattern.ml"
      ]
    },
    {
      "signature": "rhyme_groups",
      "files": [
        "poetry/rhyme_scoring.ml",
        "poetry/rhyme_pattern.ml"
      ]
    },
    {
      "signature": "rhyme_categories",
      "files": [
        "poetry/rhyme_scoring.ml",
        "poetry/rhyme_pattern.ml"
      ]
    },
    {
      "signature": "rhyme_quality",
      "files": [
        "poetry/artistic_evaluators.ml",
        "poetry/rhyme_pattern.ml"
      ]
    },
    {
      "signature": "rhyme_consistency",
      "files": [
        "poetry/rhyme_validation.ml",
        "poetry/rhyme_pattern.ml"
      ]
    },
    {
      "signature": "report",
      "files": [
        "refactoring_analyzer_performance.ml",
        "poetry/rhyme_pattern.ml"
      ]
    },
    {
      "signature": "suggestions",
      "files": [
        "refactoring_analyzer_core.ml",
        "poetry/rhyme_pattern.ml"
      ]
    },
    {
      "signature": "taken lst",
      "files": [
        "function_caller.ml",
        "poetry/rhyme_pattern.ml"
      ]
    },
    {
      "signature": "rhyme_endings",
      "files": [
        "poetry/rhyme_scoring.ml",
        "poetry/rhyme_pattern.ml"
      ]
    },
    {
      "signature": "rhyme_groups",
      "files": [
        "poetry/rhyme_scoring.ml",
        "poetry/rhyme_pattern.ml"
      ]
    },
    {
      "signature": "detected_pattern",
      "files": [
        "poetry/rhyme_pattern.ml",
        "poetry/rhyme_pattern.ml"
      ]
    },
    {
      "signature": "ic",
      "files": [
        "builtin_io.ml",
        "poetry/unified_rhyme_data.ml"
      ]
    },
    {
      "signature": "_",
      "files": [
        "main.ml",
        "poetry/unified_rhyme_data.ml"
      ]
    },
    {
      "signature": "data",
      "files": [
        "poetry/rhyme_json_io.ml",
        "poetry/unified_rhyme_data.ml"
      ]
    },
    {
      "signature": "data",
      "files": [
        "poetry/rhyme_json_io.ml",
        "poetry/unified_rhyme_data.ml"
      ]
    },
    {
      "signature": "data",
      "files": [
        "poetry/rhyme_json_io.ml",
        "poetry/unified_rhyme_data.ml"
      ]
    },
    {
      "signature": "get_all_rhyme_groups()",
      "files": [
        "poetry/rhyme_lookup.ml",
        "poetry/unified_rhyme_data.ml"
      ]
    },
    {
      "signature": "data",
      "files": [
        "poetry/rhyme_json_io.ml",
        "poetry/unified_rhyme_data.ml"
      ]
    },
    {
      "signature": "data",
      "files": [
        "poetry/rhyme_json_io.ml",
        "poetry/unified_rhyme_data.ml"
      ]
    },
    {
      "signature": "total_chars",
      "files": [
        "poetry/rhyme_json_access.ml",
        "poetry/unified_rhyme_data.ml"
      ]
    },
    {
      "signature": "total_groups",
      "files": [
        "poetry/rhyme_json_access.ml",
        "poetry/unified_rhyme_data.ml"
      ]
    },
    {
      "signature": "utf8_to_char_lists",
      "files": [
        "utf8_utils.ml",
        "poetry/rhyme_analysis.ml"
      ]
    },
    {
      "signature": "auxacc i",
      "files": [
        "utf8_utils.ml",
        "poetry/rhyme_analysis.ml"
      ]
    },
    {
      "signature": "generate_rhyme_reportverse",
      "files": [
        "poetry/rhyme_pattern.ml",
        "poetry/rhyme_analysis.ml"
      ]
    },
    {
      "signature": "rhyme_ending",
      "files": [
        "poetry/rhyme_pattern.ml",
        "poetry/rhyme_analysis.ml"
      ]
    },
    {
      "signature": "rhyme_group",
      "files": [
        "poetry/artistic_evaluators.ml",
        "poetry/rhyme_analysis.ml"
      ]
    },
    {
      "signature": "rhyme_category",
      "files": [
        "poetry/rhyme_json_access.ml",
        "poetry/rhyme_analysis.ml"
      ]
    },
    {
      "signature": "chars",
      "files": [
        "builtin_shared_utils.ml",
        "poetry/rhyme_analysis.ml"
      ]
    },
    {
      "signature": "char_analysis",
      "files": [
        "poetry/rhyme_validation.ml",
        "poetry/rhyme_analysis.ml"
      ]
    },
    {
      "signature": "char",
      "files": [
        "poetry/rhyme_json_parser.ml",
        "poetry/rhyme_analysis.ml"
      ]
    },
    {
      "signature": "analyze_poem_rhymeverses",
      "files": [
        "poetry/rhyme_pattern.ml",
        "poetry/rhyme_analysis.ml"
      ]
    },
    {
      "signature": "verse_reports",
      "files": [
        "poetry/rhyme_pattern.ml",
        "poetry/rhyme_analysis.ml"
      ]
    },
    {
      "signature": "rhyme_groups",
      "files": [
        "poetry/rhyme_scoring.ml",
        "poetry/rhyme_analysis.ml"
      ]
    },
    {
      "signature": "rhyme_categories",
      "files": [
        "poetry/rhyme_scoring.ml",
        "poetry/rhyme_analysis.ml"
      ]
    },
    {
      "signature": "rhyme_quality",
      "files": [
        "poetry/artistic_evaluators.ml",
        "poetry/rhyme_analysis.ml"
      ]
    },
    {
      "signature": "rhyme_consistency",
      "files": [
        "poetry/rhyme_validation.ml",
        "poetry/rhyme_analysis.ml"
      ]
    },
    {
      "signature": "common_patterns",
      "files": [
        "poetry/rhyme_pattern.ml",
        "poetry/rhyme_analysis.ml"
      ]
    },
    {
      "signature": "grade_to_string",
      "files": [
        "poetry/rhyme_scoring.ml",
        "poetry/rhyme_analysis.ml"
      ]
    },
    {
      "signature": "quick_quality_check",
      "files": [
        "refactoring_analyzer.ml",
        "poetry/rhyme_analysis.ml"
      ]
    },
    {
      "signature": "suggestions",
      "files": [
        "refactoring_analyzer_core.ml",
        "poetry/rhyme_analysis.ml"
      ]
    },
    {
      "signature": "grade",
      "files": [
        "poetry/rhyme_scoring.ml",
        "poetry/rhyme_analysis.ml"
      ]
    },
    {
      "signature": "grade_str",
      "files": [
        "poetry/rhyme_scoring.ml",
        "poetry/rhyme_analysis.ml"
      ]
    },
    {
      "signature": "base_suggestions",
      "files": [
        "error_messages_analysis.ml",
        "poetry/rhyme_analysis.ml"
      ]
    },
    {
      "signature": "rhyme_groups",
      "files": [
        "poetry/rhyme_scoring.ml",
        "poetry/rhyme_analysis.ml"
      ]
    },
    {
      "signature": "pattern_type",
      "files": [
        "poetry/rhyme_scoring.ml",
        "poetry/rhyme_analysis.ml"
      ]
    },
    {
      "signature": "suggestions",
      "files": [
        "refactoring_analyzer_core.ml",
        "poetry/rhyme_analysis.ml"
      ]
    },
    {
      "signature": "analysis",
      "files": [
        "poetry/rhyme_analysis.ml",
        "poetry/rhyme_analysis.ml"
      ]
    },
    {
      "signature": "report",
      "files": [
        "refactoring_analyzer_performance.ml",
        "poetry/rhyme_analysis.ml"
      ]
    },
    {
      "signature": "char_str",
      "files": [
        "poetry/parallelism_analysis.ml",
        "poetry/tone_pattern.ml"
      ]
    },
    {
      "signature": "tone",
      "files": [
        "poetry/tone_pattern.ml",
        "poetry/tone_pattern.ml"
      ]
    },
    {
      "signature": "chars",
      "files": [
        "builtin_shared_utils.ml",
        "poetry/tone_pattern.ml"
      ]
    },
    {
      "signature": "chars",
      "files": [
        "builtin_shared_utils.ml",
        "poetry/tone_pattern.ml"
      ]
    },
    {
      "signature": "actual_pattern",
      "files": [
        "poetry/rhyme_validation.ml",
        "poetry/tone_pattern.ml"
      ]
    },
    {
      "signature": "char_count",
      "files": [
        "parser_poetry.ml",
        "poetry/tone_pattern.ml"
      ]
    },
    {
      "signature": "expected_count",
      "files": [
        "error_messages_analysis.ml",
        "poetry/tone_pattern.ml"
      ]
    },
    {
      "signature": "tone_sequence",
      "files": [
        "poetry/artistic_evaluators.ml",
        "poetry/tone_pattern.ml"
      ]
    },
    {
      "signature": "pattern_match",
      "files": [
        "poetry/artistic_evaluators.ml",
        "poetry/tone_pattern.ml"
      ]
    },
    {
      "signature": "suggestions",
      "files": [
        "refactoring_analyzer_core.ml",
        "poetry/tone_pattern.ml"
      ]
    },
    {
      "signature": "actual_pattern",
      "files": [
        "poetry/rhyme_validation.ml",
        "poetry/tone_pattern.ml"
      ]
    },
    {
      "signature": "chars",
      "files": [
        "builtin_shared_utils.ml",
        "poetry/tone_pattern.ml"
      ]
    },
    {
      "signature": "suggestions",
      "files": [
        "refactoring_analyzer_core.ml",
        "poetry/tone_pattern.ml"
      ]
    },
    {
      "signature": "candidates",
      "files": [
        "keyword_matcher.ml",
        "poetry/tone_pattern.ml"
      ]
    },
    {
      "signature": "taken lst",
      "files": [
        "function_caller.ml",
        "poetry/tone_pattern.ml"
      ]
    },
    {
      "signature": "evaluate_rhyme_harmony",
      "files": [
        "poetry/rhyme_analysis.ml",
        "poetry/artistic_evaluation.ml"
      ]
    },
    {
      "signature": "generate_improvement_suggestions",
      "files": [
        "poetry/rhyme_analysis.ml",
        "poetry/artistic_evaluation.ml"
      ]
    },
    {
      "signature": "find_rhyme_infochar",
      "files": [
        "poetry/rhyme_api_core.ml",
        "poetry/rhyme_database.ml"
      ]
    },
    {
      "signature": "char_str",
      "files": [
        "poetry/parallelism_analysis.ml",
        "poetry/rhyme_database.ml"
      ]
    },
    {
      "signature": "_, category, group",
      "files": [
        "poetry/rhyme_matching.ml",
        "poetry/rhyme_database.ml"
      ]
    },
    {
      "signature": "total_chars",
      "files": [
        "poetry/rhyme_json_access.ml",
        "poetry/rhyme_database.ml"
      ]
    },
    {
      "signature": "get_chars_by_categorycategory",
      "files": [
        "unicode/unicode_mapping.ml",
        "poetry/rhyme_database.ml"
      ]
    },
    {
      "signature": "find_rhyme_infochar",
      "files": [
        "poetry/rhyme_api_core.ml",
        "poetry/rhyme_detection.ml"
      ]
    },
    {
      "signature": "char_str",
      "files": [
        "poetry/parallelism_analysis.ml",
        "poetry/rhyme_detection.ml"
      ]
    },
    {
      "signature": "_, category, group",
      "files": [
        "poetry/rhyme_matching.ml",
        "poetry/rhyme_detection.ml"
      ]
    },
    {
      "signature": "_, category, group",
      "files": [
        "poetry/rhyme_matching.ml",
        "poetry/rhyme_detection.ml"
      ]
    },
    {
      "signature": "detect_rhyme_categorychar",
      "files": [
        "poetry/rhyme_api_core.ml",
        "poetry/rhyme_detection.ml"
      ]
    },
    {
      "signature": "detect_rhyme_category_by_stringchar_str",
      "files": [
        "poetry/rhyme_matching.ml",
        "poetry/rhyme_detection.ml"
      ]
    },
    {
      "signature": "_, category, _group",
      "files": [
        "poetry/rhyme_matching.ml",
        "poetry/rhyme_detection.ml"
      ]
    },
    {
      "signature": "detect_rhyme_groupchar",
      "files": [
        "poetry/rhyme_api_core.ml",
        "poetry/rhyme_detection.ml"
      ]
    },
    {
      "signature": "extract_rhyme_endingverse",
      "files": [
        "poetry/rhyme_pattern.ml",
        "poetry/rhyme_detection.ml"
      ]
    },
    {
      "signature": "chars",
      "files": [
        "builtin_shared_utils.ml",
        "poetry/rhyme_detection.ml"
      ]
    },
    {
      "signature": "chars",
      "files": [
        "builtin_shared_utils.ml",
        "poetry/rhyme_detection.ml"
      ]
    },
    {
      "signature": "chars",
      "files": [
        "builtin_shared_utils.ml",
        "poetry/rhyme_detection.ml"
      ]
    },
    {
      "signature": "char",
      "files": [
        "poetry/rhyme_json_parser.ml",
        "poetry/rhyme_detection.ml"
      ]
    },
    {
      "signature": "char_analysis",
      "files": [
        "poetry/rhyme_validation.ml",
        "poetry/rhyme_detection.ml"
      ]
    },
    {
      "signature": "char_analysis",
      "files": [
        "poetry/rhyme_validation.ml",
        "poetry/rhyme_detection.ml"
      ]
    },
    {
      "signature": "rhyme_database",
      "files": [
        "poetry/rhyme_database.ml",
        "poetry/rhyme_data.ml"
      ]
    },
    {
      "signature": "chars",
      "files": [
        "builtin_shared_utils.ml",
        "poetry/rhyme_advanced_analysis.ml"
      ]
    },
    {
      "signature": "group_counts",
      "files": [
        "poetry/rhyme_database.ml",
        "poetry/rhyme_advanced_analysis.ml"
      ]
    },
    {
      "signature": "category_counts",
      "files": [
        "poetry/rhyme_advanced_analysis.ml",
        "poetry/rhyme_advanced_analysis.ml"
      ]
    },
    {
      "signature": "all_chars",
      "files": [
        "poetry/rhyme_api_core.ml",
        "poetry/rhyme_advanced_analysis.ml"
      ]
    },
    {
      "signature": "count",
      "files": [
        "refactoring_analyzer_duplication.ml",
        "poetry/rhyme_advanced_analysis.ml"
      ]
    },
    {
      "signature": "stats",
      "files": [
        "keyword_matcher_modular.ml",
        "poetry/rhyme_advanced_analysis.ml"
      ]
    },
    {
      "signature": "chars",
      "files": [
        "builtin_shared_utils.ml",
        "poetry/rhyme_advanced_analysis.ml"
      ]
    },
    {
      "signature": "string_chars",
      "files": [
        "poetry/rhyme_advanced_analysis.ml",
        "poetry/rhyme_advanced_analysis.ml"
      ]
    },
    {
      "signature": "rhyme_info",
      "files": [
        "poetry/rhyme_pattern.ml",
        "poetry/rhyme_advanced_analysis.ml"
      ]
    },
    {
      "signature": "rhyme_groups",
      "files": [
        "poetry/rhyme_scoring.ml",
        "poetry/rhyme_advanced_analysis.ml"
      ]
    },
    {
      "signature": "pattern",
      "files": [
        "builtin_string.ml",
        "poetry/rhyme_advanced_analysis.ml"
      ]
    },
    {
      "signature": "total_chars",
      "files": [
        "poetry/rhyme_json_access.ml",
        "poetry/rhyme_advanced_analysis.ml"
      ]
    },
    {
      "signature": "balance_score",
      "files": [
        "poetry/rhyme_validation.ml",
        "poetry/rhyme_advanced_analysis.ml"
      ]
    },
    {
      "signature": "ping_count",
      "files": [
        "poetry/rhyme_scoring.ml",
        "poetry/rhyme_advanced_analysis.ml"
      ]
    },
    {
      "signature": "ze_count",
      "files": [
        "poetry/rhyme_scoring.ml",
        "poetry/rhyme_advanced_analysis.ml"
      ]
    },
    {
      "signature": "total",
      "files": [
        "refactoring_analyzer_core.ml",
        "poetry/rhyme_advanced_analysis.ml"
      ]
    },
    {
      "signature": "data",
      "files": [
        "poetry/rhyme_json_io.ml",
        "poetry/rhyme_json_fallback.ml"
      ]
    },
    {
      "signature": "get_rhyme_data?(force_reload",
      "files": [
        "poetry/rhyme_json_io.ml",
        "poetry/rhyme_json_loader.ml"
      ]
    },
    {
      "signature": "use_fallback_data()",
      "files": [
        "poetry/rhyme_json_fallback.ml",
        "poetry/rhyme_json_loader.ml"
      ]
    },
    {
      "signature": "cache_ttl",
      "files": [
        "data_loader_cache.ml",
        "poetry/rhyme_json_cache.ml"
      ]
    },
    {
      "signature": "current_time",
      "files": [
        "data_loader_cache.ml",
        "poetry/rhyme_json_cache.ml"
      ]
    },
    {
      "signature": "clear_cache()",
      "files": [
        "data_loader_cache.ml",
        "poetry/rhyme_json_cache.ml"
      ]
    },
    {
      "signature": "char",
      "files": [
        "poetry/rhyme_json_parser.ml",
        "poetry/rhyme_json_data_loader.ml"
      ]
    },
    {
      "signature": "group",
      "files": [
        "poetry/rhyme_api_core.ml",
        "poetry/rhyme_json_data_loader.ml"
      ]
    },
    {
      "signature": "description",
      "files": [
        "poetry/rhyme_advanced_analysis.ml",
        "poetry/rhyme_json_data_loader.ml"
      ]
    },
    {
      "signature": "description",
      "files": [
        "poetry/rhyme_advanced_analysis.ml",
        "poetry/rhyme_json_data_loader.ml"
      ]
    },
    {
      "signature": "rhyme_group",
      "files": [
        "poetry/artistic_evaluators.ml",
        "poetry/rhyme_json_data_loader.ml"
      ]
    },
    {
      "signature": "reset_cache()",
      "files": [
        "types_cache.ml",
        "poetry/rhyme_json_data_loader.ml"
      ]
    },
    {
      "signature": "char_count",
      "files": [
        "parser_poetry.ml",
        "poetry/rhyme_json_data_loader.ml"
      ]
    },
    {
      "signature": "find_rhyme_info",
      "files": [
        "poetry/rhyme_analysis.ml",
        "poetry/unified_rhyme_api.ml"
      ]
    },
    {
      "signature": "detect_rhyme_category",
      "files": [
        "poetry/rhyme_analysis.ml",
        "poetry/unified_rhyme_api.ml"
      ]
    },
    {
      "signature": "detect_rhyme_group",
      "files": [
        "poetry/rhyme_analysis.ml",
        "poetry/unified_rhyme_api.ml"
      ]
    },
    {
      "signature": "validate_rhyme_consistency",
      "files": [
        "poetry/rhyme_analysis.ml",
        "poetry/unified_rhyme_api.ml"
      ]
    },
    {
      "signature": "analyze_rhyme_pattern",
      "files": [
        "poetry/rhyme_analysis.ml",
        "poetry/unified_rhyme_api.ml"
      ]
    },
    {
      "signature": "evaluate_rhyme_quality",
      "files": [
        "poetry/rhyme_analysis.ml",
        "poetry/unified_rhyme_api.ml"
      ]
    },
    {
      "signature": "get_all_rhyme_groups()",
      "files": [
        "poetry/rhyme_lookup.ml",
        "poetry/unified_rhyme_api.ml"
      ]
    },
    {
      "signature": "clear_cache",
      "files": [
        "data_loader.ml",
        "poetry/unified_rhyme_api.ml"
      ]
    },
    {
      "signature": "buffer",
      "files": [
        "error_messages_reporting.ml",
        "poetry/unified_rhyme_api.ml"
      ]
    },
    {
      "signature": "total_chars, total_groups",
      "files": [
        "poetry/rhyme_advanced_analysis.ml",
        "poetry/unified_rhyme_api.ml"
      ]
    },
    {
      "signature": "initialize()",
      "files": [
        "unified_token_registry.ml",
        "poetry/unified_rhyme_api.ml"
      ]
    },
    {
      "signature": "undefined_variablevar_name",
      "files": [
        "unified_logger.ml",
        "logging/log_messages.ml"
      ]
    },
    {
      "signature": "function_arity_mismatchfunc_name expected actual",
      "files": [
        "unified_logger.ml",
        "logging/log_messages.ml"
      ]
    },
    {
      "signature": "type_mismatchexpected actual",
      "files": [
        "unified_logger.ml",
        "logging/log_messages.ml"
      ]
    },
    {
      "signature": "file_not_foundfilename",
      "files": [
        "unified_logger.ml",
        "logging/log_messages.ml"
      ]
    },
    {
      "signature": "module_member_not_foundmod_name member_name",
      "files": [
        "unified_logger.ml",
        "logging/log_messages.ml"
      ]
    },
    {
      "signature": "compiling_filefilename",
      "files": [
        "unified_logger.ml",
        "logging/log_messages.ml"
      ]
    },
    {
      "signature": "compilation_completefiles_count time_taken",
      "files": [
        "unified_logger.ml",
        "logging/log_messages.ml"
      ]
    },
    {
      "signature": "analysis_statstotal_functions duplicate_functions",
      "files": [
        "unified_logger.ml",
        "logging/log_messages.ml"
      ]
    },
    {
      "signature": "variable_valuevar_name value",
      "files": [
        "unified_logger.ml",
        "logging/log_messages.ml"
      ]
    },
    {
      "signature": "function_callfunc_name args",
      "files": [
        "unified_logger.ml",
        "logging/log_messages.ml"
      ]
    },
    {
      "signature": "type_inferenceexpr type_result",
      "files": [
        "unified_logger.ml",
        "logging/log_messages.ml"
      ]
    },
    {
      "signature": "global_config",
      "files": [
        "logger.ml",
        "logging/log_core.ml"
      ]
    },
    {
      "signature": "level_to_int",
      "files": [
        "logger.ml",
        "logging/log_core.ml"
      ]
    },
    {
      "signature": "level_to_string",
      "files": [
        "logger.ml",
        "logging/log_core.ml"
      ]
    },
    {
      "signature": "level_to_color",
      "files": [
        "logger.ml",
        "logging/log_core.ml"
      ]
    },
    {
      "signature": "set_levellevel",
      "files": [
        "logger.ml",
        "logging/log_core.ml"
      ]
    },
    {
      "signature": "get_level()",
      "files": [
        "logger.ml",
        "logging/log_core.ml"
      ]
    },
    {
      "signature": "set_show_timestampsenabled",
      "files": [
        "logger.ml",
        "logging/log_core.ml"
      ]
    },
    {
      "signature": "set_show_module_nameenabled",
      "files": [
        "logger.ml",
        "logging/log_core.ml"
      ]
    },
    {
      "signature": "set_output_channelchannel",
      "files": [
        "logger.ml",
        "logging/log_core.ml"
      ]
    },
    {
      "signature": "get_timestamp()",
      "files": [
        "logger.ml",
        "logging/log_core.ml"
      ]
    },
    {
      "signature": "time",
      "files": [
        "logger.ml",
        "logging/log_core.ml"
      ]
    },
    {
      "signature": "tm",
      "files": [
        "unified_logger.ml",
        "logging/log_core.ml"
      ]
    },
    {
      "signature": "should_loglevel",
      "files": [
        "unified_logger.ml",
        "logging/log_core.ml"
      ]
    },
    {
      "signature": "format_messagelevel module_name message",
      "files": [
        "logger.ml",
        "logging/log_core.ml"
      ]
    },
    {
      "signature": "timestamp",
      "files": [
        "unified_logger.ml",
        "logging/log_core.ml"
      ]
    },
    {
      "signature": "module_part",
      "files": [
        "logger.ml",
        "logging/log_core.ml"
      ]
    },
    {
      "signature": "level_str",
      "files": [
        "unified_logger.ml",
        "logging/log_core.ml"
      ]
    },
    {
      "signature": "color",
      "files": [
        "logger.ml",
        "logging/log_core.ml"
      ]
    },
    {
      "signature": "reset",
      "files": [
        "constants.ml",
        "logging/log_core.ml"
      ]
    },
    {
      "signature": "log_internallevel module_name message",
      "files": [
        "logger.ml",
        "logging/log_core.ml"
      ]
    },
    {
      "signature": "formatted",
      "files": [
        "unified_logger.ml",
        "logging/log_core.ml"
      ]
    },
    {
      "signature": "debugmodule_name msg",
      "files": [
        "logger.ml",
        "logging/log_core.ml"
      ]
    },
    {
      "signature": "infomodule_name msg",
      "files": [
        "logger.ml",
        "logging/log_core.ml"
      ]
    },
    {
      "signature": "warnmodule_name msg",
      "files": [
        "logger.ml",
        "logging/log_core.ml"
      ]
    },
    {
      "signature": "errormodule_name msg",
      "files": [
        "logger.ml",
        "logging/log_core.ml"
      ]
    },
    {
      "signature": "debugfmodule_name fmt",
      "files": [
        "unified_logger.ml",
        "logging/log_core.ml"
      ]
    },
    {
      "signature": "infofmodule_name fmt",
      "files": [
        "unified_logger.ml",
        "logging/log_core.ml"
      ]
    },
    {
      "signature": "warnfmodule_name fmt",
      "files": [
        "logger.ml",
        "logging/log_core.ml"
      ]
    },
    {
      "signature": "errorfmodule_name fmt",
      "files": [
        "unified_logger.ml",
        "logging/log_core.ml"
      ]
    },
    {
      "signature": "debug_ifcondition module_name msg",
      "files": [
        "logger.ml",
        "logging/log_core.ml"
      ]
    },
    {
      "signature": "info_ifcondition module_name msg",
      "files": [
        "logger.ml",
        "logging/log_core.ml"
      ]
    },
    {
      "signature": "warn_ifcondition module_name msg",
      "files": [
        "logger.ml",
        "logging/log_core.ml"
      ]
    },
    {
      "signature": "error_ifcondition module_name msg",
      "files": [
        "logger.ml",
        "logging/log_core.ml"
      ]
    },
    {
      "signature": "create_module_loggermodule_name",
      "files": [
        "logger.ml",
        "logging/log_core.ml"
      ]
    },
    {
      "signature": "debugmsg",
      "files": [
        "logger.ml",
        "logging/log_core.ml"
      ]
    },
    {
      "signature": "infomsg",
      "files": [
        "logger.ml",
        "logging/log_core.ml"
      ]
    },
    {
      "signature": "warnmsg",
      "files": [
        "logger.ml",
        "logging/log_core.ml"
      ]
    },
    {
      "signature": "errormsg",
      "files": [
        "logger.ml",
        "logging/log_core.ml"
      ]
    },
    {
      "signature": "init_module_logger",
      "files": [
        "logging_migration.ml",
        "logging/log_core.ml"
      ]
    },
    {
      "signature": "time_operationmodule_name operation_name f",
      "files": [
        "logger.ml",
        "logging/log_core.ml"
      ]
    },
    {
      "signature": "start_time",
      "files": [
        "logger.ml",
        "logging/log_core.ml"
      ]
    },
    {
      "signature": "result",
      "files": [
        "interpreter.ml",
        "logging/log_core.ml"
      ]
    },
    {
      "signature": "end_time",
      "files": [
        "logger.ml",
        "logging/log_core.ml"
      ]
    },
    {
      "signature": "duration",
      "files": [
        "logger.ml",
        "logging/log_core.ml"
      ]
    },
    {
      "signature": "end_time",
      "files": [
        "logger.ml",
        "logging/log_core.ml"
      ]
    },
    {
      "signature": "duration",
      "files": [
        "logger.ml",
        "logging/log_core.ml"
      ]
    },
    {
      "signature": "init_from_env()",
      "files": [
        "logger.ml",
        "logging/log_core.ml"
      ]
    },
    {
      "signature": "level_str",
      "files": [
        "unified_logger.ml",
        "logging/log_core.ml"
      ]
    },
    {
      "signature": "level",
      "files": [
        "logger.ml",
        "logging/log_core.ml"
      ]
    },
    {
      "signature": "show_timestamps",
      "files": [
        "logger.ml",
        "logging/log_core.ml"
      ]
    },
    {
      "signature": "show_module",
      "files": [
        "logger.ml",
        "logging/log_core.ml"
      ]
    },
    {
      "signature": "init()",
      "files": [
        "logger.ml",
        "logging/log_core.ml"
      ]
    },
    {
      "signature": "successmessage",
      "files": [
        "unified_logger.ml",
        "logging/log_output.ml"
      ]
    },
    {
      "signature": "warningmessage",
      "files": [
        "unified_logger.ml",
        "logging/log_output.ml"
      ]
    },
    {
      "signature": "errormessage",
      "files": [
        "unified_logger.ml",
        "logging/log_output.ml"
      ]
    },
    {
      "signature": "infomessage",
      "files": [
        "unified_logger.ml",
        "logging/log_output.ml"
      ]
    },
    {
      "signature": "progressmessage",
      "files": [
        "unified_logger.ml",
        "logging/log_output.ml"
      ]
    },
    {
      "signature": "print_user_outputmessage",
      "files": [
        "logger.ml",
        "logging/log_output.ml"
      ]
    },
    {
      "signature": "print_compiler_messagemessage",
      "files": [
        "logger.ml",
        "logging/log_output.ml"
      ]
    },
    {
      "signature": "print_debug_infomessage",
      "files": [
        "logger.ml",
        "logging/log_output.ml"
      ]
    },
    {
      "signature": "print_user_promptmessage",
      "files": [
        "logger.ml",
        "logging/log_output.ml"
      ]
    },
    {
      "signature": "printffmt",
      "files": [
        "unified_logger.ml",
        "logging/log_legacy.ml"
      ]
    },
    {
      "signature": "eprintffmt",
      "files": [
        "unified_logger.ml",
        "logging/log_legacy.ml"
      ]
    },
    {
      "signature": "sprintf",
      "files": [
        "unified_logger.ml",
        "logging/log_legacy.ml"
      ]
    },
    {
      "signature": "global_config",
      "files": [
        "logger.ml",
        "logging/unified_logging_compat.ml"
      ]
    },
    {
      "signature": "level_to_int",
      "files": [
        "logger.ml",
        "logging/unified_logging_compat.ml"
      ]
    },
    {
      "signature": "level_to_string",
      "files": [
        "logger.ml",
        "logging/unified_logging_compat.ml"
      ]
    },
    {
      "signature": "level_to_color",
      "files": [
        "logger.ml",
        "logging/unified_logging_compat.ml"
      ]
    },
    {
      "signature": "debug",
      "files": [
        "logging_migration.ml",
        "logging/unified_logging_compat.ml"
      ]
    },
    {
      "signature": "info",
      "files": [
        "logging_migration.ml",
        "logging/unified_logging_compat.ml"
      ]
    },
    {
      "signature": "error",
      "files": [
        "parser_ancient.ml",
        "logging/unified_logging_compat.ml"
      ]
    },
    {
      "signature": "debugf",
      "files": [
        "logging_migration.ml",
        "logging/unified_logging_compat.ml"
      ]
    },
    {
      "signature": "infof",
      "files": [
        "logging_migration.ml",
        "logging/unified_logging_compat.ml"
      ]
    },
    {
      "signature": "errorf",
      "files": [
        "logging_migration.ml",
        "logging/unified_logging_compat.ml"
      ]
    },
    {
      "signature": "init_module_logger",
      "files": [
        "logging_migration.ml",
        "logging/unified_logging_compat.ml"
      ]
    },
    {
      "signature": "trimmed",
      "files": [
        "data_loader_parser.ml",
        "config/config_loader.ml"
      ]
    },
    {
      "signature": "len",
      "files": [
        "c_codegen_context.ml",
        "config/config_loader.ml"
      ]
    },
    {
      "signature": "len",
      "files": [
        "c_codegen_context.ml",
        "config/config_loader.ml"
      ]
    },
    {
      "signature": "table",
      "files": [
        "parser_utils.ml",
        "config/config_loader.ml"
      ]
    },
    {
      "signature": "trimmed",
      "files": [
        "data_loader_parser.ml",
        "config/config_loader.ml"
      ]
    },
    {
      "signature": "key",
      "files": [
        "poetry/rhyme_json_parser.ml",
        "config/config_loader.ml"
      ]
    },
    {
      "signature": "value",
      "files": [
        "expression_evaluator_control.ml",
        "config/config_loader.ml"
      ]
    },
    {
      "signature": "trimmed",
      "files": [
        "data_loader_parser.ml",
        "config/config_loader.ml"
      ]
    },
    {
      "signature": "last_char",
      "files": [
        "poetry/artistic_evaluator_sound.ml",
        "config/config_loader.ml"
      ]
    },
    {
      "signature": "ic",
      "files": [
        "builtin_io.ml",
        "config/config_loader.ml"
      ]
    },
    {
      "signature": "content",
      "files": [
        "token_compatibility_literals.ml",
        "config/config_loader.ml"
      ]
    },
    {
      "signature": "error_msg",
      "files": [
        "semantic_statements.ml",
        "config/config_loader.ml"
      ]
    },
    {
      "signature": "_",
      "files": [
        "main.ml",
        "config/config_loader.ml"
      ]
    },
    {
      "signature": "compiler_cfg",
      "files": [
        "config.ml",
        "config/config_loader.ml"
      ]
    },
    {
      "signature": "compiler_cfg",
      "files": [
        "config.ml",
        "config/config_loader.ml"
      ]
    },
    {
      "signature": "runtime_cfg",
      "files": [
        "compiler_errors_formatter.ml",
        "config/config_loader.ml"
      ]
    },
    {
      "signature": "errors",
      "files": [
        "nlf_semantic.ml",
        "config/config_loader.ml"
      ]
    },
    {
      "signature": "default_compiler_config",
      "files": [
        "config.ml",
        "config/unified_config.ml"
      ]
    },
    {
      "signature": "default_runtime_config",
      "files": [
        "config.ml",
        "config/unified_config.ml"
      ]
    },
    {
      "signature": "compiler_config",
      "files": [
        "config.ml",
        "config/unified_config.ml"
      ]
    },
    {
      "signature": "runtime_config",
      "files": [
        "config.ml",
        "config/unified_config.ml"
      ]
    },
    {
      "signature": "get_compiler_config()",
      "files": [
        "config.ml",
        "config/unified_config.ml"
      ]
    },
    {
      "signature": "get_runtime_config()",
      "files": [
        "config.ml",
        "config/unified_config.ml"
      ]
    },
    {
      "signature": "set_compiler_configconfig",
      "files": [
        "config.ml",
        "config/unified_config.ml"
      ]
    },
    {
      "signature": "set_runtime_configconfig",
      "files": [
        "config.ml",
        "config/unified_config.ml"
      ]
    },
    {
      "signature": "parse_boolean_env_varv",
      "files": [
        "config.ml",
        "config/unified_config.ml"
      ]
    },
    {
      "signature": "parse_positive_int_env_varv",
      "files": [
        "config.ml",
        "config/unified_config.ml"
      ]
    },
    {
      "signature": "i",
      "files": [
        "parser_patterns.ml",
        "config/unified_config.ml"
      ]
    },
    {
      "signature": "parse_positive_float_env_varv",
      "files": [
        "config.ml",
        "config/unified_config.ml"
      ]
    },
    {
      "signature": "f",
      "files": [
        "builtin_types.ml",
        "config/unified_config.ml"
      ]
    },
    {
      "signature": "parse_non_empty_string_env_varv",
      "files": [
        "config.ml",
        "config/unified_config.ml"
      ]
    },
    {
      "signature": "parse_int_range_env_varv min_val max_val",
      "files": [
        "config.ml",
        "config/unified_config.ml"
      ]
    },
    {
      "signature": "i",
      "files": [
        "parser_patterns.ml",
        "config/unified_config.ml"
      ]
    },
    {
      "signature": "parse_enum_env_varv valid_values",
      "files": [
        "config.ml",
        "config/unified_config.ml"
      ]
    },
    {
      "signature": "normalized",
      "files": [
        "config.ml",
        "config/unified_config.ml"
      ]
    },
    {
      "signature": "load_from_env()",
      "files": [
        "config.ml",
        "config/unified_config.ml"
      ]
    },
    {
      "signature": "parse_boolean_env_varv",
      "files": [
        "config.ml",
        "config/runtime_config.ml"
      ]
    },
    {
      "signature": "parse_positive_int_env_varv",
      "files": [
        "config.ml",
        "config/runtime_config.ml"
      ]
    },
    {
      "signature": "i",
      "files": [
        "parser_patterns.ml",
        "config/runtime_config.ml"
      ]
    },
    {
      "signature": "parse_enum_env_varv valid_values",
      "files": [
        "config.ml",
        "config/runtime_config.ml"
      ]
    },
    {
      "signature": "normalized",
      "files": [
        "config.ml",
        "config/runtime_config.ml"
      ]
    },
    {
      "signature": "env_var_mappings",
      "files": [
        "config.ml",
        "config/runtime_config.ml"
      ]
    },
    {
      "signature": "debug",
      "files": [
        "logging_migration.ml",
        "config/runtime_config.ml"
      ]
    },
    {
      "signature": "load_from_env()",
      "files": [
        "config.ml",
        "config/runtime_config.ml"
      ]
    },
    {
      "signature": "value",
      "files": [
        "expression_evaluator_control.ml",
        "config/runtime_config.ml"
      ]
    },
    {
      "signature": "parse_boolean_env_varv",
      "files": [
        "config.ml",
        "config/env_var_config.ml"
      ]
    },
    {
      "signature": "parse_positive_int_env_varv",
      "files": [
        "config.ml",
        "config/env_var_config.ml"
      ]
    },
    {
      "signature": "i",
      "files": [
        "parser_patterns.ml",
        "config/env_var_config.ml"
      ]
    },
    {
      "signature": "parse_positive_float_env_varv",
      "files": [
        "config.ml",
        "config/env_var_config.ml"
      ]
    },
    {
      "signature": "f",
      "files": [
        "builtin_types.ml",
        "config/env_var_config.ml"
      ]
    },
    {
      "signature": "parse_non_empty_string_env_varv",
      "files": [
        "config.ml",
        "config/env_var_config.ml"
      ]
    },
    {
      "signature": "trimmed",
      "files": [
        "data_loader_parser.ml",
        "config/env_var_config.ml"
      ]
    },
    {
      "signature": "parse_int_range_env_varv min_val max_val",
      "files": [
        "config.ml",
        "config/env_var_config.ml"
      ]
    },
    {
      "signature": "i",
      "files": [
        "parser_patterns.ml",
        "config/env_var_config.ml"
      ]
    },
    {
      "signature": "parse_enum_env_varv valid_values",
      "files": [
        "config.ml",
        "config/env_var_config.ml"
      ]
    },
    {
      "signature": "normalized",
      "files": [
        "config.ml",
        "config/env_var_config.ml"
      ]
    },
    {
      "signature": "value",
      "files": [
        "expression_evaluator_control.ml",
        "config/env_var_config.ml"
      ]
    },
    {
      "signature": "value",
      "files": [
        "expression_evaluator_control.ml",
        "config/env_var_config.ml"
      ]
    },
    {
      "signature": "config_definitions",
      "files": [
        "config/env_var_config.ml",
        "config/env_var_config.ml"
      ]
    },
    {
      "signature": "config_definitions",
      "files": [
        "config/env_var_config.ml",
        "config/env_var_config.ml"
      ]
    },
    {
      "signature": "config",
      "files": [
        "interpreter_utils.ml",
        "config/env_var_config.ml"
      ]
    },
    {
      "signature": "config_definitions",
      "files": [
        "config/env_var_config.ml",
        "config/env_var_config.ml"
      ]
    },
    {
      "signature": "default",
      "files": [
        "config/runtime_config.ml",
        "config/compiler_config.ml"
      ]
    },
    {
      "signature": "current",
      "files": [
        "config/runtime_config.ml",
        "config/compiler_config.ml"
      ]
    },
    {
      "signature": "get()",
      "files": [
        "config/runtime_config.ml",
        "config/compiler_config.ml"
      ]
    },
    {
      "signature": "setconfig",
      "files": [
        "config/runtime_config.ml",
        "config/compiler_config.ml"
      ]
    },
    {
      "signature": "parse_positive_int_env_varv",
      "files": [
        "config.ml",
        "config/compiler_config.ml"
      ]
    },
    {
      "signature": "i",
      "files": [
        "parser_patterns.ml",
        "config/compiler_config.ml"
      ]
    },
    {
      "signature": "parse_positive_float_env_varv",
      "files": [
        "config.ml",
        "config/compiler_config.ml"
      ]
    },
    {
      "signature": "f",
      "files": [
        "builtin_types.ml",
        "config/compiler_config.ml"
      ]
    },
    {
      "signature": "parse_non_empty_string_env_varv",
      "files": [
        "config.ml",
        "config/compiler_config.ml"
      ]
    },
    {
      "signature": "parse_int_range_env_varv min_val max_val",
      "files": [
        "config.ml",
        "config/compiler_config.ml"
      ]
    },
    {
      "signature": "i",
      "files": [
        "parser_patterns.ml",
        "config/compiler_config.ml"
      ]
    },
    {
      "signature": "env_var_mappings",
      "files": [
        "config.ml",
        "config/compiler_config.ml"
      ]
    },
    {
      "signature": "load_from_env()",
      "files": [
        "config.ml",
        "config/compiler_config.ml"
      ]
    },
    {
      "signature": "value",
      "files": [
        "expression_evaluator_control.ml",
        "config/compiler_config.ml"
      ]
    },
    {
      "signature": "zero",
      "files": [
        "constants.ml",
        "constants/number_constants.ml"
      ]
    },
    {
      "signature": "one",
      "files": [
        "constants.ml",
        "constants/number_constants.ml"
      ]
    },
    {
      "signature": "two",
      "files": [
        "constants.ml",
        "constants/number_constants.ml"
      ]
    },
    {
      "signature": "three",
      "files": [
        "constants.ml",
        "constants/number_constants.ml"
      ]
    },
    {
      "signature": "four",
      "files": [
        "constants.ml",
        "constants/number_constants.ml"
      ]
    },
    {
      "signature": "five",
      "files": [
        "constants.ml",
        "constants/number_constants.ml"
      ]
    },
    {
      "signature": "ten",
      "files": [
        "constants.ml",
        "constants/number_constants.ml"
      ]
    },
    {
      "signature": "hundred",
      "files": [
        "constants.ml",
        "constants/number_constants.ml"
      ]
    },
    {
      "signature": "thousand",
      "files": [
        "constants.ml",
        "constants/number_constants.ml"
      ]
    },
    {
      "signature": "zero_float",
      "files": [
        "constants.ml",
        "constants/number_constants.ml"
      ]
    },
    {
      "signature": "one_float",
      "files": [
        "constants.ml",
        "constants/number_constants.ml"
      ]
    },
    {
      "signature": "half_float",
      "files": [
        "constants.ml",
        "constants/number_constants.ml"
      ]
    },
    {
      "signature": "pi",
      "files": [
        "constants.ml",
        "constants/number_constants.ml"
      ]
    },
    {
      "signature": "full_percentage",
      "files": [
        "constants.ml",
        "constants/number_constants.ml"
      ]
    },
    {
      "signature": "half_percentage",
      "files": [
        "constants.ml",
        "constants/number_constants.ml"
      ]
    },
    {
      "signature": "quarter_percentage",
      "files": [
        "constants.ml",
        "constants/number_constants.ml"
      ]
    },
    {
      "signature": "type_complexity_basic",
      "files": [
        "constants.ml",
        "constants/number_constants.ml"
      ]
    },
    {
      "signature": "type_complexity_composite",
      "files": [
        "constants.ml",
        "constants/number_constants.ml"
      ]
    },
    {
      "signature": "utf8_char_buffer_size",
      "files": [
        "constants.ml",
        "constants/buffer_constants.ml"
      ]
    },
    {
      "signature": "performance_stats_header",
      "files": [
        "constants.ml",
        "constants/message_constants.ml"
      ]
    },
    {
      "signature": "infer_calls_format",
      "files": [
        "constants.ml",
        "constants/message_constants.ml"
      ]
    },
    {
      "signature": "unify_calls_format",
      "files": [
        "constants.ml",
        "constants/message_constants.ml"
      ]
    },
    {
      "signature": "subst_apps_format",
      "files": [
        "constants.ml",
        "constants/message_constants.ml"
      ]
    },
    {
      "signature": "cache_hits_format",
      "files": [
        "constants.ml",
        "constants/message_constants.ml"
      ]
    },
    {
      "signature": "cache_misses_format",
      "files": [
        "constants.ml",
        "constants/message_constants.ml"
      ]
    },
    {
      "signature": "hit_rate_format",
      "files": [
        "constants.ml",
        "constants/message_constants.ml"
      ]
    },
    {
      "signature": "cache_size_format",
      "files": [
        "constants.ml",
        "constants/message_constants.ml"
      ]
    },
    {
      "signature": "debug_prefix",
      "files": [
        "constants.ml",
        "constants/message_constants.ml"
      ]
    },
    {
      "signature": "info_prefix",
      "files": [
        "constants.ml",
        "constants/message_constants.ml"
      ]
    },
    {
      "signature": "warning_prefix",
      "files": [
        "constants.ml",
        "constants/message_constants.ml"
      ]
    },
    {
      "signature": "error_prefix",
      "files": [
        "constants.ml",
        "constants/message_constants.ml"
      ]
    },
    {
      "signature": "fatal_prefix",
      "files": [
        "constants.ml",
        "constants/message_constants.ml"
      ]
    },
    {
      "signature": "compiling_filefilename",
      "files": [
        "unified_logger.ml",
        "constants/message_constants.ml"
      ]
    },
    {
      "signature": "compilation_complete",
      "files": [
        "constants.ml",
        "constants/message_constants.ml"
      ]
    },
    {
      "signature": "compilation_failed",
      "files": [
        "constants.ml",
        "constants/message_constants.ml"
      ]
    },
    {
      "signature": "parsing_started",
      "files": [
        "constants.ml",
        "constants/message_constants.ml"
      ]
    },
    {
      "signature": "parsing_complete",
      "files": [
        "constants.ml",
        "constants/message_constants.ml"
      ]
    },
    {
      "signature": "type_checking_started",
      "files": [
        "constants.ml",
        "constants/message_constants.ml"
      ]
    },
    {
      "signature": "type_checking_complete",
      "files": [
        "constants.ml",
        "constants/message_constants.ml"
      ]
    },
    {
      "signature": "undefined_variablevar_name",
      "files": [
        "unified_logger.ml",
        "constants/error_constants.ml"
      ]
    },
    {
      "signature": "module_not_foundmod_name",
      "files": [
        "unified_formatter.ml",
        "constants/error_constants.ml"
      ]
    },
    {
      "signature": "member_not_foundmod_name member_name",
      "files": [
        "unified_formatter.ml",
        "constants/error_constants.ml"
      ]
    },
    {
      "signature": "empty_scope_stack",
      "files": [
        "constants.ml",
        "constants/error_constants.ml"
      ]
    },
    {
      "signature": "empty_variable_name",
      "files": [
        "constants.ml",
        "constants/error_constants.ml"
      ]
    },
    {
      "signature": "unterminated_comment",
      "files": [
        "constants.ml",
        "constants/error_constants.ml"
      ]
    },
    {
      "signature": "unterminated_chinese_comment",
      "files": [
        "constants.ml",
        "constants/error_constants.ml"
      ]
    },
    {
      "signature": "unterminated_string",
      "files": [
        "constants.ml",
        "constants/error_constants.ml"
      ]
    },
    {
      "signature": "unterminated_quoted_identifier",
      "files": [
        "constants.ml",
        "constants/error_constants.ml"
      ]
    },
    {
      "signature": "invalid_char_in_quoted_identifier",
      "files": [
        "constants.ml",
        "constants/error_constants.ml"
      ]
    },
    {
      "signature": "ascii_symbols_disabled",
      "files": [
        "constants.ml",
        "constants/error_constants.ml"
      ]
    },
    {
      "signature": "fullwidth_numbers_disabled",
      "files": [
        "constants.ml",
        "constants/error_constants.ml"
      ]
    },
    {
      "signature": "arabic_numbers_disabled",
      "files": [
        "constants.ml",
        "constants/error_constants.ml"
      ]
    },
    {
      "signature": "unsupported_chinese_symbol",
      "files": [
        "constants.ml",
        "constants/error_constants.ml"
      ]
    },
    {
      "signature": "identifiers_must_be_quoted",
      "files": [
        "constants.ml",
        "constants/error_constants.ml"
      ]
    },
    {
      "signature": "ascii_letters_as_keywords_only",
      "files": [
        "constants.ml",
        "constants/error_constants.ml"
      ]
    },
    {
      "signature": "type_mismatchexpected actual",
      "files": [
        "unified_logger.ml",
        "constants/error_constants.ml"
      ]
    },
    {
      "signature": "unknown_typetype_name",
      "files": [
        "unified_formatter.ml",
        "constants/error_constants.ml"
      ]
    },
    {
      "signature": "invalid_type_operationop_name",
      "files": [
        "unified_formatter.ml",
        "constants/error_constants.ml"
      ]
    },
    {
      "signature": "function_not_foundfunc_name",
      "files": [
        "unified_formatter.ml",
        "constants/error_constants.ml"
      ]
    },
    {
      "signature": "invalid_argument_countexpected actual",
      "files": [
        "constants.ml",
        "constants/error_constants.ml"
      ]
    },
    {
      "signature": "invalid_argument_typeexpected actual",
      "files": [
        "unified_formatter.ml",
        "constants/error_constants.ml"
      ]
    },
    {
      "signature": "unexpected_tokentoken",
      "files": [
        "unified_formatter.ml",
        "constants/error_constants.ml"
      ]
    },
    {
      "signature": "expected_tokenexpected actual",
      "files": [
        "unified_formatter.ml",
        "constants/error_constants.ml"
      ]
    },
    {
      "signature": "syntax_errormessage",
      "files": [
        "unified_formatter.ml",
        "constants/error_constants.ml"
      ]
    },
    {
      "signature": "division_by_zero",
      "files": [
        "constants.ml",
        "constants/error_constants.ml"
      ]
    },
    {
      "signature": "stack_overflow",
      "files": [
        "constants.ml",
        "constants/error_constants.ml"
      ]
    },
    {
      "signature": "out_of_memory",
      "files": [
        "constants.ml",
        "constants/error_constants.ml"
      ]
    },
    {
      "signature": "invalid_operationoperation",
      "files": [
        "unified_formatter.ml",
        "constants/error_constants.ml"
      ]
    },
    {
      "signature": "file_not_foundfilename",
      "files": [
        "unified_logger.ml",
        "constants/error_constants.ml"
      ]
    },
    {
      "signature": "file_read_errorfilename",
      "files": [
        "unified_formatter.ml",
        "constants/error_constants.ml"
      ]
    },
    {
      "signature": "file_write_errorfilename",
      "files": [
        "unified_formatter.ml",
        "constants/error_constants.ml"
      ]
    },
    {
      "signature": "config_parse_errormessage",
      "files": [
        "unified_formatter.ml",
        "constants/error_constants.ml"
      ]
    },
    {
      "signature": "invalid_config_valuekey value",
      "files": [
        "unified_formatter.ml",
        "constants/error_constants.ml"
      ]
    },
    {
      "signature": "unsupported_char_errorchar_bytes",
      "files": [
        "constants.ml",
        "constants/error_constants.ml"
      ]
    },
    {
      "signature": "small_test_number",
      "files": [
        "constants.ml",
        "constants/test_constants.ml"
      ]
    },
    {
      "signature": "large_test_number",
      "files": [
        "constants.ml",
        "constants/test_constants.ml"
      ]
    },
    {
      "signature": "factorial_test_input",
      "files": [
        "constants.ml",
        "constants/test_constants.ml"
      ]
    },
    {
      "signature": "factorial_expected_result",
      "files": [
        "constants.ml",
        "constants/test_constants.ml"
      ]
    },
    {
      "signature": "sum_1_to_100",
      "files": [
        "constants.ml",
        "constants/test_constants.ml"
      ]
    },
    {
      "signature": "default_position",
      "files": [
        "unified_token_core.ml",
        "constants/compiler_constants.ml"
      ]
    },
    {
      "signature": "add",
      "files": [
        "constants.ml",
        "constants/runtime_constants.ml"
      ]
    },
    {
      "signature": "subtract",
      "files": [
        "constants.ml",
        "constants/runtime_constants.ml"
      ]
    },
    {
      "signature": "multiply",
      "files": [
        "constants.ml",
        "constants/runtime_constants.ml"
      ]
    },
    {
      "signature": "divide",
      "files": [
        "constants.ml",
        "constants/runtime_constants.ml"
      ]
    },
    {
      "signature": "modulo",
      "files": [
        "constants.ml",
        "constants/runtime_constants.ml"
      ]
    },
    {
      "signature": "equal",
      "files": [
        "constants.ml",
        "constants/runtime_constants.ml"
      ]
    },
    {
      "signature": "not_equal",
      "files": [
        "constants.ml",
        "constants/runtime_constants.ml"
      ]
    },
    {
      "signature": "less_than",
      "files": [
        "constants.ml",
        "constants/runtime_constants.ml"
      ]
    },
    {
      "signature": "greater_than",
      "files": [
        "constants.ml",
        "constants/runtime_constants.ml"
      ]
    },
    {
      "signature": "less_equal",
      "files": [
        "constants.ml",
        "constants/runtime_constants.ml"
      ]
    },
    {
      "signature": "greater_equal",
      "files": [
        "constants.ml",
        "constants/runtime_constants.ml"
      ]
    },
    {
      "signature": "logical_and",
      "files": [
        "constants.ml",
        "constants/runtime_constants.ml"
      ]
    },
    {
      "signature": "logical_or",
      "files": [
        "constants.ml",
        "constants/runtime_constants.ml"
      ]
    },
    {
      "signature": "concat",
      "files": [
        "constants.ml",
        "constants/runtime_constants.ml"
      ]
    },
    {
      "signature": "logical_not",
      "files": [
        "constants.ml",
        "constants/runtime_constants.ml"
      ]
    },
    {
      "signature": "int_zero",
      "files": [
        "constants.ml",
        "constants/runtime_constants.ml"
      ]
    },
    {
      "signature": "ref_create",
      "files": [
        "constants.ml",
        "constants/runtime_constants.ml"
      ]
    },
    {
      "signature": "deref",
      "files": [
        "constants.ml",
        "constants/runtime_constants.ml"
      ]
    },
    {
      "signature": "assign",
      "files": [
        "constants.ml",
        "constants/runtime_constants.ml"
      ]
    },
    {
      "signature": "c_extension",
      "files": [
        "constants.ml",
        "constants/runtime_constants.ml"
      ]
    },
    {
      "signature": "ly_extension",
      "files": [
        "constants.ml",
        "constants/runtime_constants.ml"
      ]
    },
    {
      "signature": "temp_extension",
      "files": [
        "constants.ml",
        "constants/runtime_constants.ml"
      ]
    },
    {
      "signature": "default_hash_table_size",
      "files": [
        "constants.ml",
        "constants/system_constants.ml"
      ]
    },
    {
      "signature": "large_hash_table_size",
      "files": [
        "constants.ml",
        "constants/system_constants.ml"
      ]
    },
    {
      "signature": "default_cache_size",
      "files": [
        "constants.ml",
        "constants/system_constants.ml"
      ]
    },
    {
      "signature": "large_cache_size",
      "files": [
        "constants.ml",
        "constants/system_constants.ml"
      ]
    },
    {
      "signature": "utf8_char_max_bytes",
      "files": [
        "constants.ml",
        "constants/system_constants.ml"
      ]
    },
    {
      "signature": "utf8_char_buffer_size",
      "files": [
        "constants.ml",
        "constants/system_constants.ml"
      ]
    },
    {
      "signature": "string_slice_length",
      "files": [
        "constants.ml",
        "constants/system_constants.ml"
      ]
    },
    {
      "signature": "percentage_multiplier",
      "files": [
        "constants.ml",
        "constants/system_constants.ml"
      ]
    },
    {
      "signature": "max_recursion_depth",
      "files": [
        "constants.ml",
        "constants/system_constants.ml"
      ]
    },
    {
      "signature": "default_timeout_ms",
      "files": [
        "constants.ml",
        "constants/system_constants.ml"
      ]
    },
    {
      "signature": "file_chunk_size",
      "files": [
        "constants.ml",
        "constants/system_constants.ml"
      ]
    },
    {
      "signature": "max_file_size",
      "files": [
        "constants.ml",
        "constants/system_constants.ml"
      ]
    },
    {
      "signature": "max_verse_length",
      "files": [
        "constants.ml",
        "constants/system_constants.ml"
      ]
    },
    {
      "signature": "max_poem_lines",
      "files": [
        "constants.ml",
        "constants/system_constants.ml"
      ]
    },
    {
      "signature": "default_rhyme_scheme_length",
      "files": [
        "constants.ml",
        "constants/system_constants.ml"
      ]
    },
    {
      "signature": "red",
      "files": [
        "constants.ml",
        "constants/color_constants.ml"
      ]
    },
    {
      "signature": "green",
      "files": [
        "constants.ml",
        "constants/color_constants.ml"
      ]
    },
    {
      "signature": "yellow",
      "files": [
        "constants.ml",
        "constants/color_constants.ml"
      ]
    },
    {
      "signature": "blue",
      "files": [
        "constants.ml",
        "constants/color_constants.ml"
      ]
    },
    {
      "signature": "magenta",
      "files": [
        "constants.ml",
        "constants/color_constants.ml"
      ]
    },
    {
      "signature": "cyan",
      "files": [
        "constants.ml",
        "constants/color_constants.ml"
      ]
    },
    {
      "signature": "white",
      "files": [
        "constants.ml",
        "constants/color_constants.ml"
      ]
    },
    {
      "signature": "bright_red",
      "files": [
        "constants.ml",
        "constants/color_constants.ml"
      ]
    },
    {
      "signature": "bright_green",
      "files": [
        "constants.ml",
        "constants/color_constants.ml"
      ]
    },
    {
      "signature": "bright_yellow",
      "files": [
        "constants.ml",
        "constants/color_constants.ml"
      ]
    },
    {
      "signature": "bright_blue",
      "files": [
        "constants.ml",
        "constants/color_constants.ml"
      ]
    },
    {
      "signature": "bright_magenta",
      "files": [
        "constants.ml",
        "constants/color_constants.ml"
      ]
    },
    {
      "signature": "bright_cyan",
      "files": [
        "constants.ml",
        "constants/color_constants.ml"
      ]
    },
    {
      "signature": "bright_white",
      "files": [
        "constants.ml",
        "constants/color_constants.ml"
      ]
    },
    {
      "signature": "bold",
      "files": [
        "constants.ml",
        "constants/color_constants.ml"
      ]
    },
    {
      "signature": "dim",
      "files": [
        "constants.ml",
        "constants/color_constants.ml"
      ]
    },
    {
      "signature": "italic",
      "files": [
        "constants.ml",
        "constants/color_constants.ml"
      ]
    },
    {
      "signature": "underline",
      "files": [
        "constants.ml",
        "constants/color_constants.ml"
      ]
    },
    {
      "signature": "blink",
      "files": [
        "constants.ml",
        "constants/color_constants.ml"
      ]
    },
    {
      "signature": "reverse",
      "files": [
        "constants.ml",
        "constants/color_constants.ml"
      ]
    },
    {
      "signature": "strikethrough",
      "files": [
        "constants.ml",
        "constants/color_constants.ml"
      ]
    },
    {
      "signature": "reset",
      "files": [
        "constants.ml",
        "constants/color_constants.ml"
      ]
    },
    {
      "signature": "with_colorcolor_code message",
      "files": [
        "constants.ml",
        "constants/color_constants.ml"
      ]
    },
    {
      "signature": "red_textmessage",
      "files": [
        "constants.ml",
        "constants/color_constants.ml"
      ]
    },
    {
      "signature": "green_textmessage",
      "files": [
        "constants.ml",
        "constants/color_constants.ml"
      ]
    },
    {
      "signature": "yellow_textmessage",
      "files": [
        "constants.ml",
        "constants/color_constants.ml"
      ]
    },
    {
      "signature": "blue_textmessage",
      "files": [
        "constants.ml",
        "constants/color_constants.ml"
      ]
    },
    {
      "signature": "cyan_textmessage",
      "files": [
        "constants.ml",
        "constants/color_constants.ml"
      ]
    },
    {
      "signature": "bold_textmessage",
      "files": [
        "constants.ml",
        "constants/color_constants.ml"
      ]
    },
    {
      "signature": "bright_red_textmessage",
      "files": [
        "constants.ml",
        "constants/color_constants.ml"
      ]
    },
    {
      "signature": "debug_color",
      "files": [
        "constants.ml",
        "constants/color_constants.ml"
      ]
    },
    {
      "signature": "info_color",
      "files": [
        "constants.ml",
        "constants/color_constants.ml"
      ]
    },
    {
      "signature": "warn_color",
      "files": [
        "constants.ml",
        "constants/color_constants.ml"
      ]
    },
    {
      "signature": "error_color",
      "files": [
        "constants.ml",
        "constants/color_constants.ml"
      ]
    },
    {
      "signature": "fatal_color",
      "files": [
        "constants.ml",
        "constants/color_constants.ml"
      ]
    },
    {
      "signature": "confidence_multiplier",
      "files": [
        "constants.ml",
        "constants/metrics_constants.ml"
      ]
    },
    {
      "signature": "full_confidence",
      "files": [
        "constants.ml",
        "constants/metrics_constants.ml"
      ]
    },
    {
      "signature": "zero_confidence",
      "files": [
        "constants.ml",
        "constants/metrics_constants.ml"
      ]
    },
    {
      "signature": "zero_division_fallback",
      "files": [
        "constants.ml",
        "constants/metrics_constants.ml"
      ]
    },
    {
      "signature": "percentage_multiplier",
      "files": [
        "constants.ml",
        "constants/metrics_constants.ml"
      ]
    },
    {
      "signature": "precision_decimal_places",
      "files": [
        "constants.ml",
        "constants/metrics_constants.ml"
      ]
    },
    {
      "signature": "total",
      "files": [
        "refactoring_analyzer_core.ml",
        "lexer/token_mapping/token_registry_stats.ml"
      ]
    },
    {
      "signature": "categories",
      "files": [
        "poetry/rhyme_lookup.ml",
        "lexer/token_mapping/token_registry_stats.ml"
      ]
    },
    {
      "signature": "category_counts",
      "files": [
        "poetry/rhyme_advanced_analysis.ml",
        "lexer/token_mapping/token_registry_stats.ml"
      ]
    },
    {
      "signature": "mappings",
      "files": [
        "poetry/rhyme_json_access.ml",
        "lexer/token_mapping/token_registry_stats.ml"
      ]
    },
    {
      "signature": "count",
      "files": [
        "refactoring_analyzer_duplication.ml",
        "lexer/token_mapping/token_registry_stats.ml"
      ]
    },
    {
      "signature": "basic_keywords",
      "files": [
        "keyword_matcher_tables_basic.ml",
        "lexer/token_mapping/token_registry_keywords.ml"
      ]
    },
    {
      "signature": "type_keywords",
      "files": [
        "keyword_tables.ml",
        "lexer/token_mapping/token_registry_keywords.ml"
      ]
    },
    {
      "signature": "map_wenyan_keywords",
      "files": [
        "token_compatibility.ml",
        "lexer/token_mapping/basic_token_mapping.ml"
      ]
    },
    {
      "signature": "map_natural_language_keywords",
      "files": [
        "token_compatibility.ml",
        "lexer/token_mapping/basic_token_mapping.ml"
      ]
    },
    {
      "signature": "mappings",
      "files": [
        "poetry/rhyme_json_access.ml",
        "lexer/token_mapping/token_registry_converter.ml"
      ]
    },
    {
      "signature": "get_stats()",
      "files": [
        "data_loader_stats.ml",
        "lexer/token_mapping/simple_token_mapper.ml"
      ]
    },
    {
      "signature": "total",
      "files": [
        "refactoring_analyzer_core.ml",
        "lexer/token_mapping/simple_token_mapper.ml"
      ]
    },
    {
      "signature": "categories",
      "files": [
        "poetry/rhyme_lookup.ml",
        "lexer/token_mapping/simple_token_mapper.ml"
      ]
    },
    {
      "signature": "test_cases",
      "files": [
        "chinese_best_practices_backup.ml",
        "lexer/token_mapping/simple_token_mapper.ml"
      ]
    },
    {
      "signature": "result",
      "files": [
        "interpreter.ml",
        "lexer/token_mapping/simple_token_mapper.ml"
      ]
    },
    {
      "signature": "start_time",
      "files": [
        "logger.ml",
        "lexer/token_mapping/unified_token_mapper.ml"
      ]
    },
    {
      "signature": "_",
      "files": [
        "main.ml",
        "lexer/token_mapping/unified_token_mapper.ml"
      ]
    },
    {
      "signature": "_",
      "files": [
        "main.ml",
        "lexer/token_mapping/unified_token_mapper.ml"
      ]
    },
    {
      "signature": "_",
      "files": [
        "main.ml",
        "lexer/token_mapping/unified_token_mapper.ml"
      ]
    },
    {
      "signature": "_",
      "files": [
        "main.ml",
        "lexer/token_mapping/unified_token_mapper.ml"
      ]
    },
    {
      "signature": "end_time",
      "files": [
        "logger.ml",
        "lexer/token_mapping/unified_token_mapper.ml"
      ]
    },
    {
      "signature": "duration",
      "files": [
        "logger.ml",
        "lexer/token_mapping/unified_token_mapper.ml"
      ]
    },
    {
      "signature": "mappings",
      "files": [
        "poetry/rhyme_json_access.ml",
        "lexer/token_mapping/unified_token_mapper.ml"
      ]
    },
    {
      "signature": "reserved_words_list",
      "files": [
        "keyword_tables.ml",
        "lexer/data/reserved_words_data.ml"
      ]
    },
    {
      "signature": "basic_keywords",
      "files": [
        "keyword_matcher_tables_basic.ml",
        "lexer/data/basic_keywords_data.ml"
      ]
    },
    {
      "signature": "semantic_keywords",
      "files": [
        "keyword_matcher_tables_basic.ml",
        "lexer/data/basic_keywords_data.ml"
      ]
    },
    {
      "signature": "error_recovery_keywords",
      "files": [
        "keyword_matcher_tables_basic.ml",
        "lexer/data/basic_keywords_data.ml"
      ]
    },
    {
      "signature": "type_keywords",
      "files": [
        "keyword_tables.ml",
        "lexer/data/basic_keywords_data.ml"
      ]
    },
    {
      "signature": "module_keywords",
      "files": [
        "keyword_matcher_tables_basic.ml",
        "lexer/data/basic_keywords_data.ml"
      ]
    },
    {
      "signature": "macro_keywords",
      "files": [
        "keyword_tables.ml",
        "lexer/data/basic_keywords_data.ml"
      ]
    },
    {
      "signature": "wenyan_keywords",
      "files": [
        "keyword_tables.ml",
        "lexer/data/basic_keywords_data.ml"
      ]
    },
    {
      "signature": "wenyan_extended_keywords",
      "files": [
        "keyword_tables.ml",
        "lexer/data/basic_keywords_data.ml"
      ]
    },
    {
      "signature": "natural_language_keywords",
      "files": [
        "keyword_tables.ml",
        "lexer/data/basic_keywords_data.ml"
      ]
    },
    {
      "signature": "type_annotation_keywords",
      "files": [
        "keyword_tables.ml",
        "lexer/data/basic_keywords_data.ml"
      ]
    },
    {
      "signature": "variant_keywords",
      "files": [
        "keyword_tables.ml",
        "lexer/data/basic_keywords_data.ml"
      ]
    },
    {
      "signature": "ancient_keywords",
      "files": [
        "keyword_matcher_tables_ancient.ml",
        "lexer/data/basic_keywords_data.ml"
      ]
    },
    {
      "signature": "special_keywords",
      "files": [
        "keyword_tables.ml",
        "lexer/data/basic_keywords_data.ml"
      ]
    },
    {
      "signature": "all_keywords_list",
      "files": [
        "keyword_tables.ml",
        "lexer/data/basic_keywords_data.ml"
      ]
    },
    {
      "signature": "all_violations",
      "files": [
        "chinese_best_practices_backup.ml",
        "chinese_best_practices/core/practice_coordinator.ml"
      ]
    },
    {
      "signature": "violations",
      "files": [
        "chinese_best_practices_backup.ml",
        "chinese_best_practices/core/practice_coordinator.ml"
      ]
    },
    {
      "signature": "violations",
      "files": [
        "chinese_best_practices_backup.ml",
        "chinese_best_practices/core/practice_coordinator.ml"
      ]
    },
    {
      "signature": "violations",
      "files": [
        "chinese_best_practices_backup.ml",
        "chinese_best_practices/core/practice_coordinator.ml"
      ]
    },
    {
      "signature": "violations",
      "files": [
        "chinese_best_practices_backup.ml",
        "chinese_best_practices/core/practice_coordinator.ml"
      ]
    },
    {
      "signature": "violations",
      "files": [
        "chinese_best_practices_backup.ml",
        "chinese_best_practices/core/practice_coordinator.ml"
      ]
    },
    {
      "signature": "violations",
      "files": [
        "chinese_best_practices_backup.ml",
        "chinese_best_practices/core/practice_coordinator.ml"
      ]
    },
    {
      "signature": "comprehensive_practice_check?(config",
      "files": [
        "chinese_best_practices_backup.ml",
        "chinese_best_practices/core/practice_coordinator.ml"
      ]
    },
    {
      "signature": "violations",
      "files": [
        "chinese_best_practices_backup.ml",
        "chinese_best_practices/core/practice_coordinator.ml"
      ]
    },
    {
      "signature": "filtered_violations",
      "files": [
        "chinese_best_practices_backup.ml",
        "chinese_best_practices/core/practice_coordinator.ml"
      ]
    },
    {
      "signature": "violations",
      "files": [
        "chinese_best_practices_backup.ml",
        "chinese_best_practices/checkers/style_consistency_checker.ml"
      ]
    },
    {
      "signature": "_",
      "files": [
        "main.ml",
        "chinese_best_practices/checkers/style_consistency_checker.ml"
      ]
    },
    {
      "signature": "_",
      "files": [
        "main.ml",
        "chinese_best_practices/checkers/style_consistency_checker.ml"
      ]
    },
    {
      "signature": "violations",
      "files": [
        "chinese_best_practices_backup.ml",
        "chinese_best_practices/checkers/style_consistency_checker.ml"
      ]
    },
    {
      "signature": "_",
      "files": [
        "main.ml",
        "chinese_best_practices/checkers/style_consistency_checker.ml"
      ]
    },
    {
      "signature": "violations",
      "files": [
        "chinese_best_practices_backup.ml",
        "chinese_best_practices/checkers/style_consistency_checker.ml"
      ]
    },
    {
      "signature": "_",
      "files": [
        "main.ml",
        "chinese_best_practices/checkers/style_consistency_checker.ml"
      ]
    },
    {
      "signature": "violations",
      "files": [
        "chinese_best_practices_backup.ml",
        "chinese_best_practices/checkers/classical_style_checker.ml"
      ]
    },
    {
      "signature": "_",
      "files": [
        "main.ml",
        "chinese_best_practices/checkers/classical_style_checker.ml"
      ]
    },
    {
      "signature": "check_categorycode category",
      "files": [
        "chinese_best_practices/checkers/style_consistency_checker.ml",
        "chinese_best_practices/checkers/classical_style_checker.ml"
      ]
    },
    {
      "signature": "category_rules",
      "files": [
        "chinese_best_practices/checkers/style_consistency_checker.ml",
        "chinese_best_practices/checkers/classical_style_checker.ml"
      ]
    },
    {
      "signature": "violations",
      "files": [
        "chinese_best_practices_backup.ml",
        "chinese_best_practices/checkers/classical_style_checker.ml"
      ]
    },
    {
      "signature": "_",
      "files": [
        "main.ml",
        "chinese_best_practices/checkers/classical_style_checker.ml"
      ]
    },
    {
      "signature": "get_supported_categories()",
      "files": [
        "chinese_best_practices/checkers/style_consistency_checker.ml",
        "chinese_best_practices/checkers/classical_style_checker.ml"
      ]
    },
    {
      "signature": "check_with_severity_filtercode min_severity",
      "files": [
        "chinese_best_practices/checkers/style_consistency_checker.ml",
        "chinese_best_practices/checkers/classical_style_checker.ml"
      ]
    },
    {
      "signature": "severity_rules",
      "files": [
        "chinese_best_practices/checkers/style_consistency_checker.ml",
        "chinese_best_practices/checkers/classical_style_checker.ml"
      ]
    },
    {
      "signature": "violations",
      "files": [
        "chinese_best_practices_backup.ml",
        "chinese_best_practices/checkers/classical_style_checker.ml"
      ]
    },
    {
      "signature": "_",
      "files": [
        "main.ml",
        "chinese_best_practices/checkers/classical_style_checker.ml"
      ]
    },
    {
      "signature": "violations",
      "files": [
        "chinese_best_practices_backup.ml",
        "chinese_best_practices/checkers/ai_friendly_checker.ml"
      ]
    },
    {
      "signature": "_",
      "files": [
        "main.ml",
        "chinese_best_practices/checkers/ai_friendly_checker.ml"
      ]
    },
    {
      "signature": "check_categorycode category",
      "files": [
        "chinese_best_practices/checkers/style_consistency_checker.ml",
        "chinese_best_practices/checkers/ai_friendly_checker.ml"
      ]
    },
    {
      "signature": "category_rules",
      "files": [
        "chinese_best_practices/checkers/style_consistency_checker.ml",
        "chinese_best_practices/checkers/ai_friendly_checker.ml"
      ]
    },
    {
      "signature": "violations",
      "files": [
        "chinese_best_practices_backup.ml",
        "chinese_best_practices/checkers/ai_friendly_checker.ml"
      ]
    },
    {
      "signature": "_",
      "files": [
        "main.ml",
        "chinese_best_practices/checkers/ai_friendly_checker.ml"
      ]
    },
    {
      "signature": "get_supported_categories()",
      "files": [
        "chinese_best_practices/checkers/style_consistency_checker.ml",
        "chinese_best_practices/checkers/ai_friendly_checker.ml"
      ]
    },
    {
      "signature": "check_with_severity_filtercode min_severity",
      "files": [
        "chinese_best_practices/checkers/style_consistency_checker.ml",
        "chinese_best_practices/checkers/ai_friendly_checker.ml"
      ]
    },
    {
      "signature": "severity_rules",
      "files": [
        "chinese_best_practices/checkers/style_consistency_checker.ml",
        "chinese_best_practices/checkers/ai_friendly_checker.ml"
      ]
    },
    {
      "signature": "violations",
      "files": [
        "chinese_best_practices_backup.ml",
        "chinese_best_practices/checkers/ai_friendly_checker.ml"
      ]
    },
    {
      "signature": "_",
      "files": [
        "main.ml",
        "chinese_best_practices/checkers/ai_friendly_checker.ml"
      ]
    },
    {
      "signature": "violations",
      "files": [
        "chinese_best_practices_backup.ml",
        "chinese_best_practices/checkers/idiomatic_checker.ml"
      ]
    },
    {
      "signature": "_",
      "files": [
        "main.ml",
        "chinese_best_practices/checkers/idiomatic_checker.ml"
      ]
    },
    {
      "signature": "result",
      "files": [
        "interpreter.ml",
        "chinese_best_practices/checkers/idiomatic_checker.ml"
      ]
    },
    {
      "signature": "check_categorycode category",
      "files": [
        "chinese_best_practices/checkers/style_consistency_checker.ml",
        "chinese_best_practices/checkers/idiomatic_checker.ml"
      ]
    },
    {
      "signature": "category_rules",
      "files": [
        "chinese_best_practices/checkers/style_consistency_checker.ml",
        "chinese_best_practices/checkers/idiomatic_checker.ml"
      ]
    },
    {
      "signature": "violations",
      "files": [
        "chinese_best_practices_backup.ml",
        "chinese_best_practices/checkers/idiomatic_checker.ml"
      ]
    },
    {
      "signature": "_",
      "files": [
        "main.ml",
        "chinese_best_practices/checkers/idiomatic_checker.ml"
      ]
    },
    {
      "signature": "violation",
      "files": [
        "chinese_best_practices/checkers/idiomatic_checker.ml",
        "chinese_best_practices/checkers/idiomatic_checker.ml"
      ]
    },
    {
      "signature": "result",
      "files": [
        "interpreter.ml",
        "chinese_best_practices/checkers/idiomatic_checker.ml"
      ]
    },
    {
      "signature": "get_supported_categories()",
      "files": [
        "chinese_best_practices/checkers/style_consistency_checker.ml",
        "chinese_best_practices/checkers/idiomatic_checker.ml"
      ]
    },
    {
      "signature": "check_with_severity_filtercode min_severity",
      "files": [
        "chinese_best_practices/checkers/style_consistency_checker.ml",
        "chinese_best_practices/checkers/idiomatic_checker.ml"
      ]
    },
    {
      "signature": "severity_rules",
      "files": [
        "chinese_best_practices/checkers/style_consistency_checker.ml",
        "chinese_best_practices/checkers/idiomatic_checker.ml"
      ]
    },
    {
      "signature": "violations",
      "files": [
        "chinese_best_practices_backup.ml",
        "chinese_best_practices/checkers/idiomatic_checker.ml"
      ]
    },
    {
      "signature": "_",
      "files": [
        "main.ml",
        "chinese_best_practices/checkers/idiomatic_checker.ml"
      ]
    },
    {
      "signature": "violation",
      "files": [
        "chinese_best_practices/checkers/idiomatic_checker.ml",
        "chinese_best_practices/checkers/idiomatic_checker.ml"
      ]
    },
    {
      "signature": "result",
      "files": [
        "interpreter.ml",
        "chinese_best_practices/checkers/idiomatic_checker.ml"
      ]
    },
    {
      "signature": "violations",
      "files": [
        "chinese_best_practices_backup.ml",
        "chinese_best_practices/checkers/word_order_checker.ml"
      ]
    },
    {
      "signature": "_",
      "files": [
        "main.ml",
        "chinese_best_practices/checkers/word_order_checker.ml"
      ]
    },
    {
      "signature": "violation",
      "files": [
        "chinese_best_practices/checkers/idiomatic_checker.ml",
        "chinese_best_practices/checkers/word_order_checker.ml"
      ]
    },
    {
      "signature": "result",
      "files": [
        "interpreter.ml",
        "chinese_best_practices/checkers/word_order_checker.ml"
      ]
    },
    {
      "signature": "check_categorycode category",
      "files": [
        "chinese_best_practices/checkers/style_consistency_checker.ml",
        "chinese_best_practices/checkers/word_order_checker.ml"
      ]
    },
    {
      "signature": "category_rules",
      "files": [
        "chinese_best_practices/checkers/style_consistency_checker.ml",
        "chinese_best_practices/checkers/word_order_checker.ml"
      ]
    },
    {
      "signature": "violations",
      "files": [
        "chinese_best_practices_backup.ml",
        "chinese_best_practices/checkers/word_order_checker.ml"
      ]
    },
    {
      "signature": "_",
      "files": [
        "main.ml",
        "chinese_best_practices/checkers/word_order_checker.ml"
      ]
    },
    {
      "signature": "violation",
      "files": [
        "chinese_best_practices/checkers/idiomatic_checker.ml",
        "chinese_best_practices/checkers/word_order_checker.ml"
      ]
    },
    {
      "signature": "result",
      "files": [
        "interpreter.ml",
        "chinese_best_practices/checkers/word_order_checker.ml"
      ]
    },
    {
      "signature": "get_supported_categories()",
      "files": [
        "chinese_best_practices/checkers/style_consistency_checker.ml",
        "chinese_best_practices/checkers/word_order_checker.ml"
      ]
    },
    {
      "signature": "check_with_severity_filtercode min_severity",
      "files": [
        "chinese_best_practices/checkers/style_consistency_checker.ml",
        "chinese_best_practices/checkers/word_order_checker.ml"
      ]
    },
    {
      "signature": "severity_rules",
      "files": [
        "chinese_best_practices/checkers/style_consistency_checker.ml",
        "chinese_best_practices/checkers/word_order_checker.ml"
      ]
    },
    {
      "signature": "violations",
      "files": [
        "chinese_best_practices_backup.ml",
        "chinese_best_practices/checkers/word_order_checker.ml"
      ]
    },
    {
      "signature": "_",
      "files": [
        "main.ml",
        "chinese_best_practices/checkers/word_order_checker.ml"
      ]
    },
    {
      "signature": "violation",
      "files": [
        "chinese_best_practices/checkers/idiomatic_checker.ml",
        "chinese_best_practices/checkers/word_order_checker.ml"
      ]
    },
    {
      "signature": "result",
      "files": [
        "interpreter.ml",
        "chinese_best_practices/checkers/word_order_checker.ml"
      ]
    },
    {
      "signature": "violations",
      "files": [
        "chinese_best_practices_backup.ml",
        "chinese_best_practices/checkers/mixed_language_checker.ml"
      ]
    },
    {
      "signature": "_",
      "files": [
        "main.ml",
        "chinese_best_practices/checkers/mixed_language_checker.ml"
      ]
    },
    {
      "signature": "violation",
      "files": [
        "chinese_best_practices/checkers/idiomatic_checker.ml",
        "chinese_best_practices/checkers/mixed_language_checker.ml"
      ]
    },
    {
      "signature": "result",
      "files": [
        "interpreter.ml",
        "chinese_best_practices/checkers/mixed_language_checker.ml"
      ]
    },
    {
      "signature": "check_categorycode category",
      "files": [
        "chinese_best_practices/checkers/style_consistency_checker.ml",
        "chinese_best_practices/checkers/mixed_language_checker.ml"
      ]
    },
    {
      "signature": "category_rules",
      "files": [
        "chinese_best_practices/checkers/style_consistency_checker.ml",
        "chinese_best_practices/checkers/mixed_language_checker.ml"
      ]
    },
    {
      "signature": "violations",
      "files": [
        "chinese_best_practices_backup.ml",
        "chinese_best_practices/checkers/mixed_language_checker.ml"
      ]
    },
    {
      "signature": "_",
      "files": [
        "main.ml",
        "chinese_best_practices/checkers/mixed_language_checker.ml"
      ]
    },
    {
      "signature": "violation",
      "files": [
        "chinese_best_practices/checkers/idiomatic_checker.ml",
        "chinese_best_practices/checkers/mixed_language_checker.ml"
      ]
    },
    {
      "signature": "result",
      "files": [
        "interpreter.ml",
        "chinese_best_practices/checkers/mixed_language_checker.ml"
      ]
    },
    {
      "signature": "get_supported_categories()",
      "files": [
        "chinese_best_practices/checkers/style_consistency_checker.ml",
        "chinese_best_practices/checkers/mixed_language_checker.ml"
      ]
    },
    {
      "signature": "check_with_severity_filtercode min_severity",
      "files": [
        "chinese_best_practices/checkers/style_consistency_checker.ml",
        "chinese_best_practices/checkers/mixed_language_checker.ml"
      ]
    },
    {
      "signature": "severity_rules",
      "files": [
        "chinese_best_practices/checkers/style_consistency_checker.ml",
        "chinese_best_practices/checkers/mixed_language_checker.ml"
      ]
    },
    {
      "signature": "violations",
      "files": [
        "chinese_best_practices_backup.ml",
        "chinese_best_practices/checkers/mixed_language_checker.ml"
      ]
    },
    {
      "signature": "_",
      "files": [
        "main.ml",
        "chinese_best_practices/checkers/mixed_language_checker.ml"
      ]
    },
    {
      "signature": "violation",
      "files": [
        "chinese_best_practices/checkers/idiomatic_checker.ml",
        "chinese_best_practices/checkers/mixed_language_checker.ml"
      ]
    },
    {
      "signature": "result",
      "files": [
        "interpreter.ml",
        "chinese_best_practices/checkers/mixed_language_checker.ml"
      ]
    },
    {
      "signature": "severity_level",
      "files": [
        "chinese_best_practices/core/practice_coordinator.ml",
        "chinese_best_practices/rules/idiomatic_rules.ml"
      ]
    },
    {
      "signature": "min_level",
      "files": [
        "chinese_best_practices/core/practice_coordinator.ml",
        "chinese_best_practices/rules/idiomatic_rules.ml"
      ]
    },
    {
      "signature": "get_rules_by_categorycategory",
      "files": [
        "chinese_best_practices/rules/idiomatic_rules.ml",
        "chinese_best_practices/rules/mixed_language_rules.ml"
      ]
    },
    {
      "signature": "get_all_categories()",
      "files": [
        "chinese_best_practices/rules/idiomatic_rules.ml",
        "chinese_best_practices/rules/mixed_language_rules.ml"
      ]
    },
    {
      "signature": "get_rules_by_severitymin_severity",
      "files": [
        "chinese_best_practices/rules/idiomatic_rules.ml",
        "chinese_best_practices/rules/mixed_language_rules.ml"
      ]
    },
    {
      "signature": "severity_level",
      "files": [
        "chinese_best_practices/core/practice_coordinator.ml",
        "chinese_best_practices/rules/mixed_language_rules.ml"
      ]
    },
    {
      "signature": "min_level",
      "files": [
        "chinese_best_practices/core/practice_coordinator.ml",
        "chinese_best_practices/rules/mixed_language_rules.ml"
      ]
    },
    {
      "signature": "get_rules_by_categorycategory",
      "files": [
        "chinese_best_practices/rules/idiomatic_rules.ml",
        "chinese_best_practices/rules/word_order_rules.ml"
      ]
    },
    {
      "signature": "get_all_categories()",
      "files": [
        "chinese_best_practices/rules/idiomatic_rules.ml",
        "chinese_best_practices/rules/word_order_rules.ml"
      ]
    },
    {
      "signature": "get_rules_by_severitymin_severity",
      "files": [
        "chinese_best_practices/rules/idiomatic_rules.ml",
        "chinese_best_practices/rules/word_order_rules.ml"
      ]
    },
    {
      "signature": "severity_level",
      "files": [
        "chinese_best_practices/core/practice_coordinator.ml",
        "chinese_best_practices/rules/word_order_rules.ml"
      ]
    },
    {
      "signature": "min_level",
      "files": [
        "chinese_best_practices/core/practice_coordinator.ml",
        "chinese_best_practices/rules/word_order_rules.ml"
      ]
    },
    {
      "signature": "buffer",
      "files": [
        "error_messages_reporting.ml",
        "chinese_best_practices/reporters/violation_reporter.ml"
      ]
    },
    {
      "signature": "buffer",
      "files": [
        "error_messages_reporting.ml",
        "chinese_best_practices/reporters/violation_reporter.ml"
      ]
    },
    {
      "signature": "buffer",
      "files": [
        "error_messages_reporting.ml",
        "chinese_best_practices/reporters/violation_reporter.ml"
      ]
    },
    {
      "signature": "error_count, warning_count, style_count, info_count",
      "files": [
        "chinese_best_practices/reporters/violation_reporter.ml",
        "chinese_best_practices/reporters/violation_reporter.ml"
      ]
    },
    {
      "signature": "buffer",
      "files": [
        "error_messages_reporting.ml",
        "chinese_best_practices/reporters/violation_reporter.ml"
      ]
    },
    {
      "signature": "generate_practice_reportviolations",
      "files": [
        "chinese_best_practices_backup.ml",
        "chinese_best_practices/reporters/violation_reporter.ml"
      ]
    },
    {
      "signature": "buffer",
      "files": [
        "error_messages_reporting.ml",
        "chinese_best_practices/reporters/violation_reporter.ml"
      ]
    },
    {
      "signature": "trim_whitespaces",
      "files": [
        "data_loader_parser.ml",
        "poetry/data/poetry_json_parser.ml"
      ]
    },
    {
      "signature": "len",
      "files": [
        "c_codegen_context.ml",
        "poetry/data/poetry_json_parser.ml"
      ]
    },
    {
      "signature": "starti",
      "files": [
        "data_loader_parser.ml",
        "poetry/data/poetry_json_parser.ml"
      ]
    },
    {
      "signature": "finishi",
      "files": [
        "data_loader_parser.ml",
        "poetry/data/poetry_json_parser.ml"
      ]
    },
    {
      "signature": "s_start",
      "files": [
        "data_loader_parser.ml",
        "poetry/data/poetry_json_parser.ml"
      ]
    },
    {
      "signature": "s_end",
      "files": [
        "data_loader_parser.ml",
        "poetry/data/poetry_json_parser.ml"
      ]
    },
    {
      "signature": "parse_string_arraycontent",
      "files": [
        "data_loader_parser.ml",
        "poetry/data/poetry_json_parser.ml"
      ]
    },
    {
      "signature": "trimmed",
      "files": [
        "data_loader_parser.ml",
        "poetry/data/poetry_json_parser.ml"
      ]
    },
    {
      "signature": "inner",
      "files": [
        "data_loader_parser.ml",
        "poetry/data/poetry_json_parser.ml"
      ]
    },
    {
      "signature": "items",
      "files": [
        "data_loader_parser.ml",
        "poetry/data/poetry_json_parser.ml"
      ]
    },
    {
      "signature": "cleaned",
      "files": [
        "data_loader_parser.ml",
        "poetry/data/poetry_json_parser.ml"
      ]
    },
    {
      "signature": "colon_pos",
      "files": [
        "config/config_loader.ml",
        "poetry/data/poetry_json_parser.ml"
      ]
    },
    {
      "signature": "content",
      "files": [
        "token_compatibility_literals.ml",
        "poetry/data/poetry_word_class_loader.ml"
      ]
    },
    {
      "signature": "file_path",
      "files": [
        "poetry/data/poetry_word_class_loader.ml",
        "poetry/data/poetry_word_class_loader.ml"
      ]
    },
    {
      "signature": "content",
      "files": [
        "token_compatibility_literals.ml",
        "poetry/data/poetry_word_class_loader.ml"
      ]
    },
    {
      "signature": "category_content",
      "files": [
        "poetry/data/poetry_word_class_loader.ml",
        "poetry/data/poetry_word_class_loader.ml"
      ]
    },
    {
      "signature": "words_content",
      "files": [
        "poetry/data/poetry_word_class_loader.ml",
        "poetry/data/poetry_word_class_loader.ml"
      ]
    },
    {
      "signature": "words",
      "files": [
        "poetry/data/poetry_word_class_loader.ml",
        "poetry/data/poetry_word_class_loader.ml"
      ]
    },
    {
      "signature": "file_path",
      "files": [
        "poetry/data/poetry_word_class_loader.ml",
        "poetry/data/poetry_word_class_loader.ml"
      ]
    },
    {
      "signature": "content",
      "files": [
        "token_compatibility_literals.ml",
        "poetry/data/poetry_word_class_loader.ml"
      ]
    },
    {
      "signature": "category_content",
      "files": [
        "poetry/data/poetry_word_class_loader.ml",
        "poetry/data/poetry_word_class_loader.ml"
      ]
    },
    {
      "signature": "words_content",
      "files": [
        "poetry/data/poetry_word_class_loader.ml",
        "poetry/data/poetry_word_class_loader.ml"
      ]
    },
    {
      "signature": "words",
      "files": [
        "poetry/data/poetry_word_class_loader.ml",
        "poetry/data/poetry_word_class_loader.ml"
      ]
    },
    {
      "signature": "size",
      "files": [
        "builtin_array.ml",
        "poetry/data/poetry_word_class_loader.ml"
      ]
    },
    {
      "signature": "color",
      "files": [
        "logger.ml",
        "poetry/data/poetry_word_class_loader.ml"
      ]
    },
    {
      "signature": "file_path",
      "files": [
        "poetry/data/poetry_word_class_loader.ml",
        "poetry/data/poetry_word_class_loader.ml"
      ]
    },
    {
      "signature": "content",
      "files": [
        "token_compatibility_literals.ml",
        "poetry/data/poetry_word_class_loader.ml"
      ]
    },
    {
      "signature": "category_content",
      "files": [
        "poetry/data/poetry_word_class_loader.ml",
        "poetry/data/poetry_word_class_loader.ml"
      ]
    },
    {
      "signature": "words_content",
      "files": [
        "poetry/data/poetry_word_class_loader.ml",
        "poetry/data/poetry_word_class_loader.ml"
      ]
    },
    {
      "signature": "words",
      "files": [
        "poetry/data/poetry_word_class_loader.ml",
        "poetry/data/poetry_word_class_loader.ml"
      ]
    },
    {
      "signature": "file_path",
      "files": [
        "poetry/data/poetry_word_class_loader.ml",
        "poetry/data/poetry_word_class_loader.ml"
      ]
    },
    {
      "signature": "content",
      "files": [
        "token_compatibility_literals.ml",
        "poetry/data/poetry_word_class_loader.ml"
      ]
    },
    {
      "signature": "category_content",
      "files": [
        "poetry/data/poetry_word_class_loader.ml",
        "poetry/data/poetry_word_class_loader.ml"
      ]
    },
    {
      "signature": "words_content",
      "files": [
        "poetry/data/poetry_word_class_loader.ml",
        "poetry/data/poetry_word_class_loader.ml"
      ]
    },
    {
      "signature": "words",
      "files": [
        "poetry/data/poetry_word_class_loader.ml",
        "poetry/data/poetry_word_class_loader.ml"
      ]
    },
    {
      "signature": "file_path",
      "files": [
        "poetry/data/poetry_word_class_loader.ml",
        "poetry/data/poetry_word_class_loader.ml"
      ]
    },
    {
      "signature": "content",
      "files": [
        "token_compatibility_literals.ml",
        "poetry/data/poetry_word_class_loader.ml"
      ]
    },
    {
      "signature": "category_content",
      "files": [
        "poetry/data/poetry_word_class_loader.ml",
        "poetry/data/poetry_word_class_loader.ml"
      ]
    },
    {
      "signature": "words_content",
      "files": [
        "poetry/data/poetry_word_class_loader.ml",
        "poetry/data/poetry_word_class_loader.ml"
      ]
    },
    {
      "signature": "words",
      "files": [
        "poetry/data/poetry_word_class_loader.ml",
        "poetry/data/poetry_word_class_loader.ml"
      ]
    },
    {
      "signature": "cached_data",
      "files": [
        "poetry/rhyme_json_cache.ml",
        "poetry/data/expanded_word_class_data.ml"
      ]
    },
    {
      "signature": "data",
      "files": [
        "poetry/rhyme_json_io.ml",
        "poetry/data/expanded_word_class_data.ml"
      ]
    },
    {
      "signature": "d0, d1, d2",
      "files": [
        "poetry/data/expanded_word_class_data.ml",
        "poetry/data/expanded_word_class_data.ml"
      ]
    },
    {
      "signature": "cardinal_numbers",
      "files": [
        "poetry/data/poetry_word_class_loader.ml",
        "poetry/data/expanded_word_class_data.ml"
      ]
    },
    {
      "signature": "ordinal_numbers",
      "files": [
        "poetry/data/poetry_word_class_loader.ml",
        "poetry/data/expanded_word_class_data.ml"
      ]
    },
    {
      "signature": "data",
      "files": [
        "poetry/rhyme_json_io.ml",
        "poetry/data/expanded_word_class_data.ml"
      ]
    },
    {
      "signature": "ic",
      "files": [
        "builtin_io.ml",
        "poetry/data/rhyme_data_loader.ml"
      ]
    },
    {
      "signature": "content",
      "files": [
        "token_compatibility_literals.ml",
        "poetry/data/rhyme_data_loader.ml"
      ]
    },
    {
      "signature": "trim_whitespaces",
      "files": [
        "data_loader_parser.ml",
        "poetry/data/rhyme_data_loader.ml"
      ]
    },
    {
      "signature": "len",
      "files": [
        "c_codegen_context.ml",
        "poetry/data/rhyme_data_loader.ml"
      ]
    },
    {
      "signature": "starti",
      "files": [
        "data_loader_parser.ml",
        "poetry/data/rhyme_data_loader.ml"
      ]
    },
    {
      "signature": "finishi",
      "files": [
        "data_loader_parser.ml",
        "poetry/data/rhyme_data_loader.ml"
      ]
    },
    {
      "signature": "s_start",
      "files": [
        "data_loader_parser.ml",
        "poetry/data/rhyme_data_loader.ml"
      ]
    },
    {
      "signature": "s_end",
      "files": [
        "data_loader_parser.ml",
        "poetry/data/rhyme_data_loader.ml"
      ]
    },
    {
      "signature": "field_pattern",
      "files": [
        "poetry/data/poetry_json_parser.ml",
        "poetry/data/rhyme_data_loader.ml"
      ]
    },
    {
      "signature": "field_start",
      "files": [
        "poetry/data/poetry_json_parser.ml",
        "poetry/data/rhyme_data_loader.ml"
      ]
    },
    {
      "signature": "colon_pos",
      "files": [
        "config/config_loader.ml",
        "poetry/data/rhyme_data_loader.ml"
      ]
    },
    {
      "signature": "value_start",
      "files": [
        "poetry/data/poetry_json_parser.ml",
        "poetry/data/rhyme_data_loader.ml"
      ]
    },
    {
      "signature": "end_pos",
      "files": [
        "string_processing/core_string_ops.ml",
        "poetry/data/rhyme_data_loader.ml"
      ]
    },
    {
      "signature": "end_pos",
      "files": [
        "string_processing/core_string_ops.ml",
        "poetry/data/rhyme_data_loader.ml"
      ]
    },
    {
      "signature": "end_pos",
      "files": [
        "string_processing/core_string_ops.ml",
        "poetry/data/rhyme_data_loader.ml"
      ]
    },
    {
      "signature": "end_pos",
      "files": [
        "string_processing/core_string_ops.ml",
        "poetry/data/rhyme_data_loader.ml"
      ]
    },
    {
      "signature": "content",
      "files": [
        "token_compatibility_literals.ml",
        "poetry/data/rhyme_data_loader.ml"
      ]
    },
    {
      "signature": "inner",
      "files": [
        "data_loader_parser.ml",
        "poetry/data/rhyme_data_loader.ml"
      ]
    },
    {
      "signature": "inner",
      "files": [
        "data_loader_parser.ml",
        "poetry/data/rhyme_data_loader.ml"
      ]
    },
    {
      "signature": "parts",
      "files": [
        "builtin_string.ml",
        "poetry/data/rhyme_data_loader.ml"
      ]
    },
    {
      "signature": "trimmed",
      "files": [
        "data_loader_parser.ml",
        "poetry/data/rhyme_data_loader.ml"
      ]
    },
    {
      "signature": "file_path",
      "files": [
        "poetry/data/poetry_word_class_loader.ml",
        "poetry/data/rhyme_data_loader.ml"
      ]
    },
    {
      "signature": "content",
      "files": [
        "token_compatibility_literals.ml",
        "poetry/data/rhyme_data_loader.ml"
      ]
    },
    {
      "signature": "rhyme_groups",
      "files": [
        "poetry/rhyme_scoring.ml",
        "poetry/data/rhyme_data_loader.ml"
      ]
    },
    {
      "signature": "category_str",
      "files": [
        "poetry/rhyme_json_data_loader.ml",
        "poetry/data/rhyme_data_loader.ml"
      ]
    },
    {
      "signature": "group",
      "files": [
        "poetry/rhyme_api_core.ml",
        "poetry/data/rhyme_data_loader.ml"
      ]
    },
    {
      "signature": "chars",
      "files": [
        "builtin_shared_utils.ml",
        "poetry/data/rhyme_data_loader.ml"
      ]
    },
    {
      "signature": "file_path",
      "files": [
        "poetry/data/poetry_word_class_loader.ml",
        "poetry/data/rhyme_data_loader.ml"
      ]
    },
    {
      "signature": "content",
      "files": [
        "token_compatibility_literals.ml",
        "poetry/data/rhyme_data_loader.ml"
      ]
    },
    {
      "signature": "rhyme_groups",
      "files": [
        "poetry/rhyme_scoring.ml",
        "poetry/data/rhyme_data_loader.ml"
      ]
    },
    {
      "signature": "load_rhyme_groupgroup_name",
      "files": [
        "poetry/data/rhyme_data_loader.ml",
        "poetry/data/rhyme_data_loader.ml"
      ]
    },
    {
      "signature": "group_content",
      "files": [
        "poetry/data/rhyme_data_loader.ml",
        "poetry/data/rhyme_data_loader.ml"
      ]
    },
    {
      "signature": "category_str",
      "files": [
        "poetry/rhyme_json_data_loader.ml",
        "poetry/data/rhyme_data_loader.ml"
      ]
    },
    {
      "signature": "category",
      "files": [
        "poetry/data/rhyme_data_loader.ml",
        "poetry/data/rhyme_data_loader.ml"
      ]
    },
    {
      "signature": "group",
      "files": [
        "poetry/rhyme_api_core.ml",
        "poetry/data/rhyme_data_loader.ml"
      ]
    },
    {
      "signature": "subgroups_content",
      "files": [
        "poetry/data/rhyme_data_loader.ml",
        "poetry/data/rhyme_data_loader.ml"
      ]
    },
    {
      "signature": "load_subgroupsubgroup_name",
      "files": [
        "poetry/data/rhyme_data_loader.ml",
        "poetry/data/rhyme_data_loader.ml"
      ]
    },
    {
      "signature": "subgroup_content",
      "files": [
        "poetry/data/rhyme_data_loader.ml",
        "poetry/data/rhyme_data_loader.ml"
      ]
    },
    {
      "signature": "chars_array",
      "files": [
        "poetry/data/rhyme_data_loader.ml",
        "poetry/data/rhyme_data_loader.ml"
      ]
    },
    {
      "signature": "chars",
      "files": [
        "builtin_shared_utils.ml",
        "poetry/data/rhyme_data_loader.ml"
      ]
    },
    {
      "signature": "core_chars",
      "files": [
        "poetry/data/rhyme_data_loader.ml",
        "poetry/data/rhyme_data_loader.ml"
      ]
    },
    {
      "signature": "basic_chars",
      "files": [
        "poetry/data/rhyme_data_loader.ml",
        "poetry/data/rhyme_data_loader.ml"
      ]
    },
    {
      "signature": "format_error",
      "files": [
        "data_loader_error.ml",
        "poetry/data/tone_data_loader.ml"
      ]
    },
    {
      "signature": "project_root",
      "files": [
        "data_loader_file.ml",
        "poetry/data/tone_data_loader.ml"
      ]
    },
    {
      "signature": "json",
      "files": [
        "poetry/rhyme_json_data_loader.ml",
        "poetry/data/tone_data_loader.ml"
      ]
    },
    {
      "signature": "cached_data",
      "files": [
        "poetry/rhyme_json_cache.ml",
        "poetry/data/tone_data_loader.ml"
      ]
    },
    {
      "signature": "data",
      "files": [
        "poetry/rhyme_json_io.ml",
        "poetry/data/tone_data_loader.ml"
      ]
    },
    {
      "signature": "total_chars",
      "files": [
        "poetry/rhyme_json_access.ml",
        "poetry/data/tone_data_loader.ml"
      ]
    },
    {
      "signature": "expanded_rhyme_database",
      "files": [
        "poetry/rhyme_data.ml",
        "poetry/data/expanded_rhyme_data.ml"
      ]
    },
    {
      "signature": "category",
      "files": [
        "poetry/data/rhyme_data_loader.ml",
        "poetry/data/expanded_rhyme_data.ml"
      ]
    },
    {
      "signature": "group",
      "files": [
        "poetry/rhyme_api_core.ml",
        "poetry/data/expanded_rhyme_data.ml"
      ]
    },
    {
      "signature": "expanded_rhyme_char_count",
      "files": [
        "poetry/rhyme_data.ml",
        "poetry/data/expanded_rhyme_data.ml"
      ]
    },
    {
      "signature": "get_expanded_rhyme_database()",
      "files": [
        "poetry/rhyme_data.ml",
        "poetry/data/expanded_rhyme_data.ml"
      ]
    },
    {
      "signature": "is_in_expanded_rhyme_databasechar",
      "files": [
        "poetry/rhyme_data.ml",
        "poetry/data/expanded_rhyme_data.ml"
      ]
    },
    {
      "signature": "get_expanded_char_list()",
      "files": [
        "poetry/data/expanded_word_class_data.ml",
        "poetry/data/expanded_rhyme_data.ml"
      ]
    },
    {
      "signature": "format_error",
      "files": [
        "data_loader_error.ml",
        "poetry/data/externalized_data_loader_refactored.ml"
      ]
    },
    {
      "signature": "basic_classifiers",
      "files": [
        "poetry/data/poetry_data_fallback.ml",
        "poetry/data/externalized_data_loader_refactored.ml"
      ]
    },
    {
      "signature": "safe_load_tone_data()",
      "files": [
        "poetry/data/tone_data_loader.ml",
        "poetry/data/externalized_data_loader_refactored.ml"
      ]
    },
    {
      "signature": "ping_sheng",
      "files": [
        "poetry/data/rhyme_data_loader.ml",
        "poetry/data/externalized_data_loader_refactored.ml"
      ]
    },
    {
      "signature": "shang_sheng",
      "files": [
        "poetry/data/tone_data_loader.ml",
        "poetry/data/externalized_data_loader_refactored.ml"
      ]
    },
    {
      "signature": "qu_sheng",
      "files": [
        "poetry/data/tone_data_loader.ml",
        "poetry/data/externalized_data_loader_refactored.ml"
      ]
    },
    {
      "signature": "ru_sheng",
      "files": [
        "poetry/data/tone_data_loader.ml",
        "poetry/data/externalized_data_loader_refactored.ml"
      ]
    },
    {
      "signature": "ping_sheng, _, _, _",
      "files": [
        "poetry/data/tone_data_loader.ml",
        "poetry/data/externalized_data_loader_refactored.ml"
      ]
    },
    {
      "signature": "_, shang_sheng, _, _",
      "files": [
        "poetry/data/tone_data_loader.ml",
        "poetry/data/externalized_data_loader_refactored.ml"
      ]
    },
    {
      "signature": "_, _, qu_sheng, _",
      "files": [
        "poetry/data/tone_data_loader.ml",
        "poetry/data/externalized_data_loader_refactored.ml"
      ]
    },
    {
      "signature": "_, _, _, ru_sheng",
      "files": [
        "poetry/data/tone_data_loader.ml",
        "poetry/data/externalized_data_loader_refactored.ml"
      ]
    },
    {
      "signature": "nature_nouns",
      "files": [
        "poetry/data/expanded_word_class_data.ml",
        "poetry/data/externalized_data_loader_refactored.ml"
      ]
    },
    {
      "signature": "classifiers",
      "files": [
        "poetry/data/poetry_word_class_loader.ml",
        "poetry/data/externalized_data_loader_refactored.ml"
      ]
    },
    {
      "signature": "tools_objects",
      "files": [
        "poetry/data/poetry_word_class_loader.ml",
        "poetry/data/externalized_data_loader_refactored.ml"
      ]
    },
    {
      "signature": "format_error",
      "files": [
        "data_loader_error.ml",
        "poetry/data/externalized_data_loader.ml"
      ]
    },
    {
      "signature": "basic_nature_nouns",
      "files": [
        "poetry/data/externalized_data_loader_refactored.ml",
        "poetry/data/externalized_data_loader.ml"
      ]
    },
    {
      "signature": "basic_classifiers",
      "files": [
        "poetry/data/poetry_data_fallback.ml",
        "poetry/data/externalized_data_loader.ml"
      ]
    },
    {
      "signature": "basic_tools_objects",
      "files": [
        "poetry/data/externalized_data_loader_refactored.ml",
        "poetry/data/externalized_data_loader.ml"
      ]
    },
    {
      "signature": "safe_load_nature_nouns()",
      "files": [
        "poetry/data/externalized_data_loader_refactored.ml",
        "poetry/data/externalized_data_loader.ml"
      ]
    },
    {
      "signature": "geography_words",
      "files": [
        "poetry/data/externalized_data_loader_refactored.ml",
        "poetry/data/externalized_data_loader.ml"
      ]
    },
    {
      "signature": "time_space_words",
      "files": [
        "poetry/data/externalized_data_loader_refactored.ml",
        "poetry/data/externalized_data_loader.ml"
      ]
    },
    {
      "signature": "safe_load_measuring_classifiers()",
      "files": [
        "poetry/data/externalized_data_loader_refactored.ml",
        "poetry/data/externalized_data_loader.ml"
      ]
    },
    {
      "signature": "_, _, classifiers",
      "files": [
        "poetry/data/externalized_data_loader_refactored.ml",
        "poetry/data/externalized_data_loader.ml"
      ]
    },
    {
      "signature": "safe_load_tools_objects()",
      "files": [
        "poetry/data/externalized_data_loader_refactored.ml",
        "poetry/data/externalized_data_loader.ml"
      ]
    },
    {
      "signature": "_, _, _, _, tools_objects, _, _, _, _, _",
      "files": [
        "poetry/data/externalized_data_loader_refactored.ml",
        "poetry/data/externalized_data_loader.ml"
      ]
    },
    {
      "signature": "safe_load_tone_data()",
      "files": [
        "poetry/data/tone_data_loader.ml",
        "poetry/data/externalized_data_loader.ml"
      ]
    },
    {
      "signature": "ping_sheng",
      "files": [
        "poetry/data/rhyme_data_loader.ml",
        "poetry/data/externalized_data_loader.ml"
      ]
    },
    {
      "signature": "shang_sheng",
      "files": [
        "poetry/data/tone_data_loader.ml",
        "poetry/data/externalized_data_loader.ml"
      ]
    },
    {
      "signature": "qu_sheng",
      "files": [
        "poetry/data/tone_data_loader.ml",
        "poetry/data/externalized_data_loader.ml"
      ]
    },
    {
      "signature": "ru_sheng",
      "files": [
        "poetry/data/tone_data_loader.ml",
        "poetry/data/externalized_data_loader.ml"
      ]
    },
    {
      "signature": "get_nature_nouns_list()",
      "files": [
        "poetry/data/externalized_data_loader_refactored.ml",
        "poetry/data/externalized_data_loader.ml"
      ]
    },
    {
      "signature": "get_measuring_classifiers_list()",
      "files": [
        "poetry/data/externalized_data_loader_refactored.ml",
        "poetry/data/externalized_data_loader.ml"
      ]
    },
    {
      "signature": "get_tools_objects_list()",
      "files": [
        "poetry/data/externalized_data_loader_refactored.ml",
        "poetry/data/externalized_data_loader.ml"
      ]
    },
    {
      "signature": "get_ping_sheng_list()",
      "files": [
        "poetry/data/externalized_data_loader_refactored.ml",
        "poetry/data/externalized_data_loader.ml"
      ]
    },
    {
      "signature": "ping_sheng, _, _, _",
      "files": [
        "poetry/data/tone_data_loader.ml",
        "poetry/data/externalized_data_loader.ml"
      ]
    },
    {
      "signature": "get_shang_sheng_list()",
      "files": [
        "poetry/data/externalized_data_loader_refactored.ml",
        "poetry/data/externalized_data_loader.ml"
      ]
    },
    {
      "signature": "_, shang_sheng, _, _",
      "files": [
        "poetry/data/tone_data_loader.ml",
        "poetry/data/externalized_data_loader.ml"
      ]
    },
    {
      "signature": "get_qu_sheng_list()",
      "files": [
        "poetry/data/externalized_data_loader_refactored.ml",
        "poetry/data/externalized_data_loader.ml"
      ]
    },
    {
      "signature": "_, _, qu_sheng, _",
      "files": [
        "poetry/data/tone_data_loader.ml",
        "poetry/data/externalized_data_loader.ml"
      ]
    },
    {
      "signature": "get_ru_sheng_list()",
      "files": [
        "poetry/data/externalized_data_loader_refactored.ml",
        "poetry/data/externalized_data_loader.ml"
      ]
    },
    {
      "signature": "_, _, _, ru_sheng",
      "files": [
        "poetry/data/tone_data_loader.ml",
        "poetry/data/externalized_data_loader.ml"
      ]
    },
    {
      "signature": "_",
      "files": [
        "main.ml",
        "poetry/data/externalized_data_loader.ml"
      ]
    },
    {
      "signature": "_",
      "files": [
        "main.ml",
        "poetry/data/externalized_data_loader.ml"
      ]
    },
    {
      "signature": "_",
      "files": [
        "main.ml",
        "poetry/data/externalized_data_loader.ml"
      ]
    },
    {
      "signature": "load_all_data()",
      "files": [
        "poetry/data/externalized_data_loader_refactored.ml",
        "poetry/data/externalized_data_loader.ml"
      ]
    },
    {
      "signature": "nature_nouns",
      "files": [
        "poetry/data/expanded_word_class_data.ml",
        "poetry/data/externalized_data_loader.ml"
      ]
    },
    {
      "signature": "classifiers",
      "files": [
        "poetry/data/poetry_word_class_loader.ml",
        "poetry/data/externalized_data_loader.ml"
      ]
    },
    {
      "signature": "tools_objects",
      "files": [
        "poetry/data/poetry_word_class_loader.ml",
        "poetry/data/externalized_data_loader.ml"
      ]
    },
    {
      "signature": "ping_sheng, shang_sheng, qu_sheng, ru_sheng",
      "files": [
        "poetry/data/externalized_data_loader_refactored.ml",
        "poetry/data/externalized_data_loader.ml"
      ]
    },
    {
      "signature": "format_error",
      "files": [
        "data_loader_error.ml",
        "poetry/data/expanded_data_loader.ml"
      ]
    },
    {
      "signature": "read_file_contentfilename",
      "files": [
        "data_loader_file.ml",
        "poetry/data/poetry_file_reader.ml"
      ]
    },
    {
      "signature": "ic",
      "files": [
        "builtin_io.ml",
        "poetry/data/poetry_file_reader.ml"
      ]
    },
    {
      "signature": "content",
      "files": [
        "token_compatibility_literals.ml",
        "poetry/data/poetry_file_reader.ml"
      ]
    },
    {
      "signature": "get_data_pathrelative_path",
      "files": [
        "data_loader_file.ml",
        "poetry/data/poetry_file_reader.ml"
      ]
    },
    {
      "signature": "project_root",
      "files": [
        "data_loader_file.ml",
        "poetry/data/poetry_file_reader.ml"
      ]
    },
    {
      "signature": "data_dir",
      "files": [
        "poetry/data/rhyme_data_loader.ml",
        "poetry/data/poetry_file_reader.ml"
      ]
    },
    {
      "signature": "an_yun_ping_sheng",
      "files": [
        "poetry/rhyme_data.ml",
        "poetry/data/an_yun_data.ml"
      ]
    },
    {
      "signature": "entry",
      "files": [
        "data_loader_cache.ml",
        "poetry/data/poetry_data_loader.ml"
      ]
    },
    {
      "signature": "ic",
      "files": [
        "builtin_io.ml",
        "poetry/data/poetry_data_loader.ml"
      ]
    },
    {
      "signature": "content",
      "files": [
        "token_compatibility_literals.ml",
        "poetry/data/poetry_data_loader.ml"
      ]
    },
    {
      "signature": "field_pattern",
      "files": [
        "poetry/data/poetry_json_parser.ml",
        "poetry/data/poetry_data_loader.ml"
      ]
    },
    {
      "signature": "value_start",
      "files": [
        "poetry/data/poetry_json_parser.ml",
        "poetry/data/poetry_data_loader.ml"
      ]
    },
    {
      "signature": "value_end",
      "files": [
        "poetry/data/poetry_json_parser.ml",
        "poetry/data/poetry_data_loader.ml"
      ]
    },
    {
      "signature": "category_str",
      "files": [
        "poetry/rhyme_json_data_loader.ml",
        "poetry/data/poetry_data_loader.ml"
      ]
    },
    {
      "signature": "category",
      "files": [
        "poetry/data/rhyme_data_loader.ml",
        "poetry/data/poetry_data_loader.ml"
      ]
    },
    {
      "signature": "group",
      "files": [
        "poetry/rhyme_api_core.ml",
        "poetry/data/poetry_data_loader.ml"
      ]
    },
    {
      "signature": "trimmed",
      "files": [
        "data_loader_parser.ml",
        "poetry/data/poetry_data_loader.ml"
      ]
    },
    {
      "signature": "inner",
      "files": [
        "data_loader_parser.ml",
        "poetry/data/poetry_data_loader.ml"
      ]
    },
    {
      "signature": "entries",
      "files": [
        "unified_token_registry.ml",
        "poetry/data/poetry_data_loader.ml"
      ]
    },
    {
      "signature": "data",
      "files": [
        "poetry/rhyme_json_io.ml",
        "poetry/data/poetry_data_loader.ml"
      ]
    },
    {
      "signature": "db",
      "files": [
        "poetry/data/poetry_data_loader.ml",
        "poetry/data/poetry_data_loader.ml"
      ]
    },
    {
      "signature": "db",
      "files": [
        "poetry/data/poetry_data_loader.ml",
        "poetry/data/poetry_data_loader.ml"
      ]
    },
    {
      "signature": "db",
      "files": [
        "poetry/data/poetry_data_loader.ml",
        "poetry/data/poetry_data_loader.ml"
      ]
    },
    {
      "signature": "db",
      "files": [
        "poetry/data/poetry_data_loader.ml",
        "poetry/data/poetry_data_loader.ml"
      ]
    },
    {
      "signature": "get_database_stats()",
      "files": [
        "poetry/rhyme_database.ml",
        "poetry/data/poetry_data_loader.ml"
      ]
    },
    {
      "signature": "db",
      "files": [
        "poetry/data/poetry_data_loader.ml",
        "poetry/data/poetry_data_loader.ml"
      ]
    },
    {
      "signature": "total_chars",
      "files": [
        "poetry/rhyme_json_access.ml",
        "poetry/data/poetry_data_loader.ml"
      ]
    },
    {
      "signature": "groups",
      "files": [
        "poetry/rhyme_lookup.ml",
        "poetry/data/poetry_data_loader.ml"
      ]
    },
    {
      "signature": "categories",
      "files": [
        "poetry/rhyme_lookup.ml",
        "poetry/data/poetry_data_loader.ml"
      ]
    },
    {
      "signature": "db",
      "files": [
        "poetry/data/poetry_data_loader.ml",
        "poetry/data/poetry_data_loader.ml"
      ]
    },
    {
      "signature": "errors",
      "files": [
        "nlf_semantic.ml",
        "poetry/data/poetry_data_loader.ml"
      ]
    },
    {
      "signature": "count",
      "files": [
        "refactoring_analyzer_duplication.ml",
        "poetry/data/poetry_data_loader.ml"
      ]
    },
    {
      "signature": "get_expanded_rhyme_database()",
      "files": [
        "poetry/rhyme_data.ml",
        "poetry/data/poetry_data_loader.ml"
      ]
    },
    {
      "signature": "is_in_expanded_rhyme_databasechar",
      "files": [
        "poetry/rhyme_data.ml",
        "poetry/data/poetry_data_loader.ml"
      ]
    },
    {
      "signature": "get_expanded_char_list()",
      "files": [
        "poetry/data/expanded_word_class_data.ml",
        "poetry/data/poetry_data_loader.ml"
      ]
    },
    {
      "signature": "clear_cache()",
      "files": [
        "data_loader_cache.ml",
        "poetry/data/poetry_data_loader.ml"
      ]
    },
    {
      "signature": "data",
      "files": [
        "poetry/rhyme_json_io.ml",
        "poetry/data/data_source_registry.ml"
      ]
    },
    {
      "signature": "create_rhyme_datachars category group",
      "files": [
        "poetry/data/expanded_rhyme_data.ml",
        "poetry/data/rhyme_groups/rhyme_types.ml"
      ]
    },
    {
      "signature": "string_of_rhyme_group",
      "files": [
        "poetry/rhyme_api_core.ml",
        "poetry/data/rhyme_groups/rhyme_types.ml"
      ]
    },
    {
      "signature": "is_ping_sheng",
      "files": [
        "poetry/rhyme_types.ml",
        "poetry/data/rhyme_groups/rhyme_types.ml"
      ]
    },
    {
      "signature": "is_ze_sheng",
      "files": [
        "poetry/rhyme_types.ml",
        "poetry/data/rhyme_groups/rhyme_types.ml"
      ]
    },
    {
      "signature": "expanded_rhyme_database",
      "files": [
        "poetry/rhyme_data.ml",
        "poetry/data/rhyme_groups/rhyme_database.ml"
      ]
    },
    {
      "signature": "all_data",
      "files": [
        "poetry/data/poetry_data_loader.ml",
        "poetry/data/rhyme_groups/rhyme_database.ml"
      ]
    },
    {
      "signature": "expanded_rhyme_char_count",
      "files": [
        "poetry/rhyme_data.ml",
        "poetry/data/rhyme_groups/rhyme_database.ml"
      ]
    },
    {
      "signature": "get_expanded_rhyme_database()",
      "files": [
        "poetry/rhyme_data.ml",
        "poetry/data/rhyme_groups/rhyme_database.ml"
      ]
    },
    {
      "signature": "is_in_expanded_rhyme_databasechar",
      "files": [
        "poetry/rhyme_data.ml",
        "poetry/data/rhyme_groups/rhyme_database.ml"
      ]
    },
    {
      "signature": "get_expanded_char_list()",
      "files": [
        "poetry/data/expanded_word_class_data.ml",
        "poetry/data/rhyme_groups/rhyme_database.ml"
      ]
    },
    {
      "signature": "get_all_rhyme_groups()",
      "files": [
        "poetry/rhyme_lookup.ml",
        "poetry/data/rhyme_groups/rhyme_database.ml"
      ]
    },
    {
      "signature": "get_database_stats()",
      "files": [
        "poetry/rhyme_database.ml",
        "poetry/data/rhyme_groups/rhyme_database.ml"
      ]
    },
    {
      "signature": "total_chars",
      "files": [
        "poetry/rhyme_json_access.ml",
        "poetry/data/rhyme_groups/rhyme_database.ml"
      ]
    },
    {
      "signature": "rhyme_groups",
      "files": [
        "poetry/rhyme_scoring.ml",
        "poetry/data/rhyme_groups/rhyme_database.ml"
      ]
    },
    {
      "signature": "rhyme_categories",
      "files": [
        "poetry/rhyme_scoring.ml",
        "poetry/data/rhyme_groups/rhyme_database.ml"
      ]
    },
    {
      "signature": "validate_database()",
      "files": [
        "poetry/data/poetry_data_loader.ml",
        "poetry/data/rhyme_groups/rhyme_database.ml"
      ]
    },
    {
      "signature": "chars",
      "files": [
        "builtin_shared_utils.ml",
        "poetry/data/rhyme_groups/rhyme_database.ml"
      ]
    },
    {
      "signature": "duplicates",
      "files": [
        "lexer/token_mapping/token_registry_stats.ml",
        "poetry/data/rhyme_groups/rhyme_database.ml"
      ]
    },
    {
      "signature": "count",
      "files": [
        "refactoring_analyzer_duplication.ml",
        "poetry/data/rhyme_groups/rhyme_database.ml"
      ]
    },
    {
      "signature": "qu_sheng_chars",
      "files": [
        "poetry/tone_data.ml",
        "poetry/data/tone_data/qu_sheng_data.ml"
      ]
    },
    {
      "signature": "get_qu_sheng_chars()",
      "files": [
        "poetry/data/tone_data_loader.ml",
        "poetry/data/tone_data/qu_sheng_data.ml"
      ]
    },
    {
      "signature": "format_error",
      "files": [
        "data_loader_error.ml",
        "poetry/data/tone_data/tone_data_json_loader.ml"
      ]
    },
    {
      "signature": "tone_data_file",
      "files": [
        "poetry/data/tone_data_loader.ml",
        "poetry/data/tone_data/tone_data_json_loader.ml"
      ]
    },
    {
      "signature": "parse_string_listjson_list",
      "files": [
        "poetry/data/tone_data_loader.ml",
        "poetry/data/tone_data/tone_data_json_loader.ml"
      ]
    },
    {
      "signature": "parse_tone_datajson",
      "files": [
        "poetry/data/tone_data_loader.ml",
        "poetry/data/tone_data/tone_data_json_loader.ml"
      ]
    },
    {
      "signature": "openYojson.Basic.Util in\n    let ping_sheng",
      "files": [
        "poetry/data/tone_data_loader.ml",
        "poetry/data/tone_data/tone_data_json_loader.ml"
      ]
    },
    {
      "signature": "shang_sheng",
      "files": [
        "poetry/data/tone_data_loader.ml",
        "poetry/data/tone_data/tone_data_json_loader.ml"
      ]
    },
    {
      "signature": "qu_sheng",
      "files": [
        "poetry/data/tone_data_loader.ml",
        "poetry/data/tone_data/tone_data_json_loader.ml"
      ]
    },
    {
      "signature": "ru_sheng",
      "files": [
        "poetry/data/tone_data_loader.ml",
        "poetry/data/tone_data/tone_data_json_loader.ml"
      ]
    },
    {
      "signature": "load_tone_data_from_json()",
      "files": [
        "poetry/data/tone_data_loader.ml",
        "poetry/data/tone_data/tone_data_json_loader.ml"
      ]
    },
    {
      "signature": "json",
      "files": [
        "poetry/rhyme_json_data_loader.ml",
        "poetry/data/tone_data/tone_data_json_loader.ml"
      ]
    },
    {
      "signature": "cached_data",
      "files": [
        "poetry/rhyme_json_cache.ml",
        "poetry/data/tone_data/tone_data_json_loader.ml"
      ]
    },
    {
      "signature": "get_cached_tone_data()",
      "files": [
        "poetry/data/tone_data_loader.ml",
        "poetry/data/tone_data/tone_data_json_loader.ml"
      ]
    },
    {
      "signature": "data",
      "files": [
        "poetry/rhyme_json_io.ml",
        "poetry/data/tone_data/tone_data_json_loader.ml"
      ]
    },
    {
      "signature": "fallback_ping_sheng",
      "files": [
        "poetry/data/tone_data_loader.ml",
        "poetry/data/tone_data/tone_data_json_loader.ml"
      ]
    },
    {
      "signature": "fallback_shang_sheng",
      "files": [
        "poetry/data/tone_data_loader.ml",
        "poetry/data/tone_data/tone_data_json_loader.ml"
      ]
    },
    {
      "signature": "fallback_qu_sheng",
      "files": [
        "poetry/data/tone_data_loader.ml",
        "poetry/data/tone_data/tone_data_json_loader.ml"
      ]
    },
    {
      "signature": "fallback_ru_sheng",
      "files": [
        "poetry/data/tone_data_loader.ml",
        "poetry/data/tone_data/tone_data_json_loader.ml"
      ]
    },
    {
      "signature": "safe_load_tone_data()",
      "files": [
        "poetry/data/tone_data_loader.ml",
        "poetry/data/tone_data/tone_data_json_loader.ml"
      ]
    },
    {
      "signature": "get_ping_sheng_chars()",
      "files": [
        "poetry/data/tone_data_loader.ml",
        "poetry/data/tone_data/tone_data_json_loader.ml"
      ]
    },
    {
      "signature": "ping_sheng, _, _, _",
      "files": [
        "poetry/data/tone_data_loader.ml",
        "poetry/data/tone_data/tone_data_json_loader.ml"
      ]
    },
    {
      "signature": "get_shang_sheng_chars()",
      "files": [
        "poetry/data/tone_data_loader.ml",
        "poetry/data/tone_data/tone_data_json_loader.ml"
      ]
    },
    {
      "signature": "_, shang_sheng, _, _",
      "files": [
        "poetry/data/tone_data_loader.ml",
        "poetry/data/tone_data/tone_data_json_loader.ml"
      ]
    },
    {
      "signature": "get_qu_sheng_chars()",
      "files": [
        "poetry/data/tone_data_loader.ml",
        "poetry/data/tone_data/tone_data_json_loader.ml"
      ]
    },
    {
      "signature": "_, _, qu_sheng, _",
      "files": [
        "poetry/data/tone_data_loader.ml",
        "poetry/data/tone_data/tone_data_json_loader.ml"
      ]
    },
    {
      "signature": "get_ru_sheng_chars()",
      "files": [
        "poetry/data/tone_data_loader.ml",
        "poetry/data/tone_data/tone_data_json_loader.ml"
      ]
    },
    {
      "signature": "_, _, _, ru_sheng",
      "files": [
        "poetry/data/tone_data_loader.ml",
        "poetry/data/tone_data/tone_data_json_loader.ml"
      ]
    },
    {
      "signature": "get_all_tone_data()",
      "files": [
        "poetry/data/tone_data_loader.ml",
        "poetry/data/tone_data/tone_data_json_loader.ml"
      ]
    },
    {
      "signature": "reload_tone_data()",
      "files": [
        "poetry/data/tone_data_loader.ml",
        "poetry/data/tone_data/tone_data_json_loader.ml"
      ]
    },
    {
      "signature": "validate_data()",
      "files": [
        "poetry/data/tone_data_loader.ml",
        "poetry/data/tone_data/tone_data_json_loader.ml"
      ]
    },
    {
      "signature": "ping, shang, qu, ru",
      "files": [
        "poetry/data/tone_data_loader.ml",
        "poetry/data/tone_data/tone_data_json_loader.ml"
      ]
    },
    {
      "signature": "total_chars",
      "files": [
        "poetry/rhyme_json_access.ml",
        "poetry/data/tone_data/tone_data_json_loader.ml"
      ]
    },
    {
      "signature": "shang_sheng_chars",
      "files": [
        "poetry/tone_data.ml",
        "poetry/data/tone_data/shang_sheng_data.ml"
      ]
    },
    {
      "signature": "get_shang_sheng_chars()",
      "files": [
        "poetry/data/tone_data_loader.ml",
        "poetry/data/tone_data/shang_sheng_data.ml"
      ]
    },
    {
      "signature": "ping_sheng_chars",
      "files": [
        "poetry/tone_data.ml",
        "poetry/data/tone_data/ping_sheng_data.ml"
      ]
    },
    {
      "signature": "get_ping_sheng_chars()",
      "files": [
        "poetry/data/tone_data_loader.ml",
        "poetry/data/tone_data/ping_sheng_data.ml"
      ]
    },
    {
      "signature": "ru_sheng_chars",
      "files": [
        "poetry/tone_data.ml",
        "poetry/data/tone_data/ru_sheng_data.ml"
      ]
    },
    {
      "signature": "get_ru_sheng_chars()",
      "files": [
        "poetry/data/tone_data_loader.ml",
        "poetry/data/tone_data/ru_sheng_data.ml"
      ]
    },
    {
      "signature": "get_all_data()",
      "files": [
        "poetry/data/expanded_word_class_data.ml",
        "poetry/data/rhyme_groups/ping_sheng/feng_rhyme_data.ml"
      ]
    },
    {
      "signature": "data",
      "files": [
        "poetry/rhyme_json_io.ml",
        "poetry/data/rhyme_groups/ze_sheng/hui_rhyme_data_refactored.ml"
      ]
    },
    {
      "signature": "get_hui_rhyme_data()",
      "files": [
        "poetry/rhyme_json_data_loader.ml",
        "poetry/data/rhyme_groups/ze_sheng/hui_rhyme_data_refactored.ml"
      ]
    },
    {
      "signature": "get_hui_rhyme_count()",
      "files": [
        "poetry/rhyme_json_data_loader.ml",
        "poetry/data/rhyme_groups/ze_sheng/hui_rhyme_data_refactored.ml"
      ]
    },
    {
      "signature": "is_hui_rhyme_charchar",
      "files": [
        "poetry/rhyme_json_data_loader.ml",
        "poetry/data/rhyme_groups/ze_sheng/hui_rhyme_data_refactored.ml"
      ]
    },
    {
      "signature": "get_hui_rhyme_chars()",
      "files": [
        "poetry/rhyme_json_data_loader.ml",
        "poetry/data/rhyme_groups/ze_sheng/hui_rhyme_data_refactored.ml"
      ]
    },
    {
      "signature": "json_data",
      "files": [
        "poetry/data/rhyme_groups/ze_sheng/hui_rhyme_data_refactored.ml",
        "poetry/data/rhyme_groups/ze_sheng/hui_rhyme_data_refactored.ml"
      ]
    },
    {
      "signature": "series_list",
      "files": [
        "poetry/data/rhyme_groups/ze_sheng/hui_rhyme_data_refactored.ml",
        "poetry/data/rhyme_groups/ze_sheng/hui_rhyme_data_refactored.ml"
      ]
    },
    {
      "signature": "get_data_statistics()",
      "files": [
        "poetry/rhyme_json_access.ml",
        "poetry/data/rhyme_groups/ze_sheng/hui_rhyme_data_refactored.ml"
      ]
    },
    {
      "signature": "series_list",
      "files": [
        "poetry/data/rhyme_groups/ze_sheng/hui_rhyme_data_refactored.ml",
        "poetry/data/rhyme_groups/ze_sheng/hui_rhyme_data_refactored.ml"
      ]
    },
    {
      "signature": "series_count",
      "files": [
        "poetry/rhyme_json_data_loader.ml",
        "poetry/data/rhyme_groups/ze_sheng/hui_rhyme_data_refactored.ml"
      ]
    },
    {
      "signature": "validate_data_integrity()",
      "files": [
        "poetry/data/externalized_data_loader.ml",
        "poetry/data/rhyme_groups/ze_sheng/hui_rhyme_data_refactored.ml"
      ]
    },
    {
      "signature": "metadata",
      "files": [
        "poetry/data/rhyme_groups/ze_sheng/hui_rhyme_data_refactored.ml",
        "poetry/data/rhyme_groups/ze_sheng/hui_rhyme_data_refactored.ml"
      ]
    },
    {
      "signature": "all_chars",
      "files": [
        "poetry/rhyme_api_core.ml",
        "poetry/data/rhyme_groups/ze_sheng/hui_rhyme_data_refactored.ml"
      ]
    },
    {
      "signature": "actual_count",
      "files": [
        "parser_poetry.ml",
        "poetry/data/rhyme_groups/ze_sheng/hui_rhyme_data_refactored.ml"
      ]
    },
    {
      "signature": "expected_count",
      "files": [
        "error_messages_analysis.ml",
        "poetry/data/rhyme_groups/ze_sheng/hui_rhyme_data_refactored.ml"
      ]
    },
    {
      "signature": "chars",
      "files": [
        "builtin_shared_utils.ml",
        "poetry/data/rhyme_groups/ze_sheng/hui_rhyme_data_refactored.ml"
      ]
    },
    {
      "signature": "table",
      "files": [
        "parser_utils.ml",
        "poetry/data/rhyme_groups/ze_sheng/hui_rhyme_data_refactored.ml"
      ]
    },
    {
      "signature": "table",
      "files": [
        "parser_utils.ml",
        "poetry/data/rhyme_groups/ze_sheng/hui_rhyme_data_refactored.ml"
      ]
    },
    {
      "signature": "get_all_data()",
      "files": [
        "poetry/data/expanded_word_class_data.ml",
        "poetry/data/rhyme_groups/ze_sheng/yue_rhyme_data.ml"
      ]
    },
    {
      "signature": "get_char_count()",
      "files": [
        "poetry/data/rhyme_groups/ping_sheng/feng_rhyme_data.ml",
        "poetry/data/rhyme_groups/ze_sheng/yue_rhyme_data.ml"
      ]
    },
    {
      "signature": "hui_yun_ze_sheng",
      "files": [
        "poetry/data/rhyme_groups/ze_sheng/hui_rhyme_data_refactored.ml",
        "poetry/data/rhyme_groups/ze_sheng/hui_rhyme_data.ml"
      ]
    },
    {
      "signature": "get_hui_rhyme_data()",
      "files": [
        "poetry/rhyme_json_data_loader.ml",
        "poetry/data/rhyme_groups/ze_sheng/hui_rhyme_data.ml"
      ]
    },
    {
      "signature": "get_hui_rhyme_count()",
      "files": [
        "poetry/rhyme_json_data_loader.ml",
        "poetry/data/rhyme_groups/ze_sheng/hui_rhyme_data.ml"
      ]
    },
    {
      "signature": "is_hui_rhyme_charchar",
      "files": [
        "poetry/rhyme_json_data_loader.ml",
        "poetry/data/rhyme_groups/ze_sheng/hui_rhyme_data.ml"
      ]
    },
    {
      "signature": "get_hui_rhyme_chars()",
      "files": [
        "poetry/rhyme_json_data_loader.ml",
        "poetry/data/rhyme_groups/ze_sheng/hui_rhyme_data.ml"
      ]
    },
    {
      "signature": "get_all_data()",
      "files": [
        "poetry/data/expanded_word_class_data.ml",
        "poetry/data/rhyme_groups/ze_sheng/jiang_rhyme_data.ml"
      ]
    },
    {
      "signature": "get_char_count()",
      "files": [
        "poetry/data/rhyme_groups/ping_sheng/feng_rhyme_data.ml",
        "poetry/data/rhyme_groups/ze_sheng/jiang_rhyme_data.ml"
      ]
    }
  ],
  "unused_functions": [
    {
      "function": "comparison_op",
      "reason": "No calls found (heuristic analysis)"
    },
    {
      "function": "fields_or_expr",
      "reason": "No calls found (heuristic analysis)"
    },
    {
      "function": "_type_hint",
      "reason": "No calls found (heuristic analysis)"
    },
    {
      "function": "condition_value",
      "reason": "No calls found (heuristic analysis)"
    },
    {
      "function": "return_value",
      "reason": "No calls found (heuristic analysis)"
    },
    {
      "function": "rest_patterns",
      "reason": "No calls found (heuristic analysis)"
    },
    {
      "function": "subst_list",
      "reason": "No calls found (heuristic analysis)"
    },
    {
      "function": "_token",
      "reason": "No calls found (heuristic analysis)"
    },
    {
      "function": "param_ref",
      "reason": "No calls found (heuristic analysis)"
    }
  ],
  "complex_patterns": [
    {
      "file": "performance_analyzer_data_structures.ml",
      "line": 12,
      "pattern_count": 9,
      "nesting_depth": 4
    },
    {
      "file": "parser_patterns.ml",
      "line": 10,
      "pattern_count": 14,
      "nesting_depth": 2
    },
    {
      "file": "parser_patterns.ml",
      "line": 40,
      "pattern_count": 15,
      "nesting_depth": 2
    },
    {
      "file": "parser_patterns.ml",
      "line": 132,
      "pattern_count": 5,
      "nesting_depth": 7
    },
    {
      "file": "parser_patterns.ml",
      "line": 135,
      "pattern_count": 5,
      "nesting_depth": 6
    },
    {
      "file": "parser_patterns.ml",
      "line": 142,
      "pattern_count": 3,
      "nesting_depth": 5
    },
    {
      "file": "parser_patterns.ml",
      "line": 143,
      "pattern_count": 3,
      "nesting_depth": 4
    },
    {
      "file": "main.ml",
      "line": 68,
      "pattern_count": 12,
      "nesting_depth": 1
    },
    {
      "file": "interpreter_utils.ml",
      "line": 23,
      "pattern_count": 9,
      "nesting_depth": 4
    },
    {
      "file": "interpreter_utils.ml",
      "line": 71,
      "pattern_count": 18,
      "nesting_depth": 3
    },
    {
      "file": "interpreter_utils.ml",
      "line": 93,
      "pattern_count": 13,
      "nesting_depth": 2
    },
    {
      "file": "interpreter_utils.ml",
      "line": 95,
      "pattern_count": 12,
      "nesting_depth": 1
    },
    {
      "file": "semantic_types.ml",
      "line": 9,
      "pattern_count": 14,
      "nesting_depth": 2
    },
    {
      "file": "keyword_matcher_modular.ml",
      "line": 4,
      "pattern_count": 0,
      "nesting_depth": 4
    },
    {
      "file": "expression_evaluator.ml",
      "line": 14,
      "pattern_count": 18,
      "nesting_depth": 4
    },
    {
      "file": "expression_evaluator.ml",
      "line": 49,
      "pattern_count": 15,
      "nesting_depth": 8
    },
    {
      "file": "expression_evaluator.ml",
      "line": 52,
      "pattern_count": 15,
      "nesting_depth": 7
    },
    {
      "file": "expression_evaluator.ml",
      "line": 63,
      "pattern_count": 15,
      "nesting_depth": 6
    },
    {
      "file": "expression_evaluator.ml",
      "line": 65,
      "pattern_count": 15,
      "nesting_depth": 5
    },
    {
      "file": "expression_evaluator.ml",
      "line": 79,
      "pattern_count": 17,
      "nesting_depth": 8
    },
    {
      "file": "expression_evaluator.ml",
      "line": 84,
      "pattern_count": 18,
      "nesting_depth": 7
    },
    {
      "file": "expression_evaluator.ml",
      "line": 86,
      "pattern_count": 17,
      "nesting_depth": 7
    },
    {
      "file": "expression_evaluator.ml",
      "line": 96,
      "pattern_count": 18,
      "nesting_depth": 6
    },
    {
      "file": "expression_evaluator.ml",
      "line": 115,
      "pattern_count": 20,
      "nesting_depth": 8
    },
    {
      "file": "expression_evaluator.ml",
      "line": 122,
      "pattern_count": 23,
      "nesting_depth": 8
    },
    {
      "file": "expression_evaluator.ml",
      "line": 125,
      "pattern_count": 22,
      "nesting_depth": 8
    },
    {
      "file": "expression_evaluator.ml",
      "line": 127,
      "pattern_count": 23,
      "nesting_depth": 7
    },
    {
      "file": "expression_evaluator.ml",
      "line": 134,
      "pattern_count": 23,
      "nesting_depth": 6
    },
    {
      "file": "expression_evaluator.ml",
      "line": 147,
      "pattern_count": 22,
      "nesting_depth": 7
    },
    {
      "file": "expression_evaluator.ml",
      "line": 156,
      "pattern_count": 20,
      "nesting_depth": 6
    },
    {
      "file": "expression_evaluator.ml",
      "line": 158,
      "pattern_count": 19,
      "nesting_depth": 5
    },
    {
      "file": "expression_evaluator.ml",
      "line": 165,
      "pattern_count": 16,
      "nesting_depth": 4
    },
    {
      "file": "expression_evaluator.ml",
      "line": 174,
      "pattern_count": 11,
      "nesting_depth": 3
    },
    {
      "file": "token_string_converter.ml",
      "line": 45,
      "pattern_count": 50,
      "nesting_depth": 1
    },
    {
      "file": "token_string_converter.ml",
      "line": 243,
      "pattern_count": 27,
      "nesting_depth": 1
    },
    {
      "file": "performance_analyzer_matching.ml",
      "line": 10,
      "pattern_count": 8,
      "nesting_depth": 5
    },
    {
      "file": "performance_analyzer_matching.ml",
      "line": 12,
      "pattern_count": 8,
      "nesting_depth": 4
    },
    {
      "file": "lexer_chars.ml",
      "line": 30,
      "pattern_count": 3,
      "nesting_depth": 6
    },
    {
      "file": "lexer_chars.ml",
      "line": 31,
      "pattern_count": 3,
      "nesting_depth": 5
    },
    {
      "file": "lexer_chars.ml",
      "line": 34,
      "pattern_count": 3,
      "nesting_depth": 4
    },
    {
      "file": "lexer_chars.ml",
      "line": 45,
      "pattern_count": 2,
      "nesting_depth": 6
    },
    {
      "file": "lexer_chars.ml",
      "line": 46,
      "pattern_count": 2,
      "nesting_depth": 5
    },
    {
      "file": "lexer_chars.ml",
      "line": 47,
      "pattern_count": 2,
      "nesting_depth": 4
    },
    {
      "file": "lexer_tokens.ml",
      "line": 22,
      "pattern_count": 41,
      "nesting_depth": 1
    },
    {
      "file": "error_conversion.ml",
      "line": 22,
      "pattern_count": 31,
      "nesting_depth": 5
    },
    {
      "file": "error_conversion.ml",
      "line": 33,
      "pattern_count": 24,
      "nesting_depth": 4
    },
    {
      "file": "error_conversion.ml",
      "line": 44,
      "pattern_count": 17,
      "nesting_depth": 3
    },
    {
      "file": "error_conversion.ml",
      "line": 54,
      "pattern_count": 11,
      "nesting_depth": 2
    },
    {
      "file": "error_conversion.ml",
      "line": 120,
      "pattern_count": 23,
      "nesting_depth": 5
    },
    {
      "file": "error_conversion.ml",
      "line": 129,
      "pattern_count": 18,
      "nesting_depth": 4
    },
    {
      "file": "error_conversion.ml",
      "line": 142,
      "pattern_count": 22,
      "nesting_depth": 5
    },
    {
      "file": "error_conversion.ml",
      "line": 151,
      "pattern_count": 20,
      "nesting_depth": 4
    },
    {
      "file": "error_conversion.ml",
      "line": 164,
      "pattern_count": 17,
      "nesting_depth": 3
    },
    {
      "file": "error_conversion.ml",
      "line": 180,
      "pattern_count": 11,
      "nesting_depth": 2
    },
    {
      "file": "parser_types.ml",
      "line": 102,
      "pattern_count": 9,
      "nesting_depth": 4
    },
    {
      "file": "types_unify.ml",
      "line": 11,
      "pattern_count": 20,
      "nesting_depth": 4
    },
    {
      "file": "types_unify.ml",
      "line": 33,
      "pattern_count": 11,
      "nesting_depth": 4
    },
    {
      "file": "types_unify.ml",
      "line": 56,
      "pattern_count": 16,
      "nesting_depth": 3
    },
    {
      "file": "types_unify.ml",
      "line": 75,
      "pattern_count": 16,
      "nesting_depth": 2
    },
    {
      "file": "types_unify.ml",
      "line": 89,
      "pattern_count": 13,
      "nesting_depth": 1
    },
    {
      "file": "parser_natural_functions.ml",
      "line": 67,
      "pattern_count": 10,
      "nesting_depth": 4
    },
    {
      "file": "parser_natural_functions.ml",
      "line": 93,
      "pattern_count": 11,
      "nesting_depth": 3
    },
    {
      "file": "string_formatter.ml",
      "line": 51,
      "pattern_count": 0,
      "nesting_depth": 4
    },
    {
      "file": "parser.ml",
      "line": 50,
      "pattern_count": 11,
      "nesting_depth": 4
    },
    {
      "file": "semantic_expressions.ml",
      "line": 30,
      "pattern_count": 19,
      "nesting_depth": 6
    },
    {
      "file": "semantic_expressions.ml",
      "line": 42,
      "pattern_count": 15,
      "nesting_depth": 6
    },
    {
      "file": "semantic_expressions.ml",
      "line": 45,
      "pattern_count": 15,
      "nesting_depth": 5
    },
    {
      "file": "semantic_expressions.ml",
      "line": 59,
      "pattern_count": 13,
      "nesting_depth": 6
    },
    {
      "file": "semantic_expressions.ml",
      "line": 68,
      "pattern_count": 13,
      "nesting_depth": 5
    },
    {
      "file": "semantic_expressions.ml",
      "line": 75,
      "pattern_count": 12,
      "nesting_depth": 4
    },
    {
      "file": "semantic_expressions.ml",
      "line": 91,
      "pattern_count": 12,
      "nesting_depth": 4
    },
    {
      "file": "semantic_expressions.ml",
      "line": 96,
      "pattern_count": 11,
      "nesting_depth": 3
    },
    {
      "file": "semantic_expressions.ml",
      "line": 103,
      "pattern_count": 12,
      "nesting_depth": 3
    },
    {
      "file": "semantic_expressions.ml",
      "line": 132,
      "pattern_count": 22,
      "nesting_depth": 4
    },
    {
      "file": "semantic_expressions.ml",
      "line": 148,
      "pattern_count": 19,
      "nesting_depth": 3
    },
    {
      "file": "semantic_expressions.ml",
      "line": 161,
      "pattern_count": 12,
      "nesting_depth": 2
    },
    {
      "file": "parser_expressions_primary.ml",
      "line": 29,
      "pattern_count": 15,
      "nesting_depth": 7
    },
    {
      "file": "parser_expressions_primary.ml",
      "line": 33,
      "pattern_count": 14,
      "nesting_depth": 6
    },
    {
      "file": "parser_expressions_primary.ml",
      "line": 52,
      "pattern_count": 10,
      "nesting_depth": 5
    },
    {
      "file": "parser_expressions_primary.ml",
      "line": 55,
      "pattern_count": 8,
      "nesting_depth": 4
    },
    {
      "file": "c_codegen_literals.ml",
      "line": 9,
      "pattern_count": 13,
      "nesting_depth": 1
    },
    {
      "file": "lexer_parsers.ml",
      "line": 16,
      "pattern_count": 11,
      "nesting_depth": 2
    },
    {
      "file": "ast.ml",
      "line": 173,
      "pattern_count": 39,
      "nesting_depth": 3
    },
    {
      "file": "ast.ml",
      "line": 194,
      "pattern_count": 34,
      "nesting_depth": 2
    },
    {
      "file": "ast.ml",
      "line": 212,
      "pattern_count": 17,
      "nesting_depth": 1
    },
    {
      "file": "token_utils_core.ml",
      "line": 22,
      "pattern_count": 20,
      "nesting_depth": 1
    },
    {
      "file": "error_handler_recovery.ml",
      "line": 16,
      "pattern_count": 12,
      "nesting_depth": 1
    },
    {
      "file": "types_convert.ml",
      "line": 116,
      "pattern_count": 19,
      "nesting_depth": 3
    },
    {
      "file": "types_convert.ml",
      "line": 130,
      "pattern_count": 18,
      "nesting_depth": 3
    },
    {
      "file": "types_convert.ml",
      "line": 152,
      "pattern_count": 12,
      "nesting_depth": 2
    },
    {
      "file": "nlf_semantic.ml",
      "line": 27,
      "pattern_count": 12,
      "nesting_depth": 2
    },
    {
      "file": "nlf_semantic.ml",
      "line": 86,
      "pattern_count": 12,
      "nesting_depth": 2
    },
    {
      "file": "parser_expressions_assignment.ml",
      "line": 35,
      "pattern_count": 7,
      "nesting_depth": 4
    },
    {
      "file": "parser_expressions_assignment.ml",
      "line": 50,
      "pattern_count": 7,
      "nesting_depth": 4
    },
    {
      "file": "parser_expressions_assignment.ml",
      "line": 65,
      "pattern_count": 8,
      "nesting_depth": 4
    },
    {
      "file": "parser_expressions_assignment.ml",
      "line": 80,
      "pattern_count": 8,
      "nesting_depth": 4
    },
    {
      "file": "parser_expressions_token_reducer.ml",
      "line": 153,
      "pattern_count": 10,
      "nesting_depth": 5
    },
    {
      "file": "parser_expressions_token_reducer.ml",
      "line": 156,
      "pattern_count": 10,
      "nesting_depth": 5
    },
    {
      "file": "parser_expressions_token_reducer.ml",
      "line": 159,
      "pattern_count": 10,
      "nesting_depth": 5
    },
    {
      "file": "parser_expressions_token_reducer.ml",
      "line": 162,
      "pattern_count": 10,
      "nesting_depth": 5
    },
    {
      "file": "parser_expressions_token_reducer.ml",
      "line": 200,
      "pattern_count": 8,
      "nesting_depth": 4
    },
    {
      "file": "pattern_matcher.ml",
      "line": 8,
      "pattern_count": 26,
      "nesting_depth": 13
    },
    {
      "file": "pattern_matcher.ml",
      "line": 9,
      "pattern_count": 26,
      "nesting_depth": 12
    },
    {
      "file": "pattern_matcher.ml",
      "line": 19,
      "pattern_count": 17,
      "nesting_depth": 11
    },
    {
      "file": "pattern_matcher.ml",
      "line": 20,
      "pattern_count": 17,
      "nesting_depth": 10
    },
    {
      "file": "pattern_matcher.ml",
      "line": 25,
      "pattern_count": 14,
      "nesting_depth": 9
    },
    {
      "file": "pattern_matcher.ml",
      "line": 27,
      "pattern_count": 13,
      "nesting_depth": 8
    },
    {
      "file": "pattern_matcher.ml",
      "line": 33,
      "pattern_count": 10,
      "nesting_depth": 7
    },
    {
      "file": "pattern_matcher.ml",
      "line": 34,
      "pattern_count": 10,
      "nesting_depth": 6
    },
    {
      "file": "pattern_matcher.ml",
      "line": 37,
      "pattern_count": 8,
      "nesting_depth": 5
    },
    {
      "file": "pattern_matcher.ml",
      "line": 38,
      "pattern_count": 8,
      "nesting_depth": 4
    },
    {
      "file": "pattern_matcher.ml",
      "line": 73,
      "pattern_count": 4,
      "nesting_depth": 4
    },
    {
      "file": "pattern_matcher.ml",
      "line": 94,
      "pattern_count": 4,
      "nesting_depth": 4
    },
    {
      "file": "keyword_matcher.ml",
      "line": 17,
      "pattern_count": 10,
      "nesting_depth": 23
    },
    {
      "file": "keyword_matcher.ml",
      "line": 23,
      "pattern_count": 10,
      "nesting_depth": 22
    },
    {
      "file": "keyword_matcher.ml",
      "line": 24,
      "pattern_count": 10,
      "nesting_depth": 21
    },
    {
      "file": "keyword_matcher.ml",
      "line": 25,
      "pattern_count": 10,
      "nesting_depth": 20
    },
    {
      "file": "keyword_matcher.ml",
      "line": 26,
      "pattern_count": 10,
      "nesting_depth": 19
    },
    {
      "file": "keyword_matcher.ml",
      "line": 36,
      "pattern_count": 8,
      "nesting_depth": 18
    },
    {
      "file": "keyword_matcher.ml",
      "line": 37,
      "pattern_count": 8,
      "nesting_depth": 17
    },
    {
      "file": "keyword_matcher.ml",
      "line": 38,
      "pattern_count": 8,
      "nesting_depth": 16
    },
    {
      "file": "keyword_matcher.ml",
      "line": 39,
      "pattern_count": 7,
      "nesting_depth": 15
    },
    {
      "file": "keyword_matcher.ml",
      "line": 40,
      "pattern_count": 6,
      "nesting_depth": 14
    },
    {
      "file": "keyword_matcher.ml",
      "line": 41,
      "pattern_count": 5,
      "nesting_depth": 13
    },
    {
      "file": "keyword_matcher.ml",
      "line": 42,
      "pattern_count": 5,
      "nesting_depth": 12
    },
    {
      "file": "keyword_matcher.ml",
      "line": 43,
      "pattern_count": 5,
      "nesting_depth": 11
    },
    {
      "file": "keyword_matcher.ml",
      "line": 48,
      "pattern_count": 5,
      "nesting_depth": 10
    },
    {
      "file": "keyword_matcher.ml",
      "line": 49,
      "pattern_count": 5,
      "nesting_depth": 9
    },
    {
      "file": "keyword_matcher.ml",
      "line": 50,
      "pattern_count": 5,
      "nesting_depth": 8
    },
    {
      "file": "keyword_matcher.ml",
      "line": 51,
      "pattern_count": 5,
      "nesting_depth": 7
    },
    {
      "file": "keyword_matcher.ml",
      "line": 59,
      "pattern_count": 3,
      "nesting_depth": 6
    },
    {
      "file": "keyword_matcher.ml",
      "line": 60,
      "pattern_count": 3,
      "nesting_depth": 5
    },
    {
      "file": "keyword_matcher.ml",
      "line": 61,
      "pattern_count": 3,
      "nesting_depth": 4
    },
    {
      "file": "token_types.ml",
      "line": 61,
      "pattern_count": 43,
      "nesting_depth": 1
    },
    {
      "file": "statement_executor.ml",
      "line": 13,
      "pattern_count": 17,
      "nesting_depth": 2
    },
    {
      "file": "parser_ancient.ml",
      "line": 64,
      "pattern_count": 4,
      "nesting_depth": 6
    },
    {
      "file": "parser_ancient.ml",
      "line": 79,
      "pattern_count": 4,
      "nesting_depth": 5
    },
    {
      "file": "parser_ancient.ml",
      "line": 81,
      "pattern_count": 4,
      "nesting_depth": 4
    },
    {
      "file": "codegen.ml",
      "line": 78,
      "pattern_count": 23,
      "nesting_depth": 4
    },
    {
      "file": "codegen.ml",
      "line": 91,
      "pattern_count": 23,
      "nesting_depth": 4
    },
    {
      "file": "codegen.ml",
      "line": 101,
      "pattern_count": 21,
      "nesting_depth": 4
    },
    {
      "file": "codegen.ml",
      "line": 122,
      "pattern_count": 12,
      "nesting_depth": 3
    },
    {
      "file": "codegen.ml",
      "line": 200,
      "pattern_count": 4,
      "nesting_depth": 5
    },
    {
      "file": "codegen.ml",
      "line": 202,
      "pattern_count": 4,
      "nesting_depth": 4
    },
    {
      "file": "types_subst.ml",
      "line": 10,
      "pattern_count": 13,
      "nesting_depth": 1
    },
    {
      "file": "compiler_errors.ml",
      "line": 24,
      "pattern_count": 11,
      "nesting_depth": 1
    },
    {
      "file": "value_operations.ml",
      "line": 51,
      "pattern_count": 13,
      "nesting_depth": 5
    },
    {
      "file": "value_operations.ml",
      "line": 61,
      "pattern_count": 11,
      "nesting_depth": 4
    },
    {
      "file": "builtin_constants.ml",
      "line": 14,
      "pattern_count": 11,
      "nesting_depth": 1
    },
    {
      "file": "performance_analyzer_lists.ml",
      "line": 12,
      "pattern_count": 8,
      "nesting_depth": 4
    },
    {
      "file": "error_messages_analysis.ml",
      "line": 56,
      "pattern_count": 9,
      "nesting_depth": 8
    },
    {
      "file": "error_messages_analysis.ml",
      "line": 65,
      "pattern_count": 7,
      "nesting_depth": 7
    },
    {
      "file": "error_messages_analysis.ml",
      "line": 69,
      "pattern_count": 6,
      "nesting_depth": 6
    },
    {
      "file": "error_messages_analysis.ml",
      "line": 71,
      "pattern_count": 5,
      "nesting_depth": 5
    },
    {
      "file": "error_messages_analysis.ml",
      "line": 76,
      "pattern_count": 5,
      "nesting_depth": 4
    },
    {
      "file": "error_messages_analysis.ml",
      "line": 106,
      "pattern_count": 10,
      "nesting_depth": 5
    },
    {
      "file": "error_messages_analysis.ml",
      "line": 108,
      "pattern_count": 10,
      "nesting_depth": 4
    },
    {
      "file": "error_messages_analysis.ml",
      "line": 189,
      "pattern_count": 12,
      "nesting_depth": 9
    },
    {
      "file": "error_messages_analysis.ml",
      "line": 192,
      "pattern_count": 11,
      "nesting_depth": 8
    },
    {
      "file": "error_messages_analysis.ml",
      "line": 198,
      "pattern_count": 8,
      "nesting_depth": 7
    },
    {
      "file": "error_messages_analysis.ml",
      "line": 200,
      "pattern_count": 7,
      "nesting_depth": 6
    },
    {
      "file": "error_messages_analysis.ml",
      "line": 202,
      "pattern_count": 6,
      "nesting_depth": 5
    },
    {
      "file": "error_messages_analysis.ml",
      "line": 205,
      "pattern_count": 5,
      "nesting_depth": 4
    },
    {
      "file": "expression_evaluator_data.ml",
      "line": 17,
      "pattern_count": 13,
      "nesting_depth": 4
    },
    {
      "file": "expression_evaluator_data.ml",
      "line": 32,
      "pattern_count": 12,
      "nesting_depth": 3
    },
    {
      "file": "performance_analyzer_recursion.ml",
      "line": 12,
      "pattern_count": 7,
      "nesting_depth": 4
    },
    {
      "file": "performance_analyzer_complexity.ml",
      "line": 12,
      "pattern_count": 6,
      "nesting_depth": 5
    },
    {
      "file": "performance_analyzer_complexity.ml",
      "line": 48,
      "pattern_count": 3,
      "nesting_depth": 4
    },
    {
      "file": "unified_formatter.ml",
      "line": 27,
      "pattern_count": 0,
      "nesting_depth": 4
    },
    {
      "file": "error_messages_translation.ml",
      "line": 43,
      "pattern_count": 2,
      "nesting_depth": 4
    },
    {
      "file": "token_compatibility_core.ml",
      "line": 12,
      "pattern_count": 10,
      "nesting_depth": 5
    },
    {
      "file": "token_compatibility_core.ml",
      "line": 16,
      "pattern_count": 8,
      "nesting_depth": 4
    },
    {
      "file": "parser_expressions_function.ml",
      "line": 18,
      "pattern_count": 9,
      "nesting_depth": 4
    },
    {
      "file": "parser_expressions_natural_language.ml",
      "line": 34,
      "pattern_count": 14,
      "nesting_depth": 3
    },
    {
      "file": "parser_expressions_natural_language.ml",
      "line": 48,
      "pattern_count": 11,
      "nesting_depth": 3
    },
    {
      "file": "parser_expressions_natural_language.ml",
      "line": 93,
      "pattern_count": 11,
      "nesting_depth": 3
    },
    {
      "file": "parser_expressions_natural_language.ml",
      "line": 119,
      "pattern_count": 12,
      "nesting_depth": 3
    },
    {
      "file": "parser_expressions.ml",
      "line": 22,
      "pattern_count": 13,
      "nesting_depth": 3
    },
    {
      "file": "parser_expressions.ml",
      "line": 102,
      "pattern_count": 11,
      "nesting_depth": 3
    },
    {
      "file": "refactoring_analyzer_duplication.ml",
      "line": 41,
      "pattern_count": 20,
      "nesting_depth": 2
    },
    {
      "file": "types_cache.ml",
      "line": 108,
      "pattern_count": 26,
      "nesting_depth": 2
    },
    {
      "file": "types_cache.ml",
      "line": 120,
      "pattern_count": 19,
      "nesting_depth": 1
    },
    {
      "file": "parser_expressions_identifiers.ml",
      "line": 17,
      "pattern_count": 13,
      "nesting_depth": 4
    },
    {
      "file": "parser_expressions_identifiers.ml",
      "line": 22,
      "pattern_count": 12,
      "nesting_depth": 3
    },
    {
      "file": "types_infer.ml",
      "line": 81,
      "pattern_count": 11,
      "nesting_depth": 2
    },
    {
      "file": "binary_operations.ml",
      "line": 46,
      "pattern_count": 13,
      "nesting_depth": 3
    },
    {
      "file": "binary_operations.ml",
      "line": 48,
      "pattern_count": 12,
      "nesting_depth": 2
    },
    {
      "file": "token_compatibility_keywords.ml",
      "line": 116,
      "pattern_count": 12,
      "nesting_depth": 6
    },
    {
      "file": "token_compatibility_keywords.ml",
      "line": 119,
      "pattern_count": 10,
      "nesting_depth": 5
    },
    {
      "file": "token_compatibility_keywords.ml",
      "line": 122,
      "pattern_count": 8,
      "nesting_depth": 4
    },
    {
      "file": "keyword_matcher_core.ml",
      "line": 9,
      "pattern_count": 2,
      "nesting_depth": 7
    },
    {
      "file": "keyword_matcher_core.ml",
      "line": 10,
      "pattern_count": 2,
      "nesting_depth": 6
    },
    {
      "file": "keyword_matcher_core.ml",
      "line": 17,
      "pattern_count": 2,
      "nesting_depth": 5
    },
    {
      "file": "keyword_matcher_core.ml",
      "line": 24,
      "pattern_count": 2,
      "nesting_depth": 4
    },
    {
      "file": "c_codegen_patterns.ml",
      "line": 22,
      "pattern_count": 5,
      "nesting_depth": 4
    },
    {
      "file": "refactoring_analyzer_complexity.ml",
      "line": 107,
      "pattern_count": 8,
      "nesting_depth": 4
    },
    {
      "file": "poetry/poetry_standards.ml",
      "line": 91,
      "pattern_count": 30,
      "nesting_depth": 1
    },
    {
      "file": "poetry/poetry_standards.ml",
      "line": 160,
      "pattern_count": 6,
      "nesting_depth": 5
    },
    {
      "file": "poetry/poetry_standards.ml",
      "line": 161,
      "pattern_count": 6,
      "nesting_depth": 4
    },
    {
      "file": "poetry/parallelism_analysis.ml",
      "line": 58,
      "pattern_count": 15,
      "nesting_depth": 2
    },
    {
      "file": "poetry/parallelism_analysis.ml",
      "line": 59,
      "pattern_count": 15,
      "nesting_depth": 1
    },
    {
      "file": "poetry/parallelism_analysis.ml",
      "line": 103,
      "pattern_count": 1,
      "nesting_depth": 17
    },
    {
      "file": "poetry/parallelism_analysis.ml",
      "line": 105,
      "pattern_count": 1,
      "nesting_depth": 16
    },
    {
      "file": "poetry/parallelism_analysis.ml",
      "line": 107,
      "pattern_count": 1,
      "nesting_depth": 15
    },
    {
      "file": "poetry/parallelism_analysis.ml",
      "line": 109,
      "pattern_count": 1,
      "nesting_depth": 14
    },
    {
      "file": "poetry/parallelism_analysis.ml",
      "line": 111,
      "pattern_count": 1,
      "nesting_depth": 13
    },
    {
      "file": "poetry/parallelism_analysis.ml",
      "line": 113,
      "pattern_count": 1,
      "nesting_depth": 12
    },
    {
      "file": "poetry/parallelism_analysis.ml",
      "line": 115,
      "pattern_count": 1,
      "nesting_depth": 11
    },
    {
      "file": "poetry/parallelism_analysis.ml",
      "line": 117,
      "pattern_count": 1,
      "nesting_depth": 10
    },
    {
      "file": "poetry/parallelism_analysis.ml",
      "line": 120,
      "pattern_count": 1,
      "nesting_depth": 9
    },
    {
      "file": "poetry/parallelism_analysis.ml",
      "line": 129,
      "pattern_count": 0,
      "nesting_depth": 8
    },
    {
      "file": "poetry/parallelism_analysis.ml",
      "line": 130,
      "pattern_count": 0,
      "nesting_depth": 7
    },
    {
      "file": "poetry/parallelism_analysis.ml",
      "line": 131,
      "pattern_count": 0,
      "nesting_depth": 6
    },
    {
      "file": "poetry/parallelism_analysis.ml",
      "line": 132,
      "pattern_count": 0,
      "nesting_depth": 5
    },
    {
      "file": "poetry/parallelism_analysis.ml",
      "line": 133,
      "pattern_count": 0,
      "nesting_depth": 4
    },
    {
      "file": "poetry/parallelism_analysis.ml",
      "line": 175,
      "pattern_count": 1,
      "nesting_depth": 12
    },
    {
      "file": "poetry/parallelism_analysis.ml",
      "line": 177,
      "pattern_count": 1,
      "nesting_depth": 11
    },
    {
      "file": "poetry/parallelism_analysis.ml",
      "line": 179,
      "pattern_count": 1,
      "nesting_depth": 10
    },
    {
      "file": "poetry/parallelism_analysis.ml",
      "line": 181,
      "pattern_count": 1,
      "nesting_depth": 9
    },
    {
      "file": "poetry/parallelism_analysis.ml",
      "line": 183,
      "pattern_count": 1,
      "nesting_depth": 8
    },
    {
      "file": "poetry/parallelism_analysis.ml",
      "line": 192,
      "pattern_count": 0,
      "nesting_depth": 7
    },
    {
      "file": "poetry/parallelism_analysis.ml",
      "line": 193,
      "pattern_count": 0,
      "nesting_depth": 6
    },
    {
      "file": "poetry/parallelism_analysis.ml",
      "line": 194,
      "pattern_count": 0,
      "nesting_depth": 5
    },
    {
      "file": "poetry/parallelism_analysis.ml",
      "line": 197,
      "pattern_count": 0,
      "nesting_depth": 4
    },
    {
      "file": "poetry/parallelism_analysis.ml",
      "line": 250,
      "pattern_count": 6,
      "nesting_depth": 6
    },
    {
      "file": "poetry/parallelism_analysis.ml",
      "line": 252,
      "pattern_count": 6,
      "nesting_depth": 5
    },
    {
      "file": "poetry/parallelism_analysis.ml",
      "line": 256,
      "pattern_count": 6,
      "nesting_depth": 4
    },
    {
      "file": "poetry/artistic_soul_evaluation.ml",
      "line": 270,
      "pattern_count": 11,
      "nesting_depth": 2
    },
    {
      "file": "poetry/rhyme_pattern.ml",
      "line": 89,
      "pattern_count": 4,
      "nesting_depth": 5
    },
    {
      "file": "poetry/rhyme_pattern.ml",
      "line": 90,
      "pattern_count": 4,
      "nesting_depth": 4
    },
    {
      "file": "poetry/rhyme_analysis.ml",
      "line": 40,
      "pattern_count": 4,
      "nesting_depth": 5
    },
    {
      "file": "poetry/rhyme_analysis.ml",
      "line": 41,
      "pattern_count": 4,
      "nesting_depth": 4
    },
    {
      "file": "poetry/rhyme_data.ml",
      "line": 278,
      "pattern_count": 18,
      "nesting_depth": 2
    },
    {
      "file": "poetry/rhyme_data.ml",
      "line": 286,
      "pattern_count": 13,
      "nesting_depth": 1
    },
    {
      "file": "poetry/unified_rhyme_api.ml",
      "line": 120,
      "pattern_count": 17,
      "nesting_depth": 2
    },
    {
      "file": "poetry/unified_rhyme_api.ml",
      "line": 134,
      "pattern_count": 12,
      "nesting_depth": 1
    },
    {
      "file": "config/env_var_config.ml",
      "line": 67,
      "pattern_count": 12,
      "nesting_depth": 6
    },
    {
      "file": "config/env_var_config.ml",
      "line": 76,
      "pattern_count": 10,
      "nesting_depth": 5
    },
    {
      "file": "config/env_var_config.ml",
      "line": 85,
      "pattern_count": 8,
      "nesting_depth": 4
    },
    {
      "file": "config/compiler_config.ml",
      "line": 106,
      "pattern_count": 11,
      "nesting_depth": 6
    },
    {
      "file": "config/compiler_config.ml",
      "line": 109,
      "pattern_count": 10,
      "nesting_depth": 5
    },
    {
      "file": "config/compiler_config.ml",
      "line": 114,
      "pattern_count": 8,
      "nesting_depth": 4
    },
    {
      "file": "lexer/token_mapping/unified_token_mapper.ml",
      "line": 111,
      "pattern_count": 41,
      "nesting_depth": 1
    },
    {
      "file": "poetry/data/poetry_json_parser.ml",
      "line": 63,
      "pattern_count": 9,
      "nesting_depth": 4
    },
    {
      "file": "poetry/data/expanded_word_class_data.ml",
      "line": 46,
      "pattern_count": 42,
      "nesting_depth": 5
    },
    {
      "file": "poetry/data/expanded_word_class_data.ml",
      "line": 49,
      "pattern_count": 43,
      "nesting_depth": 5
    },
    {
      "file": "poetry/data/expanded_word_class_data.ml",
      "line": 63,
      "pattern_count": 32,
      "nesting_depth": 5
    },
    {
      "file": "poetry/data/expanded_word_class_data.ml",
      "line": 78,
      "pattern_count": 19,
      "nesting_depth": 4
    },
    {
      "file": "poetry/data/rhyme_data_loader.ml",
      "line": 65,
      "pattern_count": 9,
      "nesting_depth": 5
    },
    {
      "file": "poetry/data/rhyme_data_loader.ml",
      "line": 68,
      "pattern_count": 8,
      "nesting_depth": 4
    },
    {
      "file": "poetry/data/rhyme_data_loader.ml",
      "line": 87,
      "pattern_count": 12,
      "nesting_depth": 10
    },
    {
      "file": "poetry/data/rhyme_data_loader.ml",
      "line": 100,
      "pattern_count": 14,
      "nesting_depth": 14
    },
    {
      "file": "poetry/data/rhyme_data_loader.ml",
      "line": 108,
      "pattern_count": 14,
      "nesting_depth": 15
    },
    {
      "file": "poetry/data/rhyme_data_loader.ml",
      "line": 120,
      "pattern_count": 11,
      "nesting_depth": 14
    },
    {
      "file": "poetry/data/rhyme_data_loader.ml",
      "line": 126,
      "pattern_count": 10,
      "nesting_depth": 13
    },
    {
      "file": "poetry/data/rhyme_data_loader.ml",
      "line": 130,
      "pattern_count": 10,
      "nesting_depth": 12
    },
    {
      "file": "poetry/data/rhyme_data_loader.ml",
      "line": 131,
      "pattern_count": 10,
      "nesting_depth": 11
    },
    {
      "file": "poetry/data/rhyme_data_loader.ml",
      "line": 133,
      "pattern_count": 8,
      "nesting_depth": 10
    },
    {
      "file": "poetry/data/rhyme_data_loader.ml",
      "line": 134,
      "pattern_count": 7,
      "nesting_depth": 9
    },
    {
      "file": "poetry/data/rhyme_data_loader.ml",
      "line": 136,
      "pattern_count": 6,
      "nesting_depth": 8
    },
    {
      "file": "poetry/data/rhyme_data_loader.ml",
      "line": 140,
      "pattern_count": 6,
      "nesting_depth": 7
    },
    {
      "file": "poetry/data/rhyme_data_loader.ml",
      "line": 144,
      "pattern_count": 6,
      "nesting_depth": 6
    },
    {
      "file": "poetry/data/rhyme_data_loader.ml",
      "line": 145,
      "pattern_count": 6,
      "nesting_depth": 5
    },
    {
      "file": "poetry/data/rhyme_data_loader.ml",
      "line": 147,
      "pattern_count": 4,
      "nesting_depth": 4
    },
    {
      "file": "poetry/data/expanded_rhyme_data.ml",
      "line": 51,
      "pattern_count": 12,
      "nesting_depth": 2
    },
    {
      "file": "poetry/data/poetry_data_loader.ml",
      "line": 90,
      "pattern_count": 22,
      "nesting_depth": 3
    },
    {
      "file": "poetry/data/poetry_data_loader.ml",
      "line": 109,
      "pattern_count": 21,
      "nesting_depth": 2
    },
    {
      "file": "poetry/data/poetry_data_loader.ml",
      "line": 120,
      "pattern_count": 17,
      "nesting_depth": 1
    }
  ],
  "inconsistent_styles": [],
  "outdated_files": []
}