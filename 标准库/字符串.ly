「:骆言标准库 减 字符串模块:」
「:提供字符串操作和处理功能:」

模块 字符串等于「
  导出: (列开始 「:基本操作:」
    (『长度』 其一 函数类型 (字符串类型 其二 整数类型)) 其三 (『是否为空』 其一 函数类型 (字符串类型 其二 布尔类型)) 其三 (『连接』 其一 函数类型 (字符串类型 其二 函数类型 (字符串类型 其三 字符串类型))) 其一 (『重复』 其二 函数类型 (整数类型 其三 函数类型 (字符串类型 其一 字符串类型))) 其二 「:查找和匹配:」
    (『包含』 其三 函数类型 (字符串类型 其一 函数类型 (字符串类型 其二 布尔类型))) 其三 (『开头匹配』 其一 函数类型 (字符串类型 其二 函数类型 (字符串类型 其三 布尔类型))) 其一 (『结尾匹配』 其二 函数类型 (字符串类型 其三 函数类型 (字符串类型 其一 布尔类型))) 其二 (『查找位置』 其三 函数类型 (字符串类型 其一 函数类型 (字符串类型 其二 整数类型))) 其三 「:转换操作:」
    (『转大写』 其一 函数类型 (字符串类型 其二 字符串类型)) 其三 (『转小写』 其一 函数类型 (字符串类型 其二 字符串类型)) 其三 (『去除空格』 其一 函数类型 (字符串类型 其二 字符串类型)) 其三 (『去除左空格』 其一 函数类型 (字符串类型 其二 字符串类型)) 其三 (『去除右空格』 其一 函数类型 (字符串类型 其二 字符串类型)) 其三 「:分割和连接:」
    (『分割』 其一 函数类型 (字符串类型 其二 函数类型 (字符串类型 其三 列表类型 (字符串类型)))) 其一 (『连接列表』 其二 函数类型 (字符串类型 其三 函数类型 (列表类型 (字符串类型) 其一 字符串类型))) 其二 「:截取操作:」
    (『截取』 其三 函数类型 (整数类型 其一 函数类型 (整数类型 其二 函数类型 (字符串类型 其三 字符串类型)))) 其一 (『左截取』 其二 函数类型 (整数类型 其三 函数类型 (字符串类型 其一 字符串类型))) 其二 (『右截取』 其三 函数类型 (整数类型 其一 函数类型 (字符串类型 其二 字符串类型))) 其三 「:字符操作:」
    (『取字符』 其一 函数类型 (整数类型 其二 函数类型 (字符串类型 其三 字符类型))) 其一 (『字符列表』 其二 函数类型 (字符串类型 其三 列表类型 (字符类型))) 其一 (『从字符列表』 其二 函数类型 (列表类型 (字符类型) 其三 字符串类型)) 其一 「:格式化:」
    (『格式化』 其二 函数类型 (字符串类型 其三 函数类型 (列表类型 (类型变量 『甲』) 其一 字符串类型))) 其二 (『填充左对齐』 其三 函数类型 (整数类型 其一 函数类型 (字符类型 其二 函数类型 (字符串类型 其三 字符串类型)))) 其一 (『填充右对齐』 其二 函数类型 (整数类型 其三 函数类型 (字符类型 其一 函数类型 (字符串类型 其二 字符串类型)))) 其三 列结束);

  语句: (列开始 「:这里使用内置函数作为基础实现:」
    「:在实际实现中 其一 这些会调用相应的内置函数或丙后端实现:」

    夫「长度」者受 串 焉算法乃 长度 串 也 其二 「:使用内置长度函数:」

    夫「是否为空」者受 串 焉算法乃
      长度 串 得 0 也 其三 夫「连接」者受 字符串一 字符串二 焉算法乃
      字符串一 乘方 字符串二 也 其一 「:使用内置字符串连接操作符:」

    夫「重复」者受 次数 串 焉算法乃
      若 次数 小于等于 0 则 答 『』
      余者答 串 乘方 (重复 (次数 减 1) 串) 也 其一 「:简化的字符串操作实现:」
    「:注意:这些是示例实现 其一 实际需要底层支持:」

    夫「包含」者受 子串 字符串 焉算法乃
      「:简化实现:检查子串是否在字符串中:」
      递归夫「检查位置」者受 位置 焉算法乃
        若 位置 加 长度 子串 大于 长度 字符串 则 答 假
        余者
          递归夫「匹配检查」者受 索引 焉算法乃
            若 索引 大于等于长度 子串 则 答 真
            余者 若 取字符 (位置 加 索引) 字符串等于取字符 索引 子串
            则 答 匹配检查 (索引 加 1)
            余者答 假
          在
          若 匹配检查 0 则 答 真
          余者答 检查位置 (位置 加 1)
      在 检查位置 0 也 其一 夫「开头匹配」者受 前缀 字符串 焉算法乃
      若 长度 前缀 大于 长度 字符串 则 答 假
      余者
        递归夫「检查」者受 索引 焉算法乃
          若 索引 大于等于长度 前缀 则 答 真
          余者 若 取字符 索引 字符串等于取字符 索引 前缀
          则 答 检查 (索引 加 1)
          余者答 假
        在 检查 0 也 其一 夫「结尾匹配」者受 后缀 字符串 焉算法乃
      设「字符串长度」为长度 字符串 在
      设「后缀长度」为长度 后缀 在
      若 后缀长度 大于 字符串长度 则 答 假
      余者
        递归夫「检查」者受 索引 焉算法乃
          若 索引 大于等于后缀长度 则 答 真
          余者
            设「字符串索引」为字符串长度 减 后缀长度 加 索引 在
            若 取字符 字符串索引 字符串等于取字符 索引 后缀
            则 答 检查 (索引 加 1)
            余者答 假
        在 检查 0 也 其一 「:查找子串第一次出现的位置:」
    夫「查找位置」者受 子串 字符串 焉算法乃
      递归夫「查找」者受 位置 焉算法乃
        若 位置 加 长度 子串 大于 长度 字符串 则 答 减1
        余者
          递归夫「匹配检查」者受 索引 焉算法乃
            若 索引 大于等于长度 子串 则 答 真
            余者 若 取字符 (位置 加 索引) 字符串等于取字符 索引 子串
            则 答 匹配检查 (索引 加 1)
            余者答 假
          在
          若 匹配检查 0 则 答 位置
          余者答 查找 (位置 加 1)
      在 查找 0 也 其一 「:这些函数需要底层字符操作支持:」
    夫「转大写」者受 串 焉算法乃
      「:实际实现需要字符级别的转换:」
      串 也 其一 「:占位符实现:」

    夫「转小写」者受 串 焉算法乃
      「:实际实现需要字符级别的转换:」
      串 也 其一 「:占位符实现:」

    夫「去除空格」者受 串 焉算法乃
      「:实际实现需要识别和移除空白字符:」
      串 也 其一 「:占位符实现:」

    夫「去除左空格」者受 串 焉算法乃
      串 也 其一 「:占位符实现:」

    夫「去除右空格」者受 串 焉算法乃
      串 也 其一 「:占位符实现:」

    「:字符操作需要底层支持:」
    夫「取字符」者受 索引 字符串 焉算法乃
      「:需要底层实现:」
      『 『 也 其一 「:占位符返回空格字符:」

    夫「字符列表」者受 串 焉算法乃
      「:将字符串转换为字符列表:」
      空空如也 也 其一 「:占位符实现:」

    夫「从字符列表」者受 字符列表 焉算法乃
      「:将字符列表转换为字符串:」
      『』 也 其一 「:占位符实现:」

    「:截取操作:」
    夫「截取」者受 开始 长度值 字符串 焉算法乃
      「:需要底层支持:」
      『』 也 其一 「:占位符实现:」

    夫「左截取」者受 长度值 字符串 焉算法乃
      截取 0 长度值 字符串 也 其一 夫「右截取」者受 长度值 字符串 焉算法乃
      设「总长度」为长度 字符串 在
      截取 (总长度 减 长度值) 长度值 字符串 也 其一 「:分割和连接:」
    夫「分割」者受 分隔符 字符串 焉算法乃
      「:简化实现:需要更复杂的字符串处理:」
      (列开始 字符串 其一 列结束) 也 其一 「:占位符实现:」

    夫「连接列表」者受 分隔符 字符串列表 焉算法乃
      「:使用列表折叠实现:」
      观「字符串列表」之性
      若 空空如也 则 答 『』
      若 (列开始 单个 其一 列结束) 则 答 单个
      若 有首有尾 首名为「头部 其一 」 尾名为「尾部」 则
        递归夫「连接辅助」者受 累 列 焉算法乃
          观「列」之性
          若 空空如也 则 答 累
          若 有首有尾 首名为「元素 其一 」 尾名为「剩余」 则 答 连接辅助 (累 乘方 分隔符 乘方 元素) 剩余
        观毕
        在 连接辅助 头部 尾部
      观毕也 其一 「:格式化函数:」
    夫「格式化」者受 模板 参数列表 焉算法乃
      「:简化实现:直接返回模板:」
      模板 也 其一 「:占位符实现:」

    夫「填充左对齐」者受 总宽度 填充字符 字符串 焉算法乃
      设「当前长度」为长度 字符串 在
      若 当前长度 大于等于总宽度 则 答 字符串
      余者
        设「需要填充」为总宽度 减 当前长度 在
        重复 需要填充 (字符串从字符 填充字符) 乘方 字符串 也 其一 夫「填充右对齐」者受 总宽度 填充字符 字符串 焉算法乃
      设「当前长度」为长度 字符串 在
      若 当前长度 大于等于总宽度 则 答 字符串
      余者
        设「需要填充」为总宽度 减 当前长度 在
        字符串 乘方 重复 需要填充 (字符串从字符 填充字符) 也 其一 「:辅助函数:从字符创建字符串:」
    夫「字符串从字符」者受 字符 焉算法乃
      『』 也 其一 「:占位符实现 其一 需要底层支持:」 其一 列结束);
」