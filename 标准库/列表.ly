「：骆言标准库 - 列表模块：」
「：提供列表操作和函数式编程工具：」

模块 列表 = {
  导出: [
    「：基本操作：」
    （『长度』, 函数类型 （列表类型 （类型变量 『a』）, 整数类型））;
    （『是否为空』, 函数类型 （列表类型 （类型变量 『a』）, 布尔类型））;
    （『头部』, 函数类型 （列表类型 （类型变量 『a』）, 类型变量 『a』））;
    （『尾部』, 函数类型 （列表类型 （类型变量 『a』）, 列表类型 （类型变量 『a』）））;
    （『连接』, 函数类型 （列表类型 （类型变量 『a』）, 函数类型 （列表类型 （类型变量 『a』）, 列表类型 （类型变量 『a』））））;
    （『反转』, 函数类型 （列表类型 （类型变量 『a』）, 列表类型 （类型变量 『a』）））;
    
    「：高阶函数：」
    （『映射』, 函数类型 （函数类型 （类型变量 『a』, 类型变量 『b』）, 函数类型 （列表类型 （类型变量 『a』）, 列表类型 （类型变量 『b』））））;
    （『过滤』, 函数类型 （函数类型 （类型变量 『a』, 布尔类型）, 函数类型 （列表类型 （类型变量 『a』）, 列表类型 （类型变量 『a』））））;
    （『折叠左』, 函数类型 （函数类型 （类型变量 『b』, 函数类型 （类型变量 『a』, 类型变量 『b』））, 函数类型 （类型变量 『b』, 函数类型 （列表类型 （类型变量 『a』）, 类型变量 『b』））））;
    （『折叠右』, 函数类型 （函数类型 （类型变量 『a』, 函数类型 （类型变量 『b』, 类型变量 『b』））, 函数类型 （类型变量 『b』, 函数类型 （列表类型 （类型变量 『a』）, 类型变量 『b』））））;
    （『查找』, 函数类型 （函数类型 （类型变量 『a』, 布尔类型）, 函数类型 （列表类型 （类型变量 『a』）, 类型变量 『a』）））;
    
    「：列表构造：」
    （『范围』, 函数类型 （整数类型, 函数类型 （整数类型, 列表类型 （整数类型））））;
    （『重复』, 函数类型 （整数类型, 函数类型 （类型变量 『a』, 列表类型 （类型变量 『a』））））;
    （『取前n个』, 函数类型 （整数类型, 函数类型 （列表类型 （类型变量 『a』）, 列表类型 （类型变量 『a』））））;
    （『跳过n个』, 函数类型 （整数类型, 函数类型 （列表类型 （类型变量 『a』）, 列表类型 （类型变量 『a』））））;
    
    「：排序和搜索：」
    （『排序』, 函数类型 （函数类型 （类型变量 『a』, 函数类型 （类型变量 『a』, 整数类型））, 函数类型 （列表类型 （类型变量 『a』）, 列表类型 （类型变量 『a』））））;
    （『包含』, 函数类型 （类型变量 『a』, 函数类型 （列表类型 （类型变量 『a』）, 布尔类型）））;
    （『索引』, 函数类型 （整数类型, 函数类型 （列表类型 （类型变量 『a』）, 类型变量 『a』）））;
  ];
  
  语句: [
    「：基本操作：」
    夫 长度 者 受 lst 焉 算法 乃
      观 lst 之 性
      若 [] 则 答 0
      若 [_; ...tail] 则 答 1 加 长度 tail
      观毕 是谓;
    
    夫 是否为空 者 受 lst 焉 算法 乃
      观 lst 之 性
      若 [] 则 答 真
      余者 则 答 假
      观毕 是谓;
    
    夫 头部 者 受 lst 焉 算法 乃
      观 lst 之 性
      若 [head; ..._] 则 答 head
      若 [] 则 答 抛出异常 『空列表没有头部』
      观毕 是谓;
    
    夫 尾部 者 受 lst 焉 算法 乃
      观 lst 之 性
      若 [_; ...tail] 则 答 tail
      若 [] 则 答 抛出异常 『空列表没有尾部』
      观毕 是谓;
    
    夫 连接 者 受 lst1 lst2 焉 算法 乃
      观 lst1 之 性
      若 [] 则 答 lst2
      若 [head; ...tail] 则 答 [head; ...连接 tail lst2]
      观毕 是谓;
    
    夫 反转 者 受 lst 焉 算法 乃
      递归 夫 反转辅助 者 受 acc lst 焉 算法 乃
        观 lst 之 性
        若 [] 则 答 acc
        若 [head; ...tail] 则 答 反转辅助 [head; ...acc] tail
        观毕
      在 反转辅助 [] lst 是谓;
    
    「：高阶函数：」
    递归 夫 映射 者 受 f lst 焉 算法 乃
      观 lst 之 性
      若 [] 则 答 []
      若 [head; ...tail] 则 答 [f head; ...映射 f tail]
      观毕 是谓;
    
    递归 夫 过滤 者 受 pred lst 焉 算法 乃
      观 lst 之 性
      若 [] 则 答 []
      若 [head; ...tail] 则
        若 pred head 则
          答 [head; ...过滤 pred tail]
        余者
          答 过滤 pred tail
      观毕 是谓;
    
    递归 夫 折叠左 者 受 f acc lst 焉 算法 乃
      观 lst 之 性
      若 [] 则 答 acc
      若 [head; ...tail] 则 答 折叠左 f （f acc head） tail
      观毕 是谓;
    
    递归 夫 折叠右 者 受 f acc lst 焉 算法 乃
      观 lst 之 性
      若 [] 则 答 acc
      若 [head; ...tail] 则 答 f head （折叠右 f acc tail）
      观毕 是谓;
    
    递归 夫 查找 者 受 pred lst 焉 算法 乃
      观 lst 之 性
      若 [] 则 答 抛出异常 『未找到满足条件的元素』
      若 [head; ...tail] 则
        若 pred head 则 答 head
        余者 答 查找 pred tail
      观毕 是谓;
    
    「：列表构造：」
    递归 夫 范围 者 受 开始 结束 焉 算法 乃
      若 开始 > 结束 则 答 []
      余者 答 [开始; ...范围 （开始 + 1） 结束] 是谓;
    
    递归 夫 重复 者 受 次数 值 焉 算法 乃
      若 次数 <= 0 则 答 []
      余者 答 [值; ...重复 （次数 - 1） 值] 是谓;
    
    递归 夫 取前n个 者 受 n lst 焉 算法 乃
      若 n <= 0 则 答 []
      余者
        观 lst 之 性
        若 [] 则 答 []
        若 [head; ...tail] 则 答 [head; ...取前n个 （n - 1） tail]
        观毕 是谓;
    
    递归 夫 跳过n个 者 受 n lst 焉 算法 乃
      若 n <= 0 则 答 lst
      余者
        观 lst 之 性
        若 [] 则 答 []
        若 [_; ...tail] 则 答 跳过n个 （n - 1） tail
        观毕 是谓;
    
    「：简单排序实现 （插入排序）：」
    夫 排序 者 受 比较函数 lst 焉 算法 乃
      递归 夫 插入 者 受 x sorted_lst 焉 算法 乃
        观 sorted_lst 之 性
        若 [] 则 答 [x]
        若 [head; ...tail] 则
          若 比较函数 x head <= 0 则 答 [x; head; ...tail]
          余者 答 [head; ...插入 x tail]
        观毕
      在
      递归 夫 插入排序 者 受 lst 焉 算法 乃
        观 lst 之 性
        若 [] 则 答 []
        若 [head; ...tail] 则 答 插入 head （插入排序 tail）
        观毕
      在 插入排序 lst 是谓;
    
    递归 夫 包含 者 受 元素 lst 焉 算法 乃
      观 lst 之 性
      若 [] 则 答 假
      若 [head; ...tail] 则
        若 head = 元素 则 答 真
        余者 答 包含 元素 tail
      观毕 是谓;
    
    递归 夫 索引 者 受 i lst 焉 算法 乃
      若 i < 0 则 答 抛出异常 『索引不能为负数』
      余者
        观 lst 之 性
        若 [] 则 答 抛出异常 『索引超出范围』
        若 [head; ...tail] 则
          若 i = 0 则 答 head
          余者 答 索引 （i - 1） tail
        观毕 是谓;
  ];
}