(* 骆言面向对象编程演示 *)

(* 定义动物基类 *)
类 动物 = {
  名字: 字符串;
  年龄: 整数;
  
  方法 介绍 () = 打印 (字符串连接 "我是" 名字);
  方法 叫声 () = 打印 "一些声音";
  方法 生日 () = 打印 (字符串连接 名字 "长了一岁！")
}

(* 定义狗类，继承自动物 *)
类 狗 继承 动物 = {
  品种: 字符串;
  
  方法 叫声 () = 打印 "汪汪！";
  方法 摇尾巴 () = 打印 (字符串连接 名字 "开心地摇尾巴")
}

(* 定义猫类，继承自动物 *)
类 猫 继承 动物 = {
  毛色: 字符串;
  
  方法 叫声 () = 打印 "喵喵！";
  方法 抓挠 () = 打印 (字符串连接 名字 "在抓挠东西")
}

(* 定义计算器类 *)
类 计算器 = {
  方法 加法 (a, b) = a + b;
  方法 减法 (a, b) = a - b;
  方法 乘法 (a, b) = a * b;
  方法 阶乘 (n) = 如果 n <= 1 那么 1 否则 n * 自己#阶乘 (n - 1)
}

(* 创建动物实例 *)
让 小白 = 新建 狗 { 名字 = "小白"; 年龄 = 3; 品种 = "金毛" }
让 小花 = 新建 猫 { 名字 = "小花"; 年龄 = 2; 毛色 = "橘色" }

(* 测试动物行为 *)
小白#介绍 ();
小白#叫声 ();
小白#摇尾巴 ();

小花#介绍 ();
小花#叫声 ();
小花#抓挠 ();

(* 创建计算器实例并测试 *)
让 我的计算器 = 新建 计算器 {}
打印 "计算测试：";
打印 (整数_字符串 (我的计算器#加法 (10, 5)));
打印 (整数_字符串 (我的计算器#减法 (10, 5)));
打印 (整数_字符串 (我的计算器#乘法 (10, 5)));
打印 (整数_字符串 (我的计算器#阶乘 5));