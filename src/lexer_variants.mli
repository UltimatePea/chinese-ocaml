(** 骆言词法分析器 - 变体转换模块接口 *)

val variant_to_token :
  Compiler_errors.position ->
  [> `LetKeyword
  | `RecKeyword
  | `InKeyword
  | `FunKeyword
  | `IfKeyword
  | `ThenKeyword
  | `ElseKeyword
  | `MatchKeyword
  | `WithKeyword
  | `OtherKeyword
  | `TypeKeyword
  | `PrivateKeyword
  | `TrueKeyword
  | `FalseKeyword
  | `AndKeyword
  | `OrKeyword
  | `NotKeyword
  | `OfKeyword
  | `AsKeyword
  | `CombineKeyword
  | `WithOpKeyword
  | `WhenKeyword
  | `WithDefaultKeyword
  | `ExceptionKeyword
  | `RaiseKeyword
  | `TryKeyword
  | `CatchKeyword
  | `FinallyKeyword
  | `ModuleKeyword
  | `ModuleTypeKeyword
  | `RefKeyword
  | `IncludeKeyword
  | `FunctorKeyword
  | `SigKeyword
  | `EndKeyword
  | `MacroKeyword
  | `ExpandKeyword
  | `HaveKeyword
  | `OneKeyword
  | `NameKeyword
  | `SetKeyword
  | `AlsoKeyword
  | `ThenGetKeyword
  | `CallKeyword
  | `ValueKeyword
  | `AsForKeyword
  | `NumberKeyword
  | `WantExecuteKeyword
  | `MustFirstGetKeyword
  | `ForThisKeyword
  | `TimesKeyword
  | `EndCloudKeyword
  | `IfWenyanKeyword
  | `ThenWenyanKeyword
  | `GreaterThanWenyan
  | `LessThanWenyan
  | `AncientDefineKeyword
  | `AncientEndKeyword
  | `AncientAlgorithmKeyword
  | `AncientCompleteKeyword
  | `AncientObserveKeyword
  | `AncientNatureKeyword
  | `AncientThenKeyword
  | `AncientOtherwiseKeyword
  | `AncientAnswerKeyword
  | `AncientCombineKeyword
  | `AncientAsOneKeyword
  | `AncientTakeKeyword
  | `AncientReceiveKeyword
  | `AncientParticleThe
  | `AncientParticleFun
  | `AncientCallItKeyword
  | `AncientListStartKeyword
  | `AncientListEndKeyword
  | `AncientItsFirstKeyword
  | `AncientItsSecondKeyword
  | `AncientItsThirdKeyword
  | `AncientEmptyKeyword
  | `AncientHasHeadTailKeyword
  | `AncientHeadNameKeyword
  | `AncientTailNameKeyword
  | `AncientThusAnswerKeyword
  | `AncientAddToKeyword
  | `AncientObserveEndKeyword
  | `AncientBeginKeyword
  | `AncientEndCompleteKeyword
  | `AncientIsKeyword
  | `AncientArrowKeyword
  | `AncientWhenKeyword
  | `AncientCommaKeyword
  | `AncientPeriodKeyword
  | `AncientIfKeyword
  | `AncientRecursiveKeyword
  | `AncientParticleOf
  | `AncientRecordStartKeyword
  | `AncientRecordEndKeyword
  | `AncientRecordEmptyKeyword
  | `AncientRecordUpdateKeyword
  | `AncientRecordFinishKeyword
  | `AfterThatKeyword
  | `DefineKeyword
  | `AcceptKeyword
  | `ReturnWhenKeyword
  | `ElseReturnKeyword
  | `MultiplyKeyword
  | `DivideKeyword
  | `AddToKeyword
  | `SubtractKeyword
  | `EqualToKeyword
  | `LessThanEqualToKeyword
  | `FirstElementKeyword
  | `RemainingKeyword
  | `EmptyKeyword
  | `CharacterCountKeyword
  | `InputKeyword
  | `OutputKeyword
  | `MinusOneKeyword
  | `PlusKeyword
  | `WhereKeyword
  | `SmallKeyword
  | `ShouldGetKeyword
  | `OfParticle
  | `IsKeyword
  | `TopicMarker
  | `IntTypeKeyword
  | `FloatTypeKeyword
  | `StringTypeKeyword
  | `BoolTypeKeyword
  | `UnitTypeKeyword
  | `ListTypeKeyword
  | `ArrayTypeKeyword
  | `VariantKeyword
  | `TagKeyword
  | `RhymeKeyword
  | `ToneKeyword
  | `ToneLevelKeyword
  | `ToneFallingKeyword
  | `ToneRisingKeyword
  | `ToneDepartingKeyword
  | `ToneEnteringKeyword
  | `ParallelKeyword
  | `PairedKeyword
  | `AntitheticKeyword
  | `BalancedKeyword
  | `PoetryKeyword
  | `FourCharKeyword
  | `FiveCharKeyword
  | `SevenCharKeyword
  | `ParallelStructKeyword
  | `RegulatedVerseKeyword
  | `QuatrainKeyword
  | `CoupletKeyword
  | `AntithesisKeyword
  | `MeterKeyword
  | `CadenceKeyword
  | `IdentifierTokenSpecial
  | `OrElseKeyword ] ->
  Lexer_tokens.token Compiler_errors.error_result
(** 将多态变体转换为token类型 *)
